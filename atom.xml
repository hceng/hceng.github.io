<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>hceng blog</title>
  
  <subtitle>嵌入式/Linux驱动</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-03-24T09:39:19.187Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>hceng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>V2ray笔记</title>
    <link href="http://yoursite.com/2020/03/23/V2ray%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2020/03/23/V2ray笔记/</id>
    <published>2020-03-23T10:02:41.000Z</published>
    <updated>2020-03-24T09:39:19.187Z</updated>
    
    <content type="html"><![CDATA[<p>V2ray+Ws+Tls+Nginx+CDN自用配置笔记。<br><a id="more"></a><br>SS用了两年多吧，也就是17-18年，感觉多稳定的，几乎没出过问题。<br>从19年10月开始，陆续出现Port被封、IP被封，放弃SS了。<br>于是搜了下，决定试试V2ray，试用了一段时间，感觉还可以。</p><h1 id="1-SS和V2ray的区别"><a href="#1-SS和V2ray的区别" class="headerlink" title="1. SS和V2ray的区别"></a>1. SS和V2ray的区别</h1><p>首先，两者都是通过墙外VPS来实现外网访问。<br>即，用户将访问请求，经过墙发给墙外VPS，墙外VPS去访问被墙网址，返回结果给用户。</p><p>对于SS，用户与VPS之间是TCP直接连接，现在两者之间的特征越来越明显，墙觉得有问题，就可能先封端口，再封IP。<br>对于V2ray，它的精髓之一就是伪装，VPS伪装成正常的Https网站，将流量与正常的网页流量混淆，以避开墙检测。用户与VPS之间的传输就是SSL安全类业务流量，墙目前还无法检测其特征，也不敢随便封端口和IP。<br>再者，V2ray可以通过CDN(Content Delivery Network)中转，即用户先访问CDN业务提供商，然后通过CDN服务商再去访问VPS，这个过程墙无法获取VPS的IP，也就无法封锁，即使VPS的IP被封，也能使用。</p><h1 id="2-安装V2ray服务器端"><a href="#2-安装V2ray服务器端" class="headerlink" title="2. 安装V2ray服务器端"></a>2. 安装V2ray服务器端</h1><h2 id="2-1-准备域名"><a href="#2-1-准备域名" class="headerlink" title="2.1 准备域名"></a>2.1 准备域名</h2><p>为了隐私和CDN加速，在<a href="https://www.cloudflare.com/" target="_blank" rel="external">CloudFlare</a>购买一个域名，比如<code>myvps.com</code>。<br>在主页里，添加站点，输入购买的域名<code>myvps.com</code>，选择FREE套餐。<br>在DNS里，添加一条A记录的子域名，同时填入VPS的IP，比如：<code>类型：A</code>、<code>名称：vps1.myvps.com</code>、<code>内容:45.45.44.44</code>、<code>TTL:自动</code>、<code>代理状态：已代理</code>，得到两条NS服务器：<code>xx1.cloudflare.com</code>、<code>xx2.cloudflare.com</code>。<br>如果是在其它域名服务商里购买的域名，需要进入域名控制后台，修改NS服务器。这里是在CloudFlare购买的，跳过此步。<br>在SSL/TLS里，选择：<strong>完全</strong> 端到端加密，使用服务器上的自签名证书。</p><h2 id="2-2-V2ray-Ws-Tls-Nginx-一键安装脚本"><a href="#2-2-V2ray-Ws-Tls-Nginx-一键安装脚本" class="headerlink" title="2.2 V2ray+Ws+Tls+Nginx 一键安装脚本"></a>2.2 V2ray+Ws+Tls+Nginx 一键安装脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">bash &lt;(curl -L -s https://raw.githubusercontent.com/wulabing/V2Ray_ws-tls_bash_onekey/master/install.sh) | tee v2ray_ins.log</div></pre></td></tr></table></figure><p>根据提示，按要求输入，一般默认即可。<br>其中需要输入域名，填入前面的子域名，因为使用了CDN加速，此时检测出来的IP并不是VPS的IP，脚本里选择继续即可。<br>安装完成后，会显示配置信息、二维码和Vmess。</p><p><a href="https://github.com/wulabing/V2Ray_ws-tls_bash_onekey" target="_blank" rel="external">脚本Github仓库</a></p><h2 id="2-3-BBR加速-可选"><a href="#2-3-BBR加速-可选" class="headerlink" title="2.3 BBR加速(可选)"></a>2.3 BBR加速(可选)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate -O bbr.sh https://raw.githubusercontent.com/hceng/learn/master/ss/BBR/bbr.sh &amp;&amp; sudo chmod +x bbr.sh &amp;&amp; sudo ./bbr.sh</div></pre></td></tr></table></figure><h2 id="2-4-修改伪装网站内容-可选"><a href="#2-4-修改伪装网站内容-可选" class="headerlink" title="2.4 修改伪装网站内容(可选)"></a>2.4 修改伪装网站内容(可选)</h2><p>此时，V2ray服务器端就配置好了，浏览器打开<code>vps1.myvps.com</code>，即可看到伪装的网页效果。<br>也可修改<code>/home/wwwroot/3DCEList</code>目录下的文件，自定义伪装网页内容。</p><h2 id="2-5-VPS定时重启-可选"><a href="#2-5-VPS定时重启-可选" class="headerlink" title="2.5 VPS定时重启(可选)"></a>2.5 VPS定时重启(可选)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">crontab -e</div><div class="line">10 4 * * 1 /sbin/reboot</div><div class="line">crontab -l </div><div class="line">service crond restart</div></pre></td></tr></table></figure><h1 id="3-安装V2ray客户端"><a href="#3-安装V2ray客户端" class="headerlink" title="3. 安装V2ray客户端"></a>3. 安装V2ray客户端</h1><p>Windows:<a href="https://github.com/2dust/v2rayN/releases" target="_blank" rel="external">v2rayN</a><br>Android:<a href="https://github.com/2dust/v2rayNG/releases" target="_blank" rel="external">v2rayNG</a><br>macOS:<a href="https://github.com/Cenmrev/V2RayX/releases" target="_blank" rel="external">V2RayX</a><br>LEDE:<a href="https://github.com/hq450/fancyss_history_package/tree/master/fancyss_X64" target="_blank" rel="external">v2ray</a><br>iOS:Shadowrocket、Quantumult、i2Ray(某宝购买美区账号，再购买下载)</p><h1 id="4-参考文章"><a href="#4-参考文章" class="headerlink" title="4. 参考文章"></a>4. 参考文章</h1><p><a href="https://www.v2rayssr.com/easyv2ray.html" target="_blank" rel="external">史上最简单的V2ray+Ws+Tls+Nginx配置方式</a><br><a href="https://blog.sprov.xyz/2019/03/11/cdn-v2ray-safe-proxy/" target="_blank" rel="external">拯救被墙的IP，CDN + v2ray，安全的科学上网方法</a></p><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;V2ray+Ws+Tls+Nginx+CDN自用配置笔记。&lt;br&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>SS笔记</title>
    <link href="http://yoursite.com/2019/11/24/SS%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/11/24/SS笔记/</id>
    <published>2019-11-24T11:58:04.000Z</published>
    <updated>2020-03-23T10:00:02.023Z</updated>
    
    <content type="html"><![CDATA[<p>Shadowsocks自用配置笔记。(弃用，改为V2ray方案)<br><a id="more"></a><br>记录下Shadowsocks自用配置笔记，不用每次重新配置时，重新找资料。</p><p><strong>仅针对CentOS 7、Shadowsocks-Python版做测试。</strong></p><h1 id="1-SS服务器"><a href="#1-SS服务器" class="headerlink" title="1. SS服务器"></a>1. SS服务器</h1><h2 id="1-1-安装wget"><a href="#1-1-安装wget" class="headerlink" title="1.1 安装wget"></a>1.1 安装wget</h2><p><code>wget</code>是个下载工具，用于后续从Github上下载脚本用。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install wget</div></pre></td></tr></table></figure></p><h2 id="1-2-下载、运行SS脚本"><a href="#1-2-下载、运行SS脚本" class="headerlink" title="1.2 下载、运行SS脚本"></a>1.2 下载、运行SS脚本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate -O shadowsocks-all.sh https://raw.githubusercontent.com/hceng/learn/master/ss/SS/shadowsocks-all.sh &amp;&amp; sudo chmod +x shadowsocks-all.sh &amp;&amp; sudo ./shadowsocks-all.sh</div></pre></td></tr></table></figure><p>脚本运行后，选择“Shadowsocks-Python”版，后续的端口监控脚本，仅针对该版本做了适配。</p><h2 id="1-3-下载、运行BBR脚本"><a href="#1-3-下载、运行BBR脚本" class="headerlink" title="1.3 下载、运行BBR脚本"></a>1.3 下载、运行BBR脚本</h2><p>BBR(<code>Bottleneck Bandwidth and RTT</code>)简单说就是加速网络传输速度的算法。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate -O bbr.sh https://raw.githubusercontent.com/hceng/learn/master/ss/BBR/bbr.sh &amp;&amp; sudo chmod +x bbr.sh &amp;&amp; sudo ./bbr.sh</div></pre></td></tr></table></figure></p><h2 id="1-4-下载、运行端口监控程序"><a href="#1-4-下载、运行端口监控程序" class="headerlink" title="1.4 下载、运行端口监控程序"></a>1.4 下载、运行端口监控程序</h2><p>最近端口老被封，用Python3写了监控程序，监测到端口不能访问时，自动修改端口并邮件通知。<br>CentOS 7默认的Python版本是2.7，监控程序是用Python3写的，因此需要先安装Python3。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">yum -y install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel \</div><div class="line">               sqlite-devel gcc automake autoconf libtool make ntpdate  </div><div class="line">wget https://www.python.org/ftp/python/3.6.3/Python-3.6.3.tgz</div><div class="line">tar zxvf Python-3.6.3.tgz</div><div class="line">cd ./Python-3.6.3 &amp;&amp; ./configure prefix=/usr/local/python3 &amp;&amp; make &amp;&amp; make install</div></pre></td></tr></table></figure></p><p>然后下载监控程序和配置文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd ~</div><div class="line">wget --no-check-certificate -O SSPort.py https://raw.githubusercontent.com/hceng/learn/master/ss/SSPort/SSPort.py </div><div class="line">wget --no-check-certificate -O config.ini https://raw.githubusercontent.com/hceng/learn/master/ss/SSPort/config.ini</div></pre></td></tr></table></figure></p><p>随后需要修改配置文件，主要是IP和Email的配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">[APPConfig]</div><div class="line">Intervals = 60    //间隔查询时间，默认60分钟查询一次</div><div class="line">SendMAX = 3       //监测出问题后，最多循环发送邮件次数</div><div class="line">ServerIP = xx     //当前服务器IP(必改)</div><div class="line">ServerPort = xx   //服务器端口(会自动获取，无需修改)</div><div class="line">SSConfigPath = /etc/shadowsocks-python/config.json //SS配置文件路径(目前只针对Shadowsocks-Python版)</div><div class="line"> </div><div class="line">[WebConfig]       //查询IP是否可用的网站，不用修改</div><div class="line">InternalURL = https://www.toolsdaquan.com/toolapi/public/ipchecking/</div><div class="line">ForeignURL = https://www.toolsdaquan.com/toolapi/public/ipchecking2/</div><div class="line">Referer = https://www.toolsdaquan.com/ipcheck/</div><div class="line">InternalICMP = none</div><div class="line">InternalTCP = none</div><div class="line">ForeignICMP = none</div><div class="line">ForeignTCP = none</div><div class="line"></div><div class="line">[MailConfig]      </div><div class="line">SMTPHost = smtp.qq.com  //默认使用QQ邮箱发送邮件，其它邮箱自行修改</div><div class="line">FromMail = xx@qq.com    //发送通知的QQ邮箱账号(必改)</div><div class="line">Password = xxxxxx       //发送通知的QQ邮箱密码(必改)</div><div class="line">ToMail = xx@163.com,xx@qq.com //接收通知的QQ邮箱，多个邮箱用,号隔开(必改)</div><div class="line">Subject = none</div><div class="line">Content = none</div></pre></td></tr></table></figure></p><p>最后将端口监控程序加入自启动：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wget --no-check-certificate -O autostart.sh https://raw.githubusercontent.com/hceng/learn/master/ss/SSPort/autostart.sh  &amp;&amp; sudo chmod +x autostart.sh &amp;&amp; mv autostart.sh /etc/init.d/ &amp;&amp; chkconfig --add autostart.sh &amp;&amp; chkconfig autostart.sh on</div></pre></td></tr></table></figure></p><p>其它自启动相关命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">chkconfig --list   //查询自启动程序列表</div><div class="line">chkconfig autostart.sh off   //停止autostart.sh自启动</div><div class="line">chkconfig --del autostart.sh  //删除autostart.sh自启动</div></pre></td></tr></table></figure></p><h2 id="1-5-VPS定时重启设置"><a href="#1-5-VPS定时重启设置" class="headerlink" title="1.5 VPS定时重启设置"></a>1.5 VPS定时重启设置</h2><p>执行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">crontab -e</div></pre></td></tr></table></figure></p><p>添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">10 4 * * 1 /sbin/reboot</div></pre></td></tr></table></figure></p><p>表示每周1凌晨4点10分，执行<code>reboot</code>重启命令</p><p>最后执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">crontab -l //显示当前定时任务列表</div><div class="line">service crond restart //重启定时任务</div></pre></td></tr></table></figure></p><p>其它参考：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"># Example of job definition:</div><div class="line"># .---------------- minute (0 - 59)</div><div class="line"># |  .------------- hour (0 - 23)</div><div class="line"># |  |  .---------- day of month (1 - 31)</div><div class="line"># |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...</div><div class="line"># |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat</div><div class="line"># |  |  |  |  |</div><div class="line"># *  *  *  *  * user-name  command to be executed</div></pre></td></tr></table></figure></p><h2 id="1-6-SS其它命令"><a href="#1-6-SS其它命令" class="headerlink" title="1.6 SS其它命令"></a>1.6 SS其它命令</h2><ul><li><p>SS启动、停止、重启、查看运行状态::</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/etc/init.d/shadowsocks-* start | stop | restart | status</div></pre></td></tr></table></figure></li><li><p>查看SS连接数量、列表:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">yum install lsof -y  </div><div class="line"></div><div class="line">//加个SS端口为12345</div><div class="line">lsof -i -n -P | egrep -c &apos;:12345.+ESTABLISHED&apos;   //查看连接数</div><div class="line">lsof -i -n -P | egrep &apos;:12345.+ESTABLISHED&apos;      //查看连接列表</div></pre></td></tr></table></figure></li><li><p>卸载SS：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">./shadowsocks-all.sh uninstall</div></pre></td></tr></table></figure></li></ul><h1 id="2-SS客户端"><a href="#2-SS客户端" class="headerlink" title="2. SS客户端"></a>2. SS客户端</h1><p>各平台SS客户端下载:</p><ul><li>Android: <a href="https://github.com/shadowsocks/shadowsocks-android/releases" target="_blank" rel="external">shadowsocks-android</a></li><li>iPhone/iPad: <a href="https://github.com/hceng/learn/blob/master/ss/APP/" target="_blank" rel="external">Shadowrocket(freeluffy).ipa</a></li><li>Windows: <a href="https://github.com/shadowsocks/shadowsocks-windows/releases" target="_blank" rel="external">shadowsocks-windows</a></li><li>MacOS: <a href="https://github.com/shadowsocks/ShadowsocksX-NG/releases" target="_blank" rel="external">ShadowsocksX-NG</a></li><li>Linux: <a href="https://github.com/the0demiurge/CharlesScripts/blob/master/charles/bin/ssr" target="_blank" rel="external">CharlesScripts</a></li></ul><h1 id="3-实用书签"><a href="#3-实用书签" class="headerlink" title="3. 实用书签"></a>3. 实用书签</h1><ul><li><a href="https://www.toolsdaquan.com/ipcheck/" target="_blank" rel="external">IP availability detection tool</a></li><li><a href="https://bandwagonhost.com/index.php" target="_blank" rel="external">bandwagonhost</a></li><li><a href="https://vultr.com/" target="_blank" rel="external">vultr</a></li><li><a href="https://shadowsocks.org/en/spec/AEAD-Ciphers.html" target="_blank" rel="external">AEAD Ciphers</a></li></ul><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Shadowsocks自用配置笔记。(弃用，改为V2ray方案)&lt;br&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Yocto笔记</title>
    <link href="http://yoursite.com/2019/11/13/Yocto%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/11/13/Yocto笔记/</id>
    <published>2019-11-13T09:23:26.000Z</published>
    <updated>2019-11-24T12:04:30.943Z</updated>
    
    <content type="html"><![CDATA[<p>整理Yocto笔记，包含Yocto介绍、目录结构分析、常用命令、构建示例、使用技巧。(待填坑)<br><a id="more"></a><br><a href="https://www.yoctoproject.org/" target="_blank" rel="external">Yocto</a>是一个开源协作项目，它提供一套综合的<strong>工具</strong>、<strong>模板</strong>和<strong>方法</strong>来构建针对嵌入式设备的<strong>定制Linux系统</strong>。<br>Yocto与Buildroot目的都是构建嵌入式Linux系统，不同的是Buildroot简单且灵活的结构让人极其容易理解和扩展，而Yocto学习曲线相对比较陡，但其功能强大，不少原厂的SDK都采用Yocto方式发布，使其成为一个不可忽略的知识点。<br>最后，不管是Yocto还是Buildroot，都只是一个工具而已，会使用即可，对于大多数工程师而言，都算不上核心技能。</p><h1 id="1-Yocto项目术语和概念"><a href="#1-Yocto项目术语和概念" class="headerlink" title="1.Yocto项目术语和概念"></a>1.Yocto项目术语和概念</h1><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;整理Yocto笔记，包含Yocto介绍、目录结构分析、常用命令、构建示例、使用技巧。(待填坑)&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux基础" scheme="http://yoursite.com/tags/Linux%E5%9F%BA%E7%A1%80/"/>
    
      <category term="Yocto" scheme="http://yoursite.com/tags/Yocto/"/>
    
  </entry>
  
  <entry>
    <title>Buildroot笔记</title>
    <link href="http://yoursite.com/2019/09/05/Buildroot%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2019/09/05/Buildroot笔记/</id>
    <published>2019-09-05T06:06:41.000Z</published>
    <updated>2019-11-20T03:37:18.292Z</updated>
    
    <content type="html"><![CDATA[<p>整理Buildroot笔记，包含配置选项注释、目录结构分析、常用命令、构建示例、 使用技巧。<br><a id="more"></a></p><h1 id="1-Buildroot基本介绍"><a href="#1-Buildroot基本介绍" class="headerlink" title="1.Buildroot基本介绍"></a>1.Buildroot基本介绍</h1><p><a href="https://buildroot.org/" target="_blank" rel="external">Buildroot</a>是Linux平台上一个构建嵌入式Linux系统的框架。<br>整个Buildroot是由Makefile(*.mk)脚本和Kconfig(Config.in)配置文件构成的，因此可以像配置Linux内核一样执行<code>make menuconfig</code>进行配置，编译出一个完整的、可以直接烧写到机器上运行的Linux系统文件(包含bootloader、kernel、rootfs以及rootfs中的各种库和应用程序)。</p><p>回想构建开源软件包的流程，工作流大致如下：</p><blockquote><ul><li>获取：获取源代码</li><li>解压：解压源代码</li><li>补丁：针对缺陷修复和增加的功能应用补丁</li><li>配置：根据环境准备构建过程</li><li>安装：复制二进制和辅助文件到它们的目标目录</li><li>打包：为在其它系统上安装而打包二进制和辅助文件</li></ul></blockquote><p>可以看到构建每个软件包的工作流几乎是相同的，Buildroot主要就是把这些重复操作自动化，用户只需勾选上所需软件包，便自动完成以上所有操作。<br>其次，U-boot、Linux Kernel的编译工作流的差不多，只是配置的自定义参数更多，在Buildroot设置好了，也就一并生成。</p><h1 id="2-Buildroot配置选项"><a href="#2-Buildroot配置选项" class="headerlink" title="2.Buildroot配置选项"></a>2.Buildroot配置选项</h1><p>以<code>Buildroot 2019.02.4</code>，<code>imx6ull</code>配置为例，对配置选项进行注释。<br>执行<code>make menuconfig</code>进入一级配置菜单：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Target options  ---&gt;                                                                                         </div><div class="line">Build options  ---&gt;                                                                                          </div><div class="line">Toolchain  ---&gt;                                                                                              </div><div class="line">System configuration  ---&gt;                                                                                   </div><div class="line">Kernel  ---&gt;                                                                                                 </div><div class="line">Target packages  ---&gt;                                                                                </div><div class="line">Filesystem images  ---&gt;                                                                                      </div><div class="line">Bootloaders  ---&gt;                                                                                            </div><div class="line">Host utilities  ---&gt;                                                                                         </div><div class="line">Legacy config options  ---&gt;</div></pre></td></tr></table></figure></p><p>后面将依次对每个子菜单进行注释。约定<code>()</code>内为直接翻译或补充说明，<code>[]</code>内为示例选项含义。</p><h2 id="2-1-Target-options-目标选项"><a href="#2-1-Target-options-目标选项" class="headerlink" title="2.1 Target options(目标选项)"></a>2.1 Target options(目标选项)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Target options  ---&gt; </div><div class="line">    Target Architecture (ARM (little endian))  ---&gt;  //目标处理器的架构和大小端模式 [ARM (little endian)]</div><div class="line">    Target Binary Format (ELF)  ---&gt;                 //目标二进制格式 [ELF]</div><div class="line">    Target Architecture Variant (cortex-A7)  ---&gt;    //目标处理器核心类型 [cortex-A7]</div><div class="line">    Target ABI (EABIhf)  ---&gt;                        //目标应用程序二进制接口(Application Binary Interface) [EABIhf] ①</div><div class="line">    Floating point strategy (NEON/VFPv4)  ---&gt;       //浮点运算策略 [NEON/VFPv4] ②</div><div class="line">    ARM instruction set (ARM)  ---&gt;                  //ARM的指令集设置 [ARM]</div></pre></td></tr></table></figure><p>①：ABI是X86计算机上的，EABI是嵌入式平台上; EABI/EABIhf分别适用于armel和armhf两个不同的架构，armel和armh在对待浮点运算采取了不同的策略(有fpu的arm才能选择EABIhf)；<br>②：ARM浮点体系结构(VFP)，VFPvX为历史各版本，比如浮点运算指定为VFP4(vector floating point4)指令或neon向量浮点指令；</p><h2 id="2-2-Build-options-编译选项"><a href="#2-2-Build-options-编译选项" class="headerlink" title="2.2 Build options(编译选项)"></a>2.2 Build options(编译选项)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">Build options  ---&gt;  </div><div class="line">        Commands  ---&gt;                                           //指定下载、解压命令参数选项 </div><div class="line">            (wget --passive-ftp -nd -t 3) Wget command //用于常规FTP/HTTP下载压缩包 [被动传输模式;不创建目录;超时重试次数为3]</div><div class="line">            (svn --non-interactive) Subversion (svn) command     //通过SSH下载压缩包 [禁用所有交互式提示]</div><div class="line">            (bzr) Bazaar (bzr) command                           //版本控制工具Bazaa</div><div class="line">            (git) Git command                                    //版本控制工具Git</div><div class="line">            (cvs) CVS command                                    //版本控制工具CVS</div><div class="line">            (cp) Local files retrieval command                   //本地文件拷贝命令</div><div class="line">            (scp) Secure copy (scp) command                      //基于ssh的安全的远程文件拷贝命令</div><div class="line">            (hg) Mercurial (hg) command                          //版本控制工具hg</div><div class="line">            (gzip -d -c) zcat command                            //zip包解压缩查看 [解压zip文件 解压到指定路径，源文件不消失]</div><div class="line">            (bzcat) bzcat command                                //bz2包解压缩查看</div><div class="line">            (xzcat) xzcat command                                //xz包解压缩查看</div><div class="line">            (lzip -d -c) lzcat command                           //lz包解压缩查看</div><div class="line">            ()  Tar options                                      //bz2包解压缩查看</div><div class="line">    (/home/hceng/imx6ul_buildroot/configs/imx6ulevk_defconfig) Location to save buildroot config  //指定配置文件保存路径</div><div class="line">    ($(TOPDIR)/dl) Download dir                                  //指定文件下载保存路径  [./dl/]</div><div class="line">    ($(BASE_DIR)/host) Host dir                                  //指定主机编译所需工具安装目录 [./output/host]</div><div class="line">        Mirrors and Download locations  ---&gt;                     //镜像和下载位置</div><div class="line">            ()  Primary download site</div><div class="line">            (http://sources.buildroot.net) Backup download site</div><div class="line">            (https://cdn.kernel.org/pub) Kernel.org mirror</div><div class="line">            (http://ftpmirror.gnu.org) GNU Software mirror</div><div class="line">            (http://rocks.moonscript.org) LuaRocks mirror</div><div class="line">            (http://cpan.metacpan.org) CPAN mirror (Perl packages)</div><div class="line">    (0) Number of jobs to run simultaneously (0 for auto)         //指定编译时运行的CPU核心数 [0自动]</div><div class="line">    [ ] Enable compiler cache                                     //使能编译器缓存</div><div class="line">    [ ] build packages with debugging symbols                     //启用带调试编译软件包</div><div class="line">    [*] strip target binaries                         //binaries和libraries在打包到target目录的时候会被strip命令裁减掉调试信息</div><div class="line">    ()    executables that should not be stripped                 //剥离时跳过可执行文件</div><div class="line">    ()    directories that should be skipped when stripping       //剥离时跳过的目录</div><div class="line">        gcc optimization level (optimize for size)  ---&gt;          //GCC优化等级 [优化大小]</div><div class="line">    [ ] Enable google-breakpad support                            //启动崩溃日志收集</div><div class="line">        libraries (shared only)  ---&gt;                             //库类型 [只共享库]</div><div class="line">    ($(CONFIG_DIR)/local.mk) location of a package override file  //包覆盖文件的位置</div><div class="line">    ()  global patch directories                                  //全局补丁目录</div><div class="line">        Advanced  ---&gt;</div><div class="line">            [*] paranoid check of library/header paths            //检查库/头文件路径</div><div class="line">            [ ] Force the building of host dependencies           //强制构建主机依赖</div><div class="line">            [ ] Make the build reproducible (experimental)        //构建可重复(实验)</div><div class="line">        *** Security Hardening Options ***                        //安全加固选项</div><div class="line">        Stack Smashing Protection (None)  ---&gt;                    //堆栈粉碎保护 [无]</div><div class="line">        RELRO Protection (None)  ---&gt;                             //RELRO只读重定位(Relocation Read Only)保护 [无]</div><div class="line">        Buffer-overflow Detection (FORTIFY_SOURCE) (None)  ---&gt;   //缓冲区溢出检测(强制源) [无]</div></pre></td></tr></table></figure><h2 id="2-3-Toolchain-工具链"><a href="#2-3-Toolchain-工具链" class="headerlink" title="2.3 Toolchain(工具链)"></a>2.3 Toolchain(工具链)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">Toolchain  ---&gt;   </div><div class="line">        Toolchain type (External toolchain)  ---&gt;                 //工具链类型 [外部工具链]</div><div class="line">        *** Toolchain External Options ***                        //外部工具链选项</div><div class="line">        Toolchain (Custom toolchain)  ---&gt;                        //工具链 [自定义工具链]</div><div class="line">        Toolchain origin (Toolchain to be downloaded and installed)  ---&gt;  //工具链来源 [工具链将被下载安装]</div><div class="line">    (https://releases.linaro.org/……) Toolchain URL                //工具链下载链接 ①</div><div class="line">    (bin) Toolchain relative binary path                          //工具链二进制文件相对路径 [bin目录]</div><div class="line">    ($(ARCH)-linux-gnueabihf) Toolchain prefix                    //工具链前缀 [arm-linux-gnueabihf]</div><div class="line">        External toolchain gcc version (6.x)  ---&gt;                //外部工具链GCC版本 [6.x]</div><div class="line">        External toolchain kernel headers series (4.6.x)  ---&gt;    //外部工具链内核头文件系列 [4.6.x]</div><div class="line">        External toolchain C library (glibc/eglibc)  ---&gt;         //外部工具链C库 [glibc/eglibc] ②</div><div class="line">    [*] Toolchain has SSP support?                                //工具链是否支持SSP? ③</div><div class="line">    [*] Toolchain has RPC support?                                //工具链是否支持RPC? ④</div><div class="line">    [*] Toolchain has C++ support?                                //工具链是否支持C++?</div><div class="line">    [*] Toolchain has Fortran support?                            //工具链是否支持Fortran? (一种编程语言)</div><div class="line">    ()  Extra toolchain libraries to be copied to target          //复制额外工具链库到目标</div><div class="line">    [ ] Copy gdb server to the Target                             //复制GDB服务到目标</div><div class="line">        *** Host GDB Options ***                                  //主机GDB选项</div><div class="line">    [ ] Build cross gdb for the host                              //为主机交叉编译GDB</div><div class="line">        *** Toolchain Generic Options ***                         //工具链通用选项</div><div class="line">    [ ] Copy gconv libraries                                      //复制gconv库 (gconv库用于在不同的字符集之间进行转换)</div><div class="line">    [*] Enable MMU support                                        //使能MMU支持</div><div class="line">    ()  Target Optimizations                                      //目标优化 (需设置前面的GCC优化等级)</div><div class="line">    ()  Target linker options                                     //目标链接器选项 (构建目标时传递给链接器的额外选项)</div><div class="line">    [ ] Register toolchain within Eclipse Buildroot plug-in       //在Eclipse Buildroot插件中注册工具链</div></pre></td></tr></table></figure><p>①：受限每行字数，该处完整链接为：<code>https://releases.linaro.org/components/toolchain/binaries/6.2-2016.11/arm-linux-gnueabihf/gcc-linaro-6.2.1-2016.11-x86_64_arm-linux-gnueabihf.tar.xz</code>；<br>②：可选的有<code>uClibc/uClibc-ng</code>、<code>glibc/eglibc</code>、<code>musl (experimental)</code>，介绍如下：</p><ul><li><code>glibc(GNU C Library)</code>:常用于桌面、服务器中的GNU/Linux类系统中的C语言标准库，支持多种系统平台，功能齐全，但也相对比较臃肿和庞大;</li><li><code>eglibc(Embedded glibc)</code>:glibc的一种变体，目的在于将glibc用于嵌入式系统;</li><li><code>uClibc/uClibc-ng</code>:uClibc-ng是uClibc的分支，它们都是为嵌入式设计的小型的C语言标准库，适合标准和无MMU的Linux系统上运行;</li><li><code>musl</code>:一个轻量级的C标准库，目前在buildroot里是实验阶段;<br>对比参考：<a href="http://www.etalabs.net/compare_libcs.html" target="_blank" rel="external">Comparison of C/POSIX standard library implementations for Linux</a></li></ul><p>③：堆栈粉碎保护(Stack Smashing Protection)；<br>④：远程过程调用(Remote Procedure Call)，主要用于NFS；</p><h2 id="2-4-System-configuration-系统配置"><a href="#2-4-System-configuration-系统配置" class="headerlink" title="2.4 System configuration(系统配置)"></a>2.4 System configuration(系统配置)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">System configuration  ---&gt;  系统配置</div><div class="line">        Root FS skeleton (default target skeleton)  ---&gt;          //根文件系统框架 [典型目标框架]</div><div class="line">    (ebf6ull) System hostname                                     //系统主机名字(自取任意) [ebf6ull]</div><div class="line">    (Welcome to ixm6ull Buildroot!) System banner                 //系统开机提示 [Welcome to ixm6ull Buildroot!]</div><div class="line">        Passwords encoding (sha-256)  ---&gt;                        //密码编码 [sha-256]</div><div class="line">        Init system (systemV)  ---&gt;                               //初始化系统方案 [systemV]  ①</div><div class="line">        /dev management (Dynamic using devtmpfs + eudev)  ---&gt;    //dev管理方案 [Dynamic using devtmpfs + eudev]  ②</div><div class="line">    (system/device_table.txt) Path to the permission tables       //权限表路径 </div><div class="line">    [ ] support extended attributes in device tables              //支持设备表中的扩展属性</div><div class="line">    [ ] Use symlinks to /usr for /bin, /sbin and /lib             //是否将/bin,/sbin,/lib链接到/usr</div><div class="line">    [*] Enable root login with password                           //使能root登陆密码</div><div class="line">    ()    Root password                                           //设置root密码</div><div class="line">        /bin/sh (bash)  ---&gt;                                      //选择shell类型 [bash] ③</div><div class="line">    [*] Run a getty (login prompt) after boot  ---&gt;               //启动后运行getty(登录提示)---&gt;</div><div class="line">        (ttymxc0) TTY port                                        //设置TTY硬件端口</div><div class="line">              Baudrate (keep kernel default)  ---&gt;                //比特率 [与内核保持一致]</div><div class="line">        (vt100) TERM environment variable                         //TERM环境变量 (终端类型xterm、vt100)</div><div class="line">        ()    other options to pass to getty                      //传递给getty的其他选项</div><div class="line">    [*] remount root filesystem read-write during boot            //在引导期间安装根文件系统支持读和写</div><div class="line">    (eth0) Network interface to configure through DHCP            //设置DHCP配置的网络接口  [eth0]</div><div class="line">    (/bin:/sbin:/usr/bin:/usr/sbin) Set the system&apos;s default PATH //设置系统的默认路径  </div><div class="line">    [*] Purge unwanted locales                                    //清除不需要的区域设置</div><div class="line">    (C en_US) Locales to keep                                     //要保留的语言环境</div><div class="line">    ()  Generate locale data                                      //生成区域设置数据</div><div class="line">    [ ] Enable Native Language Support (NLS)                      //启用本地语言支持（NLS）</div><div class="line">    -*- Install timezone info                                     //安装时区信息</div><div class="line">    (default) timezone list                                       //时区清单 [典型]</div><div class="line">    (Etc/UTC) default local time                                  //用户表的路径</div><div class="line">    ()  Path to the users tables</div><div class="line">    (board/hceng/nxp-imx6ull/rootfs-overlay) Root filesystem overlay directories //根文件系统覆盖目录</div><div class="line">    ()  Custom scripts to run before creating filesystem images //在创建文件系统映像之前运行的自定义脚本</div><div class="line">    ()  Custom scripts to run inside the fakeroot environment //自定义脚本在fakeroot(模拟root权限)环境中运行</div><div class="line">    (board/……) Custom scripts to run after creating filesystem images //创建文件系统映像后运行的自定义脚本 ④</div><div class="line">    ()    Extra arguments passed to custom scripts //传递给自定义脚本的额外参数</div></pre></td></tr></table></figure><p>①：可选选项有<code>BusyBox</code>、<code>systemV</code>、<code>systemd</code>、<code>None</code>：</p><ul><li><p><code>BusyBox init</code>:<br>1.不支持运行等级，设置的运行等级将被忽略，要使用运行等级，请使用sysvinit;<br>2.语法格式：<code>&lt;id&gt;:&lt;runlevels&gt;:&lt;action&gt;:&lt;process&gt;</code><br><code>&lt;id&gt;</code>:process执行所在的tty设备，内容为/dev目录中tty设备的文件名;<br><code>&lt;runlevels&gt;</code>:此字段完全被忽略;<br><code>&lt;action&gt;</code>:支持sysinit、respawn、askfirst、wait、once、restart、ctrlaltdel、shutdown;<br><code>&lt;process&gt;</code>:指定要执行的进程及其命令行;<br>3.BusyBox init程序将在启动时读取<code>/etc/inittab</code>文件，以了解该做什么，默认inittab存储在<code>./package/busybox/inittab</code>;<br>4.inittab除了安装几个重要的文件系统之外，还要启动<code>/etc/init.d/rcS</code>中的shell脚本，并启动一个getty程序(提供一个登录提示);</p></li><li><p><code>systemV</code>:<br>1.使用传统sysvinit程序，之前大多数台式机Linux发行版都使用该方案，现在有些变为了Upstart或Systemd;<br>2.在/ect目录下会生成init.d、rc0.d、rc1.d、rc2.d、rc3.d、rc4.d、rc5.d、rc6.d、rc.loacl;<br>init.d里面包含的是真正的服务脚本;<br>rcN.d里面是链接向init.d里脚本的软链接，N表示运行级别，进入哪个运行级别，就会执行对应rcN.d文件夹的脚本;<br>当所有的当前运行级别的脚本都运行完了之后，会运行rc.local;<br>3.脚本的命名规则：以<code>[S|K]+NN+其它</code>，以S开头的是启动脚本，以K开头的是停止脚本，init进程会按照S或者K后面的数字的顺序来启动或停止服务;<br>4.sysvinit还使用<code>/etc/inittab</code>文件(与BusyBox的语法略有不同)，默认inittab存储在<code>./package/sysvinit/inittab</code>;</p></li><li><p><code>systemd</code>:<br>1.systemd是Linux的新一代init系统，以前的运行级别(runlevel)的概念被新的运行目标(target)所取代;<br>2.支持并行化任务;采用socket式与D-Bus总线式激活服务;按需启动守护进程(daemon);支持快照和系统恢复;<br>3.功能强大的同时，也带来了相当大数量的大型依赖：dbus，udev等;<br><a href="https://www.ibm.com/developerworks/cn/linux/1407_liuming_init3/index.html" target="_blank" rel="external">Systemd 的简介和特点</a></p></li></ul><p>②：/dev设备文件的管理方式，可选选项有四个：</p><ul><li><code>Static using device table</code>: 使用静态的设备表，/dev将根据<code>system/device_table _dev.txt</code>的内容创建设备，进入系统添加或删除设备时，无法自动更新；           </li><li><code>Dynamic using devtmpfs only</code>:在系统启动过程中，会动态生成/dev文件，进入系统添加或删除设备时，无法自动更新；             </li><li><code>Dynamic using devtmpfs + mdev</code>:在前面devtmpfs的基础上加入mdev用户空间实用程序，进入系统添加或删除设备时，可以自动更新，自动创建规则在<code>/etc/mdev.conf</code>;        </li><li><code>Dynamic using devtmpfs + eudev</code>:在前面devtmpfs的基础上加入eudev用户空间守护程序，eudev是udev的独立版本，是Systemd的一部分，提供更多的功能也更占用资源； </li></ul><p>③：在Linux下编写shell脚本文件时，经常会看到在第一行中标注<code>#!/bin/bash</code>，这句话的意思是告诉系统强制用bash，避免出现一些不兼容的问题。因此，除了bash外，还有很多shell工具，比如这里可选busybox自带的shell、小巧但功能很少的dash、高效紧凑的mksh、功能强大体积也稍大的zsh。此外，可以通过<code>ls -l /bin/sh</code>查看当前使用的是何种shell工具。</p><p>④：受限每行字数，该处完整路径为<code>board/freescale/common/imx/post-image.sh</code>。</p><p>这里是<strong>如何产生sdcard.img，用于sd卡启动的原理部分</strong>。<br>针对我现在imx6ull的情况，<code>board/freescale/common/imx</code>目录下有两个文件值得关注：<code>genimage.cfg.template</code>和<code>post-image.sh</code>。<br>先来看<code>genimage.cfg.template</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"># Minimal SD card image for the Freescale boards Template</div><div class="line">#</div><div class="line"># We mimic the .sdcard Freescale&apos;s image format:</div><div class="line"># * the SD card must have 1 kB free space at the beginning,</div><div class="line"># * U-Boot is dumped as is,</div><div class="line"># * a FAT partition at offset 8 MB is containing zImage/uImage and DTB files</div><div class="line"># * a single root filesystem partition is required (ext2, ext3 or ext4)</div><div class="line">#</div><div class="line"></div><div class="line">image boot.vfat &#123;</div><div class="line">  vfat &#123;</div><div class="line">    files = &#123;</div><div class="line">      %FILES%</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  size = 16M</div><div class="line">&#125;</div><div class="line"></div><div class="line">image sdcard.img &#123;</div><div class="line">  hdimage &#123;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  partition u-boot &#123;</div><div class="line">    in-partition-table = &quot;no&quot;</div><div class="line">    image = &quot;%UBOOTBIN%&quot;</div><div class="line">    offset = 1024</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  partition boot &#123;</div><div class="line">    partition-type = 0xC</div><div class="line">    bootable = &quot;true&quot;</div><div class="line">    image = &quot;boot.vfat&quot;</div><div class="line">    offset = 8M</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  partition rootfs &#123;</div><div class="line">    partition-type = 0x83</div><div class="line">    image = &quot;rootfs.ext2&quot;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>该配置文件显示会生成两个文件，一个<code>boot.vfat</code>，一个<code>sdcard.img</code>；<br><code>boot.vfat</code>由<code>&quot;%FILES%&quot;</code>所表示内容组成(后面会得知是kernel+dtb);<br><code>sdcard.img</code>有四个分区，第一个是空，第二个是偏移1024字节(1k)后，内容为<code>&quot;%UBOOTBIN%&quot;</code>(u-boot)，第三个为偏移8M后，存放前面生成的<code>boot.vfat</code>(kernel+dtb)，最后存放<code>rootfs.ext2</code>。<br>此时分区情况如下:</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190905/1.jpg"></div><p>分区类型和数值的对应关系可通过该文章查询:<a href="https://www.win.tue.nl/~aeb/partitions/partition_types-1.html" target="_blank" rel="external">List of partition identifiers for PCs</a> or <a href="https://thestarman.pcministry.com/asm/mbr/PartTypes.htm" target="_blank" rel="external">Listing of MBR/EBR Partition Types</a><br>此时将sd卡插入Windows电脑，可以发现只能识别存放<code>boot.vfa</code>t(kernel+dtb)的分区，因为该分区为FAT32格式，Windows可以识别，而存放<code>rootfs.ext2</code>的分区为ext2/3/4，Windows是无法识别的，与生活常识是吻合的。<br>另外，如果想在SD卡创建其它自定义分区，可以再加一个partition：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">partition user &#123;</div><div class="line">  partition-type = 0xC</div><div class="line">  size = 10M</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>再来看看<code>post-image.sh</code>是如何解析<code>genimage.cfg.template</code>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line">#!/usr/bin/env bash</div><div class="line"></div><div class="line">#</div><div class="line"># dtb_list extracts the list of DTB files from BR2_LINUX_KERNEL_INTREE_DTS_NAME</div><div class="line"># in $&#123;BR_CONFIG&#125;, then prints the corresponding list of file names for the</div><div class="line"># genimage configuration file</div><div class="line">#</div><div class="line">dtb_list()</div><div class="line">&#123;</div><div class="line">local DTB_LIST=&quot;$(sed -n &apos;s/^BR2_LINUX_KERNEL_INTREE_DTS_NAME=&quot;\([\/a-z0-9 \-]*\)&quot;$/\1/p&apos; $&#123;BR2_CONFIG&#125;)&quot;</div><div class="line"></div><div class="line">for dt in $DTB_LIST; do</div><div class="line">echo -n &quot;\&quot;`basename $dt`.dtb\&quot;, &quot;</div><div class="line">done</div><div class="line">&#125;</div><div class="line"></div><div class="line">#</div><div class="line"># linux_image extracts the Linux image format from BR2_LINUX_KERNEL_UIMAGE in</div><div class="line"># $&#123;BR_CONFIG&#125;, then prints the corresponding file name for the genimage</div><div class="line"># configuration file</div><div class="line">#</div><div class="line">linux_image()</div><div class="line">&#123;</div><div class="line">if grep -Eq &quot;^BR2_LINUX_KERNEL_UIMAGE=y$&quot; $&#123;BR2_CONFIG&#125;; then</div><div class="line">echo &quot;\&quot;uImage\&quot;&quot;</div><div class="line">elif grep -Eq &quot;^BR2_LINUX_KERNEL_IMAGE=y$&quot; $&#123;BR2_CONFIG&#125;; then</div><div class="line">echo &quot;\&quot;Image\&quot;&quot;</div><div class="line">else</div><div class="line">echo &quot;\&quot;zImage\&quot;&quot;</div><div class="line">fi</div><div class="line">&#125;</div><div class="line"></div><div class="line">genimage_type()</div><div class="line">&#123;</div><div class="line">if grep -Eq &quot;^BR2_PACKAGE_FREESCALE_IMX_PLATFORM_IMX8M=y$&quot; $&#123;BR2_CONFIG&#125;; then</div><div class="line">echo &quot;genimage.cfg.template_imx8&quot;</div><div class="line">elif grep -Eq &quot;^BR2_TARGET_UBOOT_SPL=y$&quot; $&#123;BR2_CONFIG&#125;; then</div><div class="line">echo &quot;genimage.cfg.template_spl&quot;</div><div class="line">else</div><div class="line">echo &quot;genimage.cfg.template&quot;</div><div class="line">fi</div><div class="line">&#125;</div><div class="line"></div><div class="line">uboot_image()</div><div class="line">&#123;</div><div class="line">if grep -Eq &quot;^BR2_TARGET_UBOOT_FORMAT_DTB_IMX=y$&quot; $&#123;BR2_CONFIG&#125;; then</div><div class="line">echo &quot;u-boot-dtb.imx&quot;</div><div class="line">elif grep -Eq &quot;^BR2_TARGET_UBOOT_FORMAT_IMX=y$&quot; $&#123;BR2_CONFIG&#125;; then</div><div class="line">echo &quot;u-boot.imx&quot;</div><div class="line">fi</div><div class="line">&#125;</div><div class="line"></div><div class="line">main()</div><div class="line">&#123;</div><div class="line">local FILES=&quot;$(dtb_list) $(linux_image)&quot;</div><div class="line">local UBOOTBIN=&quot;$(uboot_image)&quot;</div><div class="line">local GENIMAGE_CFG=&quot;$(mktemp --suffix genimage.cfg)&quot;</div><div class="line">local GENIMAGE_TMP=&quot;$&#123;BUILD_DIR&#125;/genimage.tmp&quot;</div><div class="line"></div><div class="line">sed -e &quot;s/%FILES%/$&#123;FILES&#125;/&quot; \</div><div class="line">-e &quot;s/%UBOOTBIN%/$&#123;UBOOTBIN&#125;/&quot; \</div><div class="line">board/freescale/common/imx/$(genimage_type) &gt; $&#123;GENIMAGE_CFG&#125;</div><div class="line"></div><div class="line">rm -rf &quot;$&#123;GENIMAGE_TMP&#125;&quot;</div><div class="line"></div><div class="line">genimage \</div><div class="line">--rootpath &quot;$&#123;TARGET_DIR&#125;&quot; \</div><div class="line">--tmppath &quot;$&#123;GENIMAGE_TMP&#125;&quot; \</div><div class="line">--inputpath &quot;$&#123;BINARIES_DIR&#125;&quot; \</div><div class="line">--outputpath &quot;$&#123;BINARIES_DIR&#125;&quot; \</div><div class="line">--config &quot;$&#123;GENIMAGE_CFG&#125;&quot;</div><div class="line"></div><div class="line">rm -f $&#123;GENIMAGE_CFG&#125;</div><div class="line"></div><div class="line">exit $?</div><div class="line">&#125;</div><div class="line"></div><div class="line">main $@</div></pre></td></tr></table></figure><p>可以在<code>main</code>看到，<code>FILES</code>为dtb和kernel，<code>UBOOTBIN</code>为u-boot，再传入配置文件。<br>最后使用<code>genimage</code>生成，<code>genimage</code>在后面<code>2.9Host utilities(主机工具)</code>部分需要勾选上，它的作用是给定根文件系统树，生成多个文件系统和闪存镜像的工具。</p><h2 id="2-5-Kernel-内核配置"><a href="#2-5-Kernel-内核配置" class="headerlink" title="2.5 Kernel(内核配置)"></a>2.5 Kernel(内核配置)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">[*] Linux Kernel                                                              //使能编译内核</div><div class="line">      *** Linux kernel in thumb mode may be broken with binutils &gt;= 2.29 ***  //binutils&gt;=2.29可能会破坏thumb模式下的内核</div><div class="line">      Kernel version (Custom Git repository)  ---&gt;                            //内核版本 [自定义Git仓库]</div><div class="line">(https://git.dev.tencent.com/……) URL of custom repository                     //自定义仓库网址 ①</div><div class="line">(origin/master) Custom repository version                                     //自定义仓库版本</div><div class="line">()    Custom kernel patches                                                   //自定义内核补丁</div><div class="line">      Kernel configuration (Using an in-tree defconfig file)  ---&gt;            //内核配置 [使用项目内defconfig文件]</div><div class="line">(imx_v7_ebf) Defconfig name                                                   //配置文件名字 (不要_defconfig)</div><div class="line">()    Additional configuration fragment files                                 //其他配置片段文件</div><div class="line">()    Custom boot logo file path                                              //自定义启动logo文件路径</div><div class="line">      Kernel binary format (zImage)  ---&gt;                                     //内核二进制文件格式 [zImage] ②</div><div class="line">      Kernel compression format (gzip compression)  ---&gt;                      //内核压缩格式 [gzip压缩]</div><div class="line">[*]   Build a Device Tree Blob (DTB)                                          //构建设备树二进制文件(DTB文件)</div><div class="line">(imx6ull-14x14-evk imx6ull-14x14-ebf) In-tree Device Tree Source file names   //项目里设备树源文件名 (不要.dts)</div><div class="line">()      Out-of-tree Device Tree Source file paths                             //项目外设备树源文件路径</div><div class="line">[ ]     Build Device Tree with overlay support                                //使能设备树文件覆盖支持</div><div class="line">[*]   Install kernel image to /boot in target                                 //安装内核镜像到/boot目录</div><div class="line">[*]   Needs host OpenSSL                                                      //主机需要OpenSSL</div><div class="line">[ ]   Needs host libelf                                                       //主机需要libelf (用于读取，修改或创建ELF文件)</div><div class="line">      Linux Kernel Extensions  ---&gt;                                           //Linux内核扩展</div><div class="line">        [ ] Adeos/Xenomai Real-time patch                                     //Adeos/Xenomai实时时钟补丁</div><div class="line">        [ ] RTAI Real-time patch                                              //RTAI实时时钟补丁</div><div class="line">        [ ] ev3dev Linux drivers                                              //ev3dev Linux驱动</div><div class="line">        [ ] FB TFT drivers                                                    //FB TFT驱动</div><div class="line">        [ ] Aufs Filesystem Module patch                                      //Aufs文件系统模块补丁</div><div class="line">      Linux Kernel Tools  ---&gt;                                                //Linux内核工具</div><div class="line">        [ ] cpupower                                                          //用于检查、调整CPU省电相关功能</div><div class="line">        [ ] gpio                                                              //用于控制、监控GPIO,仅在4.8版本提供 ③</div><div class="line">        [ ] iio                                                               //用于控制、监控iio设备,仅在4.7版本提供</div><div class="line">        [ ] pci                                                               //用于测试特定PCI端点, 仅在4.20版本提供</div><div class="line">        [ ] perf                                                              //用于Linux性能分析</div><div class="line">        [ ] selftests                                                         //用于内核自我测试</div><div class="line">        [ ] tmon                                                              //用于用户访问系统相关的热信息</div></pre></td></tr></table></figure><p>①：受限每行字数，该处完整链接为<code>https://git.dev.tencent.com/weidongshan/imx6ull_kernel.git</code>；<br>②：分别介绍下这几个内核镜像格式，以及一些其它格式:</p><ul><li><code>vmlinuz·</code>:静态编译出来的最原始的ELF文件，包括了内核镜像、调试信息、符号表等内容；其中 “vm” 代表 “Virtual Memory”;</li><li><code>Image</code>:将所有的符号和重定位信息都删除，只剩下二进制数据的内核代码，此时还没经过压缩;</li><li><code>zImage</code>:是vmlinux加上解压代码(用于自解压)经过gzip压缩后的文件，适用于小内核，常见于ARM;</li><li><code>bzImage</code>:是vmlinux加上解压代码(用于自解压)经过gzip压缩后的文件，适用于大内核，常见于x86，“bz”表示 “big zImage”;</li><li><code>uImage</code>:是U-Boot专用的镜像文件，使用mkimage工具在zImage之前加上一个长度为0x40的头信息(tag)，在头信息内说明了该镜像文件的类型、加载位置、生成时间、大小等信息;</li></ul><p>参考资料：<a href="https://www.cnblogs.com/hnrainll/archive/2011/06/10/2077961.html" target="_blank" rel="external">linux内核镜像格式</a></p><p>③：使用新的ABI，弃用sysfs；</p><h2 id="2-6-Target-packages-目标包配置"><a href="#2-6-Target-packages-目标包配置" class="headerlink" title="2.6 Target packages(目标包配置)"></a>2.6 Target packages(目标包配置)</h2><p>目标包配置内容有点多，二级目录如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">Target packages  ---&gt;   </div><div class="line">    [*] BusyBox                                                          //使能编译BusyBox</div><div class="line">    (package/busybox/busybox.config) BusyBox configuration file to use?  //设置BusyBox配置文件路径</div><div class="line">    ()    Additional BusyBox configuration fragment files                //其他BusyBox配置片段文件</div><div class="line">    -*-   Show packages that are also provided by busybox                //列出部分busybox也提供的包</div><div class="line">    [ ]   Enable SELinux support                                         //SELinux支持(安全增强型Security-Enhanced Linux)</div><div class="line">    [ ]   Individual binaries                                            //每个应用程序作为单独二进制文件(为SELinux提供支持)</div><div class="line">    [ ]   Install the watchdog daemon startup script                     //在启动脚本安装看门狗守护程序</div><div class="line">        Audio and video applications  ---&gt;                               //音频和视频应用</div><div class="line">        Compressors and decompressors  ---&gt;                              //压缩和解压</div><div class="line">        Debugging, profiling and benchmark  ---&gt;                         //调试、分析和基准测试</div><div class="line">        Development tools  ---&gt;                                          //开发工具</div><div class="line">        Filesystem and flash utilities  ---&gt;                             //文件系统和闪存实用程序</div><div class="line">        Fonts, cursors, icons, sounds and themes  ---&gt;                   //字体，游标，图标，声音和主题</div><div class="line">        Games  ---&gt;                                                      //游戏</div><div class="line">        Graphic libraries and applications (graphic/text)  ---&gt;          //图形库和应用程序(图形/文本)</div><div class="line">        Hardware handling  ---&gt;                                          //硬件处理</div><div class="line">        Interpreter languages and scripting  ---&gt;                        //编程语言和脚本</div><div class="line">        Libraries  ---&gt;                                                  //库</div><div class="line">        Mail  ---&gt;                                                       //邮箱</div><div class="line">        Miscellaneous  ---&gt;                                              //杂项</div><div class="line">        Networking applications  ---&gt;                                    //网络应用</div><div class="line">        Package managers  ---&gt;                                           //安装包管理</div><div class="line">        Real-Time  ---&gt;                                                  //实时时钟</div><div class="line">        Security  ---&gt;                                                   //安全</div><div class="line">        Shell and utilities  ---&gt;                                        //Shell和程序</div><div class="line">        System tools  ---&gt;                                               //系统工具</div><div class="line">        Text editors and viewers  ---&gt;                                   //文版编辑和浏览</div></pre></td></tr></table></figure></p><p>接下来对每个二级目录的子目录注释。</p><h3 id="2-6-1-Audio-and-video-applications"><a href="#2-6-1-Audio-and-video-applications" class="headerlink" title="2.6.1 Audio and video applications"></a>2.6.1 Audio and video applications</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">Audio and video applications  ---&gt;   </div><div class="line">    [*] alsa-utils  ---&gt;                       //ALSA声卡测试和音频编辑</div><div class="line">    [ ] atest                                  //ALSA Asoc驱动测试工具</div><div class="line">    [ ] aumix                                  //声卡混音器</div><div class="line">    [ ] bellagio                               //基于OpenMAX的多媒体访问</div><div class="line">    [ ] bluez-alsa                             //蓝牙音频ALSA后端</div><div class="line">    [ ] dvblast                                //MPEG-2/TS解复用和流媒体</div><div class="line">    [ ] dvdauthor                              //创作DVD视频光盘文件和目录结构</div><div class="line">    [ ] dvdrw-tools                            //创作蓝光光盘和DVD光盘媒体</div><div class="line">    [ ] espeak                                 //用于英语和其他语言的语音合成器软件</div><div class="line">    [ ] faad2                                  //开源的MPEG-4和MPEG-2 AAC解码器</div><div class="line">    [*] ffmpeg  ---&gt;                           //录制、转换以及流化音视频的完整解决方案</div><div class="line">    [ ] flac                                   //开源无损音频编解码器</div><div class="line">    [ ] flite                                  //小型、快速的TTS系统(TextToSpeech),即文字转语音</div><div class="line">    [ ] gmrender-resurrect                     //基于gstreamer的UPnP(DLNA)媒体渲染器</div><div class="line">    [ ] gstreamer 0.10                         //开源多媒体框架0.10版本</div><div class="line">    [ ] gstreamer 1.x                          //开源多媒体框架1.x版本,与前面的0.10不兼容</div><div class="line">    [ ] jack2                                  //JACK音频连接套件(包含服务器和示例客户端)</div><div class="line">        *** kodi needs python w/ .py modules,  //Kodi开源媒体播放器软件应用程序的需要条件 </div><div class="line">            a uClibc or glibc toolchain w/ C++, threads, wchar, dynamic library, gcc &gt;= 4.8, ***</div><div class="line">        *** kodi needs an OpenGL EGL backend with OpenGL support *** </div><div class="line">    [ ] lame                                   //高质量的MPEG Audio Layer III(MP3)编码器</div><div class="line">    [ ] madplay                                //libmad的命令行前端,一个高质量的MPEG音频解码器</div><div class="line">    [ ] mimic                                  //快速，轻量级的文本到语音引擎</div><div class="line">        *** miraclecast needs systemd and      //miraclecast无线屏幕投影的需要条件</div><div class="line">            a glibc toolchain w/ threads and wchar ***  </div><div class="line">    [ ] mjpegtools                             //录制视频和回放,简单的剪切和粘贴编辑以及音频和视频的MPEG压缩</div><div class="line">    [ ] modplugtools                           //支持播放MOD、S3M、XM等格式音乐文件</div><div class="line">    [ ] motion                                 //监控摄像机视频信号的程序,可以检测物体运动</div><div class="line">    [*] mpd  ---&gt;                              //用于播放音乐的服务器端应用程序</div><div class="line">    [ ] mpd-mpc                                //MPD的简约命令行界面</div><div class="line">    [ ] mpg123                                 //MPEG音频播放器</div><div class="line">    [ ] mpv                                    //MPlayer的一个分支,有些新功能</div><div class="line">    [ ] multicat                               //高效地操作多播流,特别是MPEG-2传输流</div><div class="line">    [ ] musepack                               //音频高品质压缩</div><div class="line">    [ ] ncmpc                                  //功能齐全的MPD客户端</div><div class="line">    [ ] opus-tools                             //Opus编解码器命令行工具</div><div class="line">    [ ] pulseaudio                             //声音服务代理,可队声音进行操作再播放</div><div class="line">    [ ] sox                                    //可录制、播放、格式转换、修改音频文件</div><div class="line">    [ ] squeezelite                            //Logitech媒体服务器客户端</div><div class="line">    [ ] tstools                                //处理MPEG数据的跨平台命令行工具</div><div class="line">    [ ] twolame                                //优化的MPEG Audio Layer 2(MP2)编码器</div><div class="line">    [ ] udpxy                                  //将UDP流量转发到请求HTTP客户端的中继守护程序</div><div class="line">    [ ] upmpdcli                               //MPD音乐播放器前端</div><div class="line">    [ ] v4l2grab                               //用于从V4L2设备获取JPEG的程序</div><div class="line">    [ ] v4l2loopback                           //创建虚拟视频设备</div><div class="line">    [ ] vlc                                    //可播放大多数多媒体文件以及DVD、音频CD、VCD和各种流媒体协议</div><div class="line">    [ ] vorbis-tools                           //用于Ogg格式文件的独立播放器、编码器和解码器,也可作为流媒体播放器</div><div class="line">    [ ] wavpack                                //提供无损，高质量的有损和独特的混合压缩模式</div><div class="line">    [ ] yavta                                  //一个V4L2测试应用程序</div><div class="line">    [ ] ympd                                   //MPD网页客户端</div></pre></td></tr></table></figure><h3 id="2-6-2-Compressors-and-decompressors"><a href="#2-6-2-Compressors-and-decompressors" class="headerlink" title="2.6.2 Compressors and decompressors"></a>2.6.2 Compressors and decompressors</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Compressors and decompressors  ---&gt;   </div><div class="line">    [ ] brotli                                 //通用无损压缩库</div><div class="line">    -*- bzip2                                  //免费的压缩工具</div><div class="line">    [ ] gzip                                   //标准GNU压缩器</div><div class="line">    [ ] lz4                                    //快速的无损压缩</div><div class="line">    [ ] lzip                                   //类似gzip或bzip2</div><div class="line">    [ ] lzop                                   //与gzip相似</div><div class="line">    [ ] p7zip                                  //Unix的7-zip命令行版本</div><div class="line">    [ ] pigz                                   //是gzip的全功能替代品</div><div class="line">    [ ] pixz                                   //是xz的并行索引版本</div><div class="line">    [ ] unrar                                  //rar文件解压</div><div class="line">    [ ] unzip                                  //zip文件解压</div><div class="line">    [*] xz-utils                               //用于处理XZ压缩的命令行工具,包括xz、unxz、xzcat、xzgrep等</div><div class="line">    [ ] zip                                    //压缩和解压zip文件</div><div class="line">    [ ] zstd                                   //Zstandard或zstd的简短版本</div></pre></td></tr></table></figure><h3 id="2-6-3-Debugging-profiling-and-benchmark"><a href="#2-6-3-Debugging-profiling-and-benchmark" class="headerlink" title="2.6.3 Debugging, profiling and benchmark"></a>2.6.3 Debugging, profiling and benchmark</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">[ ] blktrace                                   //对通用块层(block layer)的I/O跟踪机制，它能抓取详细的I/O请求，发送到用户空间  </div><div class="line">[ ] bonnie++                                   //执行一系列简单的硬盘驱动器和文件系统性能测试   </div><div class="line">[ ] cache-calibrator                           //用于分析计算机(缓存)内存系统并提取有用信息，以及作为负载生成器进行实时测试   </div><div class="line">    *** clinfo needs an OpenCL provider ***    //查询OpenCL参数和是否安装正常   </div><div class="line">[ ] dhrystone                                  //测量处理器运算能力的最常见基准程序之一，常用于处理器的整型运算性能的测量   </div><div class="line">[ ] dieharder                                  //随机数/均匀偏差发生器测试仪，适用于测试软件RNG和硬件RNG   </div><div class="line">[ ] dmalloc                                    //一个调试分配内存库，替代系统的malloc、realloc、calloc、free等   </div><div class="line">[ ] dropwatch                                  //交互式监视和记录内核丢弃的数据包   </div><div class="line">[ ] dstat                                      //取代vmstat、iostat、netstat、ifstat等，监控系统运行状况、基准测试、排除故障   </div><div class="line">[ ] dt                                         //用于验证外围设备、文件系统、驱动程序或操作系统支持的任何数据流的正常运行   </div><div class="line">[ ] duma                                       //检测意外的内存访问(Detect Unintended Memory Access) </div><div class="line">[ ] fio                                        //一种I/O工具，用于基准测试和压力/硬件验证   </div><div class="line">[ ] gdb                                        //强大的UNIX下的程序调试工具   </div><div class="line">[ ] google-breakpad                            //用于崩溃日志收集   </div><div class="line">[ ] iozone                                     //一个文件系统基准测试工具，测试不同的操作系统中文件系统的读写性能   </div><div class="line">[ ] kexec                                      //用一个运行的内核去运行一个新内核，就像运行一个应用程序一样   </div><div class="line">[ ] ktap                                       //基于脚本的Linux动态跟踪工具，允许用户跟踪Linux内核动态   </div><div class="line">[ ] kvm-unit-tests                             //为KVM提供单元测试   </div><div class="line">[ ] latencytop                                 //专注于解决音频跳跃、桌面卡顿、服务器过载等延迟   </div><div class="line">[ ] lmbench                                    //一种性能检测工具，提供内存、网络、内核等多方面的测试   </div><div class="line">[ ] lsof                                       //列出当前系统打开文件的工具(LiSt Open Files)   </div><div class="line">[ ] ltp-testsuite                              //测试Linux内核和相关特性的工具集合   </div><div class="line">[ ] ltrace                                     //能够跟踪进程的库函数调用,显示哪个库函数被调用   </div><div class="line">[ ] lttng-babeltrace                           //LTTng(Linux Trace Toolkit Next Generation)跟踪读写库、转换</div><div class="line">[ ] lttng-modules                              //用于LTTng 2.x内核跟踪基础结构的Linux内核模块   </div><div class="line">[ ] lttng-tools                                //用于LTTng 2.x跟踪基础结构的用户空间实用程序   </div><div class="line">[ ] memstat                                    //列出正在消耗虚拟内存的所有进程、可执行程序、共享库   </div><div class="line">[ ] netperf                                    //网络性能基准工具   </div><div class="line">[ ] netsniff-ng                                //高性能的Linux网络分析器和网络工具包   </div><div class="line">[ ] nmon                                       //监控系统的 CPU、内存、网络、硬盘、文件系统、NFS、高耗进程、资源等信息   </div><div class="line">[ ] oprofile                                   //性能监测工具，从代码层面分析程序的性能消耗情况，找出程序性能的问题点   </div><div class="line">[ ] pax-utils                                  //用于ELF 32/64二进制文件的ELF相关工具，可以检查文件的安全相关属性   </div><div class="line">[ ] pv                                         //基于终端的工具，用于监控通过管道的数据进度   </div><div class="line">[ ] ramspeed/smp                               //用于测量多处理器计算机的缓存和内存性能   </div><div class="line">[ ] ramspeed                                   //用于测量缓存和内存性能   </div><div class="line">[ ] rt-tests                                   //用于测试Linux系统实时行为的程序集   </div><div class="line">[ ] spidev_test                                //基于spidev驱动程序的SPI测试程序 </div><div class="line">[ ] strace                                     //用于诊断、调试和教学的Linux用户空间跟踪器   </div><div class="line">[ ] stress                                     //用于POSIX系统的工作负载生成器   </div><div class="line">[ ] stress-ng                                  //以各种可选择的方式对计算机系统进行压力测试   </div><div class="line">[ ] sysdig                                     //从正在运行的Linux实例捕获系统状态和活动、然后保存、过滤和分析   </div><div class="line">[ ] tcf-agent                                  //一个守护进程，它提供可供本地和远程客户端使用的TCF服务   </div><div class="line">[ ] tinymembench                               //内存基准测试程序   </div><div class="line">[ ] trace-cmd                                  //帮助开发人员了解Linux内核的运行时行为，以便进行故障调试或性能分析   </div><div class="line">[ ] trinity                                    //Linux系统调用模糊测试 </div><div class="line">[ ] uclibc-ng-test                             //编译并安装uClibc-ng测试套件   </div><div class="line">[ ] valgrind                                   //用于调试和分析Linux程序的工具   </div><div class="line">[ ] vmtouch                                    //用于学习和控制unix和unix类系统的文件系统缓存的工具   </div><div class="line">[ ] whetstone                                  //测试双精度浮点数操作的速度和效率</div></pre></td></tr></table></figure><h3 id="2-6-4-Development-tools"><a href="#2-6-4-Development-tools" class="headerlink" title="2.6.4 Development tools"></a>2.6.4 Development tools</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">[ ] binutils                                   //安装binutils(BinaryUtilities)二进制工具的集合，比如ld、as                                                                                                     </div><div class="line">[ ] bsdiff                                     //创建补丁path或文件比较diff                                                                                                     </div><div class="line">[ ] check                                      //单元测试框架                                                                                                     </div><div class="line">[ ] ctest                                      //CTest是CMake集成的一个测试工具，可以自动配置、构建、测试、展现测试结果                                                                                                     </div><div class="line">[ ] cppunit                                    //著名的JUnit框架的C++端口，用于单元测试                                                                                                     </div><div class="line">[ ] cunit                                      //自动化测试框架                                                                                                     </div><div class="line">[ ] cvs                                        //代码版本控制软件                                                                                                     </div><div class="line">[ ] cxxtest                                    //C++的单元测试框架                                                                                                     </div><div class="line">[ ] diffutils                                  //GNU diff，文件每行比较                                                                                                     </div><div class="line">[ ] dos2unix                                   //将DOS格式(CRLF)的文本文件转换成UNIX格式(LF)                                                                                                     </div><div class="line">[ ] findutils                                  //基本目录搜索工具，比如find、xargs、locate、updatedb等                                                                                                     </div><div class="line">[ ] flex                                       //快速词法分析器生成器，用于生成在文本上执行模式匹配的程序的工具                                                                                                      </div><div class="line">[ ] gawk                                       //一种特殊用途的编程语言，它是数据驱动的而不是程序的                                                                                                     </div><div class="line">[ ] gettext                                    //提供一个框架来帮助其他GNU包生成多语言消息                                                                                                     </div><div class="line">[ ] git                                        //代码版本控制软件                                                                                                     </div><div class="line">[ ] git-crypt                                  //用于在git存储库中对文件进行透明加密和解密                                                                                                     </div><div class="line">[ ] gperf                                      //一个“完美的哈希函数”生成器                                                                                                     </div><div class="line">[ ] grep                                       //GNU正则表达式匹配器                                                                                                     </div><div class="line">[ ] jo                                         //从shell输出JSON的命令行处理器                                                                                                     </div><div class="line">[ ] jq                                         //类似用于JSON数据的sed，用来切片和过滤，映射和转换结构化数据                                                                                                     </div><div class="line">[ ] libtool                                    //一个通用的库支持脚本，藏了在一致的可移植界面背后使用共享库的复杂性                                                                                                     </div><div class="line">[ ] make                                       //用于控制程序源文件中程序的可执行文件和其他非源文件的生成                                                                                                     </div><div class="line">[ ] patch                                      //获取补丁文件(包含差异列表)并将其应用于原始文件，生成修补版本                                                                                                     </div><div class="line">[ ] pkgconf                                    //有助于为开发框架配置编译器和链接器标志的程序                                                                                                     </div><div class="line">[ ] sed                                        //非交互式命令行文本编辑器                                                                                                     </div><div class="line">[ ] subversion                                 //代码版本控制软件                                                                                                     </div><div class="line">[ ] tree                                       //递归显示目录列表的命令</div></pre></td></tr></table></figure><h3 id="2-6-5-Filesystem-and-flash-utilities"><a href="#2-6-5-Filesystem-and-flash-utilities" class="headerlink" title="2.6.5 Filesystem and flash utilities"></a>2.6.5 Filesystem and flash utilities</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">[ ] abootimg                                   //直接通过文件映像或/dev块设备操作Android Boot Images的工具</div><div class="line">[ ] aufs-util                                  //aufs文件系统工具</div><div class="line">[ ] autofs                                     //自动挂载/卸载文件系统的守护进程</div><div class="line">[ ] btrfs-progs                                //Btrfs文件系统工具</div><div class="line">[ ] cifs-utils                                 //CIFS文件系统工具</div><div class="line">[ ] cpio                                       //用于创建和提取的cpio存档的工具</div><div class="line">[ ] cramfs                                     //用于生成和检查cramfs文件系统的工具</div><div class="line">[ ] curlftpfs (FUSE)                           //基于FUSE和libcurl访问FTP主机的文件系统</div><div class="line">[ ] davfs2                                     //一个Linux文件系统驱动程序，允许挂载WebDAV资源，远程协作创作Web资源</div><div class="line">[ ] dosfstools                                 //用于创建和检查DOS FAT文件系统的工具</div><div class="line">[*] e2fsprogs  ---&gt;                            //Ext2(及Ext3/4)文件系统工具集，包含了创建、修复、配置、调试等工具</div><div class="line">    [ ]   debugfs                              //ext2/ext3/ext4文件系统调试工具(不仅限于下列几个工具)</div><div class="line">    [ ]   e2image                              //保存关键的ext2/ext3ext4文件系统的元数据到文件中</div><div class="line">    [ ]   e4defrag                             //用于ext4文件系统的在线碎片整理程序</div><div class="line">    [*]   fsck                                 //检查并修复特定Linux文件系统 </div><div class="line">    [ ]   fuse2fs                              //用于ext2/ext3/ext4文件系统的FUSE文件系统客户端</div><div class="line">    [ ]   resize2fs                            //用于ext2/ext3/ext4文件系统容量调整</div><div class="line">[ ] e2tools                                    //用于读取、写入、操作ext2/ext3中的文件，使用ext2fs库访问文件系统</div><div class="line">[ ] ecryptfs-utils                             //适用于Linux的POSIX兼容企业加密文件系统</div><div class="line">[ ] exFAT (FUSE)                               //作为FUSE模块，GNU/Linux和其他类Unix系统的全功能exFAT文件系统</div><div class="line">[ ] exfat-utils                                //exFAT文件系统工具</div><div class="line">[ ] f2fs-tools                                 //用于Flash-Friendly File System(F2FS)的工具</div><div class="line">[ ] flashbench                                 //用于识别SD卡和存储媒介属性的工具</div><div class="line">[ ] fscryptctl                                 //处理原始密钥并管理Linux文件系统加密策略的工具</div><div class="line">[ ] fwup                                       //可编写脚本的嵌入式Linux固件更新创建、运行工具</div><div class="line">[ ] genext2fs                                  //作为普通(非root)用户生成ext2文件系统</div><div class="line">[ ] genpart                                    //生成由命令行参数定义的16字节分区表条目，并将其转储到stdout</div><div class="line">[ ] genromfs                                   //生成ROMFS文件系统的工具</div><div class="line">[ ] imx-usb-loader                             //通过USB在Freescale i.MX5/i.MX6和Vybrid SoC上下载和运行程序的工具</div><div class="line">[ ] mmc-utils                                  //MMC工具</div><div class="line">[ ] mtd, jffs2 and ubi/ubifs tools             //构建mtd、jffs2和ubi/ubifs工具</div><div class="line">[ ] mtools                                     //用于从Unix访问MS-DOS磁盘而不安装它们</div><div class="line">[ ] nfs-utils                                  //NFS服务工具</div><div class="line">[ ] nilfs-utils                                //用于创建和管理NILFS2文件系统的工具</div><div class="line">[ ] ntfs-3g                                    //开源免费的读/写NTFS驱动程序，可以处理Windows的NTFS文件系统</div><div class="line">[ ] sp-oops-extract                            //一个从MTD中提取OOPS/panic异常日志的工具</div><div class="line">[ ] squashfs                                   //生成SquashFS文件系统的工具</div><div class="line">[ ] sshfs (FUSE)                               //基于SSH文件传输协议的FUSE文件系统客户端</div><div class="line">[ ] sunxi-tools                                //用于全志Allwinner A10(又名sun4i)和A13(又名sun5i)设备的工具</div><div class="line">[ ] udftools                                   //用于创建UDF文件系统的工具</div><div class="line">[ ] unionfs (FUSE)                             //一个用户空间unionfs的实现</div><div class="line">[ ] xfsprogs                                   //XFS文件系统工具和库</div></pre></td></tr></table></figure><h3 id="2-6-6-Fonts-cursors-icons-sounds-and-themes"><a href="#2-6-6-Fonts-cursors-icons-sounds-and-themes" class="headerlink" title="2.6.6 Fonts, cursors, icons, sounds and themes"></a>2.6.6 Fonts, cursors, icons, sounds and themes</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">  *** Cursors ***                              //光标                                  </div><div class="line">[ ] comix-cursors                              //X11鼠标主题里一个略卡通的鼠标光标                                    </div><div class="line">[ ] obsidian-cursors                           //一个明亮、干净的鼠标光标集合                                    </div><div class="line">    *** Fonts ***                              //字体                                    </div><div class="line">[ ] Bitstream Vera                             //Bitstream Vera字体系列                                    </div><div class="line">[ ] cantarell                                  //一款当代人文主义无衬线字体，专为屏幕阅读而设计                                    </div><div class="line">[ ] DejaVu fonts                               //基于Vera字体的字体系列，提供更广泛的用途                                    </div><div class="line">[ ] font-awesome                               //是一套605个象形图标，可在网站上轻松扩展矢量图形                                    </div><div class="line">[ ] ghostscript-fonts                          //随Ghostscript(PDF软件)一起分发的字体，目前包括35种的gostScript字体                                    </div><div class="line">[ ] inconsolata                                //一种等宽字体，专为代码、清单等而设计                                    </div><div class="line">[ ] Liberation (Free fonts)                    //旨在替代Microsoft三种最常用字体：Times New Roman、Arial和Courier New                                    </div><div class="line">    *** Icons ***                              //图标                                    </div><div class="line">[ ] google-material-design-icons               //Google根据材料设计语言(Material Design)设计的官方图标集                                    </div><div class="line">[ ] hicolor icon theme                         //备用图标主题，用于显示图标主题中不可用的图标                                    </div><div class="line">    *** Sounds ***                             //声音                                    </div><div class="line">[ ] sound-theme-borealis                       //北极星(borealis)的声音主题                                    </div><div class="line">[ ] sound-theme-freedesktop                    //默认桌面(freedesktop)的声音主题                                  </div><div class="line">    *** Themes ***                             //主题</div></pre></td></tr></table></figure><h3 id="2-6-7-Games"><a href="#2-6-7-Games" class="headerlink" title="2.6.7 Games"></a>2.6.7 Games</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">[ ] chocolate-doom                                      //一个复古游戏</div><div class="line">[ ] flare-engine                                        //Flare(Free Libre Action Roleplaying Engine)是一款简单的游戏引擎</div><div class="line">[ ] gnuchess                                            //一个西洋棋游戏</div><div class="line">[ ] LBreakout2                                          //一款以Arkanoid形式出现的突破式街机游戏</div><div class="line">[ ] LTris                                               //LTris是使用SDL的俄罗斯方块克隆</div><div class="line">    *** minetest needs X11 and an OpenGL provider ***   //一个开源体像素游戏，需要X11和OpenGL支持</div><div class="line">[ ] OpenTyrian                                          //是DOS射击游戏Tyrian的一个端口</div><div class="line">[ ] prboom                                              //一个Doom客户端，用于支持在较新的硬件上玩旧游戏</div><div class="line">[ ] sl                                                  /终端/输入&quot;sl&quot;时，终端出现蒸汽火车穿过，一个玩笑命令</div><div class="line">    *** solarus needs OpenGL and a toolchain w/ C++,    //larus需要OpenGL和一个带C++的工具链，gcc&gt; = 4.8，NPTL，动态库</div><div class="line">        gcc &gt;= 4.8, NPTL, dynamic library ***           //一款动作角色扮演游戏(ARPG)引擎</div><div class="line">[ ] stella                                              //一款多平台Atari 2600 VCS仿真器</div></pre></td></tr></table></figure><h3 id="2-6-8-Graphic-libraries-and-applications-graphic-text"><a href="#2-6-8-Graphic-libraries-and-applications-graphic-text" class="headerlink" title="2.6.8 Graphic libraries and applications (graphic/text)"></a>2.6.8 Graphic libraries and applications (graphic/text)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line">    *** Graphic applications ***                           //***图形应用***</div><div class="line">[ ] fswebcam                                               //一个从V4L2获取图像的简洁的网络摄像头应用程序</div><div class="line">[ ] ghostscript                                            //文件通过它到打印机打印出来</div><div class="line">[ ] glmark2                                                //glmark2，一个GPU压力测试软件</div><div class="line">[ ] gnuplot                                                //使用命令列界面，绘制数学函数图形、统计图表等等</div><div class="line">[ ] jhead                                                  //用于操作一些数码相机使用的Exif jpeg标题中的设置和缩略图的程序</div><div class="line">[ ] libva-utils                                            //是VA-API(视频加速API)测试的集合</div><div class="line">[ ] netsurf                                                //一个紧凑的图形Web浏览器，旨在支持HTML5，CSS和JavaScript</div><div class="line">[ ] pngquant                                               //有损PNG压缩器，包含pngquant命令和libimagequant库</div><div class="line">[ ] rrdtool                                                //用于时间序列数据的高性能数据记录和图形系统</div><div class="line">[ ] tesseract-ocr  ----                                    //一个支持多种语言的OCR(光学字符识别)引擎，它可以直接使用或提供API​​</div><div class="line">    *** Graphic libraries ***                              //***图形库***</div><div class="line">[ ] cegui06                                                //Crazy Eddie的GUI系统是一个免费的库，为图形API/引擎提供窗口和小部件</div><div class="line">[ ] directfb                                               //DirectFB是在Linux帧缓冲区(fbdev)抽象层之上实现的一组图形API</div><div class="line">[ ] efl                                                    //Enlightenment Foundation Libraries，一个开源UI工具包</div><div class="line">[ ] fbdump (Framebuffer Capture Tool)                      //一个从Linux内核帧缓冲设备捕获快照并将其作为PPM文件写出的简单工具</div><div class="line">[ ] fbgrab                                                 //一个帧缓冲截图程序，捕获Linux frambuffer并将其转换为png图片</div><div class="line">[ ] fbset                                                  //用于显示或更改帧缓冲设备的设置</div><div class="line">[ ] fb-test-app                                            //Linux framebuffer的测试套件</div><div class="line">[ ] fbterm                                                 //用于Linux的快速终端仿真器，带有帧缓冲设备或VESA视频卡</div><div class="line">[ ] fbv                                                    //一个帧缓冲控制台图形文件查看器，能够显示GIF，JPEG，PNG和BMP文件</div><div class="line">[ ] freerdp                                                //是远程桌面协议(RDP)的免费实现</div><div class="line">[ ] imagemagick                                            //一个用于创建，编辑和组合位图图像的软件套件</div><div class="line">[ ] linux-fusion communication layer for DirectFB multi    //DirectFB通信层允许多个DirectFB应用程序同时运行</div><div class="line">[ ] mesa3d  ----                                           //OpenGL规范的开源实现</div><div class="line">[ ] ocrad                                                  //一个基于特征提取方法的OCR(光学字符识别)程序</div><div class="line">[ ] psplash                                                //用于实现开机动画、开机进度条</div><div class="line">[ ] SDL                                                    //一个库，允许程序对视频帧缓冲、音频输出、鼠标和键盘进行低级访问</div><div class="line">[ ] sdl2                                                   //DirectMedia的第2层，与SDL不兼容</div><div class="line">    *** Other GUIs ***                                     //***其它GUI***</div><div class="line">[*] Qt5  ---&gt;                                          //QT5框架</div><div class="line">          Qt5 version (Latest (5.11))  ---&gt;            //选择QT5版本</div><div class="line">    [ ]   qt53d module                                 //QT53d模块</div><div class="line">    -*-   qt5base                                      //qt5base模块，包含基本的Qt库：QtCore、QtNetwork、QtGui、QtWidgets等</div><div class="line">    ()      Custom configuration options               //自定义QT5编译选项</div><div class="line">    ()      Config file                                //指定类似src/corelib/global/qconfig-*.h文件来启用/禁用的功能</div><div class="line">    [ ]     Compile and install examples (with code)   //编译并安装示例(含代码)</div><div class="line">    [ ]     concurrent module                          //启用Qt5Concurrent库</div><div class="line">    [ ]     MySQL Plugin                               //构建MySQL插件</div><div class="line">    [ ]     PostgreSQL Plugin                          //构建PostgreSQL插件</div><div class="line">            SQLite 3 support (No sqlite support)  ---&gt; //启用SQLite3支持(不支持sqlite)</div><div class="line">    [ ]     gui module                                 //启用Qt5Gui库</div><div class="line">    [ ]     DBus module                                //启用D-Bus模块</div><div class="line">    [ ]     Enable ICU support                         //启用Qt5中的ICU支持，例如Qt5Webkit需要此功能</div><div class="line">    [ ]     Enable Tslib support                       //启用Tslib插件</div><div class="line">    [ ]   qt5canvas3d                 //Qt Canvas 3D模块提供一种从Qt Quick JavaScript进行类似于WebGL的3D绘图调用的方法</div><div class="line">    [ ]   qt5charts                   //Qt图表模块提供了一组易于使用的图表组件</div><div class="line">    [ ]   qt5connectivity             //Qt Connectivity模块提供对Bluetooth/NFC外围设备的支持</div><div class="line">    [ ]   qt5declarative              //Qt Declarative模块提供了Qt QML和Qt Quick模块，用于使用QML语言开发UI</div><div class="line">    [ ]   qt5enginio                  //Enginio是一种后端即服务解决方案，用于简化连接的和数据驱动的应用程序的后端开发</div><div class="line">    [ ]   qt5graphicaleffects         //Qt Graphical Effects模块提供了一组QML类型，用于向用户界面添加视觉特效</div><div class="line">    [ ]   qt5imageformats             //Qt Image Formats模块提供了用于其他图像格式的插件:TIFF、MNG、TGA、WBMP</div><div class="line">    [ ]   qt5location                 //Qt Location API使用一些流行的定位服务提供的数据来创建可行的地图解决方案</div><div class="line">    [ ]   qt5multimedia               //Qt Multimedia模块，实现媒体播放以及使用摄像头和无线电设备</div><div class="line">    [ ]   qt5quickcontrols            //Qt Quick Controls模块提供了一组控件，可用于在Qt Quick中构建完整的界面</div><div class="line">    [ ]   qt5quickcontrols2           //对应Qt Quick Controls 2模块</div><div class="line">    [ ]   qt5script                   //Qt脚本支持使Qt应用程序可编写脚本，逐渐弃用，在新设计中由Qt QML模块替换</div><div class="line">    [ ]   qt5scxml                    //Qt SCXML模块提供了从SCXML文件创建状态机的功能</div><div class="line">    [ ]   qt5sensors                  //Qt Sensors API通过QML和C++接口提供对传感器硬件的访问</div><div class="line">    [ ]   qt5serialbus                //对应qt5serialbus模块</div><div class="line">    [ ]   qt5serialport               //Qt串行端口提供配置串行端口，I/O操作，获取和设置RS-232引脚排列的控制信号</div><div class="line">    [ ]   qt5svg                      //Qt SVG提供了用于在小部件和其他绘画设备上渲染和显示SVG图纸的类</div><div class="line">    [ ]   qt5tools                    //Qt Tools提供的工具可促进应用程序的开发和设计</div><div class="line">    [ ]   qt5virtualkeyboard          //Qt虚拟键盘是一个虚拟键盘框架，由C++后端和QML实现的UI前端组成</div><div class="line">    [ ]   qt5wayland                  //对应qt5wayland模块</div><div class="line">    [ ]   qt5webchannel               //支持在服务器(QML/C++应用程序)和客户端(HTML/JavaScript或QML应用程序)之间进行对等通信</div><div class="line">    [ ]   qt5webkit                   //提供WebView API，用于QML应用程序呈现动态Web内容，后继QtWebEngine需要OpenGL支持</div><div class="line">    [ ]   qt5webengine                //提供用于渲染HTML，XHTML和SVG文档的C++类和QML类型</div><div class="line">    [ ]   qt5websockets               //提供C++和QML接口，使Qt应用程序可以充当可处理WebSocket请求的服务器，也可充当的客户端</div><div class="line">    [ ]   qt5xmlpatterns              //Qt XML Patterns模块提供对XPath，XQuery，XSLT和XML Schema验证的支持</div><div class="line">    [ ]   KF5            ----         //KF5是一组Qt框架插件，扩展了Qt</div><div class="line">          *** QT libraries and helper libraries ***   //***QT库和帮助程序库***</div><div class="line">    [ ]   cutelyst                    //一个基于Qt的C++ Web框架，它使用Catalyst(Perl)框架的简单实现</div><div class="line">    [ ]   grantlee                    //Django模板框架的Qt实现</div><div class="line">    [ ]   qextserialport              //一个Qt库来管理串行端口</div><div class="line">    [ ]   qjson                       //QJson是基于Qt的库，可将JSON数据映射到QVariant对象，反之亦然</div><div class="line">    [ ]   quazip                      //QuaZIP是Gilles Vollant的ZIP/UNZIP软件包的简单C++包装，可用于访问ZIP档案，它使用Qt工具箱</div><div class="line">    [ ]   qwt                         //Qwt是Qt GUI应用程序框架的图形扩展，它提供了2D绘图小部件等</div><div class="line">[ ] tekui                             //一个轻量、独立、可移植的GUI工具包, 用lua和C开发</div><div class="line">[ ] weston                            //是Wayland服务器的参考实现</div><div class="line">[ ] X.org X Window System  ----       //支持X11R7的库、服务器、驱动程序和应用程序</div><div class="line">[ ] midori                            //一个轻量级浏览器</div><div class="line">[ ] vte                               //Virtual Terminal Emulator，一个虚拟终端模拟器小部件</div><div class="line">[ ] xkeyboard-config                  //X的键盘配置数据库</div></pre></td></tr></table></figure><h3 id="2-6-9-Hardware-handling"><a href="#2-6-9-Hardware-handling" class="headerlink" title="2.6.9 Hardware handling"></a>2.6.9 Hardware handling</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div></pre></td><td class="code"><pre><div class="line">Firmware  ---&gt;                                    //固件</div><div class="line">    [ ] am33x-cm3                                 //Cortex-M3二进制文件用于在am335x上挂起和恢复</div><div class="line">    [ ] armbian-firmware                          //特定用于Armbian的固件</div><div class="line">    [ ] b43-firmware                              //b43内核驱动程序支持的Broadcom Wifi设备的固件</div><div class="line">    [ ] linux-firmware                            //为LAN，WLAN卡等设备提供了各种二进制固件文件</div><div class="line">    [ ] rpi-bt-firmware                           //Raspberry Pi 3和Zero W Broadcom BCM43438蓝牙模块固件</div><div class="line">    [ ] rpi-firmware                              //Raspberry Pi引导程序和GPU固件的预编译二进制文件</div><div class="line">    [ ] rpi-wifi-firmware                         //Raspberry Pi 3和Zero W Broadcom BCM43430 wifi模块NVRAM数据</div><div class="line">    [ ] sunxi script.bin board file               //专用于linux-sunxi内核的一个已编译的.fex文件来进行硬件描述</div><div class="line">    [ ] ts4900-fpga                               //TS-4900的FPGA实现了clocks、UART MUX、GPIO</div><div class="line">    [ ] ux500-firmware                            //为Azurewave AW-NH580组合模块(wifi、bt、gps)提供了各种二进制文件</div><div class="line">    [ ] wilc1000-firmware                         //Atmel Wilc1000无线设备的固件</div><div class="line">    [ ] wilink-bt-firmware                        //TI的Wilink7和Wilink8(wl12xx/wl18xx)UART连接的蓝牙固件</div><div class="line">    [ ] zd1211-firmware                           //ZyDAS ZD1211/Atheros AR5007UG wifi设备的固件</div><div class="line">[ ] a10disp                                       //用于改变运行linux-sunxi内核的Allwinner ARM SOCs显示模式的程序</div><div class="line">[ ] acpica                                        //提供独立于操作系统外的高级配置和电源接口规范(ACPI)的参考实现</div><div class="line">[ ] acpitool                                      //一个小型、方便的命令行ACPI客户端，具有许多适用于Linux的功能</div><div class="line">[ ] aer-inject                                    //允许注入软件层面PCIE AER错误到正在运行的Linux内核</div><div class="line">[ ] am335x-pru-package                            //TI AM335X PRU程序加载器</div><div class="line">[ ] avrdude                                       //avrdude是一个多平台的avr系列MCU的下载器</div><div class="line">[ ] bcache tools                                  //Bcache是​​Linux内核块层缓存，将快速的SSD充当慢速的HDD缓存</div><div class="line">[ ] brltty                                        //一个守护程序，为盲人提供对Linux控制台的访问</div><div class="line">[ ] cbootimage                                    //编译BCT(启动配置表)映像，将其放入Tegra的设备的启动闪存中</div><div class="line">[ ] cc-tool                                       //为Linux OS的Texas Instruments CC调试器提供支持</div><div class="line">[ ] cdrkit                                        //用于读取CD和DVD，清空CD-RW介质，创建ISO-9660文件系统映像等</div><div class="line">[ ] cryptsetup                                    //此工具有助于操纵dm-crypt和luks分区以进行磁盘加密</div><div class="line">[ ] cwiid                                         //用C语言编写的用于与Nintendo Wiimote接口的Linux工具</div><div class="line">[ ] dhadi-linux                                   //用于将Asterisk与电话硬件接口的开源设备驱动程序框架</div><div class="line">[ ] dahdi-tools                                   //用于管理和监视DAHDI设备的程序包</div><div class="line">-*- dbus                                          //D-Bus消息总线系统</div><div class="line">[ ] dbus-c++                                      //为D-Bus提供C ++ API</div><div class="line">[ ] dbus-glib                                     //D-Bus的GLib绑定</div><div class="line">[ ] dbus-triggerd                                 //在收到给定的dbus信号后触发shell命令的工具</div><div class="line">[*] devmem2                                       //读/写内存的任何位置数据</div><div class="line">[ ] dfu-util                                      //用于将固件下载和上传到通过USB连接的设备</div><div class="line">[ ] dmraid                                        //利用Linux内核的Device Mapper机制的磁盘阵列(RAID)</div><div class="line">[ ] dt-utils                                      //设备树转储和barebox操作的工具</div><div class="line">[ ] dtv-scan-tables                               //数字电视扫描表</div><div class="line">[ ] dump1090                                      //Dump1090是用于RTLSDR设备的简单模式S解码器</div><div class="line">[ ] dvb-apps                                      //安装少量的DVB测试和实用程序，包括szap和dvbscan</div><div class="line">[ ] dvbsnoop                                      //分析、查看、调试传输流(TS)、程序基本流(PES)、程序流(PS)</div><div class="line">[ ] edid-decode                                   //以人类可读的格式解码EDID数据</div><div class="line">-*- eudev                                         //eudev是systemd-udev的一个分支</div><div class="line">[*]   enable rules generator                      //启用持久性规则生成</div><div class="line">[*]   enable hwdb installation                    //启用将硬件数据库安装到/etc/udev/hwdb.d</div><div class="line">[ ] evemu                                         //evemu记录并重放设备描述和事件</div><div class="line">[ ] evtest                                        //input输入子系统测试工具</div><div class="line">[ ] fan-ctrl                                      //一个守护程序，控制CPU风扇的速度</div><div class="line">[ ] fconfig                                       //从Linux获取/设置RedBoot配置参数</div><div class="line">[ ] fis                                           //从Linux操纵RedBoot分区表</div><div class="line">[ ] flashrom                                      //用于识别/读取/写入/验证和擦除闪存芯片的程序</div><div class="line">[ ] fmtools                                       //用于功率控制、调谐、音量控制、电台扫描的的fm</div><div class="line">[ ] Freescale i.MX libraries  ----                //为Freescale i.MX平台提供GPU或VPU提供硬件加速和一些硬件工具</div><div class="line">[ ] fxload                                        //一个USB自动下载工具</div><div class="line">[ ] gadgetfs-test                                 //usb gadgetfs测试程序</div><div class="line">[ ] gpm                                           //为虚拟控制台提供鼠标进行复制和粘贴操作</div><div class="line">[ ] gpsd  ----                                    //监视串口或USB，获取GPS或AIS模块数据，并可通过TCP端口查询</div><div class="line">[ ] gptfdisk                                      //GPT fdisk(由gdisk和sgdisk程序组成)是一种文本模式分区工具</div><div class="line">[ ] gvfs                                          //一个用户空间虚拟文件系统，可通过SFTP、SMB等访问远程数据</div><div class="line">[ ] hdparm                                        //获取/设置Linux IDE驱动器的硬盘参数</div><div class="line">[ ] hwdata                                        //获取各种硬件标识和配置数据</div><div class="line">[ ] hwloc                                         //获取系统中层次化的关键计算元素，比如：处理器内核，线程</div><div class="line">[ ] i2c-tools                                     //用于Linux的各种I2C工具集，比如总线探测、寄存器访问</div><div class="line">[ ] input-event-daemon                            //对输入事件(例如按键，鼠标按钮和开关)执行用户定义的命令</div><div class="line">[ ] iostat                                        //I/O性能监视实用程序</div><div class="line">[ ] ipmitool                                      //为启用IPMI的设备提供了简单的命令行界面</div><div class="line">[ ] irda-utils                                    //用于控制IrDA栈用户空间程序</div><div class="line">[ ] kbd                                           //键表文件和键盘实用程序</div><div class="line">[ ] lcdproc                                       //LCD显示驱动程序守护程序和客户端</div><div class="line">[ ] libuio                                        //用于处理UIO(用户空间I/O)设备发现和绑定任务</div><div class="line">[ ] libump                                        //ARM通用内存提供程序用户空间库，Mali驱动程序所必需的</div><div class="line">[ ] linuxconsoletools                             //将老式串行设备连接到Linux内核输入层的inputattach程序</div><div class="line">[ ] linux-backports                               //许多来自最新内核的Linux驱动程序，反向移植到较旧的内核</div><div class="line">[ ] lirc-tools                                    //接收和发送最常见的IR遥控器的IR信号</div><div class="line">[ ] lm-sensors                                    //Linux的硬件运行状况监视软件包(温度、电压、风扇速度等)</div><div class="line">[ ] lshw                                          //Hardware Lister，用于提供有关机器硬件配置的详细信息的工具</div><div class="line">[ ] lsscsi                                        //列出SCSI设备(或主机)及其属性</div><div class="line">[ ] lsuio                                         //列出可用的用户空间I/O(UIO)设备</div><div class="line">[ ] luksmeta                                      //用于将元数据存储在LUKSv1标头中</div><div class="line">[ ] lvm2 &amp; device mapper                          //LVM2(Logical Volume Manager2)是Linux逻辑卷管理器的重写</div><div class="line">[*] mali-t76x                                     //为ARM Mali Midgard T76X GPU安装二进制用户空间组件</div><div class="line">[ ] mdadm                                         //用于管理Linux软件RAID阵列的程序</div><div class="line">[ ] memtester                                     //用于测试内存子系统是否有故障</div><div class="line">[ ] memtool                                       //用于修改存储器映射的寄存器(/dev/mem)或字符设备(/dev/fb0)</div><div class="line">[ ] minicom                                       //一个有菜单界面的串口通信工具</div><div class="line">[ ] nanocom                                       //基于microcom的Linux和POSIX系统的轻量级串行终端</div><div class="line">[ ] neard                                         //Near Field Communication，NFC管理</div><div class="line">[ ] nvme                                          //与标准NVM Express(优化的PCI Express SSD接口)设备的交互程序</div><div class="line">[ ] odroid-mali                                   //为基于odroidc2的系统安装ARM Mali驱动程序</div><div class="line">[ ] odroid-scripts                                //为基于odroidc2的系统安装脚本</div><div class="line">[ ] ofono                                         //用于移动电话(GSM/UMTS)开源程序，使用D-Bus API，3GPP标准</div><div class="line">[ ] open2300                                      //从Lacrosse WS2300/WS2305/WS2310/WS2315气象站读写数据</div><div class="line">[ ] openipmi                                      //允许对设备进行远程监视和远程管理</div><div class="line">[ ] openocd                                       //Open On-Chip Debugger，开源片上调试器</div><div class="line">    *** owl-linux is only supported               //用于H＆D无线SPB104 SD-card WiFi SIP的Linux内核驱动程序</div><div class="line">    on ARM9 architecture ***  </div><div class="line">[ ] parted                                        //磁盘分区和分区大小调整工具</div><div class="line">[ ] pciutils                                      //处理PCI总线的各种程序，提供诸如setpci和lspci之类的东西</div><div class="line">[ ] pdbg                                          //PowerPC FSI调试器，通过FSI对IBM Power8/9 CPU进行低级调试</div><div class="line">[ ] picocom                                       //一个极简的串口调试工具</div><div class="line">[ ] pifmrds                                       //使用Raspberry Pi的PWM的FM-RDS发送器</div><div class="line">[ ] pigpio                                        //用于控制Raspberry Pi通用输入输出(GPIO)的库</div><div class="line">[ ] powertop                                      //诊断功耗和电源管理问题的工具</div><div class="line">[ ] pps-tools                                     //每秒脉冲(Pulse per second )工具，提供timepps.h和其它PPS程序</div><div class="line">[ ] pru-software-support                          //从TI的PRU软件支持包中提取的PRU固件示例</div><div class="line">[ ] read-edid                                     //一对用于从监视器读取EDID的工具</div><div class="line">[ ] rng-tools                                     //使用硬件随机数生成器(random number generators)的守护程序</div><div class="line">[ ] rpi-userland                                  //包含Raspberry Pi使用VideoCore驱动程序所需的库</div><div class="line">[ ] rs485conf                                     //使用的命令行选项显示和修改TTY设备的RS485配置参数</div><div class="line">[ ] rtc-tools                                     //用于操纵实时时钟设备</div><div class="line">[ ] rtl8188eu                                     //RTL8188EU USB Wi-Fi适配器的独立驱动程序</div><div class="line">[ ] rtl8723bs                                     //无线网卡rtl8723bs驱动程序</div><div class="line">[ ] rtl8723bu                                     //无线网卡rtl8723bu驱动程序</div><div class="line">[ ] rtl8821au                                     //无线网卡rtl8821au驱动程序</div><div class="line">[ ] rtl8189fs                                     //无线网卡rtl8189fs驱动程序</div><div class="line">[ ] sane-backends                                 //Scanner Access Now Easy，轻松访问扫描仪</div><div class="line">[ ] sdparm                                        //访问SCSI设备参数的程序</div><div class="line">[ ] setserial                                     //串口配置</div><div class="line">[ ] sg3-utils                                     //使用SCSI命令集的设备的程序</div><div class="line">[ ] sigrok-cli                                    //Sigrok-cli是sigrok软件套件的命令行前端</div><div class="line">[ ] sispmctl                                      //在Linux下使用GEMBIRD SiS-PM和mSiS(sispm)USB控制的电源插座设备</div><div class="line">[ ] smartmontools                                 //使用S.M.A.R.T.控制和监视存储系统</div><div class="line">[ ] smstools3                                     //一个SMS网关软件，可以通过GSM调制解调器和手机发送和接收短消息</div><div class="line">[ ] spi-tools                                     //包含一些简单的命令行工具，以帮助使用Linux spidev设备</div><div class="line">[ ] sredird                                       //一个串行端口重定向器，可以通过网络共享一个串行端口</div><div class="line">[ ] statserial                                    //显示标准9针或25针串行端口上的信号表，并指示握手线的状态</div><div class="line">[ ] stm32flash                                    //通过UART或I2C为STM32 ARM微控制器提供的开源flash程序</div><div class="line">[ ] sunxi-cedarx                                  //CedarX是Allwinner的多媒体协处理技术，用于硬件加速视频和图像解码</div><div class="line">[ ] sunxi-mali                                    //为基于sunxi的系统(ARM Allwinner SoC的系统)安装ARM Mali驱动程序</div><div class="line">[ ] sysstat                                       //Linux的性能监视工具集合(sar、sadf、mpstat、iostat、pidstat、sa)</div><div class="line">[ ] targetcli-fb                                  //一个命令行界面，用于配置3.x Linux内核版本中的LIO通用SCSI目标</div><div class="line">[ ] ti-gfx                                        //使用SGX加速的TI开发板的图形库，支持AM335x、AM43xx等</div><div class="line">[ ] ti-sgx-km                                     //带有SGX GPU的TI CPU的内核模块</div><div class="line">    *** ti-sgx-um needs the ti-sgx-km driver ***  //带有SGX5xx GPU的TI CPU的图形库,支持AM335x，AM437x等</div><div class="line">[ ] ti-uim                                        //TI wl12xx连接芯片的用户模式初始化管理器共享传输驱动程序</div><div class="line">[ ] ti-utils                                      //基于wl12xx驱动程序的TI无线解决方案的校准器和其它程序</div><div class="line">[ ] triggerhappy                                  //一个热键守护程序</div><div class="line">[ ] u-boot tools                                  //U-Boot引导程序的配套工具</div><div class="line">[ ] ubus                                          //IPC/RPC总线，允许进程之间进行通信，由ubusd、libubus、ubus组成</div><div class="line">[ ] uccp420wlan                                   //基于SoftMAC的Imagination Explorer RPU uccp420的WiFi驱动程序</div><div class="line">[ ] udisks                                        //提供了一个守护程序、D-Bus API及命令行工具，以管理磁盘/存储设备</div><div class="line">[ ] uhubctl                                       //在USB集线器上控制每个端口的USB电源</div><div class="line">[ ] upower                                        //用于枚举功率设备，侦听设备事件以及查询历史记录和统计信息</div><div class="line">[ ] usb_modeswitch                                //一种模式切换工具，用于控制具有“多种模式”的USB设备</div><div class="line">[ ] usb_modeswitch_data                           //包含udev规则和事件，以允许usb_modeswitch自动运行</div><div class="line">[ ] usbmount                                      //在插入USB大容量存储设备后会自动挂载，拔掉后自动卸载</div><div class="line">[ ] usbutils                                      //USB枚举程序</div><div class="line">[ ] w_scan                                        //用于对DVB和ATSC传输执行频率扫描</div><div class="line">[ ] wf111                                         //Silicon Labs WF111 WiFi驱动程序和实用程序</div><div class="line">[ ] wipe                                          //用于从磁介质安全擦除文件的命令</div><div class="line">[ ] xorriso                                       //可创建、加载、处理和写入具有Rock Ridge扩展名的ISO 9660系统映像</div><div class="line">[ ] xr819-xradio                                  //SDIO WiFi芯片XR819的无线驱动程序</div></pre></td></tr></table></figure><h3 id="2-6-10-Interpreter-languages-and-scripting"><a href="#2-6-10-Interpreter-languages-and-scripting" class="headerlink" title="2.6.10 Interpreter languages and scripting"></a>2.6.10 Interpreter languages and scripting</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div></pre></td><td class="code"><pre><div class="line">[ ] 4th                                       //Forth编译器，可将Forth语言转成其他语言的字节码和独立可运行程序</div><div class="line">[ ] enscript                                  //将ASCII文件转换为PostScript，HTML或RTF，生成文件或打印</div><div class="line">[ ] erlang                                    //Erlang是一种编程语言，主要用于开发并发和分布式系统</div><div class="line">[ ] execline                                  //execline是一种(非交互式)脚本语言，类似sh，但语法有很大不同</div><div class="line">[ ] ficl                                      //Ficl是一种编程语言解释器，将命令/宏/开发原型语言嵌入到其他系统中</div><div class="line">[ ] gauche                                    //Gauche是R7RS计划的实现，作为方便的脚本解释器被开发</div><div class="line">[ ] guile                                     //Guile是Scheme编程语言的解释器和编译器，该语言类似Lisp</div><div class="line">[ ] haserl                                    //Haserl是一个小的cgi包装器，使程序脚本可以嵌入到html文档中</div><div class="line">[ ] jamvm                                     //JamVM是新的Java虚拟机，符合JVM规范版本2</div><div class="line">[ ] jimtcl                                    //Jim Tcl是Tcl脚本语言的一种小型实现</div><div class="line">[ ] lua                                       //Lua是一种功能强大，快速，轻巧，可嵌入的脚本语言</div><div class="line">[ ] luajit                                    //LuaJIT实现了Lua 5.1定义的全部语言功能</div><div class="line">[ ] micropython                               //Micro Python是Python 3编程语言的精简和快速实现</div><div class="line">[ ] moarvm                                    //专门为Rakudo Perl 6和NQP编译器工具链构建的虚拟机</div><div class="line">[ ] mono                                      //C＃和与Microsoft.NET二进制兼容的CLR的开源、跨平台实现</div><div class="line">[ ] nodejs                                    //基于V8的事件驱动的I/O服务器端JavaScript环境</div><div class="line">[ ] perl                                      //Practical Extraction and Report Language，实用报表提取语言</div><div class="line">[*] php                                       //PHP是一种广泛使用的通用脚本语言，特别适合于Web开发</div><div class="line">[*]   CGI interface                           //Common Gateway Interface，通用网关接口</div><div class="line">[*]   CLI interface                           //Command Line Interface，命令行接口</div><div class="line">[*]   FPM interface                           //FastCGI Process Manager，FastCGI流程管理器</div><div class="line">      Extensions  ---&gt;                        //php扩展</div><div class="line">        [ ] Calendar                          //日历和活动支持</div><div class="line">        [ ] Fileinfo                          //文件信息支持</div><div class="line">        [ ] OPcache                           //启用Zend OPcache加速器</div><div class="line">        [*] Readline                          //行读取支持</div><div class="line">        [*] Session                           //会话支持</div><div class="line">            *** Compression extensions ***    //***压缩扩展*</div><div class="line">        [*] bzip2                             //bzip2格式读/写支持</div><div class="line">        [ ] phar                              //PHP存档支持</div><div class="line">        [ ] zip                               //zip格式读/写支持</div><div class="line">        [*] zlib                              //zlib支持</div><div class="line">            *** Cryptography extensions ***   //**密码扩展**</div><div class="line">        [ ] hash                              //Hash加密算法</div><div class="line">        [ ] mcrypt                            //mcrypt加密扩展库支持</div><div class="line">        [*] openssl                           //Open Secure Sockets Layer开源安全套接层协议</div><div class="line">            *** Database extensions ***       //**数据库扩展**</div><div class="line">        [ ] DBA                               //Database Abstraction数据库抽象层</div><div class="line">        [ ] Mysqli                            //MySQL改进的扩展支持</div><div class="line">        [ ] SQLite3                           //SQLite3支持</div><div class="line">        [ ] PDO                               //PHP数据对象支持</div><div class="line">            *** Human language and character  //**人类语言和字符编码支持**</div><div class="line">                encoding support ***</div><div class="line">        [ ] Gettext                           //文本获取支持</div><div class="line">        [ ] iconv                             //iconv字符集转换支持</div><div class="line">        [ ] intl                              //国际化支持</div><div class="line">        [ ] mbstring                          //多字节字符串支持</div><div class="line">            *** Image processing ***          //**图像处理**</div><div class="line">        [ ] EXIF                              //记录数码照片的属性信息和拍摄数据</div><div class="line">        [ ] GD                                //GD库，用于图像处理，制作验证码、缩略图、水印图等</div><div class="line">            *** Mathematical extensions ***   //**数学扩展**</div><div class="line">        [ ] BC math                           //BCMath任意精度数学支持</div><div class="line">        [ ] GMP                               //GNU多精度支持</div><div class="line">            *** Other basic extensions ***    //**其它基本扩展**</div><div class="line">        [*] JSON                              //JavaScript对象序列化支持</div><div class="line">        [ ] Tokenizer                         //令牌生成器功能支持</div><div class="line">            *** Other services ***            //**其它服务**</div><div class="line">        [ ] cURL                              //URL流的cURL</div><div class="line">        [ ] FTP                               //FTP支持</div><div class="line">        [ ] SNMP                              //SNMP支持</div><div class="line">        [ ] sockets                           //Sockets支持</div><div class="line">            *** Process Control ***           //**过程控制**</div><div class="line">        [ ] PCNTL                             //Process control，过程控制支持</div><div class="line">        [*] Posix                             //POSIX.1(IEEE 1003.1)功能支持</div><div class="line">        [ ] shmop                             //共享内存支持</div><div class="line">        [ ] sysvmsg                           //System V消息队列支持</div><div class="line">        [ ] sysvsem                           //System V信号灯支持</div><div class="line">        [ ] sysvshm                           //System V共享内存支持</div><div class="line">            *** Variable and Type related *** //**变量和类型相关**</div><div class="line">        [ ] Ctype                             //字符类型检查支持</div><div class="line">        [ ] Filter                            //输入过滤支持</div><div class="line">            *** Web services ***              //**网页服务**</div><div class="line">        [ ] SOAP                              //SOAP支持</div><div class="line">        [ ] XML-RPC                           //XML-RPC支持</div><div class="line">            *** XML manipulation ***          //**XML操作**</div><div class="line">        [ ] DOM                               //文档对象模型支持</div><div class="line">        [ ] libxml                            //libxml2支持</div><div class="line">        [ ] SimpleXML                         //SimpleXML支持</div><div class="line">        [ ] WDDX                              //WDDX支持</div><div class="line">        [ ] XML Parser                        //XML解析支持</div><div class="line">        [ ] XMLReader                         //XML读支持</div><div class="line">        [ ] XMLWriter                         //XML写支持</div><div class="line">        [ ] XSL                               //XSL转换支持</div><div class="line">      External php extensions  ---&gt;           //外部php扩展</div><div class="line">        [ ] php-amqp                          //与任何符合AMQP的服务器通信</div><div class="line">        [ ] php-geoip                         //基于PHP GeoIP的IP地址映射到地理位置</div><div class="line">        [ ] php-gnupg                         //PHP扩展的gpgme库，开源的非对称信息加密系统</div><div class="line">        [ ] php-imagick                       //PHP扩展的ImageMagick库，用于读、写和处理主流图片文件</div><div class="line">        [ ] php-memcached                     //用于通过libmemcached库与memcached接口</div><div class="line">        [ ] php-ssh2                          //libssh2库的PHP绑定</div><div class="line">        [ ] php-yaml                          //PHP YAML-1.1解析和生成</div><div class="line">        [ ] php-zmq                           //PHP的ZeroMQ消息传递绑定</div><div class="line">-*- python                                    //python相关</div><div class="line">      python module format to install</div><div class="line">          (.pyc compiled sources only)  ---&gt;  //python模块安装格式(.pyc仅编译源)</div><div class="line">      core python modules  ---&gt;               //核心python模块</div><div class="line">                  *** The following modules are unusual or require extra libraries *** //**以下模块特殊或需要额外的库**</div><div class="line">        [ ] bzip2 module                      //适用于Python的bzip2模块</div><div class="line">        [ ] bsddb module                      //适用于Python的bsddb模块</div><div class="line">        [ ] codecscjk module                  //适用于Python的中文/日文/韩文编解码器模块</div><div class="line">        [ ] curses module                     //Python的curses模块</div><div class="line">        [ ] ossaudiodev module                //适用于Python的ossaudiodev模块</div><div class="line">        [ ] readline                          //Python的readline模块(在Python Shell中进行命令行编辑时需要)</div><div class="line">        [ ] ssl                               //适用于Python的_ssl模块(urllib等中的https必需)</div><div class="line">        [*] unicodedata module                //Unicode字符数据库(由stringprep模块使用)</div><div class="line">              Python unicode database format  //Python unicode数据库格式(通用字符集2字节UCS2)</div><div class="line">              (Universal Character Set 2-byte</div><div class="line">              (UCS2))  ---&gt;</div><div class="line">        [ ] sqlite module                     //SQLite数据库支持</div><div class="line">        [ ] xml module                        //Python的pyexpat和xml库</div><div class="line">        [ ] zlib module                       //Python中的zlib支持</div><div class="line">        [ ] hashlib module                    //Python中的hashlib支持</div><div class="line">    External python modules  ---&gt;             //外部python扩展</div><div class="line">        [ ] python-alsaaudio                  //包含ALSA声卡的API</div><div class="line">        [ ] python-argh                       //Argh是argparse的智能包装器，argparse是一个命令行参数解析模块</div><div class="line">        [ ] python-arrow                      //更适用Python的日期和时间</div><div class="line">        [ ] python-asn1crypto                 //用于解析和序列化ASN.1结构</div><div class="line">        [ ] python-attrs                      //摆脱实现对象协议的繁琐工作，感受编写类的乐趣</div><div class="line">        [ ] python-autobahn                   //WebSocket客户端Hhh服务器库，WAMP实时框架</div><div class="line">        [ ] python-automat                    //用于Python有限状态机(特别是确定性有限状态机)表达</div><div class="line">        [ ] python-babel                      //一系列国际化Python应用程序的工具</div><div class="line">        [ ] python-backports-abc              //对“collections.abc”模块的最新添加的反向移植</div><div class="line">        [ ] python-backports-shutil-          //get_terminal_size函数的反向移植</div><div class="line">                   get-terminal-size</div><div class="line">        [ ] python-bcrypt                     //跨平台文件加密工具</div><div class="line">        [ ] python-beautifulsoup4             //用于从HTML和XML文件中提取数据</div><div class="line">        [ ] python-bitstring                  //二进制数据的简单构造，分析和修改</div><div class="line">        [ ] python-bottle                     //快速，简单且轻量级的WSGI微型Web框架</div><div class="line">        [ ] python-can                        //为Python提供控制器区域网络支持</div><div class="line">        [ ] python-cbor                       //RFC 7049-简洁的二进制对象表示</div><div class="line">        [ ] python-certifi                    //用于提供Mozilla的CA Bundle的Python软件包</div><div class="line">        [ ] python-cffi                       //Python调用C代码的外函数接口</div><div class="line">        [ ] python-characteristic             //没有样板的Python属性</div><div class="line">        [ ] python-chardet                    //适用于Python 2和3的通用编码检测器</div><div class="line">        [ ] python-cheetah                    //一个开源模板引擎和代码生成工具</div><div class="line">        [ ] python-cheroot                    //Cheroot是源自CherryPy的纯Python的高性能HTTP服务器</div><div class="line">        [ ] python-cherrypy                   //简约的Web框架</div><div class="line">        [ ] python-click                      //提供功能强大的命令行实用程序</div><div class="line">        [ ] python-coherence                  //用于数字生活的DLNA/UPnP媒体服务器和框架</div><div class="line">        [ ] python-configobj                  //一个简单但功能强大的配置文件(ini格式)读/写软件</div><div class="line">        [ ] python-configshell-fb             //提供了一个框架来构建基于CLI的应用程序</div><div class="line">        [ ] python-constantly                 //提供符号常量支持的库</div><div class="line">        [ ] python-couchdb                    //用于CouchDB的Python客户端库</div><div class="line">        [ ] python-crc16                      //用于CRC16校验的库</div><div class="line">        [ ] python-crcmod                     //用于生成计算循环冗余校验(CRC)的对象</div><div class="line">        [ ] python-crossbar                   //一个开源的WAMP应用路由器</div><div class="line">        [ ] python-cryptography               //一个旨在向Python开发人员公开密码基元和配方的软件包</div><div class="line">        [ ] python-cssselect                  //解析CSS3选择器并将其转换为XPath 1.0</div><div class="line">        [ ] python-cssutils                   //用于Python的CSS级联样式表库</div><div class="line">        [ ] python-daemon                     //生成规范的Unix守护进程</div><div class="line">        [ ] python-dataproperty               //用于从数据提取属性的Python库</div><div class="line">        [ ] python-dateutil                   //标准Python日期时间模块的扩展</div><div class="line">        [ ] python-decorator                  //实现装饰器更好地使用Python</div><div class="line">        [ ] python-dialog                     //UNIX对话框程序和大多数兼容程序的Python接口</div><div class="line">        [ ] python-dicttoxml                  //将Python字典或其它本机数据类型转换为有效的XML字符串</div><div class="line">        [ ] python-django                     //一个高级Python Web框架</div><div class="line">        [ ] python-docopt                     //轻松创建漂亮的命令行界面</div><div class="line">        [ ] python-docutils                   //用于将文档处理为有用的格式，比如HTML、XML、LaTeX</div><div class="line">        [ ] python-dominate                   //用于使用DOM API创建和处理HTML文档</div><div class="line">        [ ] python-dpkt                       //快速、简单的数据包创建/解析，带有基本TCP/IP协议的定义</div><div class="line">        [ ] python-ecdsa                      //ECDSA加密签名库</div><div class="line">        [ ] python-engineio                   //Engine.IO服务器</div><div class="line">        [ ] python-enum                       //Python中强大的枚举类型</div><div class="line">        [ ] python-enum34                     //Python 3.4枚举反向移植到2.x</div><div class="line">        [ ] python-flask                      //Flask是基于Werkzeug，Jinja 2的Python微框架</div><div class="line">        [ ] python-flask-cors                 //Flask扩展添加了一个装饰器以支持CORS</div><div class="line">        [ ] python-flask-babel                //Flask-Babel是Flask的扩展</div><div class="line">        [ ] python-flask-jsonrpc              //支持Flask网站的基本JSON-RPC实现</div><div class="line">        [ ] python-flask-login                //Flask-Login提供Flask的用户会话管理</div><div class="line">        [ ] python-flup                       //提供适用于Python的WSGI模块集合</div><div class="line">        [ ] python-futures                    //从Python 3.2反向移植concurrent.futures包</div><div class="line">        [ ] python-gobject                    //GLib/GObject库的Python绑定</div><div class="line">        [ ] python-gunicorn                   //用于UNIX的Python WSGI HTTP服务器</div><div class="line">        [ ] python-h2                         //基于HTTP/2状态机的协议实现</div><div class="line">        [ ] python-hpack                      //Python HPACK标头压缩</div><div class="line">        [ ] python-html5lib                   //基于WHATWG HTML规范的HTML解析器</div><div class="line">        [ ] python-httplib2                   //一个全面的HTTP客户端库</div><div class="line">        [ ] python-humanize                   //将数据转化为对应方便人类阅读的库</div><div class="line">        [ ] python-hyperframe                 //适用于Python的HTTP/2框架层</div><div class="line">        [ ] python-hyperlink                  //Python功能齐全，准确的URL</div><div class="line">        [ ] python-ibmiotf                    //适用于IBM Watson IoT Platform的Python客户端</div><div class="line">        [ ] python-id3                        //通过界面读取和操作MP3文件的ID3信息标签</div><div class="line">        [ ] python-idna                       //指定的程序中国际化域名(IDNA)协议的库</div><div class="line">        [ ] python-incremental                //用于对Python项目进行版本控制的库</div><div class="line">        [ ] python-iniparse                   //适用于Python的INI解析器，与标准库的ConfigParser API兼容</div><div class="line">        [ ] python-iowait                     //与平台无关的模块，用于I / O完成事件</div><div class="line">        [ ] python-ipaddr                     //Python中的IPv4/IPv6操作库</div><div class="line">        [ ] python-ipaddress                  //适用于旧版Python的Python 3.3的IP地址</div><div class="line">        [ ] python-ipy                        //用于处理IPv4和IPv6地址和网络的类和工具</div><div class="line">        [ ] python-ipython                    //用于多种编程语言的交互式计算的命令外壳</div><div class="line">        [ ] python-ipython-genutils           //IPython残余实用程序</div><div class="line">        [ ] python-iso8601                    //解析ISO 8601日期的简单模块</div><div class="line">        [ ] python-itsdangerous               //可将数据传递到不受信任的环境并安全可靠地恢复数据</div><div class="line">        [ ] python-jaraco-classes             //Python类构造的程序函数</div><div class="line">        [ ] python-jinja2                     //用纯Python编写的模板引擎</div><div class="line">        [ ] python-jsonschema                 //适用于Python的JSON模式验证的实现</div><div class="line">        [ ] python-json-schema-validator      //JSON模式验证器</div><div class="line">        [ ] python-keyring                    //提供了一种从Python访问系统密钥环服务的简便方法</div><div class="line">        [ ] python-libconfig                  //Libconfig是用于处理结构化配置文件的简单库</div><div class="line">        [ ] python-lmdb                       //读写LMDB数据库，Lightning Memory-Mapped Database</div><div class="line">        [ ] python-logbook                    //Python的日志记录替代</div><div class="line">        [ ] python-lxml                       //支持HTML和XML的解析，支持XPath解析方式，而且解析效率非常高</div><div class="line">        [ ] python-m2r                        //Markdown到reStructuredText转换器</div><div class="line">        [ ] python-mad                        //MAD库是一个高质量的MPEG解码器</div><div class="line">        [ ] python-mako                       //mako模板，有比Jinja2更快的解析速度和更多的语法支持</div><div class="line">        [ ] python-markdown                   //Markdown的Python实现</div><div class="line">        [ ] python-markdown2                  //Markdown的快速，完整的Python实现</div><div class="line">        [ ] python-markupsafe                 //为Python实现XML/HTML/XHTML Markup安全字符串</div><div class="line">        [ ] python-mbstrdecoder               //多字节字符串解码器</div><div class="line">        [ ] python-meld3                      //HTML/XML模板系统</div><div class="line">        [ ] python-mistune                    //最快的Markdown解析器，具有渲染器功能</div><div class="line">        [ ] python-more-itertools             //除itertools之外，还有更多的可迭代操作例程</div><div class="line">        [ ] python-msgpack                    //用于读取和写入MessagePack数据</div><div class="line">        [ ] python-mutagen                    //处理音频元数据的Python模块</div><div class="line">        [ ] python-mwclient                   //MediaWiki API客户端</div><div class="line">        [ ] python-mwscrape                   //将呈现的文章从MediaWiki API下载到CouchDB</div><div class="line">        [ ] python-netaddr                    //用于Python的网络地址处理库</div><div class="line">        [ ] python-netifaces                  //从Python可移植地访问网络接口</div><div class="line">        [ ] python-nfc                        //用于近场通信的Python模块</div><div class="line">        [ ] python-numpy                      //使用Python进行科学计算的基本软件包</div><div class="line">        [ ] python-oauthlib                   //OAuth请求签名逻辑的通用、符合规范的全面实现</div><div class="line">        [ ] python-paho-mqtt                  //为客户端类提供了对MQTT v3.1和v3.1.1的支持</div><div class="line">        [ ] python-pam                        //Pluggable Authentication Module，可插拔认证模块</div><div class="line">        [ ] python-paramiko                   //SSH2协议库</div><div class="line">        [ ] python-pathlib2                   //面向对象的文件系统路径</div><div class="line">        [ ] python-pathpy                     //将路径对象实现为一实体，可调用路径对象上对文件操作</div><div class="line">        [ ] python-pathtools                  //文件系统通用程序</div><div class="line">        [ ] python-pathvalidate               //用于验证/清除字符串，如filename/variable-name</div><div class="line">        [ ] python-pexpect                    //允许脚本生成子应用程序并对其进行控制</div><div class="line">        [ ] python-pickleshare                //带有并发支持的微型“搁置式”数据库</div><div class="line">        [ ] python-pillow                     //一个很流行的图像处理库</div><div class="line">        [ ] python-portend                    //TCP端口监视实用程序</div><div class="line">        [ ] python-posix-ipc                  //访问POSIX进程间信号，共享内存和消息队列</div><div class="line">        [ ] python-priority                   //HTTP/2优先级树的Python实现</div><div class="line">        [ ] python-prompt-toolkit             //用于在Python中构建功能强大的交互式命令行的库</div><div class="line">        [ ] python-protobuf                   //Google协议缓冲区的Python实现</div><div class="line">        [ ] python-psutil                     //用于获取Python中正在运行的进程和系统利用率信息</div><div class="line">        [ ] python-psycopg2                   //用来操作postgreSQL数据库的第三方库</div><div class="line">        [ ] python-ptyprocess                 //用在伪终端(pty)中启动子流程，并与流程及其pty进行交互</div><div class="line">        [ ] python-pudb                       //一个全屏、基于控制台的Python调试器</div><div class="line">        [ ] python-pyasn                      //能够非常快速的IP地址查找</div><div class="line">        [ ] python-pyasn-modules              //基于ASN.1的协议模块的集合</div><div class="line">        [ ] python-pycli                      //用于在Python中制作简单、准确的命令行应用程序框架</div><div class="line">        [ ] python-pycparser                  //Python中的C解析器</div><div class="line">        [ ] python-pycrypto                   //PyCrypto是密码算法和协议的集合</div><div class="line">        [ ] python-pydal                      //数据库抽象层，使用指定的方式为数据库后端实时动态生成SQL</div><div class="line">        [ ] python-pyelftools                 //用于解析和分析ELF文件和DWARF调试信息</div><div class="line">        [ ] python-pyftpdlib                  //极其快速且可扩展的Python FTP服务器库</div><div class="line">        [ ] python-pygame                     //简化使用Python编写游戏等多媒体软件的过程</div><div class="line">        [ ] python-pygments                   //Pygments是用Python编写的语法高亮包</div><div class="line">        [ ] python-pyicu                      //包装ICU C ++ API的Python扩展</div><div class="line">        [ ] python-pyinotify                  //在Linux上使用inotify监视文件系统事件</div><div class="line">        [ ] python-pylibftdi                  //包含python语言绑定libftdi</div><div class="line">        [ ] python-pylru                      //least recently used(LRU)缓存的实现</div><div class="line">        [ ] python-pymysql                    //一个纯Python MySQL客户端库，它遵循DB-API 2.0</div><div class="line">        [ ] python-pynacl                     //Python绑定到网络和密码学(NaCl)库</div><div class="line">        [ ] python-pyopenssl                  //OpenSSL库相关的Python包装器模块</div><div class="line">        [ ] python-pyparsing                  //客户端代码使用提供的类库直接在Python代码中构造语法</div><div class="line">        [ ] python-pyparted                   //可以编写与磁盘分区表和文件系统交互的应用程序</div><div class="line">        [ ] python-pypcap                     //pypcap模块是C libpcap库的面向对象包装</div><div class="line">        [ ] python-pyqrcode                   //QR代码生成器，带有SVG，EPS，PNG和终端输出</div><div class="line">        [ ] python-pyqt5                      //Qt 5的Python绑定</div><div class="line">        [ ] python-pyratemp                   //用于执行html模板的Python库</div><div class="line">        [ ] python-pyro                       //一个Python库，表示PYthon远程对象</div><div class="line">        [ ] python-pyroute2                   //Python Netlink库-Linux网络/netns/无线/ipset配置</div><div class="line">        [ ] python-pysendfile                 //用于sendfile(2)系统调用的Python接口</div><div class="line">        [ ] python-pysmb                      //Python编写的实验性SMB/CIFS库</div><div class="line">        [ ] python-pysnmp                     //SNMP引擎实现</div><div class="line">        [ ] python-pysnmp-apps                //用于SNMP管理的命令行工具集合</div><div class="line">        [ ] python-pysnmp-mibs                //预编译和打包的IETF和IANA MIB，以简化与PySNMP库的使用</div><div class="line">        [ ] python-pysocks                    //Python SOCKS客户端模块</div><div class="line">        [ ] python-pytablereader              //用于从文件/URL加载具有各种数据格式的结构化表数据</div><div class="line">        [ ] python-pytablewriter              //用于以各种格式编写表：CSV、HTML、JSON、Excel等</div><div class="line">        [ ] python-pytrie                     //trie数据结构的纯Python实现</div><div class="line">        [ ] python-pytz                       //世界时区定义</div><div class="line">        [ ] python-pyudev                     //Python绑定到libudev(Linux的设备和硬件管理以及信息库)</div><div class="line">        [ ] python-pyusb                      //从Python访问通用串行总线(USB)</div><div class="line">        [ ] python-pyxb                       //为与XMLSchema定义的数据结构相对应的类生成Python代码</div><div class="line">        [ ] python-pyyaml                     //包含与libyaml API的绑定</div><div class="line">        [ ] python-pyzmq                      //用于zeromq的python语言绑定</div><div class="line">        [ ] python-raven                      //Raven是Sentry(https://getsentry.com)的客户端</div><div class="line">        [ ] python-remi                       //GUI库，将应用程序的界面转换为HTML，以在Web浏览器中呈现</div><div class="line">        [ ] python-requests                   //Apache2许可的HTTP库</div><div class="line">        [ ] python-requests-oauthlib          //OAuthlib身份验证对请求的支持</div><div class="line">        [ ] python-requests-toolbelt          //python-requests的高级用户工具</div><div class="line">        [ ] python-rpi-gpio                   //用于控制Raspberry Pi上的GPIO</div><div class="line">        [ ] python-rtslib-fb                  //用于配置LIO通用SCSI目标的基于对象的Python库</div><div class="line">        [ ] python-scandir                    //一个更好、更快的目录迭代器</div><div class="line">        [ ] python-schedule                   //使用简单、人性化的语法按预定的时间间隔定期运行Python函数</div><div class="line">        [ ] python-sdnotify                   //systemd服务通知协议(sd_notify)的纯Python实现</div><div class="line">        [ ] python-secretstorage              //Python与FreeDesktop.org Secret Service API的绑定</div><div class="line">        [ ] python-see                        //dir()的人性化替代</div><div class="line">        [ ] python-serial                     //用于访问串行端口的Python库</div><div class="line">        [ ] python-service-identity           //pyOpenSSL的服务身份验证</div><div class="line">        [ ] python-setproctitle               //用于自定义流程标题的Python模块</div><div class="line">        [ ] python-setuptools                 //下载、构建、安装、升级和卸载Python软件包</div><div class="line">        [ ] python-sh                         //Python子进程替换，可以像调用一个程序一样调用任何程序</div><div class="line">        [ ] python-shutilwhich                //Python 3.3的shutil.which函数的复制和粘贴反向移植</div><div class="line">        [ ] python-simplegeneric              //简单的通用函数(类似于Python自己的len()、pickle.dump()等)</div><div class="line">        [ ] python-simplejson                 //简单、快速、可扩展的JSON编码器/解码器</div><div class="line">        [ ] python-simplesqlite               //用于简化SQLite数据库操作：表创建，数据插入和获取数据等</div><div class="line">        [ ] python-singledispatch             //把整体方案拆分成，多个小的模块</div><div class="line">        [ ] python-six                        //提供了一些程序函数，用于消除Python2/3版本之间的差异</div><div class="line">        [ ] python-smbus-cffi                 //允许SMBus通过Linux主机上的I2C/dev接口进行访问</div><div class="line">        [ ] python-socketio                   //Socket.IO服务器</div><div class="line">        [ ] python-sortedcontainers           //Python排序容器类型：SortedList，SortedDict和SortedSet</div><div class="line">        [ ] python-spidev                     //用于通过spidev内核驱动程序从用户空间与SPI设备进行接口</div><div class="line">        [ ] python-systemd                    //用于本地访问systemd设备的Python模块</div><div class="line">        [ ] python-tabledata                  //用于表示pytablewriter/pytablereader/SimpleSQLite的表格数据</div><div class="line">        [ ] python-tempora                    //与日期和时间有关的对象和例程</div><div class="line">        [ ] python-typepy                     //在运行时用于变量类型检查器/验证器/转换器的Python库</div><div class="line">        [ ] python-thrift                     //Apache Thrift RPC系统的Python绑定</div><div class="line">        [ ] python-tomako                     //将Mako用作Tornado的模板引擎的最简单方法</div><div class="line">        [ ] python-toml                       //一个解析toml编写的包</div><div class="line">        [ ] python-tornado                    //一个Python Web框架和异步网络库</div><div class="line">        [ ] python-traitlets                  //用于Python应用程序的配置系统</div><div class="line">        [ ] python-treq                       //用于在使用Twisted时发出HTTP请求</div><div class="line">        [ ] python-twisted                    //一个用Python编写的事件驱动的网络引擎</div><div class="line">        [ ] python-txaio                      //asyncio/Twisted/Trollius之间的兼容性API</div><div class="line">        [ ] python-txtorcon                   //基于Twisted的Tor控制器客户端，具有状态跟踪和配置抽象</div><div class="line">        [ ] python-u-msgpack                  //轻量级MessagePack序列化器和反序列化器</div><div class="line">        [ ] python-ubjson                     //通用二进制JSON编码器/解码器</div><div class="line">        [ ] python-ujson                      //UltraJSON是用纯C语言编写的超快速JSON编码器/解码器</div><div class="line">        [ ] python-urllib3                    //具有线程安全连接池、文件发布支持、健全性等功能的Python HTTP库</div><div class="line">        [ ] python-urwid                      //Urwid是Python的控制台用户界面库</div><div class="line">        [ ] python-versiontools               //__version__中使用的普通元组的智能替换</div><div class="line">        [ ] python-watchdog                   //Python API和Shell程序，用于监视文件系统事件</div><div class="line">        [ ] python-wcwidth                    //可测量宽字符代码的终端列单元格的数量</div><div class="line">        [ ] python-web2py                     //全功能Web应用框架，用于开发快速、安全以及可移植Web应用</div><div class="line">        [ ] python-webpy                      //适用于Python的Web框架，功能强大而又简单</div><div class="line">        [ ] python-werkzeug                   //适用于Python的WSGI实用程序库</div><div class="line">        [ ] python-whoosh                     //一个快速的纯Python全文索引，搜索和拼写检查库</div><div class="line">        [ ] python-ws4py                      //实现了RFC 6455中定义的WebSocket协议</div><div class="line">        [ ] python-wsaccel                    //ws4py和AutobahnPython的加速器</div><div class="line">        [ ] python-xlib                       //Python X库旨在成为Python程序的全功能X客户端库</div><div class="line">        [ ] python-xlrd                       //供开发人员从Microsoft Excel(tm)电子表格文件中提取数据的库</div><div class="line">        [ ] python-xlsxwriter                 //用于创建Excel XLSX文件的Python模块</div><div class="line">        [ ] python-xlutils                    //用于同时需要xlrd和xlwt的Excel文件的实用程序</div><div class="line">        [ ] python-xlwt                       //创建与MS Excel 97/2000/XP/2003 XLS文件兼容的电子表格文件的库</div><div class="line">        [ ] python-xmltodict                  //xmltodict是另一个简易的库，它致力于将XML变得像JSON</div><div class="line">        [ ] python-zope-interface             //提供了面向对象编程语言中的接口(interface)实现</div><div class="line">[ ] ruby                                      //面向对象的脚本语言</div><div class="line">[ ] tcl                                       //Tool Command Language，一种简单的文本语言</div></pre></td></tr></table></figure><h3 id="2-6-11-Libraries（待完善）"><a href="#2-6-11-Libraries（待完善）" class="headerlink" title="2.6.11 Libraries（待完善）"></a>2.6.11 Libraries（待完善）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div><div class="line">579</div><div class="line">580</div><div class="line">581</div><div class="line">582</div><div class="line">583</div><div class="line">584</div><div class="line">585</div><div class="line">586</div><div class="line">587</div><div class="line">588</div><div class="line">589</div><div class="line">590</div><div class="line">591</div><div class="line">592</div><div class="line">593</div><div class="line">594</div><div class="line">595</div><div class="line">596</div><div class="line">597</div><div class="line">598</div><div class="line">599</div><div class="line">600</div><div class="line">601</div><div class="line">602</div><div class="line">603</div><div class="line">604</div><div class="line">605</div><div class="line">606</div><div class="line">607</div><div class="line">608</div><div class="line">609</div><div class="line">610</div><div class="line">611</div><div class="line">612</div><div class="line">613</div><div class="line">614</div><div class="line">615</div><div class="line">616</div><div class="line">617</div><div class="line">618</div><div class="line">619</div><div class="line">620</div><div class="line">621</div><div class="line">622</div><div class="line">623</div><div class="line">624</div><div class="line">625</div><div class="line">626</div><div class="line">627</div><div class="line">628</div><div class="line">629</div><div class="line">630</div><div class="line">631</div><div class="line">632</div><div class="line">633</div><div class="line">634</div><div class="line">635</div><div class="line">636</div><div class="line">637</div><div class="line">638</div><div class="line">639</div><div class="line">640</div><div class="line">641</div><div class="line">642</div><div class="line">643</div><div class="line">644</div><div class="line">645</div><div class="line">646</div><div class="line">647</div><div class="line">648</div><div class="line">649</div><div class="line">650</div></pre></td><td class="code"><pre><div class="line">Audio/Sound  ---&gt;                    //**音频&amp;声卡**</div><div class="line">     -*- alsa-lib  ---&gt;              //Advanced Linux Sound Architecture(ALSA)，提供音频和MIDI功能</div><div class="line">    [ ] aubio                        //一种用于从音频信号中提取属性信息的工具</div><div class="line">    [ ] audiofile                    //读写许多常见格式的音频文件</div><div class="line">    [ ] bcg729                       //ITU G729 Annex A/B语音编解码器的编码器和解码器的开源实现</div><div class="line">    [ ] celt051                      //CELT格式的超低延迟音频编解码器</div><div class="line">    [ ] fdk-aac                      //为数字音频实现MPEG高级音频编码(AAC)编码和解码方案的软件</div><div class="line">    [ ] libao                        //跨平台的音频库，允许程序在各种平台上使用简单的API输出音频</div><div class="line">    [ ] libasplib                    //Achim的信号处理库，用于数字信号处理</div><div class="line">    [ ] libbroadvoice                //16和32语音编解码器的库</div><div class="line">    [ ] libcdaudio                   //提供在播放音频CD时控制CD-ROM操作的功能</div><div class="line">    [ ] libcddb                      //用于访问CDDB服务器(freedb.org)上的数据</div><div class="line">    [ ] libcdio                      //GNU CD输入和控制库</div><div class="line">    [ ] libcdio-paranoia             //带有纠错功能的CD输入和控制库</div><div class="line">    [ ] libcodec2                    //低比特率语音编解码器(700到3200bit/s之间)</div><div class="line">    [ ] libcue                       //CUE工作表解析器库</div><div class="line">    [ ] libcuefile                   //Musepack的提示文件库</div><div class="line">    [ ] libebur128                   //用于实现响度标准化的EBU R 128标准</div><div class="line">    [ ] libg7221                     //ITU G.722.1和Annex C宽带语音编解码器的库</div><div class="line">    [ ] libgsm                       //GSM 06.10有损语音压缩的共享库</div><div class="line">    [ ] libid3tag                    //MAD项目中的ID3标签阅读库</div><div class="line">    [ ] libilbc                      //internet Low Bitrate Codec(iLBC)免费的语音编解码器</div><div class="line">    [ ] liblo                        //POSIX系统的开放声音控制协议的实现</div><div class="line">    [ ] libmad                       //高品质的MPEG音频解码器，适合没有浮点单元的系统</div><div class="line">    [ ] libmodplug                   //MOD音乐文件解码器</div><div class="line">    [ ] libmpd                       //用于访问Music Player守护程序的高级客户端库</div><div class="line">    [ ] libmpdclient                 //提供用于连接Music Player Daemon (MPD)的API</div><div class="line">    [ ] libreplaygain                //重播增益库</div><div class="line">    [ ] libsamplerate                //计算音频的响度，并根据ReplayGain标准建议dB调整</div><div class="line">    [ ] libsidplay2                  //能播放所有C64单声道和立体声文件格式</div><div class="line">    [ ] libsilk                      //一种音频压缩格式和音频编解码器</div><div class="line">    [ ] libsndfile                   //用于通过标准库接口读取和写入包含采样声音文件的C库</div><div class="line">    [ ] libsoundtouch                //用于更改音频流或音频文件的速度，音调和播放速率的音频处理库</div><div class="line">    [ ] libsoxr                      //用于快速，高质量的一维采样率转换</div><div class="line">    [ ] libvorbis                    //Vorbis开源音频解码器Ogg Vorbis的库</div><div class="line">    [ ] mp4v2                        //MP4v2库提供了读取，创建和修改mp4文件的功能</div><div class="line">    [ ] openal                       //提供在虚拟3D环境中播放音频的功能</div><div class="line">    [ ] opencore-amr                 //自适应多速率窄带和宽带(AMR-NB和AMR-WB)语音编解码器的实现库</div><div class="line">    [ ] opus                         //旨在通过Internet进行交互式语音和音频传输</div><div class="line">    [ ] opusfile                     //用于解码和基本处理所有Ogg Opus音频流</div><div class="line">    [ ] portaudio                    //一个免费的，跨平台的开源音频I/O库</div><div class="line">    [ ] sbc                          //音频编解码器，用于连接蓝牙高质量音频设备，例如耳机或扬声器</div><div class="line">    [ ] spandsp                      //许多用于电话的DSP功能的库</div><div class="line">    [ ] speex                        //Speex是一种开放源代码/免费软件，专为语音设计的音频压缩格式</div><div class="line">    [ ] speexdsp                     //Speex的DSP库</div><div class="line">    [ ] taglib                       //一个用于读取和编辑几种流行音频格式的元数据的库</div><div class="line">    [ ] tinyalsa                     //一个可与Linux内核中的ALSA接口交互的库</div><div class="line">    [ ] tremor (fixed point vorbis decoder) //Tremor是Ogg Vorbis解码器的定点实现。</div><div class="line">    [ ] vo-aacenc                    //包含Advanced Audio Coding(AAC)音频编解码器的编码器实现</div><div class="line">    [ ] webrtc-audio-processing      //基于Google的WebRTC实现的AudioProcessing库</div><div class="line">Compression and decompression  ---&gt;  //**压缩和解压缩**</div><div class="line">    [ ] libarchive                   //用于读取和写入各种流存档格式</div><div class="line">    [ ] libsquish                    //使用DXT标准(也称为S3TC)压缩图像</div><div class="line">    [ ] libzip                       //用于读取，创建和修改zip存档</div><div class="line">    -*- lzo                          //用ANSI C编写的可移植无损数据压缩库</div><div class="line">    [ ] minizip                      //用于解压zip文件</div><div class="line">    [ ] snappy                       //一个高速、兼容性强的压缩/解压缩库</div><div class="line">    [ ] szip                         //Szip是Extended-Rice无损压缩算法的实现</div><div class="line">    -*- zlib support                 //选择所需的Zlib库提供程序</div><div class="line">          zlib variant (zlib)  ---&gt;  //zlib:标准(解压缩)库 | zlib-ng:zlib的改进版</div><div class="line">Crypto  ---&gt;                         //**加密**</div><div class="line">    [ ] beecrypt                     //一个通用的加密库</div><div class="line">    [ ] botan                        //C ++的加密库</div><div class="line">    [ ] CA Certificates              //包括CA证书的PEM文件，以允许基于SSL的程序检查SSL连接的真实性</div><div class="line">    [ ] cryptodev                    //选择所需的cryptodev实现</div><div class="line">    [ ] gcr                          //用于加密UI和访问PKCS＃11模块的库</div><div class="line">    [ ] gnutls                       //一个安全的通信库，用于实现SSL和TLS协议及其周围的技术</div><div class="line">    [ ] libassuan                    //实现Assuan协议，用于大多数较新的GnuPG组件之间的IPC</div><div class="line">    [ ] libgcrypt                    //LibGCrypt是GNU的基本密码库</div><div class="line">    [ ] libgpg-error                 //一个小型库，包含大多数GnuPG相关软件共享的错误代码和描述</div><div class="line">    [ ] libgpgme                     //GnuPG Made Easy(GPGME)是一个库，旨在简化应用对GnuPG的访问</div><div class="line">    [ ] libkcapi                     //Linux内核Crypto API用户空间接口库</div><div class="line">    [ ] libksba                      //CMS和X.509库</div><div class="line">    [ ] libmcrypt                    //一个提供统一接口以访问多种加密算法的库</div><div class="line">    [ ] libmhash                     //为哈希算法提供统一的接口的免费库</div><div class="line">    [ ] libnss                       //Network Security Services(NSS)，用于安全的客户端和服务器应用开发</div><div class="line">    [ ] libscrypt                    //一个实现安全密码哈希功能“scrypt”的库</div><div class="line">    [ ] libsecret                    //用于存储和检索密码和其他机密的库</div><div class="line">    [ ] libsha1                      //一个提供SHA1实现的微型库</div><div class="line">    [ ] libsodium                    //一个现代且易于使用的加密库</div><div class="line">    [ ] libssh                       //在客户端和服务器端实现SSHv2和SSHv1协议</div><div class="line">    [ ] libssh2                      //实现Internet草案定义的SSH2协议的客户端C库</div><div class="line">    [ ] libtomcrypt                  //一个相当全面的模块化便携式密码工具</div><div class="line">    [ ] libuecc                      //很小的椭圆曲线密码库</div><div class="line">    [ ] mbedtls                      //提供在(嵌入式)产品中包含加密和SSL/TLS功能</div><div class="line">    [ ] nettle                       //一个低级别的密码库</div><div class="line">    -*- openssl support              //选择所需的SSL库提供程序</div><div class="line">          ssl library (openssl)  ---&gt;//选择OpenSSL或LibreSSL</div><div class="line">            openssl                  //实现安全套接字层(SSL v2/v3)和传输安全性(TLS v1)以及功能全面的通用加密库</div><div class="line">    [ ]       openssl binary         //将openssl二进制文件和关联的帮助程序脚本安装到目标文件系统</div><div class="line">    [ ]       openssl additional engines //安装其他加密引擎库</div><div class="line">    [ ] rhash                        //用于计算各种哈希和，例如CRC32，MD4，MD5，SHA1，SHA256，SHA512等</div><div class="line">    [ ] tinydtls                     //用于数据报传输层安全性(DTLS)的库，涵盖客户端和服务器状态机</div><div class="line">    [ ] tpm2-tss                     //Trusted Computing Group&apos;s(TCG)和TPM2 Software Stack(TSS)的OSS实现</div><div class="line">    [ ] trousers                     //TCG Software Stack(TSS)，用于符合TPM规范1.2版的受信任平台模块</div><div class="line">    [ ] ustream-ssl                  //ustream SSL包装器</div><div class="line">    [ ] wolfssl                      //一种轻量级，可移植，基于C语言的SSL/TLS库</div><div class="line">Database  ---&gt;                       //**数据库**</div><div class="line">    [ ] berkeleydb                   //伯克利数据库，一个非常常见的数据库应用程序库</div><div class="line">    [ ] cppdb                        //一个SQL连接库，旨在提供与平台和数据库无关的连接API，类似于JDBC，ODBC</div><div class="line">    [ ] gdbm                         //一组使用可扩展哈希的数据库例程</div><div class="line">    [ ] hiredis                      //一个轻量级的访问redis数据库的c客户端</div><div class="line">    [ ] kompexsqlite                 //SQLite的开源C++包装器库</div><div class="line">    [ ] leveldb                      //Google编写的快速键值存储库，提供了从字符串键到字符串值的有序映射</div><div class="line">    [ ] libgit2                      //是Git核心方法的可移植的纯C实现，用于将Git功能构建到应用程序中</div><div class="line">    [ ] mongodb                      //一个跨平台的面向文档的数据库(NoSQL)</div><div class="line">    -*- mysql support                //选择所需的mysql提供程序</div><div class="line">              mysql variant (oracle mysql)  ---&gt; //选择oracle mysql服务器或mariadb服务器</div><div class="line">        [ ]   oracle mysql server    //在目标服务器上安装MySQL服务器</div><div class="line">    [ ] postgresql                   //一个功能强大的开源对象关系数据库系统</div><div class="line">    [ ] redis                        //一个开源的高级键值存储，也被称为数据结构服务器</div><div class="line">        *** sqlcipher conflicts with sqlite *** //***sqlcipher与sqlite冲突***</div><div class="line">    -*- sqlite                       //SQLite是一个小型C库，实现了独立的，可嵌入的，零配置的SQL数据库引擎</div><div class="line">    [ ]   Additional query optimizations (stat3)  //向ANALYZE命令和查询计划程序添加其它逻辑</div><div class="line">    [ ]   Enable convenient access to meta-data about tables and queries //启用其他API来访问有关表和查询的元数据</div><div class="line">    [ ]   Enable version 3 of the full-text search engine  //全文搜索引擎v3添加到构建中</div><div class="line">    [ ]   Enable the JSON extensions for SQLite  //SON扩展添加到构建中</div><div class="line">    [ ]   Enable sqlite3_unlock_notify() interface  //启用sqlite3_unlock_notify()接口及其附带的功能</div><div class="line">    [ ]   Set the secure_delete pragma on by default  //更改secure_delete编译指示的默认设置</div><div class="line">    [ ]   Disable fsync              //关闭fsync()强制数据库立即存储，牺牲掉电以提高性能</div><div class="line">    [ ] unixodbc                     //unixODBC Project的目标是开发和推广unixODBC，使其成为非Windows平台的ODBC标准</div><div class="line">Filesystem  ---&gt;                     //**文件系统**</div><div class="line">    [ ] gamin                        //文件变更监视器</div><div class="line">    -*- libconfig                    //用于处理结构化配置文件的简单库</div><div class="line">    -*- libconfuse                   //用C编写的配置文件解析器库</div><div class="line">    -*- libfuse                      //FUSE (Filesystem in UserSpacE)    </div><div class="line">    [ ] liblockfile                  //NFS安全锁定库</div><div class="line">    [ ] libnfs                       //NFS用户空间实现</div><div class="line">    [ ] libsysfs                     //一组基于sysfs的实用程序</div><div class="line">    [ ] lockdev                      //用于锁定设备的库</div><div class="line">    [ ] physfs                       //PhysicsFS，便携、灵活的文件I/O抽象</div><div class="line">Graphics  ---&gt;                       //**图形**</div><div class="line">    [ ] assimp                       //Open Asset Import Library(assimp)导入各种3D格式以统一,作为通用的3D模型转换器</div><div class="line">    [ ] at-spi2-atk                  //包含将ATK桥接搭配At-spi2 Dbus服务的库</div><div class="line">    [ ] at-spi2-core                 //是GNOME辅助功能项目的一部分</div><div class="line">    [ ] atk                          //提供了一套由其他工具集和应用程序实现的辅助功能接口</div><div class="line">    [ ] atkmm                        //ATK的C++绑定</div><div class="line">    [ ] bullet                       //碰撞检测和刚体动力学库</div><div class="line">    [ ] cairo                        //一个2D图形库与多输出设备的支持</div><div class="line">    [ ] cairomm                      //cairo的C++绑定</div><div class="line">    [ ] chipmunk                     //一个简单、轻便、快速、便携的2D刚体物理C语言编写的库</div><div class="line">    [ ] exiv2                        //一个C++库和命令行程序来管理、读写图像(Exif，IPTC和XMP)的元数据</div><div class="line">    [ ] exempi                       //XMP(Extensible Metadata Platform)可扩展元数据平台的实现</div><div class="line">    [ ] fontconfig                   //配置和定制字体访问的库</div><div class="line">    [ ] freetype                     //一个自由、高品质和便携的字体引擎。</div><div class="line">    [*] gd  ---&gt;                     //一个图形库，允许代码快速绘制直线、圆弧、文字、剪裁图片，结果将保存为PNG文件</div><div class="line">    [ ] gdk-pixbuf                   //图像加载器和定标器</div><div class="line">    -*- giflib                       //一个库，用于读取和写入GIF图像</div><div class="line">    [ ] granite                      //个扩展GTK+提供了一些有用的小工具和类便于应用开发</div><div class="line">    [ ] graphite2                    //提供复杂的书写系统的跨平台的渲染</div><div class="line">    [ ] gtkmm3                       //GTK 3的C++绑定</div><div class="line">    [ ] harfbuzz                     //一个OpenType字体文本整形引擎</div><div class="line">    [ ] ijs                          //用于实现光栅的页面图像的传输的协议的库</div><div class="line">    [ ] imlib2                       //提供程序加载，保存并以各种格式的图像</div><div class="line">    [ ] irrlicht                     //一个开源的高性能实时3D图形引擎</div><div class="line">    [ ] jasper                       //JPEG-2000解码器</div><div class="line">    -*- jpeg support                 //选择所需的JPEG库类型</div><div class="line">        jpeg variant (jpeg-turbo)  ---&gt; //JPEG变种(jpeg或jpeg-turbo)</div><div class="line">    [ ] kms++                        //一个C++11库内核模式设置。此外，还包括简单的测试工具KMS</div><div class="line">    [ ] lcms2                        //Little Color Management Software(CMS)一个色彩管理引擎，特别注重精度和性能</div><div class="line">    [ ] lensfun                      //纠正一些文物和用于存储镜头配置文件数据库的库</div><div class="line">    [ ] leptonica                    //图像处理和图像分析库</div><div class="line">    [ ] libart                       //高性能的2D图形库</div><div class="line">    [ ] libdmtx                      //读取和写入的现代ECC200各种数据矩阵条码</div><div class="line">    -*- libdrm  ---&gt;                 //Direct Rendering Manager(直接渲染管理)</div><div class="line">        -*-   radeon                 //安装AMD/ATI显卡驱动</div><div class="line">        [ ]   amdgpu                 //安装AMD GPU驱动程序</div><div class="line">        -*-   nouveau                //安装NVIDIA显卡驱动程序</div><div class="line">        [ ]   omap (experimental)    //安装TI OMAP驱动程序的API(实验用)</div><div class="line">        -*-   etnaviv (experimental) //安装Etnaviv/Vivante驱动程序的API(实验用) </div><div class="line">        [ ]   exynos (experimental)  //安装Samsung Exynos驱动程序的API(实验用) </div><div class="line">        [ ]   freedreno              //安装Qualcomm Snapdragon驱动程序</div><div class="line">        [ ]   tegra (experimental)   //安装NVIDIA Tegra驱动程序的API(实验用)</div><div class="line">        -*-   vc4                    //安装VC4(Raspberry Pi)驱动程序</div><div class="line">        [ ]   Install test programs  //安装libdrm测试程序</div><div class="line">    [ ] libepoxy                     //处理的OpenGL函数指针管理的库</div><div class="line">    [ ] libexif                      //允许解析EXIF文件，并从这些标签读取数据。</div><div class="line">    [ ] libfm                        //一个基于glib/gio的库，提供一些文件管理程序和gtk+/glib中缺少的相关小部件</div><div class="line">    [ ] libfm-extra                  //libfm扩展包包括一个库和通过菜单缓存获取所需的其他文件</div><div class="line">    [ ] libfreeglut                  //一个替代OpenGL的实用工具包(GLUT)库</div><div class="line">    [ ] libfreeimage                 //支持流行的图形图像格式(PNG、BMP、JPEG、TIFF)的开源库</div><div class="line">    [ ] libgeotiff                   //一个开源库读、写GeoTIFF的信息标签</div><div class="line">    [ ] libglew                      //OpenGL Extension Wrangler Library(GLEW)一个跨平台的C/C ++扩展加载库 </div><div class="line">    [ ] libglfw                      //OpenGL的上下文创建窗口和接收输入事件的一个开源多平台库</div><div class="line">    [ ] libglu                       //Mesa OpenGL实用库</div><div class="line">    [ ] libgta                       //一种便携式库，实现了Generic Tagged Array(GTA)通用标记阵列的文件格式</div><div class="line">    [ ] libgtk3                      //GTK+3的图形用户界面库</div><div class="line">    [ ] libmediaart                  //负责管理、提取和处理媒体缓存</div><div class="line">    [ ] libmng                       //参考库读取、显示、撰写和检查多图像网络图形</div><div class="line">    -*- libpng                       //处理(Portable Network Graphics)PNG可移植网络图形的库</div><div class="line">    [ ] libqrencode                  //用于在QR码符号数据进行编码一个C库</div><div class="line">    [ ] libraw                       //一个原始图像处理库</div><div class="line">    [ ] librsvg                      //Scalable  Vector Graphics(SVG)可伸缩矢量图形的渲染库</div><div class="line">    [ ] libsoil                      //用于上传纹理到OpenGL的一个微小的C库</div><div class="line">    [ ] libsvg                       //文件或缓冲区的SVG内容解析器，没有做任何渲染，而是提供基于函数的接口</div><div class="line">    [ ] libsvg-cairo                 //提供呈现来自文件或缓冲区SVG内容的功能</div><div class="line">    [ ] libsvgtiny                   //SVG的微型实现</div><div class="line">    [ ] libva                        //Video Acceleration(VA)视频加速API</div><div class="line">    [ ] libvips                      //2D图像处理库</div><div class="line">    [ ] menu-cache                   //小型库用于应用程序菜单集成</div><div class="line">    [ ] opencv-2.4  ----             //Open Source Computer Vision(OpenCV)一种用于实时计算机视觉编程的库</div><div class="line">    [*] opencv3  ---&gt;                //OpenCV开源计算机视觉</div><div class="line">                  *** OpenCV modules ***    //***OpenCV模块***</div><div class="line">        [ ]   calib3d                //opencv_calib3d(相机校准和3D重建)模块</div><div class="line">        [ ]   features2d             //opencv_features2d(2D特征框架)模块 </div><div class="line">        [ ]   flann                  //opencv_flann(聚类和多维空间搜索)模块</div><div class="line">        [ ]   highgui                //opencv_highgui(高级GUI和媒体I/O)模块</div><div class="line">        [ ]   imgcodecs              //opencv_imgcodecs(图像编解码器)模块</div><div class="line">        [ ]   imgproc                //opencv_imgproc(图像处理)模块</div><div class="line">        [ ]   ml                     //opencv_ml(机器学习)模块</div><div class="line">        [ ]   objdetect              //opencv_objdetect(对象检测)模块</div><div class="line">        [ ]   photo                  //opencv_photo(计算摄影)模块</div><div class="line">        [ ]   shape                  //opencv_shape(形状描述和匹配)模块</div><div class="line">        [ ]   stitching              //opencv_stitching(图像拼接)模块</div><div class="line">        [ ]   superres               //opencv_superres(超大分辨率)模块</div><div class="line">        [ ]   ts                     //opencv_ts(测试)模块</div><div class="line">        [ ]   videoio                //opencv_videoio(媒体I/O)模块</div><div class="line">        [ ]   video                  //pencv_video(视频分析)模块</div><div class="line">        [ ]   videostab              //opencv_videostab(视频稳定)模块</div><div class="line">              *** Test sets ***      //***测试设置***</div><div class="line">        [ ]   build tests            //构建测试</div><div class="line">        [ ]   build performance tests//构建性能测试 </div><div class="line">              *** 3rd party support ***      //第三方支持</div><div class="line">        [ ]   ffmpeg support         //ffmpeg支持</div><div class="line">              gstreamer support (none)  ---&gt; //gstreamer-0.10或1.x支持</div><div class="line">        [ ]   jpeg2000 support       //jpeg2000支持</div><div class="line">        [ ]   jpeg support           //jpeg支持</div><div class="line">        [ ]   png support            //png支持</div><div class="line">        [ ]   tiff support           //tiff支持</div><div class="line">        [ ]   v4l support            //linux v4l支持</div><div class="line">              *** Install options ***        //安装选项</div><div class="line">        [ ]   install extra data     //安装所使用的CV库和/或演示应用程序的各种数据</div><div class="line">    [ ] openjpeg                     //一个开源的JPEG2000编解码器</div><div class="line">    [ ] pango                        //用于高质量地渲染国际化的文字</div><div class="line">    [ ] pangomm                      //pango的C++绑定</div><div class="line">    [ ] pixman                       //Cairo像素管理</div><div class="line">    [ ] poppler                      //一个基于xpdf的-3.0代码库PDF渲染库</div><div class="line">    [ ] tiff  ----                   //处理Tag Image File Format(TIFF)标签图像文件格式图像</div><div class="line">    [ ] waffle                       //一个C库，用于在运行时选择OpenGL API和窗口系统</div><div class="line">    [ ] wayland                      //旨在作为X的更简单替代品，更易于开发和维护 </div><div class="line">    [ ] webkitgtk                    //用于处理视频内容的GStreamer GL元素</div><div class="line">    [ ] webp                         //一种新的图像格式，在网络上提供无损和有损压缩的图像</div><div class="line">    [ ] woff2                        //对于WOFF2字体文件格式参考实现，通常用于Web字体</div><div class="line">    [ ] zbar                         //QR和条码扫描仪</div><div class="line">    [ ] zxing-cpp                    //条形码图像处理的Java实现库，提供编译C++端口</div><div class="line">Hardware handling  ---&gt;              //**硬件处理**</div><div class="line">[ ] acsccid</div><div class="line">[ ] bcm2835</div><div class="line">[ ] c-periphery</div><div class="line">[ ] ccid</div><div class="line">[ ] dtc (libfdt)</div><div class="line">[ ] gnu-efi</div><div class="line">[ ] hackrf</div><div class="line">[ ] hidapi</div><div class="line">[ ] lcdapi</div><div class="line">[ ] let-me-create</div><div class="line">[ ] libaio</div><div class="line">[ ] libatasmart</div><div class="line">[ ] libcec</div><div class="line">[ ] libfreefare</div><div class="line">[ ] libftdi</div><div class="line">[ ] libftdi1</div><div class="line">[ ] libgphoto2</div><div class="line">*** libgpiod needs kernel headers &gt;= 4.8 ***</div><div class="line">[ ] libgudev</div><div class="line">[ ] libhid</div><div class="line">[ ] libiio</div><div class="line">[ ] libinput</div><div class="line">[ ] libiqrf</div><div class="line">[ ] libllcp</div><div class="line">[ ] libmbim</div><div class="line">[ ] libnfc</div><div class="line">[ ] libpciaccess</div><div class="line">[ ] libphidget</div><div class="line">[ ] libpri</div><div class="line">[ ] libqmi</div><div class="line">[ ] libraw1394</div><div class="line">[ ] librtlsdr</div><div class="line">[ ] libserial</div><div class="line">[ ] libserialport</div><div class="line">[ ] libsigrok</div><div class="line">[ ] libsigrokdecode</div><div class="line">[ ] libsoc</div><div class="line">[ ] libss7</div><div class="line">-*- libusb</div><div class="line">[ ]   build libusb examples</div><div class="line">[ ] libusb-compat</div><div class="line">[ ] libusbgx</div><div class="line">[ ] libv4l</div><div class="line">[ ] libxkbcommon</div><div class="line">[ ] mraa</div><div class="line">[ ] mtdev</div><div class="line">[ ] ne10</div><div class="line">[ ] neardal</div><div class="line">[ ] owfs</div><div class="line">[ ] pcsc-lite</div><div class="line">[ ] tslib</div><div class="line">[ ] urg</div><div class="line">[ ] wiringpi</div><div class="line">Javascript  ---&gt;                     //**Javascript**</div><div class="line">[ ] angularjs</div><div class="line">[ ] bootstrap</div><div class="line">[ ] duktape</div><div class="line">[ ] explorercanvas</div><div class="line">[ ] flot</div><div class="line">[ ] jQuery</div><div class="line">[ ] jsmin</div><div class="line">[ ] json-javascript</div><div class="line">JSON/XML  ---&gt;                       //**JSON/XML**</div><div class="line">[ ] benejson</div><div class="line">[ ] cJSON</div><div class="line">-*- expat</div><div class="line">[ ] ezxml</div><div class="line">[ ] jansson</div><div class="line">[ ] jose</div><div class="line">[ ] jsmn</div><div class="line">[ ] json-c</div><div class="line">[ ] json-for-modern-cpp</div><div class="line">-*- json-glib</div><div class="line">[ ] jsoncpp</div><div class="line">[ ] libbson</div><div class="line">[ ] libfastjson</div><div class="line">[ ] libjson</div><div class="line">[ ] roxml</div><div class="line">[ ] libucl</div><div class="line">-*- libxml2</div><div class="line">[ ] libxml++</div><div class="line">[ ] libxmlrpc</div><div class="line">[ ] libxslt</div><div class="line">[ ] libyaml</div><div class="line">[ ] Mini-XML</div><div class="line">[ ] pugixml</div><div class="line">[ ] rapidjson</div><div class="line">[ ] rapidxml</div><div class="line">[ ] raptor</div><div class="line">[ ] tinyxml</div><div class="line">[ ] tinyxml2</div><div class="line">[ ] valijson</div><div class="line">[ ] xerces-c++</div><div class="line">[ ] yajl</div><div class="line">[ ] yaml-cpp</div><div class="line">Logging  ---&gt;                        //**日志**</div><div class="line">[ ] eventlog</div><div class="line">[ ] glog</div><div class="line">[ ] liblog4c-localtime</div><div class="line">[ ] liblogging</div><div class="line">[ ] log4cplus</div><div class="line">[ ] log4cpp</div><div class="line">[ ] log4cxx</div><div class="line">[ ] opentracing-cpp</div><div class="line">[ ] zlog</div><div class="line">Multimedia  ---&gt;                     //**多媒体**</div><div class="line">[ ] bitstream</div><div class="line">[ ] kvazaar</div><div class="line">[ ] libaacs</div><div class="line">[ ] libamcodec</div><div class="line">[ ] libass</div><div class="line">[ ] libbdplus</div><div class="line">[ ] libbluray</div><div class="line">[ ] libdcadec</div><div class="line">[ ] libdvbcsa</div><div class="line">[ ] libdvbpsi</div><div class="line">[ ] libdvbsi</div><div class="line">[ ] libdvdcss</div><div class="line">[ ] libdvdnav</div><div class="line">[ ] libdvdread</div><div class="line">[ ] libebml</div><div class="line">[ ] libhdhomerun</div><div class="line">*** libimxvpuapi needs an i.MX platform with VPU support ***</div><div class="line">[ ] libmatroska</div><div class="line">[ ] libmms</div><div class="line">[ ] libmpeg2</div><div class="line">[ ] libogg</div><div class="line">[ ] libopenh264</div><div class="line">[ ] libopusenc</div><div class="line">[ ] libplayer</div><div class="line">[ ] libtheora</div><div class="line">[ ] libvpx</div><div class="line">[ ] libyuv</div><div class="line">[ ] live555</div><div class="line">[ ] mediastreamer</div><div class="line">[ ] x264</div><div class="line">[ ] x265</div><div class="line">Networking  ---&gt;                     //**网络**</div><div class="line">[ ] agent++</div><div class="line">[ ] alljoyn</div><div class="line">[ ] alljoyn-base</div><div class="line">[ ] alljoyn-tcl</div><div class="line">[ ] alljoyn-tcl-base</div><div class="line">[ ] azmq</div><div class="line">[ ] azure-iot-sdk-c</div><div class="line">[ ] batman-adv</div><div class="line">[ ] c-ares</div><div class="line">[ ] canfestival</div><div class="line">[ ] cgic</div><div class="line">[ ] cppzmq</div><div class="line">[ ] curlpp</div><div class="line">[ ] czmq</div><div class="line">[ ] daq</div><div class="line">[ ] davici</div><div class="line">[ ] filemq</div><div class="line">[ ] flickcurl</div><div class="line">[ ] freeradius-client</div><div class="line">[ ] geoip</div><div class="line">[ ] glib-networking</div><div class="line">[ ] grpc</div><div class="line">[ ] gssdp</div><div class="line">[ ] gupnp</div><div class="line">[ ] gupnp-av</div><div class="line">[ ] gupnp-dlna</div><div class="line">[ ] ibrcommon</div><div class="line">[ ] ibrdtn</div><div class="line">[ ] libcgi</div><div class="line">[ ] libcgicc</div><div class="line">[ ] libcoap</div><div class="line">[ ] libcpprestsdk</div><div class="line">-*- libcurl</div><div class="line">[ ]   curl binary</div><div class="line">[ ]   enable verbose strings</div><div class="line">  SSL/TLS library to use (OpenSSL)  ---&gt;</div><div class="line">[ ] libdnet</div><div class="line">[ ] libeXosip2</div><div class="line">[ ] libfcgi</div><div class="line">[ ] libgsasl</div><div class="line">[ ] libhttpparser</div><div class="line">[ ] libidn</div><div class="line">[ ] libidn2</div><div class="line">[ ] libiscsi</div><div class="line">[ ] libkrb5</div><div class="line">[ ] libldns</div><div class="line">[ ] libmaxminddb</div><div class="line">[ ] libmbus</div><div class="line">[ ] libmemcached</div><div class="line">[ ] libmicrohttpd</div><div class="line">[ ] libminiupnpc</div><div class="line">[ ] libmnl</div><div class="line">[ ] libmodbus</div><div class="line">[ ] libnatpmp</div><div class="line">[ ] libndp</div><div class="line">[ ] libnet</div><div class="line">[ ] libnetfilter_acct</div><div class="line">[ ] libnetfilter_conntrack</div><div class="line">[ ] libnetfilter_cthelper</div><div class="line">[ ] libnetfilter_cttimeout</div><div class="line">[ ] libnetfilter_log</div><div class="line">[ ] libnetfilter_queue</div><div class="line">[ ] libnfnetlink</div><div class="line">[ ] libnftnl</div><div class="line">[ ] libnice</div><div class="line">-*- libnl</div><div class="line">[ ]   install tools</div><div class="line">[ ] liboauth</div><div class="line">[ ] liboping</div><div class="line">[ ] libosip2</div><div class="line">[ ] libpagekite</div><div class="line">[ ] libpcap</div><div class="line">[ ] libpjsip</div><div class="line">[ ] librsync</div><div class="line">[ ] libshairplay</div><div class="line">[ ] libshout</div><div class="line">[ ] libsocketcan</div><div class="line">[ ] libsoup</div><div class="line">[ ] libsrtp</div><div class="line">[ ] libstrophe</div><div class="line">[ ] libtirpc</div><div class="line">[ ] libtorrent</div><div class="line">[ ] libtorrent-rasterbar</div><div class="line">[ ] libupnp</div><div class="line">[ ] libupnp18</div><div class="line">[ ] libupnpp</div><div class="line">[ ] liburiparser</div><div class="line">[ ] libvncserver</div><div class="line">[ ] libwebsock</div><div class="line">[ ] libwebsockets</div><div class="line">[ ] lksctp-tools</div><div class="line">[ ] mongoose</div><div class="line">[ ] nanomsg</div><div class="line">[ ] libneon</div><div class="line">[ ] nghttp2</div><div class="line">[ ] norm</div><div class="line">[ ] nss-myhostname</div><div class="line">[ ] nss-pam-ldapd</div><div class="line">[ ] omniorb</div><div class="line">[ ] openldap</div><div class="line">[ ] openmpi</div><div class="line">[ ] openpgm</div><div class="line">[ ] openzwave</div><div class="line">[ ] oRTP</div><div class="line">[ ] paho-mqtt-c</div><div class="line">[ ] qdecoder</div><div class="line">[ ] qpid-proton</div><div class="line">[ ] rabbitmq-c</div><div class="line">[ ] librtmp</div><div class="line">[ ] slirp</div><div class="line">[ ] snmp++</div><div class="line">[ ] sofia-sip</div><div class="line">[ ] thrift</div><div class="line">[ ] usbredir</div><div class="line">[ ] snmp++</div><div class="line">[ ] sofia-sip</div><div class="line">[ ] thrift</div><div class="line">[ ] usbredir</div><div class="line">[ ] wampcc</div><div class="line">[ ] websocketpp</div><div class="line">[ ] zeromq</div><div class="line">[ ] zmqpp</div><div class="line">[ ] zyre</div><div class="line">Other  ---&gt;                          //**其它**</div><div class="line">[ ] apr</div><div class="line">[ ] apr-util</div><div class="line">[ ] armadillo</div><div class="line">[ ] atf</div><div class="line">[ ] bctoolbox</div><div class="line">[ ] bdwgc</div><div class="line">[ ] boost</div><div class="line">[ ] capnproto</div><div class="line">[ ] clang</div><div class="line">[ ] cblas/clapack</div><div class="line">[ ] classpath</div><div class="line">[ ] cmocka</div><div class="line">[ ] cppcms</div><div class="line">[ ] cracklib</div><div class="line">[ ] dawgdic</div><div class="line">[ ] ding-libs</div><div class="line">[ ] eigen</div><div class="line">[ ] elfutils</div><div class="line">[ ] ell</div><div class="line">[ ] fftw</div><div class="line">[ ] flann</div><div class="line">[ ] flatbuffers</div><div class="line">[ ] flatcc</div><div class="line">[ ] gconf</div><div class="line">[ ] gflags</div><div class="line">[ ] glibmm</div><div class="line">[ ] glm</div><div class="line">[ ] gmp</div><div class="line">[ ] gsl</div><div class="line">[ ] gtest</div><div class="line">[ ] jemalloc</div><div class="line">[ ] lapack/blas</div><div class="line">[ ] libargtable2</div><div class="line">[ ] libatomic_ops</div><div class="line">[ ] libb64</div><div class="line">[ ] libbsd</div><div class="line">[ ] libcap</div><div class="line">[ ] libcap-ng</div><div class="line">[ ] libcgroup</div><div class="line">[ ] libclc</div><div class="line">[ ] libcofi</div><div class="line">[ ] libcorrect</div><div class="line">[ ] libcroco</div><div class="line">[ ] libcrossguid</div><div class="line">[ ] libcsv</div><div class="line">[ ] libdaemon</div><div class="line">[ ] libee</div><div class="line">[ ] libev</div><div class="line">[ ] libevdev</div><div class="line">[ ] libevent</div><div class="line">-*- libffi</div><div class="line">[ ] libgee</div><div class="line">-*- libglib2</div><div class="line">[ ] libglob</div><div class="line">-*- libical</div><div class="line">[ ] libite</div><div class="line">[ ] liblinear</div><div class="line">[ ] libloki</div><div class="line">[ ] libnpth</div><div class="line">[ ] libnspr</div><div class="line">[ ] libpfm4</div><div class="line">[ ] libplist</div><div class="line">-*- libpthread-stubs</div><div class="line">[ ] libpthsem</div><div class="line">[ ] libpwquality</div><div class="line">[ ] libseccomp</div><div class="line">[ ] libsigc++</div><div class="line">[ ] libsigsegv</div><div class="line">[ ] libspatialindex</div><div class="line">[ ] libtasn1</div><div class="line">[ ] libtommath</div><div class="line">[ ] libtpl</div><div class="line">[ ] libubox</div><div class="line">[ ] libuci</div><div class="line">[ ] libunwind</div><div class="line">[ ] liburcu</div><div class="line">[ ] libuv</div><div class="line">[ ] lightning</div><div class="line">[ ] linux-pam</div><div class="line">[ ] liquid-dsp</div><div class="line">-*- llvm</div><div class="line">[ ]   AMDGPU backend</div><div class="line">[ ] lttng-libust</div><div class="line">[ ] mpc</div><div class="line">[ ] mpdecimal</div><div class="line">[ ] mpfr</div><div class="line">[ ] mpir</div><div class="line">[ ] msgpack</div><div class="line">[ ] mtdev2tuio</div><div class="line">[ ] openblas</div><div class="line">[ ] orc</div><div class="line">[ ] p11-kit</div><div class="line">[ ] poco</div><div class="line">[ ] protobuf</div><div class="line">[ ] protobuf-c</div><div class="line">[ ] qhull</div><div class="line">[ ] qlibc</div><div class="line">[ ] riemann-c-client</div><div class="line">[ ] shapelib</div><div class="line">[ ] skalibs</div><div class="line">[ ] sphinxbase</div><div class="line">[ ] riemann-c-client</div><div class="line">[ ] shapelib</div><div class="line">[ ] skalibs</div><div class="line">[ ] sphinxbase</div><div class="line">[ ] tinycbor</div><div class="line">[ ] xapian</div><div class="line">Security  ---&gt;                       //**安全**</div><div class="line">[ ] libselinux</div><div class="line">[ ] libsemanage</div><div class="line">[ ] libsepol</div><div class="line">[ ] safeclib</div><div class="line">Text and terminal handling  ---&gt;     //**文字和终端处理**</div><div class="line">[ ] augeas</div><div class="line">[ ] enchant</div><div class="line">[ ] fmt</div><div class="line">[ ] icu</div><div class="line">[ ] libcli</div><div class="line">[ ] libedit</div><div class="line">[ ] libenca</div><div class="line">[ ] libestr</div><div class="line">[ ] libfribidi</div><div class="line">[ ] libunistring</div><div class="line">[ ] linenoise</div><div class="line">-*- ncurses</div><div class="line">[ ]   enable wide char support</div><div class="line">[ ]   ncurses programs</div><div class="line">()    additional terminfo files to install</div><div class="line">[ ] newt</div><div class="line">-*- pcre</div><div class="line">[ ]   16-bit pcre</div><div class="line">[ ]   32-bit pcre</div><div class="line">-*-   UTF-8/16/32 support in pcre</div><div class="line">-*-   Unicode properties support in pcre</div><div class="line">[*] pcre2</div><div class="line">[*]   16-bit pcre2</div><div class="line">[ ]   32-bit pcre2</div><div class="line">[ ] popt</div><div class="line">-*- readline</div><div class="line">[ ] slang</div><div class="line">[ ] tclap</div><div class="line">[ ] ustr</div></pre></td></tr></table></figure><h3 id="2-6-12-Mail"><a href="#2-6-12-Mail" class="headerlink" title="2.6.12 Mail"></a>2.6.12 Mail</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[ ] dovecot                          //开源的IMAP和POP3电子邮件服务器</div><div class="line">[ ] exim                             //消息传输代理(MTA)</div><div class="line">[ ] fetchmail                        //将邮件从POP和IMAP移至本地计算机的客户端后台驻留程序</div><div class="line">[ ] heirloom-mailx                   //可作终端邮件阅读器、邮件编写程序和SMTP客户端</div><div class="line">[ ] libesmtp                         //用于通过SMTP发送电子邮件的库</div><div class="line">[ ] msmtp                            //SMTP客户端</div><div class="line">[ ] mutt                             //一个基于文本的复杂邮件用户代理Mail User Agent(MUA)</div></pre></td></tr></table></figure><h3 id="2-6-13-Miscellaneous"><a href="#2-6-13-Miscellaneous" class="headerlink" title="2.6.13 Miscellaneous"></a>2.6.13 Miscellaneous</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div></pre></td><td class="code"><pre><div class="line">[ ] aespipe                          //AES加密和解密数据块</div><div class="line">[ ] bc                               //一种任意精度的数字处理语言，其语法与C相似</div><div class="line">[ ] clamav                           //用于检测木马、病毒、恶意软件和其他恶意威胁的防病毒引擎</div><div class="line">[*] collectd  ---&gt;                   //收集的</div><div class="line">    match plugins  ---&gt;              //匹配插件</div><div class="line">        [ ] empty counter            //匹配当前为零的计数器值</div><div class="line">        [ ] hashed                   //使用主机名的哈希函数匹配值</div><div class="line">        [ ] regex                    //根据正则表达式按其标识符匹配值</div><div class="line">        [ ] timediff                 //匹配带有无效时间戳记的值</div><div class="line">        [ ] value                    //根据其数据源的值选择值</div><div class="line">    misc plugins  ---&gt;               //杂项插件</div><div class="line">        [ ] aggregation              //允许使用一或多个合并函数将多个值聚合为单个值</div><div class="line">        [*] logfile                  //将日志消息写入文件或STDOUT/STDERR</div><div class="line">        [ ] logstash                 //写入格式为logstash JSON事件的日志消息</div><div class="line">        [ ] notify_email             //向配置的收件人发送带有通知消息的电子邮件</div><div class="line">        [ ] notify_nagios            //将通知发送到Nagios，作为被动检查结果</div><div class="line">        [*] syslog                   //登录到标准UNIX日志记录机制</div><div class="line">        [ ] threshold                //根据配置的阈值检查值，如果值超出范围，则创建通知</div><div class="line">    read plugins  ---&gt;               //阅读插件</div><div class="line">        [ ] apache                   //收集Apache的mod_status信息</div><div class="line">        [ ] apcups                   //从apcupsd收集UPS统计信息</div><div class="line">        [ ] battery                  //收集电池电量，消耗的电流和电压</div><div class="line">        [ ] bind                     //收集BIND DNS统计信息</div><div class="line">        [ ] ceph                     //来自Ceph分布式存储系统的统计信息</div><div class="line">        [ ] chrony                   //从实时NTP服务器收集NTP数据</div><div class="line">        [ ] cgroups                  //收集CGroups CPU使用率统计信息</div><div class="line">        [ ] conntrack                //收集Linux连接跟踪表中的条目数</div><div class="line">        [ ] contextswitch            //收集由操作系统完成的上下文切换的数量</div><div class="line">        [ ] cpu                      //收集CPU在各种状态下花费的时间</div><div class="line">        [ ] cpufreq                  //收集当前的CPU频率</div><div class="line">        [ ] cpusleep                 //测量深度睡眠模式下CPU花费的时间</div><div class="line">        [ ] curl                     //使用libcurl读取文件，然后根据配置解析它们</div><div class="line">        [ ] curl-json                //使用cURL库查询JSON数据，使用YAJL根据用户配置进行解析</div><div class="line">        [ ] curl-xml                 //使用libcurl读取文件并将其解析为XML</div><div class="line">        [ ] df                       //收集文件系统使用情况信息</div><div class="line">        [ ] disk                     //收集硬盘和分区的性能统计信息</div><div class="line">        [ ] dns                      //使用libpcap收集DNS流量的统计信息</div><div class="line">        [ ] drbd                     //收集单个drbd资源统计信息</div><div class="line">        [ ] entropy                  //收集系统上的可用熵</div><div class="line">        [ ] ethstat                  //收集单个drbd资源统计信息</div><div class="line">        [ ] exec                     //执行脚本并读回该程序打印到STDOUT的值</div><div class="line">        [ ] fhcount                  //文件处理统计</div><div class="line">        [ ] filecount                //计算目录及其所有子目录中的文件数</div><div class="line">        [ ] fscache                  //收集有关网络文件系统和基于文件系统的缓存结构信息</div><div class="line">        [ ] gps                      //报告GPS接收器看到的卫星数量和精度</div><div class="line">        [ ] hugepages                //报告Linux上已使用和空闲的大页面数</div><div class="line">        [ ] interface                //收集有关网络接口流量的信息</div><div class="line">        [ ] ipc                      //IPC计数器：使用的信号量，共享内存中分配的段数等</div><div class="line">        [ ] iptables                 //从iptables数据包过滤器收集统计信息。</div><div class="line">        [ ] ipvs                     //从LVS项目的传输层负载均衡器IP虚拟服务器(IPVS)中提取统计信息</div><div class="line">        [ ] irq                      //收集中断数量</div><div class="line">        [ ] load                     //收集系统负载</div><div class="line">        [ ] md                       //收集软件RAID设备信息</div><div class="line">        [ ] memcachec                //从memcache守护程序查询和解析数据</div><div class="line">        [ ] memcached                //从memcached守护程序收集统计信息</div><div class="line">        [ ] memory                   //收集物理内存利用率</div><div class="line">        [ ] modbus                   //通过Modbus/TCP从Modbus&quot;从机&quot;读取寄存器值</div><div class="line">        [ ] mysql                    //连接到MySQL数据库并发出&quot;显示状态&quot;命令</div><div class="line">        [ ] netlink                  //获取接口、qdiscs、类和过滤器的统计数据</div><div class="line">        [ ] nfs                      //收集有关网络文件系统使用情况的信息</div><div class="line">        [ ] nginx                    //收集nginx守护程序处理的请求数以及按状态收集的当前连接数</div><div class="line">        [ ] ntpd                     //查询NTP服务器并提取参数</div><div class="line">        [ ] olsrd                    //从olsrd读取有关网状网络的信息</div><div class="line">        [ ] openldap                 //从OpenLDAP的cn=Monitor子树中读取监视信息</div><div class="line">        [ ] openvpn                  //读取OpenVPN的状态文件以收集统计信息</div><div class="line">        [ ] ping                     //使用ICMP&quot;回显请求&quot;确保网络延迟</div><div class="line">        [ ] postgresql               //连接PostgreSQL数据库执行SQL语句，将返回的值转换为&quot;值列表&quot;</div><div class="line">        [ ] processes                //收集按状态分组的进程数</div><div class="line">        [ ] protocols                //收集有关网络协议的信息</div><div class="line">        [ ] sensors                  //从流明传感器收集数据</div><div class="line">        [ ] serial                   //收集串行接口上的流量</div><div class="line">        [ ] SMART                    //收集SMART统计信息，特别是负载周期计数，温度和坏扇区</div><div class="line">        [ ] StatsD                   //StatsD网络协议，允许客户端报告&quot;事件&quot;</div><div class="line">        [ ] snmp                     //从SNMP设备读取值</div><div class="line">        [ ] swap                     //收集当前写入磁盘的内存量</div><div class="line">        [ ] table                    //解析表状结构的纯文本文件</div><div class="line">        [ ] tail                     //尾巴日志文件，每一行都有一个或多个匹配项</div><div class="line">        [ ] tail csv                 //根据(尾部)CSV格式的文件，解析每一行并提交提取的值</div><div class="line">        [ ] tcpconns                 //计算与指定端口之间的TCP连接数</div><div class="line">        [ ] thermal                  //读取ACPI热区信息</div><div class="line">        [ ] uptime                   //跟踪系统正常运行时间</div><div class="line">        [ ] users                    //计算当前登录的用户数</div><div class="line">        [ ] vmem                     //收集有关虚拟内存子系统的信息</div><div class="line">        [ ] wireless                 //收集WLAN卡的信号质量，功率和噪声比</div><div class="line">        [ ] zookeeper                //从Zookeeper的MNTR命令读取数据</div><div class="line">    target plugins  ---&gt;             //目标插件</div><div class="line">        [ ] notification             //创建和发送通知</div><div class="line">        [ ] replace                  //使用正则表达式替换标识符的各个部分</div><div class="line">        [ ] scale                    //用任意数字缩放(乘)值</div><div class="line">        [ ] set                      //设置(覆盖)标识符的整个部分</div><div class="line">    write plugins  ---&gt;              //写插件</div><div class="line">        [ ] csv                      //将值以逗号分隔值格式写入纯文本文件</div><div class="line">        [ ] graphite                 //将收集的数据写入Carbon(Graphite&apos;s)存储API</div><div class="line">        [ ] mqtt                     //向MQTT代理发送指标和/或从MQTT代理接收指标</div><div class="line">        [ ] network                  //从其他收集的实例发送/接收值</div><div class="line">        [ ] rrdtool                  //将值写入RRD文件</div><div class="line">        [ ] riemann                  //将数据发送到流处理和监视系统Riemann</div><div class="line">        [ ] unixsock                 //打开UNIX域套接字并接受连接，可将命令发送到守护程序并接收信息</div><div class="line">        [ ] write_http               //使用HTTP POST和PUTVAL将收集的值发送到Web服务器</div><div class="line">        [ ] write_log                //将数据写入日志</div><div class="line">        [ ] write_prometheus         //使用嵌入式HTTP服务器以与Prometheus的collectd_exporter兼容</div><div class="line">        [ ] write_sensu              //通过Sensu客户端本地TCP套接字将数据发送到流处理和监视系统Sensu</div><div class="line">        [ ] write_tsdb               //发送数据OpenTSDB，可扩展的无主数据库，无共享状态时间序列数据库</div><div class="line">[ ] domoticz                         //一个家庭自动化系统，监视和配置各种设备，如：灯、开关、传感器等</div><div class="line">[ ] empty                            //在伪终端(PTY)会话下运行进程和应用程序</div><div class="line">[ ] gnuradio                         //提供信号处理模块来实现软件无线电</div><div class="line">[ ] Google font directory            //Google字体提供的字体文件</div><div class="line">[ ] gqrx                             //使用GNU Radio和Qt GUI工具箱实现的开源无线电(SDR)接收器</div><div class="line">[ ] gsettings-desktop-schemas        //包含GSettings模式的集合，用于由桌面的各个组件共享的设置</div><div class="line">[ ] haveged                          //一个易用、不可预测的随机数生成器，基于 HAVEGE 算法</div><div class="line">[ ] linux-syscall-support (lss)      //提供系统调用的头文件</div><div class="line">[ ] mcrypt                           //允许开发人员使用各种加密功能，而无需对其代码进行大幅度更改</div><div class="line">[ ] mobile-broadband-provider-info   //移动宽带提供商数据库</div><div class="line">[ ] proj                             //可将地理经度和纬度坐标转换为笛卡尔坐标(反之亦然)</div><div class="line">[ ] QEMU                             //一种通用的开源计算机仿真器和虚拟器</div><div class="line">[ ] qpdf                             //一个命令行程序，可对PDF文件进行结构化，内容保留的转换</div><div class="line">[ ] shared-mime-info                 //包含常见类型的核心数据库以及用于扩展它的update-mime-database命令</div><div class="line">[ ] taskd                            //任务管理同步守护程序</div><div class="line">[ ] util-macros                      //包含M4被所有的使用宏的Xorg包</div></pre></td></tr></table></figure><h3 id="2-6-14-Networking-applications-（待完善）"><a href="#2-6-14-Networking-applications-（待完善）" class="headerlink" title="2.6.14 Networking applications （待完善）"></a>2.6.14 Networking applications （待完善）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div></pre></td><td class="code"><pre><div class="line">[ ] aircrack-ng</div><div class="line">[ ] aoetools</div><div class="line">[ ] apache</div><div class="line">[ ] argus</div><div class="line">[ ] arp-scan</div><div class="line">[ ] arptables</div><div class="line">[ ] asterisk</div><div class="line">[ ] atftp</div><div class="line">[ ] autossh</div><div class="line">[ ] avahi</div><div class="line">[ ] axel</div><div class="line">[ ] babeld</div><div class="line">[ ] bandwidthd</div><div class="line">[ ] batctl</div><div class="line">[ ] bcusdk</div><div class="line">[ ] bind</div><div class="line">[ ] bird</div><div class="line">[ ] bluez-tools</div><div class="line">[ ] bluez-utils</div><div class="line">[*] bluez-utils 5.x</div><div class="line">[*]   build OBEX support</div><div class="line">[*]   build CLI client</div><div class="line">[*]     install deprecated tool</div><div class="line">[*]   build experimental obexd plugin</div><div class="line">[*]   build health plugin</div><div class="line">[*]   build midi profile</div><div class="line">[*]   build nfc plugin</div><div class="line"></div><div class="line">[*]   build health plugin</div><div class="line">[*]   build midi profile</div><div class="line">[*]   build nfc plugin</div><div class="line">[*]   build sap plugin</div><div class="line">[*]   build sixaxis plugin</div><div class="line">[ ]   build tests</div><div class="line">[*] bmon</div><div class="line">[ ] boa</div><div class="line">[ ] boinc</div><div class="line">[ ] brcm-patchram-plus</div><div class="line">[ ] bridge-utils</div><div class="line">[ ] bwm-ng</div><div class="line">[ ] c-icap</div><div class="line">[*] can-utils</div><div class="line">[ ] cannelloni</div><div class="line">[ ] chrony</div><div class="line">[ ] civetweb</div><div class="line">[ ] connman</div><div class="line">    *** connman-gtk needs libgtk3 and a glibc or uClibc toolchain w/ wchar, threads, resolver, d</div><div class="line">[ ] conntrack-tools</div><div class="line">[ ] corkscrew</div><div class="line">[ ] crda</div><div class="line">[ ] ctorrent</div><div class="line">[ ] cups</div><div class="line">[ ] dante</div><div class="line">[ ] darkhttpd</div><div class="line">[ ] dehydrated</div><div class="line">[ ] dhcp (ISC)</div><div class="line">[ ] dhcpcd</div><div class="line">[ ] dhcpdump</div><div class="line">[ ] dnsmasq</div><div class="line">[ ] drbd-utils</div><div class="line">[ ] dropbear</div><div class="line">[ ] ebtables</div><div class="line">    *** ejabberd needs erlang, toolchain w/ C++ ***</div><div class="line">[ ] ethtool</div><div class="line">[ ] faifa</div><div class="line">[ ] fastd</div><div class="line">[ ] fcgiwrap</div><div class="line">[ ] flannel</div><div class="line">[ ] fping</div><div class="line">[ ] freeswitch</div><div class="line">    *** gerbera needs a toolchain w/ C++, threads, gcc &gt;= 7 ***</div><div class="line">[ ] gesftpserver</div><div class="line">[ ] glorytun</div><div class="line">    *** gupnp-tools needs libgtk3 ***</div><div class="line">[ ] hans</div><div class="line">[ ] haproxy</div><div class="line">[ ] hiawatha</div><div class="line">[ ] hostapd</div><div class="line">[ ] httping</div><div class="line">[ ] i2pd</div><div class="line">[ ] ibrdtn-tools</div><div class="line">[ ] ibrdtnd</div><div class="line">[ ] ifenslave</div><div class="line">[ ] ifplugd</div><div class="line">[ ] iftop</div><div class="line">[ ] ifupdown</div><div class="line">[*] ifupdown scripts</div><div class="line">[ ] igd2-for-linux</div><div class="line">[ ] igh-ethercat</div><div class="line">[ ] igmpproxy</div><div class="line">[ ] inadyn</div><div class="line">[ ] iodine</div><div class="line">[ ] iperf</div><div class="line">[*] iperf3</div><div class="line">[ ] iproute2</div><div class="line">[ ] ipsec-tools</div><div class="line">[ ] ipset</div><div class="line">[ ] iptables</div><div class="line">[ ] iptraf-ng</div><div class="line">[ ] iputils</div><div class="line">[ ] irssi</div><div class="line">[*] iw</div><div class="line">[ ] iwd</div><div class="line">[ ] janus-gateway  ----</div><div class="line">[ ] keepalived</div><div class="line">[ ] kismet</div><div class="line">[ ] knock</div><div class="line">[ ] leafnode2</div><div class="line">[ ] lft</div><div class="line">[ ] lftp</div><div class="line">[*] lighttpd</div><div class="line">[*]   openssl support</div><div class="line">[*]   zlib support</div><div class="line">[*]   bzip2 support</div><div class="line">[*]   pcre support</div><div class="line">[*]   webdav support</div><div class="line">[ ] linknx</div><div class="line">[ ] links</div><div class="line">[ ] linphone</div><div class="line">[ ] linux-zigbee</div><div class="line">[ ] linuxptp</div><div class="line">[ ] lldpd</div><div class="line">[*] lrzsz</div><div class="line">[ ] lynx</div><div class="line">[ ] macchanger</div><div class="line">[ ] memcached</div><div class="line">[ ] mii-diag</div><div class="line">[ ] mini-snmpd</div><div class="line">[ ] minidlna</div><div class="line">[ ] minissdpd</div><div class="line">[*] mjpg-streamer</div><div class="line">[ ] modem-manager</div><div class="line">[ ] mongrel2</div><div class="line">[ ] monkey</div><div class="line">[ ] mosh</div><div class="line">[ ] mosquitto</div><div class="line">[ ] mrouted</div><div class="line">[ ] mtr</div><div class="line">[ ] nbd</div><div class="line">[ ] ncftp</div><div class="line">[ ] ndisc6 tools</div><div class="line">[ ] netatalk</div><div class="line">[ ] netcat</div><div class="line">[ ] netcat-openbsd</div><div class="line">[ ] netplug</div><div class="line">[ ] netsnmp</div><div class="line">[ ] netstat-nat</div><div class="line">[ ] net-tools</div><div class="line">[ ] network-manager</div><div class="line">[ ] nfacct</div><div class="line">[ ] nftables</div><div class="line">[ ] nginx  ----</div><div class="line">[ ] ngircd</div><div class="line">[ ] ngrep</div><div class="line">[ ] nload</div><div class="line">[ ] nmap</div><div class="line">[ ] noip</div><div class="line">[ ] ntp</div><div class="line">[ ] nuttcp</div><div class="line">[ ] odhcp6c</div><div class="line">[ ] odhcploc</div><div class="line">[ ] olsr</div><div class="line">[ ] open-lldp</div><div class="line">[ ] open-plc-utils</div><div class="line">[ ] openntpd</div><div class="line">[*] openobex</div><div class="line">[ ] openresolv</div><div class="line">[*] openssh</div><div class="line">[ ] openswan</div><div class="line">[ ] openvpn</div><div class="line">[ ] p910nd</div><div class="line">[ ] phidgetwebservice</div><div class="line">[ ] phytool</div><div class="line">[ ] pimd</div><div class="line">[ ] pixiewps</div><div class="line">[ ] pound</div><div class="line">[ ] pppd</div><div class="line">[ ] pptp-linux</div><div class="line">[ ] privoxy</div><div class="line">[ ] proftpd</div><div class="line">    *** prosody needs the lua interpreter, dynamic library ***</div><div class="line">[ ] proxychains-ng</div><div class="line">[ ] ptpd</div><div class="line">[ ] ptpd2</div><div class="line">[ ] pure-ftpd</div><div class="line">[ ] putty</div><div class="line">[ ] quagga</div><div class="line">    *** rabbitmq-server needs erlang ***</div><div class="line">[ ] radvd</div><div class="line">[ ] reaver</div><div class="line">[ ] rp-pppoe</div><div class="line">[ ] rpcbind</div><div class="line">[ ] rsh-redone</div><div class="line">[ ] rsync</div><div class="line">[ ] rtorrent</div><div class="line">[ ] rtptools</div><div class="line">[ ] rygel</div><div class="line">[ ] s6-dns</div><div class="line">[ ] s6-networking</div><div class="line">[ ] samba4</div><div class="line">[ ] sconeserver  ----</div><div class="line">[ ] ser2net</div><div class="line">[ ] shadowsocks-libev</div><div class="line">[ ] shairport-sync</div><div class="line">[ ] shellinabox</div><div class="line">[ ] smcroute</div><div class="line">[ ] sngrep</div><div class="line">[ ] snort</div><div class="line">[ ] socat</div><div class="line">[ ] socketcand</div><div class="line">[ ] softether</div><div class="line">[ ] spawn-fcgi</div><div class="line">[ ] spice protocol</div><div class="line">[ ] squid</div><div class="line">[ ] sshpass</div><div class="line">[ ] sslh</div><div class="line">[ ] strongswan  ----</div><div class="line">[ ] stunnel</div><div class="line">[ ] tcpdump</div><div class="line">[ ] tcping</div><div class="line">[ ] tcpreplay</div><div class="line">[ ] tftpd</div><div class="line">[ ] thttpd</div><div class="line">[ ] tinc</div><div class="line">[ ] tinyhttpd</div><div class="line">[ ] tor</div><div class="line">[ ] traceroute</div><div class="line">[ ] transmission</div><div class="line">[ ] tunctl</div><div class="line">[ ] tvheadend</div><div class="line">[ ] udpcast</div><div class="line">[ ] uhttpd</div><div class="line">[ ] ulogd</div><div class="line">[ ] ushare</div><div class="line">[ ] ussp-push</div><div class="line">[ ] vde2</div><div class="line">[ ] vdr</div><div class="line">[ ] vnstat</div><div class="line">[ ] vpnc</div><div class="line">[ ] vsftpd</div><div class="line">[ ] vtun</div><div class="line">[ ] wavemon</div><div class="line">[*] wget</div><div class="line">[ ] whois</div><div class="line">[ ] wireguard</div><div class="line">[ ] wireless-regdb</div><div class="line">[ ] wireless tools</div><div class="line">[ ] wireshark</div><div class="line">[*] wpa_supplicant</div><div class="line">[*]   Enable nl80211 support</div><div class="line">[*]   Enable AP mode</div><div class="line">[*]     Enable Wi-Fi Display</div><div class="line">[*]     Enable mesh networking</div><div class="line">[*]   Enable autoscan</div><div class="line">[*]   Enable EAP</div><div class="line">[*]   Enable HS20</div><div class="line">[*]   Enable syslog support</div><div class="line">[*]   Enable WPS</div><div class="line">[*]   Install wpa_cli binary</div><div class="line">[*]   Install wpa_client shared library</div><div class="line">[*]   Install wpa_passphrase binary</div><div class="line">[*]   Enable support for old DBus control interface</div><div class="line">[*]   Enable support for new DBus control interface</div><div class="line">[*]     Introspection support</div><div class="line">[ ] wpan-tools</div><div class="line">[ ] xinetd</div><div class="line">[ ] xl2tp</div><div class="line">[ ] xtables-addons</div><div class="line">[ ] znc</div></pre></td></tr></table></figure><h3 id="2-6-15-Package-managers"><a href="#2-6-15-Package-managers" class="headerlink" title="2.6.15 Package managers"></a>2.6.15 Package managers</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">    *** ------------------------------------------------------- ***</div><div class="line">    *** Please note:                                            ***</div><div class="line">    *** - Buildroot does *not* generate binary packages,        ***  //Buildroot不会生成二进制软件包</div><div class="line">    *** - Buildroot does *not* install any package database.    ***  //Buildroot不会安装任何软件包数据</div><div class="line">    *** *                                                       ***</div><div class="line">    *** It is up to you to provide those by yourself if you     ***  //如果想使用任何软件包管理器，需要自己提供</div><div class="line">    *** want to use any of those package managers.              ***</div><div class="line">    *** *                                                       ***</div><div class="line">    *** See the manual:                                         ***</div><div class="line">    *** http://buildroot.org/manual.html#faq-no-binary-packages ***</div><div class="line">    *** ------------------------------------------------------- ***</div><div class="line">[ ] opkg                                                             //Opkg是基于ipkg的轻量级软件包管理系统，类似于apt/dpkg</div><div class="line">[ ] rpm                                                              //RPM软件包管理器</div></pre></td></tr></table></figure><h3 id="2-6-16-Real-Time"><a href="#2-6-16-Real-Time" class="headerlink" title="2.6.16 Real-Time"></a>2.6.16 Real-Time</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[ ] Xenomai Userspace        //Linux实时时钟框架</div></pre></td></tr></table></figure><h3 id="2-6-17-Security"><a href="#2-6-17-Security" class="headerlink" title="2.6.17 Security"></a>2.6.17 Security</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[ ] checkpolicy              //SELinux(Security-Enhanced Linux)策略编译器</div><div class="line">[ ] paxtest                  //PaX回归测试套件</div><div class="line">[ ] policycoreutils          //SELinux策略程序的集合(包含load_policy、newrole、run_init、secon、semodule、sestatus等)</div><div class="line">[ ] refpolicy                //一个完整的SELinux策略，可以用作各种系统的系统策略，也可以用作创建其他策略的基础</div><div class="line">[ ] restorecond              //一个守护程序，它监视文件创建，然后为该文件设置默认的SELinux文件上下文</div><div class="line">[*] selinux-python  ---&gt;     //selinux的python模块</div><div class="line">    [ ]   audit2allow        //该模块安装两个程序:audit2allow和audit2why</div><div class="line">    [ ]   sepolgen           //一个Python模块，可让生成初始的SELinux策略模块模板</div><div class="line">[ ] semodule-utils           //包含用于处理selinux模块的工具:semodule_deps、semodule_expand、semodule_link等</div><div class="line">[ ] setools                  //SELinux策略分析软件包：apol、sediff-SELinux、sedta、seinfoflow-SELinux等</div></pre></td></tr></table></figure><h3 id="2-6-18-Shell-and-utilities"><a href="#2-6-18-Shell-and-utilities" class="headerlink" title="2.6.18 Shell and utilities"></a>2.6.18 Shell and utilities</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">    *** Shells ***              //**命令解析器**</div><div class="line">-*- bash                        //标准的GNU Bourne shell</div><div class="line">[ ] dash                        //非常小的/bin/sh的POSIX兼容shell</div><div class="line">[ ] mksh                        //MirBSD Korn Shell，一个紧凑、快速、可靠、安全、又不断扩展的shell</div><div class="line">[ ] zsh                         //bash、ksh和tcsh的许多有用功能已合并到zsh中，又增加了许多原始功能</div><div class="line">    *** Utilities ***           //**实用工具**</div><div class="line">[ ] at                          //在未来的某个时间点定期执行一次任务(一条/多条命令组合，或脚本)</div><div class="line">[*] bash completion             //添加bash完成基础结构</div><div class="line">[ ] ccrypt                      //用于加密和解密文件和流的程序</div><div class="line">[ ] dialog                      //从shell脚本显示对话框</div><div class="line">[ ] dtach                       //屏幕的分离的功能的工具，可以随意地连接到各会话上</div><div class="line">[ ] easy-rsa                    //RSA证书生成、管理工具</div><div class="line">[ ] file                        //通过扫描二进制数据中的已知模式来识别文件格式的程序</div><div class="line">[ ] gnupg                       //GNU Privacy Guard(GnuPG或GPG)，是包含数字签名和证书的加密工具</div><div class="line">[ ] gnupg2                      //gnupg的新版本</div><div class="line">[ ] inotify-tools               //用于监视文件系统事件并对其采取行动</div><div class="line">[ ] lockfile programs           //锁文件的程序</div><div class="line">[ ] logrotate                   //一个简单的轮转日志的程序</div><div class="line">[ ] logsurfer                   //用于实时监视系统日志并报告事件发生情况的程序</div><div class="line">[ ] pdmenu                      //用于Unix的全屏菜单系统</div><div class="line">[*] pinentry  ---&gt;              //简单的PIN或短语输入对话框的集合</div><div class="line">    -*-   pinentry-ncurses      //pinentry-ncurses工具</div><div class="line">    [ ]   pinentry-gtk2         //pinentry-gtk2工具</div><div class="line">    [ ]   pinentry-qt5          //pinentry-qt5工具</div><div class="line">[ ] ranger                      //支持VI快捷键的控制台文件管理器</div><div class="line">[ ] screen                      //一个终端切换的软件，可用于终端会话恢复</div><div class="line">[ ] sudo                        //旨在允许sysadmin向用户授予有限的root特权并记录root活动</div><div class="line">[ ] time                        //GNU时间程序</div><div class="line">[ ] tini                        //一个简单但有效的初始化二进制文件，可充当容器的PID 1</div><div class="line">[ ] tmux                        //一个终端多路复用软件，使单个终端可以访问和控制多个终端</div><div class="line">[ ] which                       //“which”命令程序</div><div class="line">[ ] xmlstarlet                  //命令行XML工具包</div><div class="line">[ ] xxhash                      //一种非常快速的哈希算法，运行速度受限RAM</div></pre></td></tr></table></figure><h3 id="2-6-19-System-tools"><a href="#2-6-19-System-tools" class="headerlink" title="2.6.19 System tools"></a>2.6.19 System tools</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div></pre></td><td class="code"><pre><div class="line">[ ] acl                        //POSIX访问控制列表，用于为文件和目录定义更细粒度的自由访问权限</div><div class="line">[ ] android-tools              //包含fastboot和adb实用程序，可使用这些协议与目标设备进行交互</div><div class="line">[ ] atop                       //用于Linux的ASCII全屏性能监视器</div><div class="line">-*- attr                       //操纵文件系统扩展属性的命令</div><div class="line">[ ] audit                      //用于存储和搜索Linux 2.6内核中的审计子系统生成的审计记录</div><div class="line">[ ] cgroupfs-mount             //cgroupfs的挂载和卸载脚本</div><div class="line">[ ] circus                     //运行并观看多个进程和套接字</div><div class="line">[ ] coreutils                  //所有基本的文件/文本/Shell工具</div><div class="line">[ ] cpuload                    //在一定时间内获得直观的CPU负载视图</div><div class="line">[ ] daemon                     //其他进程转换为守护程序</div><div class="line">[ ] dc3dd                      //GNU dd程序的补丁程序</div><div class="line">[ ] dcron                      //基于时间的作业调度程序，具有类似于anacron的功能</div><div class="line">[ ] ddrescue                   //一种数据恢复工具</div><div class="line">[ ] debianutils                //特定于Debian的其他程序：add-shell installkernel ischroot等</div><div class="line">[ ] docker-cli                 //一个平台，可作为轻量级容器构建，交付和运行应用程序</div><div class="line">[ ] docker-compose             //Docker的多容器编排</div><div class="line">[ ] docker-containerd          //控制runC的守护程序</div><div class="line">[ ] docker-engine              //docker引擎</div><div class="line">[ ] docker-proxy               //一个容器网络模型，提供一致的编程接口和应用程序所需的网络抽象</div><div class="line">[ ] efibootmgr                 //Linux用户空间应用程序，用于修改Intel可扩展固件接口(EFI)引导管理器</div><div class="line">[ ] efivar                     //设置EFI变量的工具和库</div><div class="line">[ ] emlog                      //一个Linux内核模块，可轻松访问进程的最新(且仅最新)输出</div><div class="line">[ ] ftop                       //可以监视所有打开的文件和文件系统的进度</div><div class="line">[ ] getent                     //用来察看系统的数据库中的相关记录，判定用户是否存在等</div><div class="line">[ ] htop                       //用于Linux的交互式文本模式进程查看器</div><div class="line">[ ] iotop                      //IBM Power RAID设备的系统程序</div><div class="line">[ ] iprutils                   //IBM Power RAID设备的系统实用程序</div><div class="line">[ ] irqbalance                 //一个守护程序，可帮助平衡由所有系统cpus的中断产生的cpu负载</div><div class="line">-*- keyutils                   //用于控制Linux内核中内置的密钥管理系统</div><div class="line">-*- kmod                       //处理内核模块</div><div class="line">[ ]   kmod utilities           //安装kmod模块程序:depmod、insmod、lsmod、modinfo、modprobe、rmmod</div><div class="line">[ ] kvmtool                    //用于托管KVM guest虚拟机的轻量级工具</div><div class="line">[ ] libostree                  //OSTree是用于基于Linux的操作系统的升级系统</div><div class="line">[ ] lxc                        //Linux Containers，一种基于容器的操作系统层级的虚拟化技术</div><div class="line">[ ] mender                     //用于嵌入式Linux设备的开源无线(OTA)软件更新程序</div><div class="line">[ ] monit                      //用于管理和监视UNIX系统上的进程，程序，文件，目录和文件系统</div><div class="line">[ ] ncdu                       //具有ncurses接口的磁盘使用情况分析器</div><div class="line">[ ] nut                        //Network UPS Tools(NUT)，为电力设备提供支持，例如不间断电源等</div><div class="line">[ ] pamtester                  //用于测试可插入身份验证模块(PAM)功能的微型程序</div><div class="line">[ ] polkit                     //用于定义和处理授权的工具包</div><div class="line">[ ] procps-ng                  //标准的信息程序和流程处理工具，如kill、ps、uptime、free、top等</div><div class="line">[ ] procrank_linux             //Android平台开发人员常用的工具，用于找出实际使用了多少内存</div><div class="line">[ ] psmisc                     //与/proc相关程序，如pstree，fuser，killall</div><div class="line">[ ] pwgen                      //GPL的小型密码生成器，它创建的密码可以很容易地被人记住</div><div class="line">[ ] quota                      //执行磁盘配额系统</div><div class="line">[ ] quotatool                  //为命令行操作文件系统配额</div><div class="line">[*] rauc                       //自动更新控制器，它支持通过网络(OTA)或从磁盘更新嵌入式Linux系统</div><div class="line">    [*]   network support      //此选项支持使用libcurl通过网络更新固件</div><div class="line">    [*]   JSON output support  //此选项启用对以JSON格式提供输出的支持</div><div class="line">[ ] rsyslog                    //功能强大且灵活的syslog实现</div><div class="line">[ ] runc                       //一个CLI工具，用于根据OCP规范生成和运行容器</div><div class="line">[ ] s6                         //用于daemontools和runit中的所有进程监视，和进程和守护程序的各种操作</div><div class="line">[ ] s6-linux-init              //一组用于在Linux内核上创建基于s6的初始化系统的简约工具</div><div class="line">[ ] s6-linux-utils             //一组特定于Linux的简约系统程序</div><div class="line">[ ] s6-portable-utils          //一组小型的通用Unix实用程序，通常执行常见的任务，例如cut和grep</div><div class="line">[ ] s6-rc                      //基于s6的系统的服务管理器</div><div class="line">[ ] scrub                      //以迭代方式在文件或磁盘设备上写入模式，从而使清除的数据更不易恢复</div><div class="line">[ ] scrypt                     //使用scrypt进行密钥派生的文件加密程序</div><div class="line">[ ] smack                      //Smack(Simplified Mandatory Access Control Kernel)强制访问控制内核</div><div class="line">[ ] start-stop-daemon          //用于控制系统级进程的创建和终止</div><div class="line">[ ] supervisor                 //一种允许其用户控制类UNIX操作系统上的多个进程的客户机/服务器系统</div><div class="line">[*] swupdate                   //一种可靠的方式来更新嵌入式系统上的软件</div><div class="line">[*] syslogd &amp; klogd            //系统日志守护程序syslogd和klogd</div><div class="line">[ ] syslog-ng                  //增强的日志守护程序，支持多种输入和输出方法</div><div class="line">-*- sysvinit                   //所有进程的父级/sbin/init的System V样式实现</div><div class="line">[ ] tar                        //tar打包和还原</div><div class="line">[ ] tpm-tools                  //用于管理和诊断TPM(Trusted Platform Module)的工具</div><div class="line">[ ] tpm2-abrmd                 //用于实现TCG的TPM2访问代理(TAB)和资源管理器(RM)的守护程序</div><div class="line">[ ] tpm2-tools                 //用于管理和诊断TPM2(Trusted Platform Module 2)的工具</div><div class="line">[ ] unscd                      //用于处理正在运行的程序的passwd，组和主机的查找，并为下次查询缓存结果</div><div class="line">-*- util-linux  ---&gt;           //各种有用/必要的linux库和实用程序</div><div class="line">    -*-   libblkid             //包含用于块设备识别和标记提取的例程</div><div class="line">    [*]   libfdisk             //包含操作分区表的例程</div><div class="line">    -*-   libmount             //包含用于块设备挂载和卸载的例程</div><div class="line">    [ ]   libsmartcols         //包含以表格形式进行屏幕输出的例程</div><div class="line">    -*-   libuuid              //含用于生成在本地系统之上可访问对象的唯一标识符的例程</div><div class="line">    [ ]   basic set            //安装基本的util-linux二进制文件</div><div class="line">    [ ]   agetty               //替代Linux Getty</div><div class="line">    [ ]   bfs                  //SCO bfs文件系统支持</div><div class="line">    [ ]   cal                  //显示日历或日历的一部分</div><div class="line">    [ ]   chfn/chsh            //更改登录shell，真实用户名和信息</div><div class="line">    [ ]   chmem                //设置在线或离线的特定大小或范围的内存</div><div class="line">    [ ]   cramfs utilities     //压缩ROM文件系统的实用程序(fsck.cramfs，mkfs.cramfs)</div><div class="line">    [ ]   eject                //弹出可移动媒体</div><div class="line">    [ ]   fallocate            //将空间预分配给文件</div><div class="line">    [ ]   fdformat             //低级格式化软盘</div><div class="line">    [ ]   fsck                 //检查并修复linux文件系统</div><div class="line">    [ ]   hwclock              //查询或设置硬件时钟(RTC)</div><div class="line">    [ ]   ipcrm                //删除某些IPC资源</div><div class="line">    [ ]   ipcs                 //显示有关IPC设施的信息</div><div class="line">    [ ]   kill                 //向进程发送信号</div><div class="line">    [ ]   last                 //显示最近登录用户的列表</div><div class="line">    [ ]   line                 //读一行</div><div class="line">    [ ]   logger               //在系统日志中输入消息</div><div class="line">    [ ]   login                //在系统上开始会话</div><div class="line">    [ ]   losetup              //设置和控制loop设备</div><div class="line">    [ ]   lslogins             //显示有关系统中已知用户的信息</div><div class="line">    [ ]   lsmem                //列出可用内存的范围及其在线状态</div><div class="line">    [ ]   mesg                 //控制对终端的写访问</div><div class="line">    [ ]   minix                //inix文件系统支持</div><div class="line">    [ ]   more                 //文件浏览过滤器，供crt查看</div><div class="line">    [ ]   mount/umount         //挂载/卸载文件系统</div><div class="line">    [ ]   mountpoint           //查看目录是否为挂载点</div><div class="line">    [ ]   newgrp               //登录新群组</div><div class="line">    [ ]   nologin              //拒绝登录</div><div class="line">    [ ]   nsenter              //输入另一个进程的名称空间</div><div class="line">    [ ]   pg                   //逐页浏览文本文件</div><div class="line">    [ ]   partition utilities  //分区实用程序(addpart，delpart，partx)</div><div class="line">    [ ]   pivot_root           //更改根文件系统</div><div class="line">    [ ]   raw                  //构建Linux原始字符设备</div><div class="line">    [ ]   rename               //重命名文件</div><div class="line">    [ ]   rfkill               //用于启用和禁用无线设备的工具</div><div class="line">    [ ]   runuser              //运行具有替代用户名和组ID的命令</div><div class="line">    [ ]   scheduling utilities //计划任务程序(chrt，ionice，taskset)</div><div class="line">    [ ]   setpriv              //使用不同的Linux特权设置运行程序</div><div class="line">    [ ]   setterm              //设置终端属性</div><div class="line">    [ ]   su                   //切换到其它用户</div><div class="line">    [ ]   sulogin              //单用户登录</div><div class="line">    [ ]   switch_root          //切换到另一个文件系统，将其作为根文件系统</div><div class="line">    [ ]   tunelp               //为lp设备设置各种参数</div><div class="line">    [ ]   ul                   //下划线</div><div class="line">    [ ]   unshare              //运行某些与父级不共享的名称空间的程序</div><div class="line">    [ ]   utmpdump             //以原始格式转储UTMP和WTMP文件</div><div class="line">    [ ]   uuidd                //UUID生成守护程序</div><div class="line">    [ ]   vipw                 //辑密码、组、影子密码或影子组文件</div><div class="line">    [ ]   wall                 //向每个人的终端发送消息</div><div class="line">    [ ]   wdctl                //显示硬件看门狗状态</div><div class="line">    [ ]   write                //向其他用户发送消息</div><div class="line">    [ ]   zramctl              //设置和控制zram设备</div><div class="line">[ ] xen                        //可构建Xen虚拟机管理程序和工具堆栈</div><div class="line">[*] xvisor  ---&gt;               //一个开放源代码的Type-1虚拟机管理程序</div><div class="line">        Xvisor configuration (Using an in-tree defconfig file)  ---&gt;</div><div class="line">    (generic-v7) Defconfig name             //要使用的Xvisor defconfig文件的名称</div><div class="line">    [ ]   Create U-Boot image of Xvisor     //创建可从Das U-Boot加载的Xvisor映像文件</div><div class="line">    [ ]   Build test device-tree blobs      //构建测试设备树blob</div></pre></td></tr></table></figure><h3 id="2-6-20-Text-editors-and-viewers"><a href="#2-6-20-Text-editors-and-viewers" class="headerlink" title="2.6.20 Text editors and viewers"></a>2.6.20 Text editors and viewers</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[ ] ed                           //面向行的文本编辑器，通常在脚本中使用，而不是直接调用</div><div class="line">[ ] joe                          //JOE是易于使用的，基于终端的全功能屏幕编辑器</div><div class="line">[ ] less                         //出色的文本文件查看器</div><div class="line">[ ] mc                           //GNU Midnight Commander是一个视觉文件管理器</div><div class="line">[ ] nano                         //一个不错的基于ncurses的编辑器</div><div class="line">[ ] uemacs                       //一个小的emacs</div><div class="line">[*] vim                          //VIM文本编辑器</div><div class="line">[*]   install runtime            //安装VIM runtime(语法突出显示+宏)，将大约11MB的数据添加到/usr/share/</div></pre></td></tr></table></figure><h2 id="2-7-Filesystem-images-文件系统"><a href="#2-7-Filesystem-images-文件系统" class="headerlink" title="2.7 Filesystem images(文件系统)"></a>2.7 Filesystem images(文件系统)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">Filesystem images  ---&gt;  </div><div class="line">    [ ] axfs root filesystem                                                //XFS格式根文件系统</div><div class="line">    [ ] btrfs root filesystem                                               //btrfs格式根文件系统</div><div class="line">    [ ] cloop root filesystem for the target device                         //clop方式压缩根文件系统</div><div class="line">    [ ] cpio the root filesystem (for use as an initial RAM filesystem)     //cpio方式压缩根文件系统(用作初始RAM文件系统)</div><div class="line">    [ ] cramfs root filesystem                                              //cramf格式根文件系统</div><div class="line">    [*] ext2/3/4 root filesystem                                            //ext2/3/4格式根文件系统</div><div class="line">          ext2/3/4 variant (ext4)  ---&gt;                                     //ext4格式根文件系统</div><div class="line">    ()    filesystem label                                                  //文件系统标签</div><div class="line">    (200M) exact size                                                       //根文件系统空间大小</div><div class="line">    (0)   exact number of inodes (leave at 0 for auto calculation)          //确切的inode数(从0开始自动计算)</div><div class="line">    (5)   reserved blocks percentage                                        //保留块百分比 (保留的供root使用,默认5%)</div><div class="line">    (-O ^64bit) additional mke2fs options                                   //额外的mke2fs选项 [禁用64位文件系统]</div><div class="line">          Compression method (no compression)  ---&gt;                         //压缩方式 [无压缩]</div><div class="line">    [ ] f2fs root filesystem                                                //f2fs格式根文件系统</div><div class="line">    [ ] initial RAM filesystem linked into linux kernel                     //初始RAM文件系统链接到Linux内核</div><div class="line">    [ ] jffs2 root filesystem                                               //jffs2格式根文件系统</div><div class="line">    [ ] romfs root filesystem                                               //romfs格式根文件系统</div><div class="line">    [ ] squashfs root filesystem                                            //squashfs格式根文件系统</div><div class="line">    [*] tar the root filesystem                                             //tar压缩格式根文件系统</div><div class="line">          Compression method (no compression)  ---&gt;                         //压缩方式 [无压缩]</div><div class="line">    ()    other random options to pass to tar                               //传递给tar的其他选项</div><div class="line">    [ ] ubi image containing an ubifs root filesystem                       //ubifs格式根文件系统包含ubi镜像</div><div class="line">    [ ] ubifs root filesystem                                               //ubifs格式根文件系统</div><div class="line">    [ ] yaffs2 root filesystem                                              //yaffs2格式根文件系统</div></pre></td></tr></table></figure><p>借此机会，把几个文件系统给记录一下。</p><p><strong>1.什么是文件系统</strong><br>文件系统，就是文件的储存方式。简单说，它就是一个门牌系统，为储存设备划分门牌号，每个文件分配一个门牌，然后就能按照门牌找到文件。<br>没有文件系统的硬盘，就是一块荒地。如果有人住在那里，你只能说那里有人住，精确位置你说不出来。只有划分了路牌，你才能说出，这个人住在”人民路15号”，这样才能精确定位。文件系统就是路牌的划分方法。<br>储存设备都需要指定文件系统，计算机才能读写。所谓”格式化”，就是为硬盘安装文件系统。不同的操作系统有不同的文件系统，Linux使用ext4，OSX使用HFS+，Windows使用NTFS，Solaris和Unix使用ZFS。如果计算机不认识某个文件系统，就会显示这块盘无法读写。</p><p><strong>2.Windows的文件系统</strong><br>Windows里的文件系统主要有三种：FAT32、NTFS、exFAT。<br>FAT32是最老的文件系统，所有操作系统都支持，兼容性最好。但是，它是为32位计算机设计的，单个文件不能超过2的(32-1)次方个字节，也就是不能超过4GB，分区不能超过8TB。也就是为什么一些U盘无法一次性拷贝4G以上的大文件；<br>NTFS是Windows的默认文件系统，用来替换FAT32，Windows的系统盘只能使用这个文件系统；<br>exFAT可以看作是FAT32的64位升级版，ex就是extended的缩写，表示”扩展的FAT32”，功能不如NTFS，但是解决了文件和分区的大小问题，最大分区可以到8PB；</p><p><strong>3.分区表</strong><br>硬盘分区，是指一块硬盘上面，同时存在多个文件系统。<br>每个文件系统管理的区域，就称为一个分区(partition),比如一块100GB的硬盘，可以一半是NTFS分区，另一半是exFAT分区。<br>硬盘必须先分区，才能指定每个区的文件系统。分区大小、起始位置、结束位置、文件系统等信息，都储存在分区表里面。<br>分区表也分成两种所谓硬盘分区，就是指一块硬盘上面，同时存在多个文件系统。每个文件系统管理的区域，就称为一个分区（partition）。比如，一块 100 GB 的硬盘，可以一半是 NTFS 分区，另一半是 exFAT 分区。<br>硬盘必须先分区，才能指定每个区的文件系统。分区大小、起始位置、结束位置、文件系统等信息，都储存在分区表里面。<br>分区表也分成两种格式：MBR 和 GPT。前者是传统格式，兼容性好；后者更现代，功能更强大。一般来说，都推荐使用 GPT格式：MBR和GPT。前者是传统格式，兼容性好；后者更现代，功能更强大。一般来说，都推荐使用GPT。</p><p><strong>4.buildroot中提到的几种文件系统</strong></p><ul><li><a href="https://zh.wikipedia.org/wiki/XFS" target="_blank" rel="external">xfs</a>:XFS最早针对IRIX操作系统开发，是一个高性能的日志型文件系统，能够在断电以及操作系统崩溃的情况下保证文件系统数据的一致性。它是一个64位的文件系统，后来进行开源并且移植到了Linux操作系统中。XFS引入分配组、B+树、extent等方法来改进海量高并发小文件场景下性能。</li><li><a href="https://zh.wikipedia.org/wiki/Btrfs" target="_blank" rel="external">btrfs</a>:通常念成Butter FS，Better FS或B-treeFS，由Oracle于2007年宣布并进行中的COW(copy-on-write式)文件系统。继ext3/4文件系统之后，比较强大的Linux文件系统，具有快照，内建磁盘阵列(RAID)支持，支持子卷等功能，允许在线调整文件系统大小。</li><li><a href="https://zh.wikipedia.org/zh-hans/Cramfs" target="_blank" rel="external">cramfs</a>:一个压缩式的文件系统，它并不需要一次性地将文件系统中的所有内容都解压缩到内存之中，而只是在系统需要访问某个位置的数据的时侯，马上计算出该数据在cramfs中的位置，将其实时地解压缩到内存之中，然后通过对内存的访问来获取文件系统中需要读取的数据。</li><li><a href="https://zh.wikipedia.org/zh-hans/Romfs" target="_blank" rel="external">romfs</a>:一种简单的只读文件系统，主要是用来当做初始文件系统来使用的，在嵌入式linux或是uclinux中通常使用这中文件系统来作为引导系统的文件系统，甚至uclinux有时就直接把ROMFS作为其根文件系统，而不是将其作为系统启动中的过渡文件系统。</li><li><a href="https://zh.wikipedia.org/wiki/SquashFS" target="_blank" rel="external">squashfs</a>:一个只读的文件系统，它可以将整个文件系统压缩在一起，存放在某个设备，某个分区或者普通的文件中。如果将其压缩到一个设备中，那么可以将其直接mount起来使用，而如果它仅仅是个文件的话，您可以将其当为一个loopback设备使用。</li><li><a href="https://zh.wikipedia.org/wiki/F2FS" target="_blank" rel="external">f2fs</a>:Flash-Friendly File System是一种闪存文件系统，主要由三星集团研发，适合Linux内核使用。此文件系统起初是为了NAND闪存的存储设备设计(诸如固态硬盘、eMMC和SD卡)，这些设备广泛存在于自移动设备至服务器领域。</li><li><a href="https://zh.wikipedia.org/zh-hans/JFFS2" target="_blank" rel="external">jffs2</a>:磁盘文件系统(ext2, FAT)设计运行在磁盘上，在运行在闪存上时，需要闪存转换层(Flash Translation Layer), 它的功能就是将底层的闪存模拟成一个具有512字节扇区大小的标准块设备(block device)，从而模仿磁盘。这势必带来写操作性能的下降，更好的解决问题的方法就是实现一个特别针对闪存的文件系统，而JFFS2就是一个这样的文件系统。</li><li><a href="https://zh.wikipedia.org/wiki/YAFFS" target="_blank" rel="external">yaffs2</a>:Yet Another Flash File System，是一种类似于JFFS/JFFS2的专门为Flash设计的嵌入式文件系统。与JFFS相比，它减少了一些功能， 因此速度更快、占用内存更少。 </li><li><a href="https://zh.wikipedia.org/wiki/UBIFS" target="_blank" rel="external">ubifs</a>:无序区块映像文件系统(Unsorted Block Image File System)，一种用于固态硬盘存储设备的文件系统，它与LogFS相互竞争，是JFFS2的后继文件系统之一。UBIFS在设计与性能上均较YAFFS2、JFFS2更适合大容量的NAND flash。</li></ul><p><strong>5.其它提到名词解释</strong></p><ul><li><a href="https://zh.wikipedia.org/wiki/Loop%E8%AE%BE%E5%A4%87" target="_blank" rel="external">cloop</a>:cloop是一个Linux内核模块，支持压缩回环文件系统。有了它，您可以安装压缩文件系统，如块设备，并在访问时无缝解压缩其数据。</li><li><a href="https://zh.wikipedia.org/zh-hans/Cpio" target="_blank" rel="external">cpio</a>:cpio是一个非常古老的归档工具。已逐渐被tar替代，但是有些功能是tar不存在的。</li></ul><p>参考资料：<br><a href="http://www.ruanyifeng.com/blog/2018/10/exfat.html" target="_blank" rel="external">exFAT 文件系统指南</a><br><a href="https://linux.cn/article-7083-1.html" target="_blank" rel="external">如何选择文件系统：EXT4、Btrfs 和 XFS</a><br><a href="https://linux.cn/article-10000-1.html" target="_blank" rel="external">深入理解ext4等Linux文件系统</a><br><a href="https://www.ibm.com/developerworks/cn/linux/l-jffs2/index.html" target="_blank" rel="external">JFFS2 文件系统及新特性介绍 - IBM</a><br><a href="http://velep.com/archives/909.html" target="_blank" rel="external">UBI文件系统详细介绍</a></p><h2 id="2-8-Bootloaders-引导程序"><a href="#2-8-Bootloaders-引导程序" class="headerlink" title="2.8 Bootloaders(引导程序)"></a>2.8 Bootloaders(引导程序)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">Bootloaders  ---&gt;   </div><div class="line">    [ ] afboot-stm32                                            //STM32平台的一个非常小的引导加载程序</div><div class="line">    [ ] Barebox                                                 //Barebox引导程序,以前叫做U-Boot v2</div><div class="line">    [ ] grub2                                                   //GRUB是一个多重引导加载程序</div><div class="line">    [ ] mxs-bootlets                                            //适用于飞思卡尔iMX23/iMX28 SoC的Stage1引导加载程序</div><div class="line">    [ ] s500-bootloader                                         //适用于Actions Semiconductor S500 SoC的第一级引导加载程序</div><div class="line">    [ ] ts4800-mbrboot                                          //TS4800板的第一级引导加载程序</div><div class="line">    [*] U-Boot                                                  //U-boot</div><div class="line">          Build system (Legacy)  ---&gt;                           //构建系统 [遗留]</div><div class="line">    (mx6ull_14x14_evk) U-Boot board name                        //U-Boot单板名称</div><div class="line">          U-Boot Version (Custom Git repository)  ---&gt;          //U-Boot版本 [自定义Git仓库]</div><div class="line">    (https://git.dev.tencent.com/……) URL of custom repository   //自定义仓库网址 ①</div><div class="line">    (origin/master) Custom repository version                   //自定义仓库版本</div><div class="line">    ()    Custom U-Boot patches                                 //自定义U-Boot补丁</div><div class="line">    [*]   U-Boot needs dtc                                      //U-Boot设备树可用</div><div class="line">    [ ]   U-Boot needs pylibfdt                                 //U-Boot Python libfdt库可用</div><div class="line">    [ ]   U-Boot needs OpenSSL                                  //U-Boot OpenSSL可用</div><div class="line">    [ ]   U-Boot needs lzop                                     //U-Boot lzop解压缩可用</div><div class="line">          U-Boot binary format  ---&gt;                            //U-Boot二进制文件格式</div><div class="line">            [ ] u-boot.ais                                      //TI定义的格式,OMAP-L1系列处理器</div><div class="line">            [ ] u-boot.bin                                      //常规二进制格式bin</div><div class="line">            [ ] u-boot-dtb.bin                                  //bin格式,包含设备树dtb</div><div class="line">            [ ] u-boot-dtb.img                                  //img格式,包含设备树dtb</div><div class="line">            [ ] u-boot-dtb.imx                                  //imx格式,包含设备树dtb</div><div class="line">            [ ] u-boot.img                                      //img格式,在bin格式上加入包含地址信息的头部</div><div class="line">            [*] u-boot.imx                                      //imx格式,在bin格式上加入包含DRAM配置信息等的头部</div><div class="line">            [ ] u-boot-nand.bin                                 //bin格式,适合nand</div><div class="line">            [ ] u-boot.kwb (Marvell)                            //适用Marvell系列芯片</div><div class="line">            [ ] u-boot.elf                                      //可执行和链接格式(executable and link format)</div><div class="line">            [ ] u-boot.sb (Freescale i.MX28)                    //适用飞思卡尔i.MX28</div><div class="line">            [ ] u-boot.sd (Freescale i.MX28)                    //适用飞思卡尔i.MX28</div><div class="line">            [ ] u-boot.nand (Freescale i.MX28)                  //适用飞思卡尔i.MX28</div><div class="line">            [ ] Custom (specify below)                          //自定义[选定后在下面指定]</div><div class="line">    [ ]   Install U-Boot SPL binary image                       //安装SPL到U-Boot</div><div class="line">    [ ]   Environment image  ----                               //镜像环境</div><div class="line">    [ ]   Generate a U-Boot boot script                         //生成U-Boot启动脚本</div></pre></td></tr></table></figure><p>①：受限每行字数，该处完整链接为：<code>https://git.dev.tencent.com/weidongshan/imx6ull_uboot.git</code>；</p><h2 id="2-9-Host-utilities-主机工具"><a href="#2-9-Host-utilities-主机工具" class="headerlink" title="2.9 Host utilities(主机工具)"></a>2.9 Host utilities(主机工具)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line">Host utilities  ---&gt;  </div><div class="line">    [ ] host aespipe                         //AES加密或解密管道</div><div class="line">    [ ] host android-tools                   //包含fastboot和adb实用程序</div><div class="line">    [ ] host btrfs-progs                     //btrfs文件系统实用程序</div><div class="line">    [ ] host cargo                           //Rust编程语言的包管理器</div><div class="line">    [ ] host cbootimage                      //将BCT(引导配置表)镜像写入基于Tegra的设备的Flash中</div><div class="line">    [ ] host checkpolicy                     //SELinux编译器</div><div class="line">    [ ] host checksec                        //检查可执行文件的属性</div><div class="line">    [ ] host cmake                           //构建，测试和打包软件</div><div class="line">    [ ] host cramfs                          //生成和检查cramfs文件系统</div><div class="line">    [ ] host cryptsetup                      //操作dm-crypt和luks分区以进行磁盘加密</div><div class="line">    [ ] host dfu-util                        //下载固件并将其上传到通过USB连接的设备</div><div class="line">    [ ] host dos2unix                        //在CRLF和LF之间转换文本文件行结尾</div><div class="line">    -*- host dosfstools                      //创建和检查DOS FAT文件系统</div><div class="line">    -*- host dtc                             //设备树文件编译、反编译、查看</div><div class="line">    -*- host e2fsprogs                       //EXT2/3/4文件系统实现工具</div><div class="line">    [ ] host e2tools                         //读写、操作ext2/ext3文件系统中的文件</div><div class="line">    [ ] host f2fs-tools                      //用于Flash-Friendly File System的工具(F2FS)</div><div class="line">    [ ] host faketime                        //伪造的系统时间到程序</div><div class="line">    [ ] host fwup                            //可编写脚本的嵌入式Linux固件更新创建者和运行者</div><div class="line">    [ ] host genext2fs                       //生成ext2文件系统作为普通(非root)用户</div><div class="line">    [*] host genimage                        //给定根文件系统树,生成多个文件系统和闪存映像的工具</div><div class="line">    [ ] host genpart                         //生成由命令行参数定义的16字节分区表条目</div><div class="line">    [ ] host gnupg                           //GNU Privacy Guard(GnuPG或GPG)加密软件</div><div class="line">    [ ] host gptfdisk                        //由gdisk和sgdisk程序组成的文本模式分区工具,用于全局唯一标识符(GUID)分区表(GPT)磁盘</div><div class="line">    [ ] host imx-mkimage                     //imx镜像制作工具</div><div class="line">    [ ] host imx-usb-loader                  //Freescale i.MX5x/6x/7x/8x和Vybrid SoC USB上下载和执行代码的工具</div><div class="line">    [ ] host jq                              //创建/编辑/合并/检查JSON文件</div><div class="line">    [ ] host jsmin                           //删除JavaScript文件中注释和不必要的空格</div><div class="line">    [ ] host lpc3250loader                   //LPC3250平台上加载/刻录程序</div><div class="line">    [ ] host lttng-babeltrace                //跟踪读写库以及跟踪转换器的应用程序</div><div class="line">    [ ] host mfgtools                        //使用Freescale UTP协议通过USB将固件编程到i.MX板</div><div class="line">    [ ] host mkpasswd                        //随机密码生成工具</div><div class="line">    [ ] host mtd, jffs2 and ubi/ubifs tools  //构建mtd、jffs2和ubi/ubifs工具</div><div class="line">    [*] host mtools                          //用于从Unix访问MS-DOS磁盘而不安装它们</div><div class="line">    [ ] host mxsldr                          //通过串行下载协议在Freescale i.MX23和i.MX28 SoC上下载和执行代码的工具</div><div class="line">    [ ] host omap-u-boot-utils               //用于TI OMAP平台生成特定的U-Boot签名镜像文件等的工具</div><div class="line">    [ ] host openocd                         //OpenOCD-开源片上调试器</div><div class="line">    [ ] host opkg-utils                      //用于opkg包管理器的帮助程序脚本</div><div class="line">    [ ] host parted                          //GNU分区调整大小程序</div><div class="line">    [ ] host pkgconf                         //为开发框架配置编译器和链接器标志的程序</div><div class="line">    [ ] host pru-software-support            //为某些TI处理器上的PRU单元提供了有用的标头和库,例如:AM3358</div><div class="line">    [ ] host pwgen                           //密码生成器</div><div class="line">    [ ] host python-cython                   //用于编写Python语言的C扩展的Cython编译器</div><div class="line">    [ ] host python-lxml                     //用于处理XML和HTML</div><div class="line">    [ ] host python-six                      //Six是Python2和3兼容库,目的是编写兼容两个Python版本的Python代码</div><div class="line">    [ ] host python-xlrd                     //用于从Microsoft Excel电子表格文件中提取数据的库</div><div class="line">    [ ] host qemu                            //一个通用的开源机器模拟器和虚拟器</div><div class="line">    [ ] host raspberrypi-usbboot             //用于Raspberry Pi通过USB启动</div><div class="line">    [ ] host rauc                            //用于生成由目标rauc服务处理的固件包</div><div class="line">    [ ] host rcw                             //供复位配置字(RCW)编译器,用于构建NXP QoriQ/LS PBL/RCW二进制文件</div><div class="line">    [ ] host rustc                           //Rust语言的编译器</div><div class="line">    [ ] host sam-ba                          //用于Atmel SAM3、SAM7和SAM9 Soc的编程</div><div class="line">    [ ] host squashfs                        //生成SquashFS文件系统的工具</div><div class="line">    [ ] host sunxi-tools                     //用于Allwinner A10(又名sun4i)和A13(又名sun5i)设备的工具</div><div class="line">    [ ] host swig                            //用于将C和C ++编写的程序与各种高级编程语言连接起来</div><div class="line">    [ ] host tegrarcm                        //用于在恢复模式下将代码发送到Tegra设备</div><div class="line">    [ ] host ti-cgt-pru                      //为某些TI处理器上的PRU单元提供代码生成工具,例如:AM3358</div><div class="line">    -*- host u-boot tools                    //用于Das U-Boot引导程序的配套工具</div><div class="line">    [ ]   Flattened Image Tree (FIT) support //拼合镜像(FIT)支持</div><div class="line">    -*- host util-linux                      //各种有用/必要的Linux库和实用程序,像mkfs、mkswap、swapon、fdisk、mount，dmesg等</div><div class="line">    [ ] host utp_com                         //用于通过飞思卡尔的UTP协议向硬件发送命令(类似于MFGTools)</div><div class="line">    [ ] host vboot utils                     //Chromium OS验证了启动实用程序</div><div class="line">    [ ] host xorriso                         //将符合POSIX标准的文件系统中的文件对象复制到Rock Ridge增强的ISO 9660文件系统中</div><div class="line">    [ ] host zip                             //zip压缩包解压和压缩</div><div class="line">    [ ] host zstd                            //快速无损压缩方式</div></pre></td></tr></table></figure><h2 id="2-10-Legacy-config-options-旧版配置选项"><a href="#2-10-Legacy-config-options-旧版配置选项" class="headerlink" title="2.10 Legacy config options(旧版配置选项)"></a>2.10 Legacy config options(旧版配置选项)</h2><p>一些陆续被移除buildroot的配置选项，忽略。 </p><h1 id="3-Buildroot目录结构"><a href="#3-Buildroot目录结构" class="headerlink" title="3.Buildroot目录结构"></a>3.Buildroot目录结构</h1><p>使用一个编译过imx6ull的buildroot，在此基础上分析目录结构。<br>执行<code>dir -AFl --group-directories-first</code>可按先目录、后文件的顺序显示buildroot根目录的所有文件。</p><p>在分析目录内容之前，先简单了解下<code>*.mk</code>和<code>Config.in/Config.in.host</code> 这两类文件，能加快后面分析、理解。<br><code>Config.in/Config.in.host</code>:包含配置信息，即执行<code>make menuconfig</code>，出现选项内容，<code>Config.in</code>用于目标，<code>Config.in.host</code>用于主机;<br><code>*.mk</code>:根据前面的配置信息执行相应动作;</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">arch/                   //存放CPU架构相关的配置文件Config.in.arm、Config.in.x86等，以及架构相关的构建脚本 </div><div class="line">board/                  //存放某个具体单板紧密相关的文件，比如内核配置文件、sd卡制作脚本、rootfs覆盖文件等 </div><div class="line">boot/                   //存放各种Bootloaders相关的的补丁*.patch、校验文件*.hash、构建脚本*.mk、配置选项Config.in</div><div class="line">configs/                //存放各个单板的buildroot配置文件</div><div class="line">dl/                     //存放所有下载的程序、源码压缩包、补丁等</div><div class="line">docs/                   //存放PDF、HTML格式的buildroot详细说明</div><div class="line">fs/                     //存放各种文件系统的构建脚本*.mk和配置选项Config.in</div><div class="line">linux/                  //存放Linux的构建脚本*.mk和配置选项Config.in</div><div class="line">output/                 //存放编译后的各种文件，包括所有软件的解压、编译后的现场、交叉编译工具链、生成的内核、根文件系统镜像等</div><div class="line">package/                //存放所有软件包的构建脚本*.mk、配置选项Config.in，以及软件下载、解压、编译的构建脚本pkg-*.mk</div><div class="line">support/                //存放一些为bulidroot提供功能支持的脚本、配置文件</div><div class="line">system/                 //存放制作根文件系统的配置文件，设备节点的模块等</div><div class="line">toolchain/              //存放制作各种交叉编译工具链的构建脚本*.mk和配置选项Config.in</div><div class="line">utils/                  //存放一些buildroot的实用脚本和工具</div><div class="line">CHANGES                 //buildroot修改日志</div><div class="line">.config                 //make menuconfig后生成的最终配置文件</div><div class="line">Config.in               //所有Config.in的入口，也是Build options的提供者 </div><div class="line">Config.in.legacy        //Legacy config options的提供者</div><div class="line">.config.old             //上次buildroot的备份，执行make oldconfig将.config.old替换.config   </div><div class="line">COPYING                 //buildroot版权信息</div><div class="line">DEVELOPERS              //开发人员列表，N后面是开发人员名字，F后面是开发的软件</div><div class="line">Makefile                //顶层Makefile  </div><div class="line">Makefile.legacy         //旧的Makefile，为了支持向后兼容</div><div class="line">README                  //buildroot简单说明</div></pre></td></tr></table></figure><p>打开<code>Config.in</code>，可以看到如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">source &quot;arch/Config.in&quot;</div><div class="line"></div><div class="line">menu &quot;Build options&quot;</div><div class="line"></div><div class="line">menu &quot;Commands&quot;</div><div class="line"></div><div class="line">config BR2_WGET</div><div class="line">    string &quot;Wget command&quot;</div><div class="line">    default &quot;wget --passive-ftp -nd -t 3&quot;</div><div class="line">…… //省略Build options部分内容</div><div class="line"> </div><div class="line">source &quot;toolchain/Config.in&quot;</div><div class="line"></div><div class="line">source &quot;system/Config.in&quot;</div><div class="line"></div><div class="line">source &quot;linux/Config.in&quot;</div><div class="line"></div><div class="line">source &quot;package/Config.in&quot;</div><div class="line"></div><div class="line">source &quot;fs/Config.in&quot;</div><div class="line"></div><div class="line">source &quot;boot/Config.in&quot;</div><div class="line"></div><div class="line">source &quot;package/Config.in.host&quot;</div><div class="line"></div><div class="line">source &quot;Config.in.legacy&quot;</div><div class="line"></div><div class="line">source &quot;$BR2_BUILD_DIR/.br2-external.in&quot;</div></pre></td></tr></table></figure></p><p>结合执行<code>make menuconfi</code>显示的一级菜单，可以发现本<code>Config.in</code>串联起了所有<code>Config.in</code>，在用户配置完后，生成<code>.config</code>，<code>.*mk</code>就根据<code>.config</code>的配置内容，进行对应的构建。</p><table><thead><tr><th style="text-align:center">配置选项</th><th style="text-align:center">文件路径</th></tr></thead><tbody><tr><td style="text-align:center">Target options</td><td style="text-align:center">arch/Config.in</td></tr><tr><td style="text-align:center">Build options</td><td style="text-align:center">./Config.in</td></tr><tr><td style="text-align:center">Toolchain</td><td style="text-align:center">toolchain/Config.in</td></tr><tr><td style="text-align:center">System configuration</td><td style="text-align:center">system/Config.in</td></tr><tr><td style="text-align:center">Kernel</td><td style="text-align:center">linux/Config.in</td></tr><tr><td style="text-align:center">Target packages</td><td style="text-align:center">package/Config.in</td></tr><tr><td style="text-align:center">Filesystem images</td><td style="text-align:center">fs/Config.in</td></tr><tr><td style="text-align:center">Bootloaders</td><td style="text-align:center">boot/Config.in</td></tr><tr><td style="text-align:center">Host utilities</td><td style="text-align:center">package/Config.in.host</td></tr><tr><td style="text-align:center">Legacy config options</td><td style="text-align:center">./Config.in.legacy</td></tr></tbody></table><p>以上目录中，有几个需要详细说明下，下面开始分析。</p><h2 id="3-1-board目录"><a href="#3-1-board目录" class="headerlink" title="3.1 board目录"></a>3.1 board目录</h2><p>在<a href="https://buildroot.org/downloads/manual/manual.html" target="_blank" rel="external"><code>The Buildroot user manual</code></a>的<a href="https://buildroot.org/downloads/manual/manual.html#customize-dir-structure" target="_blank" rel="external"><code>9.1. Recommended directory structure</code></a>章节，有该目录的推荐结构。<br>根据手册内容，在该目录下创建自定义文件。<br>①：在<code>board/</code>目录下新建<code>hceng/</code>(自定义公司名)，再在<code>hceng/</code>下创建<code>imx6ull/</code>(单板名)；<br>②：在<code>imx6ull/</code>下，应存放uboot、linux、busybox等的配置文件，在分别设置好<code>BR2_TARGET_UBOOT_CUSTOM_CONFIG_FILE</code>、<code>BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE</code>、<code>BR2_PACKAGE_BUSYBOX_CONFIG</code>后，如果修改了配置，分别执行<code>make uboot-update-defconfig</code>、<code>make linux-update-defconfig</code>、<code>make busybox-update-config</code>可以更新该目录下的配置文件。这里的uboot、linux是通过git下载，选择的自带的配置文件，<code>BR2_TARGET_UBOOT_CUSTOM_CONFIG_FILE</code>、<code>BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE</code>也就没有指定，因此没采用把配置文件放在该目录的方法。busybox使用默认配置文件路径<code>package/busybox/busybox.config</code>，也没有移动处理。<br>③：除配置文件，还应放sd卡制作脚本等，参考<code>board/freescale/common/imx/</code>和<code>board/freescale/imx6ulevk/</code>目录，将前面提到用于sd卡制作的<code>genimage.cfg.template</code>和<code>post-image.sh</code>复制到本目录下；最后，在<code>System configuration</code>-&gt;<code>Custom scripts to run after creating filesystem images</code>设置脚本路径<code>board/hceng/imx6ull/post-image.sh</code>；<br>④：除了配置文件、sd卡制作脚本，该目录还要存放根文件系统覆盖文件，新建目录<code>rootfs_overlay/</code>，里面可以创建<code>/etc/init.d/S01xx</code>，用于放置开机启动脚本。最后，在<code>System configuration</code>-&gt;<code>Root filesystem overlay directories</code>设置覆盖文件路径<code>board/hceng/imx6ull/rootfs_overlay</code>；<br>⑤：除此之外，还可以放各类<code>patches/</code>补丁文件，并在配置文件指定路径；</p><p>可以看出，<code>board/</code>就是存放某个具体单板紧密相关的文件，比如内核配置文件、sd卡制作脚本、rootfs覆盖文件等，设置后的目录结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">board/</div><div class="line">└── hceng</div><div class="line">    └── imx6ull</div><div class="line">        ├── genimage.cfg.template</div><div class="line">        ├── post-image.sh</div><div class="line">        └── rootfs_overlay</div><div class="line">            └── etc</div><div class="line">                ├── init.d</div><div class="line">                └── S01xx</div></pre></td></tr></table></figure><h2 id="3-2-output目录"><a href="#3-2-output目录" class="headerlink" title="3.2 output目录"></a>3.2 output目录</h2><p><code>output</code>目录下有以下几个目录：<br><code>build</code>:存放着解压后的各种软件包编译完后的现场；<br><code>graphs</code>:执行<code>make graph-build</code>等命令后，生成的相关图形化文档；<br><code>host</code>:制作好的交叉编译工具链；<br><code>images</code>:各种最终生成的镜像；<br><code>staging</code>:包含了根文件系统的层次结构，编译生成的所有头文件和库，以及其他开发文件，体积较大；<br><code>target</code>:已经<code>rootfs_overlay/</code>处理过的根文件系统，但没有创建<code>/dev/</code>下的设备节点；</p><h2 id="3-3-package目录"><a href="#3-3-package目录" class="headerlink" title="3.3 package目录"></a>3.3 package目录</h2><p><code>package</code>目录是存放所有软件包构建脚本*.mk、配置选项Config.in的目录，这里添加一个自定义APP，来理解实现原理。</p><p>①：在<code>package/</code>目录下，创建一个<code>hceng_app</code>目录；<br>②：在<code>hceng_app/</code>目录下，创建文件<code>Config.in</code>和<code>hceng_app.mk</code>，注意<code>*.mk</code>的文件名不能乱取，只能是app名字，且为小写；<br><strong><code>Config.in</code>的内容如下</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">config BR2_PACKAGE_HCENG_APP</div><div class="line">    bool &quot;hceng_app&quot;</div><div class="line">    help</div><div class="line">      This is a demo to add local app.</div></pre></td></tr></table></figure></p><p>这里的配置变量<code>BR2_PACKAGE_HCENG_APP</code>不能乱取，只能是<code>BR2_PACKAGE_</code>+<code>APP</code>名字大写；<br>bool是变量的类型，选中为ture编译，不选中为false不编译，与Linux Kernel的Kconfig文件规则是一样的；<br>help是在配置界面，按下<code>h</code>出现的帮助提示信息；</p><p><strong><code>hceng_app.mk</code>的内容如下</strong>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">################################################################################</div><div class="line">#</div><div class="line"># hceng_app</div><div class="line">#</div><div class="line">################################################################################</div><div class="line"></div><div class="line"># HCENG_APP_VERSION = 1.0.0</div><div class="line"># HCENG_APP_SITE_METHOD = local</div><div class="line"># HCENG_APP_SITE = $(CURDIR)/dl/hceng_app</div><div class="line"></div><div class="line">HCENG_APP_VERSION = master</div><div class="line">HCENG_APP_SITE_METHOD = git  </div><div class="line">HCENG_APP_SITE = $(call github,hceng,hceng_app,$(HCENG_APP_VERSION))</div><div class="line"></div><div class="line">HCENG_APP_ALWAYS_BUILD = YES</div><div class="line">HCENG_APP_INSTALL_TARGET = YES</div><div class="line"></div><div class="line">HCENG_APP_CFLAGS =</div><div class="line">HCENG_APP_LDFLAGS =</div><div class="line">OUT_BIN = hceng_app</div><div class="line">HCENG_APP_MAKE_FLAGS += \</div><div class="line">        CROSS_COMPILE=&quot;$(CCACHE) $(TARGET_CROSS)&quot; \</div><div class="line">        CC=$(TARGET_CC) \</div><div class="line">        OUT_BIN=$(OUT_BIN) \</div><div class="line">        AR=$(TARGET_AR) \</div><div class="line">        STRIP=$(TARGET_STRIP) \</div><div class="line">        CFLAGS=$(HCENG_APP_CFLAGS) \</div><div class="line">        LDFLAGS=$(HCENG_APP_LDFLAGS) \</div><div class="line">        STAGING_DIR=$(STAGING_DIR) \</div><div class="line">        TARGET_DIR=$(TARGET_DIR)</div><div class="line"></div><div class="line">define HCENG_APP_BUILD_CMDS</div><div class="line">    #$(MAKE) clean -C $(@D) </div><div class="line">    $(MAKE) $(HCENG_APP_MAKE_FLAGS)  -C $(@D)</div><div class="line">endef</div><div class="line"></div><div class="line">define HCENG_APP_INSTALL_TARGET_CMDS</div><div class="line">    $(INSTALL) -D -m 0755 $(@D)/$(OUT_BIN) $(TARGET_DIR)/usr/bin</div><div class="line">endef</div><div class="line"></div><div class="line">$(eval $(generic-package))</div></pre></td></tr></table></figure></p><p>需要注意的几点：<br>Ⅰ.严格按照示例的格式，1-5行的样式不能省略，第3行为app名字；<br>Ⅱ.7-8行和11-13行，为获取app的两种方式，二选一即可。<strong>7-8行是本地获取，需要提前将app文件放在<code>HCENG_APP_SITE</code>指定的路径，这里为<code>dl/hceng_app</code>；11-13行是git获取，需要提前将app文件放到git仓库，注意<code>HCENG_APP_SITE</code>的格式，它会调用<code>package/pkg-download.mk</code>，三个参数依次为用户名、包名、版本号；</strong><br>Ⅲ.<code>HCENG_APP_BUILD_CMDS</code>是构建过程，给应用源码的Makefile传递编译、链接参数，并调用应用源码的Makefile执行；<br>Ⅳ.<code>HCENG_APP_INSTALL_TARGET_CMDS</code>是编译完成后，自动安装到指定目录；</p><p>③：在<code>package/Config.ini</code>中添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">menu &quot;Private package&quot;</div><div class="line">    source &quot;package/hceng_app/Config.in&quot;</div><div class="line">endmenu</div></pre></td></tr></table></figure></p><p>新创建了一个菜单<code>Private package</code>，显示的配置文件为前面创建的<code>package/hceng_app/Config.in</code>；</p><p>④：创建app程序和Makefile<br>APP参考：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">#include &lt;stdio.h&gt;</div><div class="line"></div><div class="line">void main(void)</div><div class="line">&#123;</div><div class="line">    printf(&quot;Hello world.\n&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>Makefile参考:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">OBJS = hceng_app.o</div><div class="line">CC = $(CROSS_COMPILE)gcc</div><div class="line">OUT_BIN = hceng_app</div><div class="line">dep_file = .$@.d</div><div class="line"></div><div class="line">all: $(OBJS)</div><div class="line">$(CC) $(LDFLAGS) -g -o $(OUT_BIN) $^</div><div class="line"></div><div class="line">%.o: %.c</div><div class="line">$(CC) $(CFLAGS) -Wp,-MD,$(dep_file) -c -o $@ $&lt;</div><div class="line"></div><div class="line">clean:</div><div class="line">rm -rf *.o</div><div class="line">rm -rf $(OUT_BIN)</div><div class="line">rm -f $(shell find -name &quot;*.d&quot;)</div></pre></td></tr></table></figure></p><p>根据自己需求，将这两个文件放在本地(hceng_app.mk指定的路径)或者git仓库。</p><p>⑤：编译<br>执行<code>make menuconfig</code>，勾选上自定义APP<code>Target packages  ---&gt; Private package  ---&gt; [*] hceng_app</code>；<br>然后执行<code>make hceng_app</code>或<code>make all</code>，将编译和安装自定义APP，可以在<code>output/target/usr/bin/</code>下看到安装的自定义APP，最后重新烧写系统，即可使用自定义APP。</p><h1 id="4-buildroot常用命令"><a href="#4-buildroot常用命令" class="headerlink" title="4.buildroot常用命令"></a>4.buildroot常用命令</h1><p>在buildroot根目录执行<code>make help</code>，即可获得buildroot常用命令的提示信息，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line">Cleaning:                            - 清理</div><div class="line">  make clean                         - 删除编译产生的文件</div><div class="line">  make distclean                     - 删除所有非源码文件—(包括.config)</div><div class="line">                                </div><div class="line">Build:                               - 编译</div><div class="line">  make all                           - 编译所有</div><div class="line">  make toolchain                     - 编译工具链</div><div class="line">  make sdk                           - 编译sdk(Software Development Kit)</div><div class="line">                                </div><div class="line">Configuration:                       - 配置</div><div class="line">  make menuconfig                    - 基于curses的buildroot配置界面(常用)</div><div class="line">  make nconfig                       - 基于ncursesbuildroot配置界面  </div><div class="line">  make xconfig                       - 基于Qt的buildroot配置界面  </div><div class="line">  make gconfig                       - 基于GTK的buildroot配置界面 </div><div class="line">  make oldconfig                     - 解决所有.config中未解决的符号问题(symbols)</div><div class="line">  make syncconfig                    - 和oldconfig类似，但会额外更新依赖</div><div class="line">  make olddefconfig                  - 和syncconfig类似，但会将新的symbols设为默认值</div><div class="line">  make randconfig                    - 所有选项随机配置</div><div class="line">  make defconfig                     - 所有选项都询问，如果设置有BR2_DEFCONFIG，则使用它的配置</div><div class="line">  make savedefconfig                 - 把当前配置保存到BR2_DEFCONFIG </div><div class="line">  make update-defconfig              - 类似savedefconfig</div><div class="line">  make allyesconfig                  - 所有配置选项都选择yes</div><div class="line">  make allnoconfig                   - 所有配置选项都选择no</div><div class="line">  make alldefconfig                  - 所有配置选项都选择default</div><div class="line">  make randpackageconfig             - 软件包选项都选择随机</div><div class="line">  make allyespackageconfig           - 软件包选项都选择yes</div><div class="line">  make allnopackageconfig            - 软件包选项都选择no</div><div class="line">                                </div><div class="line">Package-specific:                    - 具体的包操作 </div><div class="line">  make &lt;pkg&gt;                         - 编译、安装该pkg以及其依赖</div><div class="line">  make &lt;pkg&gt;-source                  - 下载该pkg所有文件</div><div class="line">  make &lt;pkg&gt;-extract                 - 解压该pkg(解压后放在output/build/pkg名字目录下)</div><div class="line">  make &lt;pkg&gt;-patch                   - 给该pkg打补丁</div><div class="line">  make &lt;pkg&gt;-depends                 - 编译pkg的依赖</div><div class="line">  make &lt;pkg&gt;-configure               - 编译pkg到配置这一步</div><div class="line">  make &lt;pkg&gt;-build                   - 编译pkg到构造这一步</div><div class="line">  make &lt;pkg&gt;-show-depends            - 显示该pkg的所有依赖</div><div class="line">  make &lt;pkg&gt;-show-rdepends           - 显示依赖该pkg的所有包</div><div class="line">  make &lt;pkg&gt;-show-recursive-depends  - 递归显示该pkg的所有依赖</div><div class="line">  make &lt;pkg&gt;-show-recursive-rdepends - 递归显示依赖该pkg的所有包</div><div class="line">  make &lt;pkg&gt;-graph-depends           - 图形化显示该pkg的所有依赖</div><div class="line">  make &lt;pkg&gt;-graph-rdepends          - 图形化显示依赖该pkg的所有包</div><div class="line">  make &lt;pkg&gt;-dirclean                - 清除该pkg目录(清除解压目录output/build/pkg名字)</div><div class="line">  make &lt;pkg&gt;-reconfigure             - 从配置这一步开始重新编译pkg</div><div class="line">  make &lt;pkg&gt;-rebuild                 - 从构造这一步开始重新编译pkg</div><div class="line">  </div><div class="line">busybox:                             - busybox相关</div><div class="line">  make busybox-menuconfig            - 配置busybox界面</div><div class="line">                                </div><div class="line">uclibc:                              - uclibc相关</div><div class="line">  make uclibc-menuconfig             - 配置uclibc界面</div><div class="line">                                </div><div class="line">linux:                               - linux相关</div><div class="line">  make linux-menuconfig              - 配置linux内核界面</div><div class="line">  make linux-savedefconfig           - 保存linux内核配置</div><div class="line">  make linux-update-defconfig        - 保存配置到BR2_LINUX_KERNEL_CUSTOM_CONFIG_FILE指定路径</div><div class="line">                                </div><div class="line">Documentation:                       - 文档</div><div class="line">  make manual                        - 生成各种格式的帮助手册</div><div class="line">  make manual-html                   - 生成HTML格式的帮助手册</div><div class="line">  make manual-split-html             - 生成split HTML格式的帮助手册</div><div class="line">  make manual-pdf                    - 生成PDF格式的帮助手册</div><div class="line">  make manual-text                   - 生成text格式的帮助手册</div><div class="line">  make manual-epub                   - 生成ePub格式的帮助手册</div><div class="line">  make graph-build                   - 生成图形化查看编译时间文件</div><div class="line">  make graph-depends                 - 生成图形化查看所有依赖文件</div><div class="line">  make graph-size                    - 生成图形化查看文件系统大小文件</div><div class="line">  make list-defconfigs               - 显示拥有的默认配置的单板列表</div><div class="line">                                </div><div class="line">Miscellaneous:                       - 杂项</div><div class="line">  make source                        - 下载所有要离线编译的源码到dl路径</div><div class="line">  make external-deps                 - 列出使用的所有外部包(make show-targets的详细版)</div><div class="line">  make legal-info                    - 显示所有包的license合规性</div><div class="line">  make printvars                     - 打印所有内部指定的变量值                              </div><div class="line">  make V=0|1                         - 设置编译打印信息(0:安装编译 1:打印编译信息)</div><div class="line">  make O=dir                         - 指定所有文件(包括.config)输出目录</div></pre></td></tr></table></figure></p><h1 id="5-构建示例"><a href="#5-构建示例" class="headerlink" title="5.构建示例"></a>5.构建示例</h1><h2 id="5-1准备buildroot"><a href="#5-1准备buildroot" class="headerlink" title="5.1准备buildroot"></a>5.1准备buildroot</h2><p>以stm32mp157为例(ST首款运行Linux的处理器)，展示如何使用buildroot来构建系统的思路。<br>开发板使用的是米尔科技生产的<a href="http://www.myir-tech.com/product/myd-ya157c.htm" target="_blank" rel="external">MYC-YA157C</a>。</p><p>在开始之前，思考从哪里获取支持MYC-YA157C的buildroot。</p><p>①.开发板厂家提供<br>购买了某个开发板厂家的开发板，看其提供的资料有没有buildroot，如果有，请无脑直接使用开发板厂家的，能够为你剩下一大堆时间去做其它的。<br>如果开发板厂家没有提供，比如米尔提供的是Yocto构建系统，目前没有buildroot，继续参考下面的方法。</p><p>②.buildroot官网<br>如果使用的是芯片原厂的公版/比较火的开发板，很可能buildroot有原生支持。<br>但buildroot不可能对某个开发板一直维护，因此每个开发板都有生命周期，比如firefly-rk3288开发板，在2016.02加入buildroot，2018.03被移除不再维护，因此我们如果要使用现成的配置文件，就得下载2016.02至2018.03这个时间段之间的buildroot。<br>可以通过查询buildroot的<a href="https://git.buildroot.net/buildroot/log/configs?qt=grep&amp;q=" target="_blank" rel="external">log msg</a>来获取这些变化信息。</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190905/2.jpg"></div><p>我手里这款目前来看，buildroot原生支持没戏。</p><p>③.Github搜索<br>作为全球最大的“同性交友”网站，可以去搜搜板子名字，看是否有类似的buildroot仓库，有的话clone下来验证试试。<br>我手里这款还没批量开卖，Github自然没有。</p><p>找了一圈，目前应该没有直接支持MYC-YA157C的buildroot，因此需要自己尝试添加该开发板。<br>添加开发板也不是从头开始添加，先尝试找找类似的板子，节约配置时间。<br>在GitHub上，找到一个支持<a href="https://github.com/schenkmi/buildroot-stm32mp1" target="_blank" rel="external">stm32mp157的仓库</a>，在buildroot官网的<a href="https://git.buildroot.net/buildroot/log/configs?qt=grep&amp;q=stm32mp157" target="_blank" rel="external">log msg</a>也搜到了在2019.08添加了<code>stm32mp157_dk</code>的配置文件(<a href="https://www.st.com/en/evaluation-tools/stm32mp157c-dk2.html" target="_blank" rel="external">STM32MP157C-DK</a>是STM32的原厂公板)，到目前也没被移除。<br>这里准备在官方最新buildroot，添加MYC-YA157C单板。</p><h2 id="5-2准备交叉编译工具链、U-boot、Linux-Kernel"><a href="#5-2准备交叉编译工具链、U-boot、Linux-Kernel" class="headerlink" title="5.2准备交叉编译工具链、U-boot、Linux Kernel"></a>5.2准备交叉编译工具链、U-boot、Linux Kernel</h2><p>①.交叉编译工具链<br>可以使用开发板厂家提供资料的交叉编译工具链，也可以尝试使用<code>stm32mp157_dk</code>的配置文件所使用的交叉编译工具链。</p><p>②.U-boot、Linux Kernel<br>建议直接使用开发板厂家所提供U-boot、Linux Kernel。<br>如果主线U-boot、Linux Kernel有对MYC-YA157C的原生支持，或者知道MYC-YA157C和STM32MP157C-DK2公版的差异且能移植，才考虑用其它的U-boot、Linux Kernel。<br>本文主要是分析buildroot，对U-boot、Linux Kernel的移植不深究，因此这里直接使用开发板厂家所提供U-boot、Linux Kernel。</p><p>找到开发板厂家所提供U-boot，创建个<code>uboot-stm32mp</code>目录，将U-boot源码放在里面，压缩为<code>uboot-stm32mp.tar.gz</code>，同时，根据提供的文档，得知U-boot配置文件为<code>stm32mp15_basic_defconfig</code>。<br>同理，对提供的Linux Kernel进行类似操作，得到<code>linux-stm32mp.tar.gz</code>，得知内核配置文件为<code>multi_v7_defconfig</code>，设备树文件为<code>stm32mp157c-myir.dts</code>。<br>注意，源码解压出来一定要有个总文件夹包含源码，不能解压后当前目录就是源码，不然后面buildroot使用时会出错。</p><h2 id="5-3设置buildroot"><a href="#5-3设置buildroot" class="headerlink" title="5.3设置buildroot"></a>5.3设置buildroot</h2><p>①.下载官方buildroot，使用公板配置文件</p><p>获取主线buildroot:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hceng@machine:~/buildroot$ git clone git://git.buildroot.net/buildroot</div><div class="line">hceng@machine:~/buildroot$ git pull</div></pre></td></tr></table></figure></p><p>查询公板的配置文件:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">hceng@machine:~/buildroot$ ls configs/*stm32mp157* </div><div class="line">configs/stm32mp157_dk_defconfig</div><div class="line"></div><div class="line">或</div><div class="line"></div><div class="line">hceng@machine:~/buildroot$ make list-defconfigs | grep &quot;stm32mp157&quot;</div><div class="line">  stm32mp157_dk_defconfig             - Build for stm32mp157_dk</div></pre></td></tr></table></figure></p><p>使用公板的配置文件:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make stm32mp157_dk_defconfig</div></pre></td></tr></table></figure></p><p>②.按需修改配置<br>执行<code>make menuconfig</code>进入配置界面，挨个进行修改。</p><ul><li><p><code>Target options  ---&gt;</code><br>和CPU紧密相关，这里和公板使用的同一CPU，这里就不需要修改。</p></li><li><p><code>Build options  ---&gt;</code><br>修改新配置文件保存路径和名字：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">原：(/work/buildroot/configs/stm32mp157_dk_defconfig)) Location to save buildroot config</div><div class="line">新：(/work/buildroot/configs/stm32mp157_myir_defconfig)) Location to save buildroot config</div></pre></td></tr></table></figure></li><li><p><code>Toolchain  ---&gt;</code><br>交叉编译工具链可以考虑是开发板厂家提供的，这里先暂时使用公板配置文件的，后面编译如果出了问题再回来修改。</p></li><li><p><code>System configuration  ---&gt;</code><br>设置根文件系统目录要覆盖/添加的文件路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">原：(board/stmicroelectronics/stm32mp157-dk/overlay/))  Root filesystem overlay directories</div><div class="line">新：(board/stmicroelectronics/stm32mp157-myir/overlay/))  Root filesystem overlay directories</div></pre></td></tr></table></figure></li></ul><p>注:配置中出现的新目录/文件，后面统一再创建。</p><p>设置制作SD卡启动的脚本配置信息路径：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">原：(-c board/stmicroelectronics/stm32mp157-dk/genimage.cfg) Extra arguments passed to custom scripts </div><div class="line">新：(-c board/stmicroelectronics/stm32mp157-myir/genimage.cfg) Extra arguments passed to custom scripts</div></pre></td></tr></table></figure></p><ul><li><code>Kernel  ---&gt;</code><br>内核的来源可以有多种，比如从kernel官网自动下载，从自定义github仓库下载，或者使用本地内核包。<br>这里选择本地包的方式，以及设置对应的内核配置文件：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">原：      Kernel version (Custom tarball)  ---&gt;                                             </div><div class="line">    ($(call github,STMicroelectronics,linux,v4.19-stm32mp-r1.5)/linux-v4.19-stm32mp-r1.5.tar) URL of custom kernel tarball</div><div class="line">    ()    Custom kernel patches                                                             </div><div class="line">          Kernel configuration (Using a custom (def)config file)  ---&gt;                      </div><div class="line">    (board/stmicroelectronics/stm32mp157-dk/linux.config) Configuration file path</div><div class="line"></div><div class="line">新：      Kernel version (Custom tarball)  ---&gt;                                             </div><div class="line">    (dl/linux/linux-stm32mp.tar.gz)/linux-v4.19-stm32mp-r1.5.tar</div><div class="line">    ()    Custom kernel patches                                                             </div><div class="line">          Kernel configuration (Using an in-tree defconfig file)  ---&gt;                      </div><div class="line">    (multi_v7) Defconfig name</div></pre></td></tr></table></figure></li></ul><p>以及选择对应设备树文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">原：(stm32mp157c-dk2) In-tree Device Tree Source file names</div><div class="line">新：(stm32mp157c-myir) In-tree Device Tree Source file names</div></pre></td></tr></table></figure></p><ul><li><p><code>Target packages  ---&gt;</code><br>软件包根据需求添加，这里保持默认即可。</p></li><li><p><code>Filesystem images  ---&gt;</code><br>根文件系统看了下，也没啥需要特殊修改的，保持默认。</p></li><li><p><code>Bootloaders  ---&gt;</code><br>U-boot也是有多种来源方式，这里选择本地包的方式：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">原：      U-Boot Version (Custom version)  ---&gt;                                                                    </div><div class="line">    ($(call github,STMicroelectronics,u-boot,v4.19-stm32mp-r1.5)/linux-v4.19-stm32mp-r1.5.tar.gz) URL of custom kernel tarball </div><div class="line">    ()    Custom U-Boot patches</div><div class="line">          U-Boot configuration (Using an in-tree board defconfig file)  ---&gt;</div><div class="line">    (stm32mp15_basic) Board defconfig</div><div class="line">    (board/stmicroelectronics/stm32mp157-dk/uboot-fragment.config) Additional configuration fragment files </div><div class="line">新：      U-Boot Version (Custom tarball)  ---&gt;</div><div class="line">    (dl/uboot/uboot-stm32mp.tar.gz) URL of custom U-Boot tarball</div><div class="line">    ()    Custom U-Boot patches</div><div class="line">          U-Boot configuration (Using an in-tree board defconfig file)  ---&gt;</div><div class="line">    (stm32mp15_basic) Board defconfig</div><div class="line">    ()    Additional configuration fragment files</div></pre></td></tr></table></figure></li><li><p><code>Host utilities  ---&gt;</code><br>一般保持默认，编译过程中遇到主机缺什么，再来勾选上。    </p></li></ul><ul><li><code>Legacy config options</code><br>不用看。</li></ul><p>最后，保存，退出，执行<code>make savedefconfig</code>将会生成<code>configs/stm32mp157_myir_defconfig</code>。</p><p>使用公板的配置文件后，很多配置就可以默认即可，主要关注的是<code>Toolchain</code>、<code>Kernel</code>、<code>Bootloaders</code>。</p><p>③.为配置准备文件<br>前面对配置做了一系列修改，新增了不少目录和文件，接下来要依次添加。</p><ul><li>准备board目录的单板紧密相关的文件<br>参考<code>stm32mp157-dk/</code>目录，生成自己板子目录：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cp board/stmicroelectronics/stm32mp157-dk/ board/stmicroelectronics/stm32mp157-myir/ -r</div></pre></td></tr></table></figure></li></ul><p>修改<code>overlay/boot/extlinux/extlinux.conf</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">原：</div><div class="line">label stm32mp15-buildroot</div><div class="line">    kernel /boot/zImage</div><div class="line">    devicetree /boot/stm32mp157c-dk2.dtb</div><div class="line">    append root=/dev/mmcblk0p4 rootwait</div><div class="line"></div><div class="line">新：</div><div class="line">label stm32mp15-buildroot</div><div class="line">    kernel /boot/zImage</div><div class="line">    devicetree /boot/stm32mp157c-myir.dtb</div><div class="line">    append root=/dev/mmcblk0p4 rootwait</div></pre></td></tr></table></figure></p><p>在生成根文件系统时，<code>board/stmicroelectronics/stm32mp157-myir/overlay/boot/extlinux/extlinux.conf</code>将会添加到根文件系统的<code>/boot/extlinux/</code>下，U-boot在启动内核前，会读取<code>extlinux.conf</code>文件，得知内核、设备树所在路径。</p><ul><li>准备U-boot和Linux Kernel<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mkdir dl/uboot/</div><div class="line">cp uboot-stm32mp.tar.gz dl/uboot/</div><div class="line"></div><div class="line">mkdir dl/linux/</div><div class="line">cp linux-stm32mp.tar.gz dl/linux/</div></pre></td></tr></table></figure></li></ul><h2 id="5-4-编译、烧写"><a href="#5-4-编译、烧写" class="headerlink" title="5.4 编译、烧写"></a>5.4 编译、烧写</h2><p>执行<code>make all</code>，编译完后，将在<code>output/images/</code>生成以下文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rootfs.ext2  rootfs.ext4  sdcard.img  stm32mp157c-myir.dtb  u-boot.img  u-boot-spl.stm32  zImage</div></pre></td></tr></table></figure></p><p>随后将SD卡接入Linux主机，将<code>sdcard.img</code>写入SD卡(/dev/sdb)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo dd if=output/images/sdcard.img of=/dev/sdb</div></pre></td></tr></table></figure></p><p>写入完成后，将SD卡插入板子上，启动开关选择SD卡启动，上电即可看到打印输出：</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190905/3.jpg"></div><h1 id="6-使用技巧"><a href="#6-使用技巧" class="headerlink" title="6.使用技巧"></a>6.使用技巧</h1><ul><li><strong>①.添加启动脚本</strong><br>很多时候，需要系统启动后自动运行一些程序，这就需要添加启动脚本。</li></ul><p>在前面的<code>board/stmicroelectronics/stm32mp157-myir/</code>下有个<code>overlay</code>目录，就是切入点。<br>可以利用<code>overlay</code>会覆盖根文件系统相关目录的特性，加上初始化系统方案采用<code>systemV</code>来实现。</p><p>在<code>overlay</code>里创建个<code>etc/init.d</code>目录，再在目录里创建<code>S35app</code>之类的文件，开机后即会自动运行该脚本。</p><ul><li><strong>②.调整根文件系统大小</strong><br>在前面示例里，<code>Filesystem images  ---&gt; (120M) exact size</code>，即根文件系统空间设置的120MB，使用一个8G的SD卡烧写后启动，执行<code>df -h</code>看到整个根文件系统也只是120MB，无法扩展。<br>如果改为<code>Filesystem images  ---&gt; (4096M) exact size</code>，生成的sdcard.img文件也将是4G，烧写会非常的慢。</li></ul><p>一个可行的方案：<br>设置<code>exact size</code>任然为120MB，修改<code>board/stmicroelectronics/stm32mp157-myir/genimage.cfg</code>，将<code>rootfs</code>分区的<code>size</code>改为<code>4096M</code>。<br>这样生成的sdcard.img文件大小不会变太大，进入系统后，执行<code>resize2fs /dev/mmcblk0p4</code>(rootfs在SD卡第4分区)，即可看到系统空间变为了4G。<br>再将<code>resize2fs /dev/mmcblk0p4</code>命令添加到启动脚本里，通过一定的判断，在首次进入系统时执行扩容即可。<br>另外，如果提示没有<code>resize2fs</code>命令，在<code>Target packages  ---&gt;Filesystem and flash utilities  ---&gt;[*] e2fsprogs  ---&gt;[*]   resize2fs</code>勾选上即可。</p><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;整理Buildroot笔记，包含配置选项注释、目录结构分析、常用命令、构建示例、 使用技巧。&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux基础" scheme="http://yoursite.com/tags/Linux%E5%9F%BA%E7%A1%80/"/>
    
      <category term="Buildroot" scheme="http://yoursite.com/tags/Buildroot/"/>
    
  </entry>
  
  <entry>
    <title>NFC手机模拟加密门禁卡</title>
    <link href="http://yoursite.com/2019/07/12/NFC%E6%89%8B%E6%9C%BA%E6%A8%A1%E6%8B%9F%E5%8A%A0%E5%AF%86%E9%97%A8%E7%A6%81%E5%8D%A1/"/>
    <id>http://yoursite.com/2019/07/12/NFC手机模拟加密门禁卡/</id>
    <published>2019-07-12T02:02:50.000Z</published>
    <updated>2019-08-03T09:57:19.950Z</updated>
    
    <content type="html"><![CDATA[<p>记录小米手机NFC模拟加密门禁卡，以及Proxmark3的使用。<br><a id="more"></a></p><h1 id="0-缘起"><a href="#0-缘起" class="headerlink" title="0. 缘起"></a>0. 缘起</h1><p>之前，小区用的门禁卡为非加密的门禁卡，使用小米手机系统自带的门卡模拟功能复制即可。<br>后来，小区门禁系统换了一家供应商，再使用之前的方法复制门禁卡，手机提示为加密卡，无法复制。</p><p>新的门禁系统，更安全了，也支持APP远程控制开门了，直到有一天门禁卡丢了，开始使用APP开门，发现这APP写得烂透了，十次有五次点击开门按钮无反应，需要反复退出、打开APP多次才能点击开门按钮成功，还有两次直接没了开门按钮，提示到物业管理处处理……<br>那个时候，我又开始怀念用手机刷门禁的快感了。。</p><h1 id="1-基础知识"><a href="#1-基础知识" class="headerlink" title="1. 基础知识"></a>1. 基础知识</h1><p>于是，我开始查阅资料，基本确定了小米手机是还是可以通过其它方式模拟加密门禁卡的。<br>然后，资料查多了，记不到，又怕以后用到需要重新找，干脆水一篇博客记录下来。<br>如果熟悉NFC和IC卡，或者只想模拟加密门禁卡，并不关心原理，这章可以跳过，直接看下一章。</p><h2 id="1-1-ID卡和IC卡"><a href="#1-1-ID卡和IC卡" class="headerlink" title="1.1 ID卡和IC卡"></a>1.1 ID卡和IC卡</h2><ul><li><strong>ID卡</strong>：全称身份识别卡(Identification Card)，多为<strong>低频</strong>(125Khz)，是一种<strong>不可写入</strong>的感应卡，<strong>含固定的编号</strong>，主要有台湾SYRIS的EM格式，美国HID、TI、MOTOROLA等各类ID卡。</li><li><strong>IC卡</strong>：全称集成电路卡(Integrated Circuit Card)，又称智能卡(Smart Card)。多为<strong>高频</strong>(13.56Mhz)，<strong>可读写数据</strong>、<strong>容量大</strong>、<strong>有加密功能</strong>、数据记录可靠、使用更方便，如一卡通系统、消费系统等，目前主要有PHILIPS的Mifare系列卡。</li></ul><p><strong>主要区别</strong>：<br><strong>ID卡，低频，不可写入数据，其记录内容(卡号)只可由芯片生产厂一次性写入，开发商只可读出卡号加以利用，无法根据系统的实际需要制订新的号码管理制度；</strong><br><strong>IC卡，高频，不仅可由授权用户读出大量数据，而且亦可由授权用户写入大量数据(如新的卡用户的权限、用户资料等)，IC卡所记录内容可反复擦写；</strong></p><p>IC卡由于其固有的信息安全、便于携带、比较完善的标准化等优点，在身份认证、银行、电信、公共交通、车场管理等领域正得到越来越多的应用，例如二代身份证、银行的电子钱包，电信的手机SIM卡、公共交通的公交卡、地铁卡、用于收取停车费的停车卡、小区门禁卡等；</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/1.png"></div><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/2.png"></div><p>以上图片来自淘宝商家，网上找了半天相关资料，发现淘宝商家解释得最清楚。</p><p><strong>总结：</strong><br>1.ID卡多为低频，IC多为高频；<br>2.IC卡整体上看比ID卡更有优势，市面上使用的大多数也是IC卡；<br>3.对于矩形白卡，里面为矩形线圈、表面没有编号的多为IC卡，里面为圆形线圈、表面有编号的多为ID卡；<br>4.对于异形卡，有编号的多为ID卡，最好使用带NFC的手机进行测试(目前手机NFC只能读高频13.56Mhz)，IC卡会有反应；</p><h2 id="1-2-接触式和非接触式IC卡"><a href="#1-2-接触式和非接触式IC卡" class="headerlink" title="1.2 接触式和非接触式IC卡"></a>1.2 接触式和非接触式IC卡</h2><p>IC卡又可以分为接触式IC卡和非接触式IC卡。</p><ul><li><strong>接触式IC卡</strong>：该类卡是通过IC卡读写设备的触点与IC卡的触点接触后进行数据的读写；</li><li><strong>非接触式IC卡</strong>：又称射频卡、感应式IC卡，该类卡与卡设备无电路接触，而是通过非接触式的读写技术进行读写（例如RFID、NFC），其内嵌芯片除了CPU、逻辑单元、存储单元外，增加了射频收发电路。该类卡一般用在使用频繁、信息量相对较少、可靠性要求较高的场合。</li></ul><p>两者比较好区分，直接看卡上有无金属触点即可。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/3.jpg"></div><h2 id="1-3-RFID和NFC"><a href="#1-3-RFID和NFC" class="headerlink" title="1.3 RFID和NFC"></a>1.3 RFID和NFC</h2><p>非接触式的读写技术常见的有两种：RFID技术和NFC技术。</p><ul><li><p><strong>RFID技术：</strong><br>1.通常应用在生产，物流，跟踪和资产管理上；<br>2.根据频率划分包含低频、高频（13.56MHz）、超高频、微波等；<br>3.作用距离取决于频率、读写器功率、读写器天线增益值、标签天线尺寸等，工作距离在几厘米到几十米不等；<br>4.读写器和非接触卡可以是一对多关系，也可以说一对一关系；且读写器和非接触卡是两个实体，不能切换；</p></li><li><p><strong>NFC技术：</strong><br>1.通常应用在门禁，公交卡，手机支付等领域；<br>2.频率也是13.56MHz，且兼容大部分RFID高频相关标准（有些是不兼容）；<br>3.NFC作用距离较短，一般都是0~10厘米；<br>4.读写器和标签几乎都是一对一关系；且支持读写模式和卡模式，可以作为读写器也可变为非接触卡；</p></li></ul><p>总体来说，NFC是RFID的子集，但NFC有些新特性又是RFID所不具备的。</p><h2 id="1-4-ID卡类型"><a href="#1-4-ID卡类型" class="headerlink" title="1.4 ID卡类型"></a>1.4 ID卡类型</h2><p>ID卡，工作在低频（125Khz），根据卡内使用芯片的不同，有如下分类：</p><ul><li><p><strong>ID卡</strong><br>EM4XX系列，多为EM4100/EM4102卡，常用的固化ID卡，<strong>出厂固化ID</strong>，只能读不能写；常用于低成本门禁卡，小区门禁卡，停车场门禁卡；</p></li><li><p><strong>ID白卡</strong><br>EM4305或T5577，可用来克隆ID卡，<strong>出厂为白卡</strong>，内部EEPROM可读可写，修改卡内EEPROM的内容即可修改卡片对外的ID号，达到复制普通ID卡的目的；<br>T5577写入ID号可以变身成为ID卡，写入HID号可以变身HID卡，写入Indala卡号，可以变身Indala卡</p></li><li><p><strong>HID卡</strong><br>全称HID ProxⅡ，美国常用的低频卡，<strong>可擦写</strong>，不与其他卡通用；</p></li></ul><h2 id="1-5-IC卡类型"><a href="#1-5-IC卡类型" class="headerlink" title="1.5 IC卡类型"></a>1.5 IC卡类型</h2><p>IC卡中最常见的是NXP Mifare系列卡，工作在高频（13.56Mhz），根据卡内使用芯片的不同，有如下分类：</p><ul><li><p><strong>M1卡</strong><br>全称Mifare S50，是最常见的卡，<strong>出厂固化UID</strong>（UID即指卡号，全球唯一），可存储修改数据；常用于学生卡，饭卡，公交卡，门禁卡；</p></li><li><p><strong>M0卡</strong><br>全称Mifare UltraLight，相当于M1卡的精简版，容量更小、功能更少，但价格更低，<strong>出厂固化UID</strong>，可存储修改数据；常用于地铁卡，公交卡；</p></li></ul><p>以上两种固化了UID，为正规卡，接下来就是一些没有固化UID，即不正规的卡：</p><ul><li><p><strong>UID卡</strong><br>全称Mifare UID Chinese magic card，国外叫做中国魔术卡，M1卡的变异版本，<strong>使用后门指令(magic指令)，可修改UID</strong>（UID在block0分区），可以用来完整克隆M1卡的数据；<br>但是现在新的读卡系统通过检测卡片对后门指令的回应，可以检测出UID卡，因此可以来拒绝UID卡的访问，来达到屏蔽复制卡的功能（即UID防火墙系统）；</p></li><li><p><strong>CUID卡</strong><br>为了避开UID防火墙系统，CUID卡应运而生，<strong>取消响应后门指令(magic指令)，可修改UID</strong>，是目前市场上最常用的复制卡；<br>近两年，智能卡系统制造公司，根据CUID卡的特性研发出CUID卡防火墙，虽然现在（2019年）还不是很普及，但是总有一天CUID卡会和UID卡一样面临着淘汰；</p></li><li><p><strong>FUID卡</strong><br><strong>FUID卡只能写一次UID</strong>，写完之后自动固化UID所在分区，就等同M1卡，目前任何防火墙系统都无法屏蔽，复制的卡几乎和原卡一模一样；<br>但缺点也相对明显，价格高、写坏卡率高，写错就废卡。</p></li><li><p><strong>UFUID卡</strong><br>集UID卡和FUID卡的优点于一身，<strong>使用后门指令，可修改UID，再手动锁卡，变成M1卡</strong>。<br>可先反复读写UID，确认数据无误，手动锁卡变成M1，解决了UID卡的UID防火墙屏蔽，也解决FUID的一次性写入容易写错的问题，且价格比FUID卡还便宜；</p></li></ul><p>判断是M0卡(Mifare UltraLight)，还是M1卡(Mifare Classic 1k)，可以通过SAK值判断。</p><table><thead><tr><th style="text-align:center">产品</th><th style="text-align:center">ATQA</th><th style="text-align:center">SAK</th><th style="text-align:center">UID长度</th></tr></thead><tbody><tr><td style="text-align:center">Mifare Mini</td><td style="text-align:center">00 04</td><td style="text-align:center">09</td><td style="text-align:center">4 bytes</td></tr><tr><td style="text-align:center">Mifare Classic 1k</td><td style="text-align:center">00 04</td><td style="text-align:center">08</td><td style="text-align:center">4 bytes</td></tr><tr><td style="text-align:center">Mifare Classic 4k</td><td style="text-align:center">00 02</td><td style="text-align:center">18</td><td style="text-align:center">4 bytes</td></tr><tr><td style="text-align:center">Mifare Ultraligh</td><td style="text-align:center">00 44</td><td style="text-align:center">00</td><td style="text-align:center">7 bytes</td></tr><tr><td style="text-align:center">Mifare Plus</td><td style="text-align:center">00 44</td><td style="text-align:center">20</td><td style="text-align:center">7 bytes</td></tr></tbody></table><h2 id="1-6-IC卡详细分析"><a href="#1-6-IC卡详细分析" class="headerlink" title="1.6 IC卡详细分析"></a>1.6 IC卡详细分析</h2><h3 id="1-6-1-IC卡存储器结构"><a href="#1-6-1-IC卡存储器结构" class="headerlink" title="1.6.1 IC卡存储器结构"></a>1.6.1 IC卡存储器结构</h3><p>以M1卡为例，介绍IC卡数据结构。<br>M1卡有从0到15共16个扇区，每个扇区配备了从0到3共4个数据段，每个数据段可以保存16字节的内容；<br>每个扇区中的段按照0~3编号，第4个段中包含KEYA（密钥A 6字节）、控制位（4字节）、KEYB（密钥B 6字节），每个扇区可以通过它包含的密钥A或者密钥B单独加密；</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/4.png"></div><ul><li><strong>厂商段</strong><br>每张M1卡都有一个全球唯一的UID号，这个UID号保存在卡的第一个扇区（0 扇区）的第一段（0 编号数据段），也称为厂商段。<br>其中前4个字节是卡的UID，第5个字节是卡 UID 的校验位，剩下的是厂商数据。<br>并且这个段在出厂之前就会被设置了写入保护，只能读取不能修改，前面各种能修改UID的卡，UID是没有设置保护的，也就是厂家不按规范生产的卡。</li></ul><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/5.png"></div><ul><li><strong>数据段</strong><br>除了第0扇区外，其它每个扇区都把段0、段1、段2作为了数据段，用于保存数据。<br>数据段的数据类型可以被区尾的控制位（Access Bits）配置为<strong>读/写段</strong>（用于譬如无线访问控制）或者<strong>值段</strong>（用于譬如电子钱包）。<br>值段有固定的存储格式，只能在值段格式的写操作时产生，值段可以进行错误检测和纠正并备份管理，其有效命令包括读、写、加、减、传送、恢复，值段格式如下：</li></ul><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/6.jpg"></div><p><code>Value</code>表示一个带符号4字节值，为了保证数据的正确性和保密性，值被保存了3次，两次直接保存，一次取反保存。该值先保存在0字节-3字节中，然后将取反的字节保存在4字节-7字节中，还保存了一次在8字节-11字节中。<br><code>Adr</code>表示一个字节的地址，当执行备份管理时用于保存存储段的地址。地址字节保存了4次，取反和不取反各保存了2次。在执行加值、减值、恢复和传送等操作时，地址保持不变，它只能通过写命令改变。</p><ul><li><strong>控制段</strong><br>每个扇区都有一个区尾控制段，它包括密钥A和密钥B（可选），以及本扇区四个段的访问控制位 (Access bits)；访问控制位也可用于指出数据段的类型（为读/写段还是值段）；控制段的存储格式如下：</li></ul><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/7.jpg"></div><p>如果不需要密钥B，那么区尾的最后6个字节可以作为数据字节，用户数据可以存储在区尾的第9个字节，这个字节具有和字节6、7、8一样的访问权限。</p><h3 id="1-6-2-IC卡访问存储器"><a href="#1-6-2-IC卡访问存储器" class="headerlink" title="1.6.2 IC卡访问存储器"></a>1.6.2 IC卡访问存储器</h3><ul><li><strong>数据段支持的操作</strong><br>根据<strong>使用的密钥</strong>和<strong>相应区尾访问条件</strong>的不同，数据段所支持的存储器操作也不同，存储器的操作类型如下：</li></ul><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/8.jpg"></div><p>可以看到只有作为值段时，才能加、减、传送、恢复。</p><ul><li><strong>各区的访问位定义</strong><br>每个数据段和区尾的访问条件由3个位来定义，它们以取反和不取反的形式保存在区尾指定字节中。<br>访问位控制了使用密钥A和B操作存储器的权限，当知道相关的密钥和当前的访问控制条件时，可以修改访问条件，各区的访问位定义如下：</li></ul><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/9.jpg"></div><ul><li><strong>访问位在区尾的存储形式</strong></li></ul><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/10.jpg"></div><ul><li><strong>区尾的访问条件</strong><br>根据区尾（段 3）访问位的不同，访问条件可分为 “从不”、“密钥A”、“密钥B” 或“密钥A|B”（密钥A或密钥B），区尾的访问条件如下:</li></ul><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/11.jpg"></div><p>用灰色标明的行是密钥B可被读的访问条件，此时密钥B可以存放数据。<br>例如：当段3的访问条件C13C23C33=100时，表示：密钥 不可读（隐藏），验证密钥B正确后，可写（或更改）；访问控制位在验证密钥A或密钥B正确后，可读不可写（写保护）；密钥B不可读，在验证密钥 B 正确后可写；<br>又如：当段3的访问条件C13C23C33=110或者111时，除访问控制位需要在验证密钥A或密钥B正确后可读外，其他如访问控制位的改写，密钥 A，密钥 B 的读写权限均被锁死而无法访问；</p><ul><li><strong>数据段的访问条件</strong><br>根据数据段（段 0-2 访问位的不同，访问条件可分为 “从不”、“密钥A ”、“密钥B ” 或“密钥A|B”（密钥A或密钥B）。<br>相关访问位的设置定义了该段的应用（或者说数据段类型）以及所支持的应用命令，不同的数据段类型可以进行不同的访问操作。 读/写段可以进行读操作和写操作。值段可以进行加、减、传送和恢复的值操作。<br>其中一种情况中（001）只能对不可再充电的卡进行读操作和减操作，另一种情况中（110）使用密钥B可以再充电。 厂商段无论设置任何的访问位都只是只读的， 数据段的访问条件如下：</li></ul><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/12.jpg"></div><p>如果密钥B可以在相应的区尾被读出，它就不能用于确认（在前面所有表中的灰色行）。如果读卡器要用这些（带灰色标记的）访问条件的密钥B确认任何段，卡会在确认后拒绝任何存储器访问操作。</p><h3 id="1-6-3-举例说明"><a href="#1-6-3-举例说明" class="headerlink" title="1.6.3 举例说明"></a>1.6.3 举例说明</h3><p>Mifare S50出厂时，访问控制字节（字节6-字节9）被初始化为“FF 07 80 69”，KEY A和KEY B的默认值为“FF FF FF FF FF FF” ；<br>字节6为FF，二进制为1111111；字节7为07，二进制为00000111；字节8为80，二进制为10000000，如下：</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/13.jpg"></div><p>对照前面的<em>访问位在区尾的存储形式图</em>，可得知访问控制位为：<br>C10C20C30=000；C11C21C31=000；C12C22C32=000；C13C23C33=001。</p><p>C10C20C30、C11C21C31、C12C22C32对应数据段0、1、2，参考<em>数据段的访问条件图</em>即可得知该段三个数据区的访问权限；<br>C13C23C33对应区尾（段 3），参考<em>区尾的访问条件图</em>即可得知该段的访问权限；</p><p>块0控制位为：0 0 0  权限为：通过A或者B密码认证后可读，可写，可进行加值和减值操作；<br>块1控制位为：0 0 0  权限为：通过A或者B密码认证后可读，可写，可进行加值和减值操作；<br>块2控制位为：0 0 0  权限为：通过A或者B密码认证后可读，可写，可进行加值和减值操作；<br>块3控制位为：0 0 1  权限为：A密码不可读，验证A或者B密码后可改写A密码；验证A或者B密码后，可读可改写存取控制；验证A密码或者B密码后，可读可改写B密码；</p><p>这样每次换算还是有点麻烦，可以使用<a href="http://www.pc6.com/softview/SoftView_94636.html" target="_blank" rel="external">M1 S50卡控制字节生成工具</a>快速换算：</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/14.jpg"></div><p>最下面一行可以输入想解释的控制字，也可以根据上面的设置生成控制字；<br>最上面一行，左边是数据段0、1、2的访问控制位，右边是对应权限所需要的秘钥；<br>中间的一行，左边是区尾的访问控制位，右边是对应权限所需要的秘钥；</p><h2 id="1-7-非加密IC卡和加密IC卡"><a href="#1-7-非加密IC卡和加密IC卡" class="headerlink" title="1.7 非加密IC卡和加密IC卡"></a>1.7 非加密IC卡和加密IC卡</h2><p>非加密IC卡和加密IC卡的区别就是，非加密IC卡中所有扇区的KEYA和KEYB数值都是默认值FFFFFFFFFFFF；<br>而加密IC卡中，其中有扇区的KEYA和KEYB不等于FFFFFFFFFFFF，部分扇区加密的卡称半加密IC卡，所有扇区都加密的卡称全加密IC卡。</p><p>一般的读卡器，像手机的NFC，是读不到IC卡的加密数据的，需要用专门的工具，比如Proxmark3读取。 </p><p>对于IC卡，除了对卡上数据加密，还有滚动码加密、服务器数据验证等技术。<br>因此，对IC卡的解密，更多的是门禁卡、签到卡、车库卡等的讨论，像公交卡、饭卡等涉及到资金问题的，基本都有服务器定期校验，得先搞定服务器再说，难度高还违法。</p><p>参考资料：<br><a href="https://post.smzdm.com/p/ax08z26d/" target="_blank" rel="external">码农生活 篇二：IC卡门卡模拟探秘</a><br><a href="http://pn532.com/portal.php?mod=view&amp;aid=2" target="_blank" rel="external">IC卡简介【M1/S50，UID，CUID，FUID，UFUID复制卡介绍】</a><br><a href="https://bobylive.com/static/1491" target="_blank" rel="external">谈谈 Mifare Classic 破解</a><br><a href="https://s1.bobylive.com/other/rfid-practice.pdf" target="_blank" rel="external">rfid-practice</a><br><a href="http://yearito.cn/posts/storage-structure-of-typeA.html" target="_blank" rel="external">Type A 卡存储结构与通信</a><br><a href="https://lzy-wi.github.io/2018/07/26/proxmark3/" target="_blank" rel="external">Proxmark3 Easy破解门禁卡学习过程</a></p><h1 id="2-手机NFC模拟加密门禁卡"><a href="#2-手机NFC模拟加密门禁卡" class="headerlink" title="2. 手机NFC模拟加密门禁卡"></a>2. 手机NFC模拟加密门禁卡</h1><p>有了前面的知识，再来看现在我的加密门禁卡情况，手机能识别为加密卡，肯定是IC卡。</p><p>首先，加密卡在目前这个情况下是无法解密的，如果按照下面的操作失败，请参考下一章。<br><strong>部分门禁系统只认证IC卡的UID</strong>，利用这一情况，可以试试复制门禁卡的UID，看运气能否打开门。</p><p>在已root的情况下，直接使用APP <a href="https://www.coolapk.com/apk/com.yuanwofei.cardemulator" target="_blank" rel="external">NFC卡模拟 </a>便可读取加密卡的UID和非加密数据、并写UID到手机NFC里。<br>在未root的情况下，使用小米系统自带的门卡模拟功能，出于安全考虑，是不能对加密卡进行任何操作。手机的NFC，理论上可以读加密IC卡的UID，因此可以使用第三方软件<a href="https://github.com/ikarus23/MifareClassicTool/releases" target="_blank" rel="external">MifareClassicTool</a>读取UID，因为没有root，不能写手机NFC，但可以写IC卡，因此还<strong>需要一张CUID卡(不能使用UID卡)</strong>，某宝上一块多一张，思路就是<strong>先读取加密卡的UID，再读取CUID卡的数据，然后将CUID卡的UID改为加密卡一样的UID，再将修改后的数据写回到CUID卡，最后用小米系统自带的门卡模拟功能，复制未加密的CUID卡即可。</strong></p><ul><li><strong>1.读取加密卡的UID</strong><br>打开软件<code>Mifare Classic Tool</code>，将加密门禁卡放到手机的NFC感应区域，识别到IC卡后，点击“工具”-&gt;“显示标签信息”，可以看到加密门禁卡的8个数字，4字节的UID。<br>注意，在16进制里，每个数字为4位(2^4=16)，8位(bits)为一字节(bytes)，即两个数字组成一字节，这里8个数字，即为4字节(Bytes)。<br>前8个数字，每个数字代表4位，8位为一字节，8个数字就是32位，即4字节<br>接着打开“工具”-&gt;“BCC计算器”，输入UID，得到1位BBC(两个数字)校验数据。</li></ul><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/15.jpg"></div><ul><li><strong>2.读取CUID卡数据</strong><br>将CUID卡放到手机的NFC感应区域，识别到IC卡后，点击“读标签”-&gt;“启动映射并读取标签”，即可得到CUID白卡的所有信息。<br>接着修改第一行的前10个数字，改为加密门禁卡的UID（8个数字）和BCC（2个数字），一共10个数字，并点右上角保存图标保存。</li></ul><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/16.jpg"></div><ul><li><strong>3.写数据到CUID卡</strong><br>再将CUID卡放到手机的NFC感应区域，识别到IC卡后，点击“写标签”，勾选“写转储(克隆)”-&gt;“显示选项”-&gt;“高级:使能厂商块写入”。<br>再点击“选择转储”，选择刚才保存的数据，点击“选择转储”。</li></ul><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/17.jpg"></div><p>在弹出的选择写扇区界面，默认即可，点击“好的”，最后点击“启动映射并写转储数据”。</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/18.jpg"></div><ul><li><strong>4.NFC手机复制CUID卡</strong><br>最后，使用小米手机系统自带的门卡模拟功能，复制刚才写入新UID的CUID卡即可。</li></ul><p>接着，就看运气吧，我小区的门禁系统就只认UID，搞定。</p><p>参考资料：<br><a href="https://zhuanlan.zhihu.com/p/56296951" target="_blank" rel="external">如何用小米NFC手机模拟加密卡（的部分功能）</a></p><h1 id="3-Proxmark3解密门禁卡"><a href="#3-Proxmark3解密门禁卡" class="headerlink" title="3. Proxmark3解密门禁卡"></a>3. Proxmark3解密门禁卡</h1><p>先理一下技术原理：<br>1.对于未加密的IC卡，直接读出UID，写入空白卡即可；也就是我最开始那个门禁系统；<br>2.对于加密的IC卡，先读取UID，写入空白卡，如果门禁只认UID，也就可以了；也就是我现在的门禁系统；<br>3.越来越多的门禁，不再只看UID，还要看分区的加密数据，这个加密数据，一般的读卡器读不出来(比如手机NFC)，需要Proxmark3、ACR122U等专业读卡器，利用漏洞把卡里的数据读取出来。这里读取出来时，就已经是16进制的数据了，一般门禁系统，把UID和加密数据直接写入新卡即可；<br>4.接着前面情况，如果不是门禁系统而是饭卡，余额的变化，就是加密数据在不断的变化，此时读取出来数据，对数据分析后，写入新数据，即实现了修改余额的效果，不过一般都有服务器定期验证，发现没有充卡记录但余额变化，迟早会发现问题；<br>5.如果是高级点的门禁，比如某些电梯卡，采用动码技术，卡前后的数据会发生变化，而且每次变化都没规律，复制后用新卡，原卡就不能再用了，否则原卡前后数据不一样，可能会被拉进黑名单锁卡；需要破解滚动码的加密规则，才能自由写卡；<br>6.Proxmark3、ACR122U都是工具，功能是利用IC卡漏洞，读取加密区域数据，同时也能写卡，具体的数据的修改规则，得自己研究；两个工具的区别是Proxmark3可以写高频和低频（IC卡和ID卡），而ACR122U只能读写高频（IC卡）；<br>7.NXP Mifare系列卡，即便数据全加密，Proxmark3也能直接解出来；国产卡全加密后，需要先侦测个密码，再用Proxmark3才能解出来，这里的密码可以使用变色龙(<a href="https://github.com/emsec/ChameleonMini/wiki" target="_blank" rel="external">ChameleonMini</a>)去刷卡的地方侦测密码，成功率更高；<br>8.另外，进行学习研究是好事，在不危害他人利益的情况下方便自己问题也不大，危害他人利益肯定违法犯罪，切勿以身试法，参考此文进行犯罪的相关人员与本人无关；</p><p>常规IC卡破解流程如下：</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/19.jpg"></div><p><a href="https://github.com/Proxmark/proxmark3" target="_blank" rel="external">Proxmark3</a>是由Jonathan Westhues设计的开源硬件，主要用于他的硕士毕业论文。<br>现在某宝卖的Proxmark3，都是国内厂商参考源硬件制作出来，我手里这台<code>Proxmark3 V5.0</code>也是来自某宝，内存512K，双USB口，已刷好目前最新稳定版的冰人固件3.1.0。</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/20.jpg"></div><p>Proxmark3除了<a href="https://github.com/Proxmark/proxmark3/" target="_blank" rel="external">官方的固件</a>，还有不少<a href="http://proxmark3.info/firmware/" target="_blank" rel="external">第三方固件</a>，这些固件中，以<a href="https://github.com/iceman1001/proxmark3" target="_blank" rel="external">Iceman</a>的固件最流行，除此之外，卖家送的资料里还有<em>离线嗅探固件</em>用于侦测密码，设计的双USB的用意，也是为此。</p><h2 id="3-1-PM3常用指令-部分"><a href="#3-1-PM3常用指令-部分" class="headerlink" title="3.1 PM3常用指令(部分)"></a>3.1 PM3常用指令(部分)</h2><p><code>PM3 Universal GUI</code>是客户端软件，用于Windows上向Proxmark3发送命令。</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/21.jpg"></div><p>左上角需要选择对应的串口端口，左边是命令介绍，可以点击所需命令，将自动出现在输入框，点击<code>Run</code>则执行。</p><h3 id="3-1-1-help主帮助命令"><a href="#3-1-1-help主帮助命令" class="headerlink" title="3.1.1 help主帮助命令"></a>3.1.1 help主帮助命令</h3><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">介绍</th></tr></thead><tbody><tr><td style="text-align:center">help</td><td style="text-align:center">显示帮助</td></tr><tr><td style="text-align:center">data</td><td style="text-align:center">图形窗口/缓冲区数据操作等</td></tr><tr><td style="text-align:center">exit</td><td style="text-align:center">退出Proxmark3的终端环境</td></tr><tr><td style="text-align:center">hf</td><td style="text-align:center">高频相关命令</td></tr><tr><td style="text-align:center">hw</td><td style="text-align:center">硬件检测相关命令</td></tr><tr><td style="text-align:center">lf</td><td style="text-align:center">退出Proxmark3的终端环境等同exit</td></tr></tbody></table><h3 id="3-1-2-hw硬件检测相关命令"><a href="#3-1-2-hw硬件检测相关命令" class="headerlink" title="3.1.2 hw硬件检测相关命令"></a>3.1.2 hw硬件检测相关命令</h3><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">介绍</th></tr></thead><tbody><tr><td style="text-align:center">detectreader</td><td style="text-align:center">[‘l’/‘h’] –检测外部读卡器频率区域（选项“l”或“h”限制到低频LF或高频HF）</td></tr><tr><td style="text-align:center">fpgaoff</td><td style="text-align:center">设置FPGA为关闭</td></tr><tr><td style="text-align:center">readmem</td><td style="text-align:center">从芯片中读取10进制地址的存贮器</td></tr><tr><td style="text-align:center">reset</td><td style="text-align:center">重置Proxmark3</td></tr><tr><td style="text-align:center">setlfdivisor</td><td style="text-align:center"><19 255="" -=""> – 在12Mhz/(基数+1)驱动LF天线</19></td></tr><tr><td style="text-align:center">setmux</td><td style="text-align:center"><loraw hiraw="" lopkd="" hipkd=""> – 设置ADC多路复用器为一个特定的值</loraw></td></tr><tr><td style="text-align:center">tune</td><td style="text-align:center">测量天线的调谐</td></tr><tr><td style="text-align:center">version</td><td style="text-align:center">显示Proxmark3的固件版本信息</td></tr><tr><td style="text-align:center">status</td><td style="text-align:center">显示Proxmark3状态信息</td></tr><tr><td style="text-align:center">ping</td><td style="text-align:center">测试Proxmark3连接是否正常</td></tr></tbody></table><h3 id="3-1-3-lf低频相关命令"><a href="#3-1-3-lf低频相关命令" class="headerlink" title="3.1.3 lf低频相关命令"></a>3.1.3 lf低频相关命令</h3><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">介绍</th></tr></thead><tbody><tr><td style="text-align:center">cmdread</td><td style="text-align:center"><off> &lt;’0’&gt; &lt;’1’&gt; &lt;命令&gt; [‘h’] – 在读取之前发送命令来调整LF读卡器周期（以微妙为单位）（’h’选项为134）</off></td></tr><tr><td style="text-align:center">em4x</td><td style="text-align:center">EM4X卡类相关命令…</td></tr><tr><td style="text-align:center">flexdemod</td><td style="text-align:center">解调FlexPass样本</td></tr><tr><td style="text-align:center">hid</td><td style="text-align:center">HID卡类相关命令…</td></tr><tr><td style="text-align:center">indalademod</td><td style="text-align:center">[‘224’] –解调Indala样本的64位UID（选项’224’是224位）</td></tr><tr><td style="text-align:center">indalaclone</td><td style="text-align:center">UID] [‘l’]– 克隆Indala到T55x7卡 (标签必须在天线上)(UID为16进制)(选项’l’表示224位UID)</td></tr><tr><td style="text-align:center">read</td><td style="text-align:center">[‘h’] – 读取125/134 kHz的低频ID标签(选项’h’是134)</td></tr><tr><td style="text-align:center">sim</td><td style="text-align:center">[GAP] – 从可选GAP的缓冲区模拟低频标签(以微秒为单位)</td></tr><tr><td style="text-align:center">simbidir</td><td style="text-align:center">模拟低频标签（在读卡器和标签之间双向传输数据）</td></tr><tr><td style="text-align:center">simman</td><td style="text-align:center">&lt;时钟&gt; &lt;比特率&gt; [GAP] 模拟任意曼彻斯特低频标签</td></tr><tr><td style="text-align:center">ti</td><td style="text-align:center">TI卡类相关命令…</td></tr><tr><td style="text-align:center">hitag</td><td style="text-align:center">Hitag标签与应答相关…</td></tr><tr><td style="text-align:center">vchdemod</td><td style="text-align:center">[‘clone’] - 解调VeriChip公司样本</td></tr><tr><td style="text-align:center">t55xx</td><td style="text-align:center">T55xx卡类相关命令…</td></tr><tr><td style="text-align:center">PCF7931</td><td style="text-align:center">PCF7931卡类相关命令…</td></tr></tbody></table><h3 id="3-1-4-hf高频相关命令"><a href="#3-1-4-hf高频相关命令" class="headerlink" title="3.1.4 hf高频相关命令"></a>3.1.4 hf高频相关命令</h3><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">介绍</th></tr></thead><tbody><tr><td style="text-align:center">14a</td><td style="text-align:center">ISO14443A卡的相关命令…</td></tr><tr><td style="text-align:center">14b</td><td style="text-align:center">ISO14443B卡的相关命令…</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center">ISO15693卡的相关命令…</td></tr><tr><td style="text-align:center">epa</td><td style="text-align:center">德国身份证的相关命令…</td></tr><tr><td style="text-align:center">legic</td><td style="text-align:center">LEGIC卡的相关命令…</td></tr><tr><td style="text-align:center">iclass</td><td style="text-align:center">ICLASS卡的相关命令…</td></tr><tr><td style="text-align:center">mf</td><td style="text-align:center">MIFARE卡的相关命令…</td></tr><tr><td style="text-align:center">tune</td><td style="text-align:center">连续测量高频天线的调谐</td></tr></tbody></table><p>支持的高频卡很多，最常用的是MIFARE卡，因此暂只详细介绍下MIFARE卡的命令。</p><ul><li><strong>hf mf（MIFARE卡的相关命令…）</strong></li></ul><table><thead><tr><th style="text-align:center">命令</th><th style="text-align:center">介绍</th></tr></thead><tbody><tr><td style="text-align:center">dbg</td><td style="text-align:center">设置默认调试模式</td></tr><tr><td style="text-align:center">rdbl</td><td style="text-align:center">读取MIFARE classic卡的区块数据</td></tr><tr><td style="text-align:center">rdsc</td><td style="text-align:center">读取MIFARE classic卡的扇区数据</td></tr><tr><td style="text-align:center">dump</td><td style="text-align:center">导出MIFARE classic卡的数据到二进制文件</td></tr><tr><td style="text-align:center">restore</td><td style="text-align:center">从二进制文件恢复数据到空白的MIFARE classic卡</td></tr><tr><td style="text-align:center">wrbl</td><td style="text-align:center">改写MIFARE classic卡的区块数据</td></tr><tr><td style="text-align:center">chk</td><td style="text-align:center">测试MIFARE classic卡的各个区块KEY A/B</td></tr><tr><td style="text-align:center">darkside</td><td style="text-align:center">基于PRNG漏洞，执行mifare “DarkSide”攻击操作</td></tr><tr><td style="text-align:center">nested</td><td style="text-align:center">测试嵌套认证漏洞，基于一个已知Key，获取都有扇区Keys</td></tr><tr><td style="text-align:center">sniff</td><td style="text-align:center">嗅卡片与读写器之间的通讯(等同于hf 14a snoop)</td></tr><tr><td style="text-align:center">sim</td><td style="text-align:center">模拟一个MIFARE卡片</td></tr><tr><td style="text-align:center">eclr</td><td style="text-align:center">清除仿真内存的各区块数据</td></tr><tr><td style="text-align:center">eget</td><td style="text-align:center">获取仿真内存的各区块数据</td></tr><tr><td style="text-align:center">eset</td><td style="text-align:center">设置仿真内存的各区块数据</td></tr><tr><td style="text-align:center">eload</td><td style="text-align:center">从导出的文件加载仿真数据</td></tr><tr><td style="text-align:center">esave</td><td style="text-align:center">导出保存仿真数据到文件</td></tr><tr><td style="text-align:center">ecfill</td><td style="text-align:center">利用仿真器的keys来填补仿真内存</td></tr><tr><td style="text-align:center">ekeyprn</td><td style="text-align:center">打印输出仿真内存中的keys</td></tr><tr><td style="text-align:center">csetuid</td><td style="text-align:center">直接设置可改UID卡的UID</td></tr><tr><td style="text-align:center">csetblk</td><td style="text-align:center">把对应区块数据写入UID卡</td></tr><tr><td style="text-align:center">cgetblk</td><td style="text-align:center">读取UID卡对应区块数据</td></tr><tr><td style="text-align:center">cgetsc</td><td style="text-align:center">读取UID卡对应扇区数据</td></tr><tr><td style="text-align:center">cload</td><td style="text-align:center">写入dump数据到UID卡</td></tr><tr><td style="text-align:center">csave</td><td style="text-align:center">保存UID卡数据到文件或者仿真内存</td></tr></tbody></table><p>参考资料：<br><a href="https://pm3.echo.cool/index.php/2018/08/20/pm3%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/" target="_blank" rel="external">PM3常用命令</a></p><h2 id="3-2-破解加密门禁卡"><a href="#3-2-破解加密门禁卡" class="headerlink" title="3.2 破解加密门禁卡"></a>3.2 破解加密门禁卡</h2><h3 id="3-2-1-破解思路"><a href="#3-2-1-破解思路" class="headerlink" title="3.2.1 破解思路"></a>3.2.1 破解思路</h3><ul><li>1.获得任意扇区的密钥（使用以下任一方法成功即可）:<br>　a.PRNG漏洞攻击得0扇区密匙，对应命令：<code>hf mf darkside</code>；<br>　b.默认密码扫描获得密匙，对应命令：<code>hf mf chk *1 ? t d</code>；<br>　c.探读卡机和卡片交互数据获得密匙；<br>　d.模拟成M1卡刷卡后捕获密匙（挑读卡机，兼容性不好）；</li></ul><p>举例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line">pm3 --&gt; hf mf chk           </div><div class="line">Usage:  hf mf chk [h] &lt;block number&gt;|&lt;*card memory&gt; &lt;key type (A/B/?)&gt; [t|d] [&lt;key (12 hex symbols)&gt;] [&lt;dic (*.dic)&gt;]          </div><div class="line">Options:          </div><div class="line">      h    this help          </div><div class="line">      *    all sectors based on card memory, other values then below defaults to 1k          </div><div class="line">      0 - MINI(320 bytes)          </div><div class="line">      1 - 1K          </div><div class="line">      2 - 2K          </div><div class="line">      4 - 4K          </div><div class="line">      d    write keys to binary file          </div><div class="line">      t    write keys to emulator memory</div><div class="line">          </div><div class="line">          </div><div class="line">Examples:          </div><div class="line">      hf mf chk 0 A 1234567890ab keys.dic     -- target block 0, Key A          </div><div class="line">      hf mf chk *1 ? t                        -- target all blocks, all keys, 1K, write to emul          </div><div class="line">      hf mf chk *1 ? d                        -- target all blocks, all keys, 1K, write to file </div><div class="line"></div><div class="line">pm3 --&gt; hf mf chk *1 ? t d          </div><div class="line">No key specified, trying default keys          </div><div class="line">[ 0] ffffffffffff          </div><div class="line">[ 1] 000000000000          </div><div class="line">[ 2] a0a1a2a3a4a5          </div><div class="line">[ 3] b0b1b2b3b4b5          </div><div class="line">[ 4] c0c1c2c3c4c5          </div><div class="line">[ 5] d0d1d2d3d4d5          </div><div class="line">[ 6] aabbccddeeff          </div><div class="line">[ 7] 1a2b3c4d5e6f          </div><div class="line">[ 8] 123456789abc          </div><div class="line">[ 9] 010203040506          </div><div class="line">[10] 123456abcdef          </div><div class="line">[11] abcdef123456          </div><div class="line">[12] 4d3a99c351dd          </div><div class="line">[13] 1a982c7e459a          </div><div class="line">[14] d3f7d3f7d3f7          </div><div class="line">[15] 714c5c886e97          </div><div class="line">[16] 587ee5f9350f          </div><div class="line">[17] a0478cc39091          </div><div class="line">[18] 533cb6c723f6          </div><div class="line">[19] 8fd0a4f256e9          </div><div class="line"></div><div class="line">Time in checkkeys: 0 seconds</div><div class="line">          </div><div class="line">testing to read key B...          </div><div class="line">|---|----------------|---|----------------|---|          </div><div class="line">|sec|key A           |res|key B           |res|          </div><div class="line">|---|----------------|---|----------------|---|          </div><div class="line">|000|  ------------  | 0 |  ------------  | 0 |          </div><div class="line">|001|  ------------  | 0 |  ------------  | 0 |          </div><div class="line">|002|  ------------  | 0 |  ------------  | 0 |          </div><div class="line">|003|  ------------  | 0 |  ------------  | 0 |          </div><div class="line">|004|  ------------  | 0 |  ------------  | 0 |          </div><div class="line">|005|  ------------  | 0 |  ------------  | 0 |          </div><div class="line">|006|  ------------  | 0 |  ------------  | 0 |          </div><div class="line">|007|  ------------  | 0 |  ------------  | 0 |          </div><div class="line">|008|  ------------  | 0 |  ------------  | 0 |          </div><div class="line">|009|  ------------  | 0 |  ------------  | 0 |          </div><div class="line">|010|  ------------  | 0 |  ------------  | 0 |          </div><div class="line">|011|  ------------  | 0 |  ------------  | 0 |          </div><div class="line">|012|  ------------  | 0 |  ------------  | 0 |          </div><div class="line">|013|  ------------  | 0 |  ------------  | 0 |          </div><div class="line">|014|  ------------  | 0 |  ------------  | 0 |          </div><div class="line">|015|  ------------  | 0 |  ------------  | 0 |          </div><div class="line">|---|----------------|---|----------------|---|          </div><div class="line">Found keys have been transferred to the emulator memory          </div><div class="line">Printing keys to binary file hf-mf-4033B54A-key.bin...          </div><div class="line">Found keys have been dumped to file hf-mf-4033B54A-key.bin. 0xffffffffffff has been inserted for unknown keys.</div></pre></td></tr></table></figure></p><p><code>hf mf chk *1 ? t d</code>命令会使用默认密码扫描，含义如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">*1: 第一个为检测块的编号，第二个为IC卡内存大小；</div><div class="line">?: 检测秘钥是A还是B，或者两者；</div><div class="line">t: 保存检测秘钥到Proxmark3内存；</div><div class="line">d: 保存检测到秘钥到文件，默认文件名hf-mf-UID-key.bin</div></pre></td></tr></table></figure></p><ul><li>2.利用<code>MFOC</code>漏洞，用已知扇区密匙求所有扇区密匙；</li></ul><p>举例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">pm3 --&gt;  hf mf nested          </div><div class="line">Usage:          </div><div class="line"> all sectors:  hf mf nested  &lt;card memory&gt; &lt;block number&gt; &lt;key A/B&gt; &lt;key (12 hex symbols)&gt; [t,d]          </div><div class="line"> one sector:   hf mf nested  o &lt;block number&gt; &lt;key A/B&gt; &lt;key (12 hex symbols)&gt;          </div><div class="line">               &lt;target block number&gt; &lt;target key A/B&gt; [t]          </div><div class="line">Options:          </div><div class="line">      h    this help          </div><div class="line">      card memory - 0 - MINI(320 bytes), 1 - 1K, 2 - 2K, 4 - 4K, &lt;other&gt; - 1K          </div><div class="line">      t    transfer keys into emulator memory          </div><div class="line">      d    write keys to binary file `hf-mf-&lt;UID&gt;-key.bin`          </div><div class="line">          </div><div class="line">Examples:          </div><div class="line">      hf mf nested 1 0 A FFFFFFFFFFFF           </div><div class="line">      hf mf nested 1 0 A FFFFFFFFFFFF t           </div><div class="line">      hf mf nested 1 0 A FFFFFFFFFFFF d           </div><div class="line">      hf mf nested o 0 A FFFFFFFFFFFF 4 A  </div><div class="line">        </div><div class="line">pm3 --&gt; hf mf nested 1 0 A FFFFFFFFFFFF d t          </div><div class="line">[+] Testing known keys. Sector count=16          </div><div class="line"></div><div class="line">[-] Chunk: 0.7s | found 31/32 keys (21)          </div><div class="line">[+] Time to check 20 known keys: 1 seconds</div><div class="line">          </div><div class="line">[+] enter nested attack          </div><div class="line">[+] target block:  4 key type: A  -- found valid key [112233445566]          </div><div class="line"></div><div class="line">[-] Chunk: 0.7s | found 32/32 keys (1)          </div><div class="line">[+] time in nested: 2 seconds</div><div class="line">          </div><div class="line">[+] trying to read key B...          </div><div class="line">|---|----------------|---|----------------|---|          </div><div class="line">|sec|key A           |res|key B           |res|          </div><div class="line">|---|----------------|---|----------------|---|          </div><div class="line">|000|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          </div><div class="line">|001|  112233445566  | 1 |  ffffffffffff  | 1 |          </div><div class="line">|002|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          </div><div class="line">|003|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          </div><div class="line">|004|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          </div><div class="line">|005|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          </div><div class="line">|006|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          </div><div class="line">|007|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          </div><div class="line">|008|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          </div><div class="line">|009|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          </div><div class="line">|010|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          </div><div class="line">|011|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          </div><div class="line">|012|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          </div><div class="line">|013|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          </div><div class="line">|014|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          </div><div class="line">|015|  ffffffffffff  | 1 |  ffffffffffff  | 1 |          </div><div class="line">|---|----------------|---|----------------|---|          </div><div class="line">[+] saving keys to binary file hf-mf-4033B54A-key.bin...</div></pre></td></tr></table></figure></p><p><code>hf mf nested 1 0 A FFFFFFFFFFFF d t</code>命令用已知扇区密匙求所有扇区密匙，含义如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">1: IC卡内存大小；</div><div class="line">0: 块编号；</div><div class="line">A: 秘钥类型；</div><div class="line">d: 保存检测到秘钥到文件，默认文件名hf-mf-UID-key.bin</div><div class="line">t: 保存检测秘钥到Proxmark3内存；</div></pre></td></tr></table></figure></p><ul><li>3.用破解出的密匙把卡片数据读出导出电脑；</li></ul><p>举例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line">pm3 --&gt; hf mf dump          </div><div class="line">|-----------------------------------------|          </div><div class="line">|------ Reading sector access bits...-----|          </div><div class="line">|-----------------------------------------|          </div><div class="line">|-----------------------------------------|          </div><div class="line">|----- Dumping all blocks to file... -----|          </div><div class="line">|-----------------------------------------|          </div><div class="line">[+] successfully read block  0 of sector  0.          </div><div class="line">[+] successfully read block  1 of sector  0.          </div><div class="line">[+] successfully read block  2 of sector  0.          </div><div class="line">[+] successfully read block  3 of sector  0.          </div><div class="line">[+] successfully read block  0 of sector  1.          </div><div class="line">[+] successfully read block  1 of sector  1.          </div><div class="line">[+] successfully read block  2 of sector  1.          </div><div class="line">[+] successfully read block  3 of sector  1.          </div><div class="line">[+] successfully read block  0 of sector  2.          </div><div class="line">[+] successfully read block  1 of sector  2.          </div><div class="line">[+] successfully read block  2 of sector  2.          </div><div class="line">[+] successfully read block  3 of sector  2.          </div><div class="line">[+] successfully read block  0 of sector  3.          </div><div class="line">[+] successfully read block  1 of sector  3.          </div><div class="line">[+] successfully read block  2 of sector  3.          </div><div class="line">[+] successfully read block  3 of sector  3.          </div><div class="line">[+] successfully read block  0 of sector  4.          </div><div class="line">[+] successfully read block  1 of sector  4.          </div><div class="line">[+] successfully read block  2 of sector  4.          </div><div class="line">[+] successfully read block  3 of sector  4.          </div><div class="line">[+] successfully read block  0 of sector  5.          </div><div class="line">[+] successfully read block  1 of sector  5.          </div><div class="line">[+] successfully read block  2 of sector  5.          </div><div class="line">[+] successfully read block  3 of sector  5.          </div><div class="line">[+] successfully read block  0 of sector  6.          </div><div class="line">[+] successfully read block  1 of sector  6.          </div><div class="line">[+] successfully read block  2 of sector  6.          </div><div class="line">[+] successfully read block  3 of sector  6.          </div><div class="line">[+] successfully read block  0 of sector  7.          </div><div class="line">[+] successfully read block  1 of sector  7.          </div><div class="line">[+] successfully read block  2 of sector  7.          </div><div class="line">[+] successfully read block  3 of sector  7.          </div><div class="line">[+] successfully read block  0 of sector  8.          </div><div class="line">[+] successfully read block  1 of sector  8.          </div><div class="line">[+] successfully read block  2 of sector  8.          </div><div class="line">[+] successfully read block  3 of sector  8.          </div><div class="line">[+] successfully read block  0 of sector  9.          </div><div class="line">[+] successfully read block  1 of sector  9.          </div><div class="line">[+] successfully read block  2 of sector  9.          </div><div class="line">[+] successfully read block  3 of sector  9.          </div><div class="line">[+] successfully read block  0 of sector 10.          </div><div class="line">[+] successfully read block  1 of sector 10.          </div><div class="line">[+] successfully read block  2 of sector 10.          </div><div class="line">[+] successfully read block  3 of sector 10.          </div><div class="line">[+] successfully read block  0 of sector 11.          </div><div class="line">[+] successfully read block  1 of sector 11.          </div><div class="line">[+] successfully read block  2 of sector 11.          </div><div class="line">[+] successfully read block  3 of sector 11.          </div><div class="line">[+] successfully read block  0 of sector 12.          </div><div class="line">[+] successfully read block  1 of sector 12.          </div><div class="line">[+] successfully read block  2 of sector 12.          </div><div class="line">[+] successfully read block  3 of sector 12.          </div><div class="line">[+] successfully read block  0 of sector 13.          </div><div class="line">[+] successfully read block  1 of sector 13.          </div><div class="line">[+] successfully read block  2 of sector 13.          </div><div class="line">[+] successfully read block  3 of sector 13.          </div><div class="line">[+] successfully read block  0 of sector 14.          </div><div class="line">[+] successfully read block  1 of sector 14.          </div><div class="line">[+] successfully read block  2 of sector 14.          </div><div class="line">[+] successfully read block  3 of sector 14.          </div><div class="line">[+] successfully read block  0 of sector 15.          </div><div class="line">[+] successfully read block  1 of sector 15.          </div><div class="line">[+] successfully read block  2 of sector 15.          </div><div class="line">[+] successfully read block  3 of sector 15.          </div><div class="line">[+] dumped 64 blocks (1024 bytes) to file hf-mf-4033B54A-data.bin</div></pre></td></tr></table></figure></p><p>因为前面把秘钥保存到Proxmark3内存，这里就不需要指定秘钥文件，最后将生成<code>hf-mf-UID-data.bin</code>文件，里面就是IC卡的所有数据。</p><ul><li>4.放上UID/CUID空卡，把电脑中的数据写入卡中；<br>Proxmark3不能识别、使用bin文件，需要转换成eml格式，可以使用<code>PM3 Universal GUI</code>提供的脚本转换。<br>举例：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">pm3 --&gt; script run dumptoemul.lua -i hf-mf-4033B54A-data.bin -o 4033B54A.eml                    </div><div class="line">[+] Executing: dumptoemul.lua, args &apos;-i hf-mf-4033B54A-data.bin -o 4033B54A.eml  &apos;</div><div class="line">          </div><div class="line">Wrote an emulator-dump to the file 4033B54A.eml</div><div class="line">          </div><div class="line">[+] Finished</div></pre></td></tr></table></figure></li></ul><p><code>script run</code>命令将运行<code>scripts</code>目录下对应脚本，后面接的参数由脚本决定，可以打开脚本看说明，<code>dumptoemul.lua</code>脚本参数含义如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">i: 指定待转换的bin文件；</div><div class="line">o: 指定生成的eml文件名；</div></pre></td></tr></table></figure></p><p>之后便会得到一个eml文件。</p><p><strong>注意，UID卡和CUID卡读写数据的流程存在差异，这里分开举例。</strong><br>UID卡存在后门指令，无需知道秘钥即可实现读写。<br>CUID卡没有后门指令，验证对密码后才可修改内容，因此每次写CUID卡前，都需要按前面的方式先破解密码，才能利用密码写数据。<br>另外，如果不小心写错UID号的校验位，导致无法读卡，此时就无法修复，只能做废卡处理。<br>因此，如果是使用IC卡作为中介写到手环/手机，那么UID卡是最好的选择，无论怎么写，就算写错也能利用后门指令修复。如果是复制卡，卡作为最终目标，那么CUID不响应后门指令，可以通过UID防火墙，是不错的选择。</p><p><strong>写UID卡：</strong><br>前面得到了卡数据文件4033B54A.eml，现在将其写到UID卡里。<br>举例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">pm3 --&gt; hf mf cload 4033B54A          </div><div class="line">................................................................</div><div class="line">          </div><div class="line">[+] Loaded 64 blocks from file: 4033B54A.eml</div></pre></td></tr></table></figure></p><p>注命令里传入的待写uml文件，不需要文件扩展名。<br>写完之后没有任何回显提示，可以使用<code>hf mf cgetsc 0</code>读出分区数据，再进行对比。</p><p><strong>写CUID卡:</strong><br>举例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">pm3 --&gt; hf mf wrbl          </div><div class="line">Usage:  hf mf wrbl    &lt;block number&gt; &lt;key A/B&gt; &lt;key (12 hex symbols)&gt; &lt;block data (32 hex symbols)&gt;          </div><div class="line">Examples:          </div><div class="line">        hf mf wrbl 0 A FFFFFFFFFFFF 000102030405060708090A0B0C0D0E0F</div><div class="line"></div><div class="line">pm3 --&gt; hf mf wrbl 0 A FFFFFFFFFFFF 01020304040804006263646566676869          </div><div class="line">--block no:0, key type:A, key:FF FF FF FF FF FF           </div><div class="line">--data: 01 02 03 04 04 08 04 00 62 63 64 65 66 67 68 69           </div><div class="line">isOk:01</div></pre></td></tr></table></figure></p><p><code>hf mf wrbl</code>命令会根据传入的秘钥，修改数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">0: 指定修改第0分区；</div><div class="line">A: 指定秘钥为A类型；</div><div class="line">FFFFFFFFFFFF: 指定该秘钥；</div><div class="line">000102030405060708090A0B0C0D0E0F: 指定修改的数据；</div></pre></td></tr></table></figure></p><p>使用<code>PM3 Universal GUI</code>这样一个一个修改数据，感觉很麻烦，应该有其它方法暂未发现。<br>也可以使用其它客户端软件，有些针对国情修改的傻瓜式操作，使用起来也很方便。<br>这样写完一个分区后，<code>isOk</code>显示为<code>01</code>表示修改成功，全部修改完后，可以重新读取出来，对比数据。</p><h3 id="3-2-1-写手机-手环思路"><a href="#3-2-1-写手机-手环思路" class="headerlink" title="3.2.1 写手机/手环思路"></a>3.2.1 写手机/手环思路</h3><p>前面，利用CUID卡和手机应用MifareClassicTool，实现了手机未root情况下，模拟出加密卡UID号，通过了门禁。<br>有些门禁，不仅检测UID卡号，还检测某分区的加密数据，这就需要往手机NFC里写入加密数据。<br>小米手机自带的门卡模拟功能有两种：一种是模拟实体门卡，只能模拟非加密卡，即就是复制非加密卡的UID；第二种是添加虚拟门卡，会生成一张UID随机的卡，需要去物业处写卡，即物业把该卡UID号加入系统，并写入加密数据。<br>要想复制加密卡到手机，这两种方法都不行，首先排除第二种，系统生成的UID随机的卡，该卡的UID是无法修改的。第一种方法，虽然能复制得到UID，但没法复制加密数据，但至少成功了一半。<br>使用第一种方法模拟出来的卡，虽然系统不能复制加密数据，但可以使用Proxmark3写入加密数据，也就实现了UID号和加密数据的复制。</p><blockquote><p>因此，模拟加密卡的思路：<br>1.使用Proxmark3获取加密卡数据；<br>2.只写UID号到实体UID/CUID卡；<br>3.手机模拟该UID/CUID卡；(实现UID号的复制)<br>4.使用Proxmark3往手机模拟卡写入加密数据；（实现加密数据的复制）</p></blockquote><p><strong>1.使用Proxmark3获取加密卡数据</strong><br>将加密门禁卡放在Proxmark3，参考前面<code>3.2.1 破解思路</code>，先用默认密码扫描，获得任意扇区的密钥，然后用已知扇区密匙求所有扇区密匙，利用所有秘钥得到所有数据并导出，最后转换成eml格式。<br>依次数据以下命令，获取加密卡数据：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hf mf chk *1 ? t d</div><div class="line">hf mf nested 1 0 A FFFFFFFFFFFF d t</div><div class="line">hf mf dump</div><div class="line">script run dumptoemul.lua -i hf-mf-4033B54A-data.bin -o 4033B54A.eml</div></pre></td></tr></table></figure></p><p>得到三个文件：<br><code>hf-mf-4033B54A-key.bin</code>：秘钥文件；<br><code>hf-mf-4033B54A-data.bin</code>：数据文件；<br><code>4033B54A.eml</code>：数据文件eml格式(非必须)；</p><p><strong>2.只写UID号到实体UID卡</strong><br>将UID卡放在Proxmark3上，建议使用UID卡，写错了也能使用后门指令恢复。<br>用文本查看软件，如<a href="https://notepad-plus-plus.org/download/v7.7.1.html" target="_blank" rel="external">Notepad++</a>打开<code>hf-mf-4033B54A-data.bin</code>或<code>4033B54A.eml</code>，复制第一行数据，我这里为<code>4033b54a8c0804000164efbc1488f31d</code>。<br>输入以下命令，设置UID号到UID卡：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hf mf csetblk 0 4033b54a8c0804000164efbc1488f31d</div></pre></td></tr></table></figure></p><p>输入以下命令，查看是否设置成功：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hf 14a info</div></pre></td></tr></table></figure></p><p>显示出<code>UID : 40 33 B5 4A</code>，和前面的<code>4033b54a8c0804000164efbc1488f31d</code>对应上了，说明成功。</p><p><strong>3.手机模拟该UID卡</strong><br>使用小米手机自带的模拟实体门卡功能，模拟该UID卡。</p><div align="center"><img width="300" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190712/22.jpg"></div><p><strong>4.使用Proxmark3往手机模拟卡写入加密数据</strong><br>手机模拟前面复制的卡，然后放到放在Proxmark3上。<br>输入以下命令，将加密数据写到手机模拟卡里：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hf mf restore u 4033B54A</div></pre></td></tr></table></figure></p><p>显示如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">Restoring hf-mf-4033B54A-data.bin to card          </div><div class="line">Writing to block   0: 40 33 B5 4A 8C 08 04 00 01 64 EF BC 14 88 F3 1D           </div><div class="line">#db# Cmd Error: 04          </div><div class="line">#db# Write block error          </div><div class="line">isOk:00          </div><div class="line">Writing to block   1: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00           </div><div class="line">isOk:01          </div><div class="line">Writing to block   2: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00           </div><div class="line">isOk:01          </div><div class="line">Writing to block   3: FF FF FF FF FF FF FF 07 80 69 FF FF FF FF FF FF           </div><div class="line">isOk:01          </div><div class="line">Writing to block   4: B5 33 40 50 12 31 23 00 00 01 00 00 23 59 00 00           </div><div class="line">isOk:01          </div><div class="line">Writing to block   5: 01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00           </div><div class="line">isOk:01          </div><div class="line">Writing to block   6: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 </div><div class="line">……</div></pre></td></tr></table></figure></p><p>可看到第0分区写入失败，其它分区写入成功，既没破坏0分区的UID号，又写入了加密数据，达到了目的。</p><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录小米手机NFC模拟加密门禁卡，以及Proxmark3的使用。&lt;br&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
      <category term="NFC" scheme="http://yoursite.com/tags/NFC/"/>
    
  </entry>
  
  <entry>
    <title>AM335X——USB摄像头</title>
    <link href="http://yoursite.com/2019/06/23/AM335X%E2%80%94%E2%80%94USB%E6%91%84%E5%83%8F%E5%A4%B4/"/>
    <id>http://yoursite.com/2019/06/23/AM335X——USB摄像头/</id>
    <published>2019-06-23T08:50:18.000Z</published>
    <updated>2019-11-12T02:46:25.875Z</updated>
    
    <content type="html"><![CDATA[<p>记录使用AM335X，在LCD和Web上显示USB摄像头图像。<br><a id="more"></a><br>之前在Tiny4412上学习了UVC，并在Tiny4412的LCD上显示了USB摄像头图像。<br>最近需要在AM335X上，实现USB摄像头图像在LCD和Web上显示，简单记录一下。</p><h1 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1.准备工作"></a>1.准备工作</h1><h2 id="1-1-修改UVC驱动"><a href="#1-1-修改UVC驱动" class="headerlink" title="1.1 修改UVC驱动"></a>1.1 修改UVC驱动</h2><p>参考之前博客博客<a href="https://hceng.cn/2018/04/22/Linux%E6%91%84%E5%83%8F%E5%A4%B4%E9%A9%B1%E5%8A%A82%E2%80%94%E2%80%94UVC/#2-2%E7%A7%BB%E6%A4%8D%E5%86%85%E6%A0%B8%E6%91%84%E5%83%8F%E5%A4%B4%E9%A9%B1%E5%8A%A8" target="_blank" rel="external">Linux摄像头驱动2——UVC_2.2移植内核摄像头驱动</a>里，修改<code>drivers/media/usb/uvc/uvc_driver.c</code>和<code>drivers/media/usb/uvc/uvc_video.c</code>。</p><h2 id="1-2-添加UVC驱动"><a href="#1-2-添加UVC驱动" class="headerlink" title="1.2 添加UVC驱动"></a>1.2 添加UVC驱动</h2><p>在内核里，添加UVC驱动<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Device Drivers  ---&gt; </div><div class="line">    &lt;*&gt; Multimedia support  ---&gt;</div><div class="line">        [*]   Media USB Adapters  ---&gt;</div><div class="line">            &lt;*&gt;   USB Video Class (UVC)</div></pre></td></tr></table></figure></p><p>重新编译内核，烧写。</p><h1 id="2-LCD显示"><a href="#2-LCD显示" class="headerlink" title="2.LCD显示"></a>2.LCD显示</h1><p>参考之前的博客<a href="https://hceng.cn/2018/05/18/Linux%E6%91%84%E5%83%8F%E5%A4%B4%E9%A9%B1%E5%8A%A83%E2%80%94%E2%80%94LCD%E6%98%BE%E7%A4%BA/#9-%E5%AE%9E%E6%B5%8B%E6%95%88%E6%9E%9C%E5%8F%8A%E6%BA%90%E7%A0%81" target="_blank" rel="external">Linux摄像头驱动3——LCD显示</a>，直接使用代码，交叉编译得到LCD显示程序<code>video2lcd</code>。</p><p>把<code>video2lcd</code>拷贝到AM335X里运行，发现提示报错：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Wrong JPEG library version: library is 92, caller expects 62</div></pre></td></tr></table></figure></p><p><code>video2lcd</code>中的<code>mjpeg2rgb.c</code>会用到<code>libjpeg</code>库，程序里请求的是62版本的，而AM335x里比较新，为92版本，提示不兼容。<br>看了下LCD显示程序的源码，源码里没看到哪里对版本需求的定义，决定暂时先重新移植62版的<code>libjpeg</code>库。</p><p>先下载<a href="http://www.ijg.org/files/" target="_blank" rel="external"><code>jpegsrc.v6b.tar.gz</code></a>，编译该源码会用到<a href="http://ftp.yz.yamagata-u.ac.jp/pub/GNU/libtool/" target="_blank" rel="external"><code>libtool-1.5.22.tar.gz</code></a>，也要下载。</p><ul><li><p>交叉编译<code>libtool-1.5.22</code><br>1、因为是交叉编译，需要先创建安装路径，让生成的文件保存在该目录，避免覆盖主机的相关文件，<code>mkdir /work/out_libtool</code>；<br>2、解压源码，<code>tar xf libtool-1.5.22.tar.gz</code>；<br>3、进入解压目录，设置配置文件，<code>./configure --host=arm-linux-gnueabihf --prefix=/work/out_libtool CC=arm-linux-gnueabihf-gcc</code>；<br>4、交叉编译、安装，<code>make &amp;&amp; make install</code>；</p></li><li><p>交叉编译<code>jpegsrc.v6b</code><br>1、先创建安装路径，<code>mkdir /work/out_jpeg</code>；<br>2、解压源码，<code>tar xf libtool-1.5.22.tar.gz</code>；<br>3、进入解压目录，设置配置文件，<code>./configure --host=arm-linux-gnueabihf --prefix=/work/out_jpeg CC=arm-linux-gnueabihf-gcc --enable-shared --enable-static</code>；<br>4、该程序无法自动生成一些目录，手动创建以下四个目录:<code>/work/out_jpeg/man/man1</code>、<code>/work/out_jpeg/include</code>、<code>/work/out_jpeg/lib</code>、<code>/work/out_jpeg/bin</code>；<br>5、将前面<code>libtool-1.5.22</code>生成的<code>libtool</code>和<code>libtoolize</code>复制到源码根目录，<code>cp /work/libtool/libtool /work/jpeg-6b/</code>、<code>cp work/libtool/libtoolize /work/jpeg-6b/</code>；<br>6、交叉编译、安装，<code>make &amp;&amp; make install</code>；</p></li></ul><p>在<code>/work/out_jpeg/lib</code>会生成如下文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">libjpeg.so  libjpeg.so.62  libjpeg.so.62.0.0</div></pre></td></tr></table></figure></p><p>在AM335x里，执行<code>rm /usr/lib/libjpeg*</code>，删除AM335x的<code>libjpeg*</code>相关文件，复制前面生成的文件到该目录下，因为原来<code>/usr/lib/</code>下还有<code>/usr/lib/libjpeg.so.8</code>和<code>libjpeg.so.9</code>，其它程序(后面Web)会用到，还需要执行<code>ln -sf /usr/lib/libjpeg.so.62 libjpeg.so.8</code>和<code>ln -sf /usr/lib/libjpeg.so.62 libjpeg.so.9</code>，让<code>libjpeg.so.8</code>和<code>libjpeg.so.9</code>软链接到<code>libjpeg.so.62</code>，此时<code>/usr/lib/libjpeg*</code>如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># ls /usr/lib/libjpeg* -lh</div><div class="line">-rwxr-xr-x    1 root     root      134.3K Jan  1  1970 /usr/lib/libjpeg.so</div><div class="line">-rwxr-xr-x    1 root     root      134.3K Jan  1  1970 /usr/lib/libjpeg.so.62</div><div class="line">-rwxr-xr-x    1 root     root      134.3K Jan  1  1970 /usr/lib/libjpeg.so.62.0.0</div><div class="line">lrwxrwxrwx    1 root     root          22 Jan  1 00:06 /usr/lib/libjpeg.so.8 -&gt; /usr/lib/libjpeg.so.62</div><div class="line">lrwxrwxrwx    1 root     root          22 Jan  1 00:07 /usr/lib/libjpeg.so.9 -&gt; /usr/lib/libjpeg.so.62</div></pre></td></tr></table></figure></p><p>此时再执行<code>video2lcd -v /dev/video0 -d /dev/fb0</code>即可在LCD上看到USB摄像头图像。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190623/1.jpg"></div><h1 id="3-Web显示"><a href="#3-Web显示" class="headerlink" title="3.Web显示"></a>3.Web显示</h1><p><a href="https://sourceforge.net/projects/mjpg-streamer/" target="_blank" rel="external"><code>MJPG-streamer</code></a>是一个优秀的开源项目，它可以通过HTTP的方式访问Linux上面的兼容摄像头，从而做到远程视频传输的效果。</p><p>在<code>Buildroot</code>里添加<code>mjpg-streamer</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Target packages  ---&gt;</div><div class="line">    Networking applications  ---&gt;</div><div class="line">        [*] mjpg-streamer</div></pre></td></tr></table></figure></p><p>重新烧写根文件系统，执行以下命令启动服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mjpg_streamer -i &quot;/usr/lib/input_uvc.so -d /dev/video0 -r 640x480 -f 30 -q 90 -n&quot; -o &quot;/usr/lib/output_http.so -w /usr/www&quot;</div></pre></td></tr></table></figure></p><p>打开浏览器，输入<code>AM335X的IP:8080</code>即可看到默认显示界面：</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190623/2.jpg"></div><p>在<code>/usr/www</code>目录下，有很多html的示例，包括静态图片、视频图像、控制等，参考html修改，实现自定义的Web界面。</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190623/3.jpg"></div><p>如果想要外网访问，参考之前博客<a href="https://hceng.cn/2019/04/22/%E9%BB%91%E7%BE%A4%E6%99%96/#3-2-2-%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86frp" target="_blank" rel="external"><code>黑群辉_3.2.2 反向代理frp</code></a>尝试外网访问。</p><p>最后再记录下命令参数含义。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"># mjpg_streamer --help</div><div class="line">-----------------------------------------------------------------------</div><div class="line">Usage: mjpg_streamer</div><div class="line">-i | --input &quot;&lt;input-plugin.so&gt; [parameters]&quot;</div><div class="line">-o | --output &quot;&lt;output-plugin.so&gt; [parameters]&quot;</div><div class="line">[-h | --help ]........: display this help</div><div class="line">[-v | --version ].....: display version information</div><div class="line">[-b | --background]...: fork to the background, daemon mode</div><div class="line">-----------------------------------------------------------------------</div><div class="line">Example #1:</div><div class="line">To open an UVC webcam &quot;/dev/video1&quot; and stream it via HTTP:</div><div class="line">mjpg_streamer -i &quot;input_uvc.so -d /dev/video1&quot; -o &quot;output_http.so&quot;</div><div class="line">-----------------------------------------------------------------------</div><div class="line">Example #2:</div><div class="line">To open an UVC webcam and stream via HTTP port 8090:</div><div class="line">mjpg_streamer -i &quot;input_uvc.so&quot; -o &quot;output_http.so -p 8090&quot;</div><div class="line">-----------------------------------------------------------------------</div><div class="line">Example #3:</div><div class="line">To get help for a certain input plugin:</div><div class="line">mjpg_streamer -i &quot;input_uvc.so --help&quot;</div><div class="line">-----------------------------------------------------------------------</div><div class="line">In case the modules (=plugins) can not be found:</div><div class="line">* Set the default search path for the modules with:</div><div class="line">export LD_LIBRARY_PATH=/path/to/plugins,</div><div class="line">* or put the plugins into the &quot;/lib/&quot; or &quot;/usr/lib&quot; folder,</div><div class="line">* or instead of just providing the plugin file name, use a complete</div><div class="line">path and filename:</div><div class="line">mjpg_streamer -i &quot;/path/to/modules/input_uvc.so&quot;</div><div class="line">-----------------------------------------------------------------------</div></pre></td></tr></table></figure><p>得知<code>mjpg_streamer</code>后需要接<code>-i</code>和<code>-o</code>两个参数，再分别看这两个参数提供的不同<code>so</code>插件文件支持哪些选项。<br>可选的<code>-h</code>查询帮助信息、<code>-v</code>查询版本信息、<code>-b</code>后台执行就不多介绍了。</p><p>输入so插件包含：<code>input_uvc.so</code>、<code>input_testpicture.so</code>、(<code>input_file.so</code>、<code>input_ptp2.so</code>、<code>input_http.so</code>)<br>输出so插件包含：<code>output_http.so</code>、(<code>output_file.so</code>、<code>output_udp.so</code>、<code>output_rtsp.so</code>、<code>output_viewer.so</code>)<br>其中括号部分，我这个<code>Buildroot</code>的<code>mjpg_streamer</code>版本没有提供。</p><ul><li><strong>输入插件1：input_uvc.so</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"># mjpg_streamer -i &quot;/usr/lib/input_uvc.so --help&quot;</div><div class="line">MJPG Streamer Version: git rev: fd184d0</div><div class="line">---------------------------------------------------------------</div><div class="line">Help for input plugin..: UVC webcam grabber</div><div class="line">---------------------------------------------------------------</div><div class="line">The following parameters can be passed to this plugin:</div><div class="line"></div><div class="line">[-d | --device ].......: video device to open (your camera)</div><div class="line">[-r | --resolution ]...: the resolution of the video device,</div><div class="line">                        can be one of the following strings:</div><div class="line">                        QQVGA QCIF CGA QVGA CIF PAL</div><div class="line">                        VGA SVGA XGA HD SXGA UXGA</div><div class="line">                        FHD</div><div class="line">                        or a custom value like the following</div><div class="line">                        example: 640x480</div><div class="line">[-f | --fps ]..........: frames per second</div><div class="line">                        (activates YUYV format, disables MJPEG)</div><div class="line">[-q | --quality ] .....: set quality of JPEG encoding</div><div class="line">[-m | --minimum_size ].: drop frames smaller then this limit, useful</div><div class="line">                        if the webcam produces small-sized garbage frames</div><div class="line">                        may happen under low light conditions</div><div class="line">[-e | --every_frame ]..: drop all frames except numbered</div><div class="line">[-n | --no_dynctrl ]...: do not initalize dynctrls of Linux-UVC driver</div><div class="line">[-l | --led ]..........: switch the LED &quot;on&quot;, &quot;off&quot;, let it &quot;blink&quot; or leave</div><div class="line">                        it up to the driver using the value &quot;auto&quot;</div><div class="line">[-t | --tvnorm ] ......: set TV-Norm pal, ntsc or secam</div><div class="line">[-u | --uyvy ] ........: Use UYVY format, default: MJPEG (uses more cpu power)</div><div class="line">[-y | --yuv  ] ........: Use YUV format, default: MJPEG (uses more cpu power)</div><div class="line">[-fourcc ] ............: Use FOURCC codec &apos;argopt&apos;,</div><div class="line">                        currently supported codecs are: RGBP</div><div class="line">---------------------------------------------------------------</div><div class="line"></div><div class="line">Optional parameters (may not be supported by all cameras):</div><div class="line"></div><div class="line">[-br ].................: Set image brightness (auto or integer)</div><div class="line">[-co ].................: Set image contrast (integer)</div><div class="line">[-sh ].................: Set image sharpness (integer)</div><div class="line">[-sa ].................: Set image saturation (integer)</div><div class="line">[-cb ].................: Set color balance (auto or integer)</div><div class="line">[-wb ].................: Set white balance (auto or integer)</div><div class="line">[-ex ].................: Set exposure (auto, shutter-priority, aperature-priority, or integer)</div><div class="line">[-bk ].................: Set backlight compensation (integer)</div><div class="line">[-rot ]................: Set image rotation (0-359)</div><div class="line">[-hf ].................: Set horizontal flip (true/false)</div><div class="line">[-vf ].................: Set vertical flip (true/false)</div><div class="line">[-pl ].................: Set power line filter (disabled, 50hz, 60hz, auto)</div><div class="line">[-gain ]...............: Set gain (auto or integer)</div><div class="line">[-cagc ]...............: Set chroma gain control (auto or integer)</div><div class="line">---------------------------------------------------------------</div><div class="line"></div><div class="line">input_init() return value signals to exit</div></pre></td></tr></table></figure></li></ul><p>基本参数：<br><code>-d</code>：指定video设备节点<br><code>-r</code>：指定分辨率，VGA或640x480类似值<br><code>-f</code>：指定每秒帧数<br><code>-q</code>：指定JPEG编码质量<br><code>-m</code>：指定丢弃小于该值的帧<br><code>-e</code>：删除除编号以外的所有帧<br><code>-n</code>：不要初始化Linux-UVC驱动程序的dynctrls<br><code>-l</code>：设置LED on/off/blink，设置auto将取决于驱动程序<br><code>-t</code>：设置TV-Norm pal，ntsc或secam<br><code>-u</code>：指定输入为UYVY格式，通过CPU将UYVC转为MJPEG，这样会消耗更多CPU<br><code>-y</code>：指定输入为YUV格式，通过CPU将YUV转为MJPEG，这样会消耗更多CPU<br><code>-fourcc</code>：使用FOURCC编解码器argopt，目前支持的编解码器是：RGBP<br>新版新增：<br><code>-timestamp</code>：使用系统时间填充帧时间戳<br><code>-softfps</code>：丢帧以尝试实现此FPS</p><p>图像参数：<br><code>-br</code>：设置图像亮度<br><code>-co</code>：设置图像对比度<br><code>-sh</code>：设置图像清晰度<br><code>-sa</code>：设置图像饱和度<br><code>-cb</code>：设置图像颜色平衡<br><code>-wb</code>：设置图像白平衡<br><code>-ex</code>：设置图像曝光<br><code>-bk</code>：设置图像曝光补偿<br><code>-rot</code>：设置图像旋转0-359<br><code>-hf</code>：设置图像水平翻转<br><code>-vf</code>：设置图像垂直翻转<br><code>-pl</code>：设置图像避免闪烁频率<br><code>-gain</code>：设置图像增益<br><code>-cagc</code>：设置图像色度增益控制</p><ul><li><strong>输入插件2：input_testpicture.so</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"># mjpg_streamer -i &quot;/usr/lib/input_testpicture.so --help&quot;</div><div class="line">MJPG Streamer Version: git rev: fd184d0</div><div class="line"> ---------------------------------------------------------------</div><div class="line"> Help for input plugin..: TESTPICTURE input plugin</div><div class="line"> ---------------------------------------------------------------</div><div class="line"> The following parameters can be passed to this plugin:</div><div class="line"></div><div class="line"> [-d | --delay ]........: delay to pause between frames</div><div class="line"> [-r | --resolution]....: can be 960x720, 640x480, 320x240, 160x120</div><div class="line"> ---------------------------------------------------------------</div><div class="line">input_init() return value signals to exit</div></pre></td></tr></table></figure></li></ul><p>基本参数：<br><code>-d</code>：指定在两帧之间的延时<br><code>-r</code>：指定在分辨率</p><ul><li><strong>输入插件3：input_file.so</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"># mjpg-streamer -i &quot;/snap/mjpg-streamer/42/lib/mjpg-streamer/input_file.so --help&quot;</div><div class="line">MJPG Streamer Version: git rev: f387bb44e6c087271b763b27da998bf2e06c4f5d</div><div class="line"> ---------------------------------------------------------------</div><div class="line"> Help for input plugin..: FILE input plugin</div><div class="line"> ---------------------------------------------------------------</div><div class="line"> The following parameters can be passed to this plugin:</div><div class="line"></div><div class="line"> [-d | --delay ]........: delay (in seconds) to pause between frames</div><div class="line"> [-f | --folder ].......: folder to watch for new JPEG files</div><div class="line"> [-r | --remove ].......: remove/delete JPEG file after reading</div><div class="line"> [-n | --name ].........: ignore changes unless filename matches</div><div class="line"> [-e | --existing ].....: serve the existing *.jpg files from the specified directory</div><div class="line"> ---------------------------------------------------------------</div><div class="line">input_init() return value signals to exit</div></pre></td></tr></table></figure></li></ul><p>基本参数：<br><code>-d</code>：指定在两帧之间的延时(单位:s)<br><code>-f</code>：指定查看新JEPG文件的目录<br><code>-r</code>：指定读取后要删除的JEPG文件<br><code>-n</code>：指定除非文件名匹配忽略更改<br><code>-e</code>：指定目录读取现有JPG文件</p><ul><li><strong>输入插件4：input_ptp2.so</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"># mjpg-streamer -i &quot;/snap/mjpg-streamer/42/lib/mjpg-streamer/input_ptp2.so --help&quot;</div><div class="line">MJPG Streamer Version: git rev: f387bb44e6c087271b763b27da998bf2e06c4f5d</div><div class="line">PTP2 input plugin: invalid option -- &apos;-&apos;</div><div class="line"> ---------------------------------------------------------------</div><div class="line"> Help for input plugin..: PTP2 input plugin</div><div class="line"> ---------------------------------------------------------------</div><div class="line"> The following parameters can be passed to this plugin:</div><div class="line"></div><div class="line"> [-h ]..........: print this help</div><div class="line"> [-u X ]........: delay between frames in us (default 0)</div><div class="line"> [-d X ]........: camera address in [usb:xxx,yyy] form; use</div><div class="line">                  gphoto2 --auto-detect to get a list of</div><div class="line">                  available cameras</div><div class="line"> ---------------------------------------------------------------</div><div class="line">input_init() return value signals to exit</div></pre></td></tr></table></figure></li></ul><p>基本参数：<br><code>-h</code>：打印帮助<br><code>-u</code>：指定在两帧之间的延时(单位:us)<br><code>-d</code>：指定可用相机</p><ul><li><strong>输入插件5：input_http.so</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"># mjpg-streamer -i &quot;/snap/mjpg-streamer/42/lib/mjpg-streamer/input_http.so --help&quot;&quot;</div><div class="line">MJPG Streamer Version: git rev: f387bb44e6c087271b763b27da998bf2e06c4f5d</div><div class="line"> ---------------------------------------------------------------</div><div class="line"> Help for input plugin..: HTTP Input plugin</div><div class="line"> ---------------------------------------------------------------</div><div class="line"> The following parameters can be passed to this plugin:</div><div class="line"></div><div class="line"> [-v | --version ]........: current SVN Revision</div><div class="line"> [-h | --help]............: show this message</div><div class="line"> [-H | --host]............: select host to data from, localhost is default</div><div class="line"> [-p | --port]............: port, defaults to 8080</div><div class="line"> ---------------------------------------------------------------</div><div class="line">input_init() return value signals to exit</div></pre></td></tr></table></figure></li></ul><p>基本参数：<br><code>-v</code>：打印版本信息<br><code>-h</code>：打印帮助信息<br><code>-H</code>：指定主机地址<br><code>-p</code>：指定端口</p><ul><li><strong>输出插件1：output_http.so</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"># mjpg_streamer -o &quot;/usr/lib/output_http.so --help&quot;</div><div class="line">MJPG Streamer Version: git rev: fd184d0</div><div class="line">---------------------------------------------------------------</div><div class="line">Help for output plugin..: HTTP output plugin</div><div class="line">---------------------------------------------------------------</div><div class="line">The following parameters can be passed to this plugin:</div><div class="line"></div><div class="line">[-w | --www ]...........: folder that contains webpages in</div><div class="line">                        flat hierarchy (no subfolders)</div><div class="line">[-p | --port ]..........: TCP port for this HTTP server</div><div class="line">[-l ] --listen ]........: Listen on Hostname / IP</div><div class="line">[-c | --credentials ]...: ask for &quot;username:password&quot; on connect</div><div class="line">[-n | --nocommands ]....: disable execution of commands</div><div class="line">---------------------------------------------------------------</div><div class="line">output_init() return value signals to exit</div></pre></td></tr></table></figure></li></ul><p>基本参数：<br><code>-w</code>：指定网页根目录(不支持子文件夹)<br><code>-p</code>：指定HTTP服务器的TCP端口<br><code>-l</code>：指定监听主机IP<br><code>-c</code>：指定在连接时询问的账户名、密码<br><code>-n</code>：指定禁用命令执行</p><ul><li><strong>输出插件2：output_file.so</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"># mjpg-streamer -o &quot;/snap/mjpg-streamer/42/lib/mjpg-streamer/output_file.so --help&quot;</div><div class="line">MJPG Streamer Version: git rev: f387bb44e6c087271b763b27da998bf2e06c4f5d</div><div class="line"> ---------------------------------------------------------------</div><div class="line"> Help for output plugin..: FILE output plugin</div><div class="line"> ---------------------------------------------------------------</div><div class="line"> The following parameters can be passed to this plugin:</div><div class="line"></div><div class="line"> [-f | --folder ]........: folder to save pictures</div><div class="line"> [-m | --mjpeg ].........: save the frames to an mjpg file </div><div class="line"> [-l | --link ]..........: link the last picture in ringbuffer as this fixed named file</div><div class="line"> [-d | --delay ].........: delay after saving pictures in ms</div><div class="line"> [-i | --input ].........: read frames from the specified input plugin</div><div class="line"> The following arguments are takes effect only if the current mode is not MJPG</div><div class="line"> [-s | --size ]..........: size of ring buffer (max number of pictures to hold)</div><div class="line"> [-e | --exceed ]........: allow ringbuffer to exceed limit by this amount</div><div class="line"> [-c | --command ].......: execute command after saving picture</div><div class="line"> ---------------------------------------------------------------</div><div class="line">output_init() return value signals to exit</div></pre></td></tr></table></figure></li></ul><p>基本参数：<br><code>-f</code>：指定保存图片文件夹<br><code>-m</code>：将帧保存的mjpg文件夹<br><code>-l</code>：将ringbuffer中的最后一张图片链接为此固定命名文件<br><code>-d</code>：保存图片后延时(单位:ms)<br><code>-i</code>：从指定的输入插件中读取帧<br>仅当当前模式不是MJPG时，以下参数才会生效<br><code>-s</code>：环形缓冲区的大小（要保留的最大图片数）<br><code>-e</code>：允许ringbuffer超过此数量的限制<br><code>-c</code>：保存图片后执行命令</p><ul><li><strong>输出插件3：output_udp.so</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"># mjpg-streamer -o &quot;/snap/mjpg-streamer/42/lib/mjpg-streamer/output_udp.so --help&quot;</div><div class="line">MJPG Streamer Version: git rev: f387bb44e6c087271b763b27da998bf2e06c4f5d</div><div class="line"> ---------------------------------------------------------------</div><div class="line"> Help for output plugin..: UDP output plugin</div><div class="line"> ---------------------------------------------------------------</div><div class="line"> The following parameters can be passed to this plugin:</div><div class="line"></div><div class="line"> [-f | --folder ]........: folder to save pictures</div><div class="line"> [-d | --delay ].........: delay after saving pictures in ms</div><div class="line"> [-c | --command ].......: execute command after saveing picture</div><div class="line"> [-p | --port ]..........: UDP port to listen for picture requests. UDP message is the filename to save</div><div class="line"></div><div class="line"> [-i | --input ].......: read frames from the specified input plugin (first input plugin between the arguments is the 0th)</div><div class="line"></div><div class="line"> ---------------------------------------------------------------</div><div class="line">output_init() return value signals to exit</div></pre></td></tr></table></figure></li></ul><p>基本参数：<br><code>-f</code>：指定保存图片的文件夹<br><code>-d</code>：保存图片后延时(单位:ms)<br><code>-c</code>：保存图片后执行命令<br><code>-p</code>：指定UDP端口监听图片请求<br><code>-i</code>：从指定的输入插件读取帧</p><ul><li><strong>输出插件4：output_rtsp.so</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"># mjpg-streamer -o &quot;/snap/mjpg-streamer/42/lib/mjpg-streamer/output_rtsp.so --help&quot;</div><div class="line">MJPG Streamer Version: git rev: f387bb44e6c087271b763b27da998bf2e06c4f5d</div><div class="line"> ---------------------------------------------------------------</div><div class="line"> Help for output plugin..: RTSP output plugin</div><div class="line"> ---------------------------------------------------------------</div><div class="line"> The following parameters can be passed to this plugin:</div><div class="line"></div><div class="line"> [-p | --port ]..........: UDP port to listen for picture requests. UDP message is the filename to save</div><div class="line"></div><div class="line"> [-i | --input ].......: read frames from the specified input plugin (first input plugin between the arguments is the 0th)</div><div class="line"></div><div class="line"> ---------------------------------------------------------------</div><div class="line">output_init() return value signals to exit</div></pre></td></tr></table></figure></li></ul><p>基本参数：<br><code>-p</code>：指定UDP端口监听图片请求<br><code>-i</code>：从指定的输入插件读取帧</p><ul><li><strong>输出插件5：output_viewer.so</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"># mjpg-streamer -o &quot;/snap/mjpg-streamer/42/lib/mjpg-streamer/output_viewer.so --help&quot;</div><div class="line">MJPG Streamer Version: git rev: f387bb44e6c087271b763b27da998bf2e06c4f5d</div><div class="line"> ---------------------------------------------------------------</div><div class="line"> Help for output plugin..: VIEWER output plugin</div><div class="line"> ---------------------------------------------------------------</div><div class="line">output_init() return value signals to exit</div></pre></td></tr></table></figure></li></ul><p>基本参数：<br>无</p><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录使用AM335X，在LCD和Web上显示USB摄像头图像。&lt;br&gt;
    
    </summary>
    
    
      <category term="AM335X" scheme="http://yoursite.com/tags/AM335X/"/>
    
      <category term="摄像头" scheme="http://yoursite.com/tags/%E6%91%84%E5%83%8F%E5%A4%B4/"/>
    
      <category term="UVC" scheme="http://yoursite.com/tags/UVC/"/>
    
  </entry>
  
  <entry>
    <title>Tiny4412——Android灯光系统</title>
    <link href="http://yoursite.com/2019/05/09/Tiny4412%E2%80%94%E2%80%94Android%E7%81%AF%E5%85%89%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2019/05/09/Tiny4412——Android灯光系统/</id>
    <published>2019-05-09T10:09:05.000Z</published>
    <updated>2019-06-09T12:48:26.122Z</updated>
    
    <content type="html"><![CDATA[<p>继续学习Android驱动，Android灯光系统。<br><a id="more"></a></p><h1 id="1-思路分析"><a href="#1-思路分析" class="headerlink" title="1.思路分析"></a>1.思路分析</h1><p>前面对<a href="http://localhost:4000/2019/03/15/Tiny4412%E2%80%94%E2%80%94Android%E8%AE%BF%E9%97%AE%E7%A1%AC%E4%BB%B6%E7%9A%84%E6%96%B9%E6%B3%95/#3-2-Android%E7%A1%AC%E4%BB%B6%E8%AE%BF%E9%97%AE%E6%9C%8D%E5%8A%A1" target="_blank" rel="external">3.2 Android硬件访问服务</a>进行了详细的分析，知道了Android大致可以分为四层：<code>APP</code>、<code>JNI</code>、<code>HAL</code>、<code>Driver</code>。<br>回顾下前面写的点灯程序过程：<code>APP</code>调用<code>JNI</code>提供的本地接口方法；<code>JNI</code>除了向上提供接口，还要调用<code>HAL</code>提供的硬件操作函数；<code>HAL</code>操作Linux用户态的LED设备节点；<code>Driver</code>操作硬件，提供设备节点。</p><p>在编写<code>JNI</code>时，我们自己创建的<code>com_android_server_LedService.cpp</code>，这样就会导致提供的接口，只有我们才知道，在<code>APP</code>不通用。因此，更好的做法是使用Android提供的灯光系统，即使用自带的<code>com_android_server_lights_LightsService.cpp</code>，这样LED的接口就可以通用，<code>APP</code>也就可以实现通用。相应的，我们要做的就是<strong>编写<code>HAL</code>层代码，提供<code>JNI</code>所需要的函数，以及编写<code>Driver</code>提供给<code>HAL</code></strong>。</p><p>首先分析<code>JNI</code>层的<code>frameworks/base/services/core/jni/com_android_server_lights_LightsService.cpp</code>。<br>找到<code>JNINativeMethod</code>，里面建立Java本地方法与C函数名的映射关系，可以看到有三个函数:<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">static</span> JNINativeMethod method_table[] = &#123;</div><div class="line">    &#123; <span class="string">"init_native"</span>, <span class="string">"()J"</span>, (<span class="keyword">void</span>*)init_native &#125;,</div><div class="line">    &#123; <span class="string">"finalize_native"</span>, <span class="string">"(J)V"</span>, (<span class="keyword">void</span>*)finalize_native &#125;,</div><div class="line">    &#123; <span class="string">"setLight_native"</span>, <span class="string">"(JIIIIII)V"</span>, (<span class="keyword">void</span>*)setLight_native &#125;,</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p><p>先看<code>init_native()</code>：<br>a.使用<code>hw_get_module()</code>，获得<code>hw_module_t</code>结构体；<br>b.根据传入的不同<code>name</code>，使用<code>module-&gt;methods-&gt;open()</code>，获得不同的<code>light_device_t</code>结构体;<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> light_device_t* <span class="title">get_device</span><span class="params">(<span class="keyword">hw_module_t</span>* <span class="keyword">module</span>, <span class="keyword">char</span> <span class="keyword">const</span>* name)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> err;</div><div class="line">    <span class="keyword">hw_device_t</span>* device;</div><div class="line">    err = <span class="keyword">module</span>-&gt;methods-&gt;open(<span class="keyword">module</span>, name, &amp;device);</div><div class="line">    <span class="keyword">if</span> (err == <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">return</span> (<span class="keyword">light_device_t</span>*)device;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> jlong <span class="title">init_native</span><span class="params">(JNIEnv *env, jobject clazz)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> err;</div><div class="line">    <span class="keyword">hw_module_t</span>* <span class="keyword">module</span>;</div><div class="line">    Devices* devices;</div><div class="line">    </div><div class="line">    devices = (Devices*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Devices));</div><div class="line"></div><div class="line">    err = hw_get_module(LIGHTS_HARDWARE_MODULE_ID, (<span class="keyword">hw_module_t</span> <span class="keyword">const</span>**)&amp;<span class="keyword">module</span>);</div><div class="line">    <span class="keyword">if</span> (err == <span class="number">0</span>) &#123;</div><div class="line">        devices-&gt;lights[LIGHT_INDEX_BACKLIGHT]</div><div class="line">                = get_device(<span class="keyword">module</span>, LIGHT_ID_BACKLIGHT);</div><div class="line">        devices-&gt;lights[LIGHT_INDEX_KEYBOARD]</div><div class="line">                = get_device(<span class="keyword">module</span>, LIGHT_ID_KEYBOARD);</div><div class="line">        devices-&gt;lights[LIGHT_INDEX_BUTTONS]</div><div class="line">                = get_device(<span class="keyword">module</span>, LIGHT_ID_BUTTONS);</div><div class="line">        devices-&gt;lights[LIGHT_INDEX_BATTERY]</div><div class="line">                = get_device(<span class="keyword">module</span>, LIGHT_ID_BATTERY);</div><div class="line">        devices-&gt;lights[LIGHT_INDEX_NOTIFICATIONS]</div><div class="line">                = get_device(<span class="keyword">module</span>, LIGHT_ID_NOTIFICATIONS);</div><div class="line">        devices-&gt;lights[LIGHT_INDEX_ATTENTION]</div><div class="line">                = get_device(<span class="keyword">module</span>, LIGHT_ID_ATTENTION);</div><div class="line">        devices-&gt;lights[LIGHT_INDEX_BLUETOOTH]</div><div class="line">                = get_device(<span class="keyword">module</span>, LIGHT_ID_BLUETOOTH);</div><div class="line">        devices-&gt;lights[LIGHT_INDEX_WIFI]</div><div class="line">                = get_device(<span class="keyword">module</span>, LIGHT_ID_WIFI);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="built_in">memset</span>(devices, <span class="number">0</span>, <span class="keyword">sizeof</span>(Devices));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> (jlong)devices;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>再来看<code>setLight_native()</code>：<br>主要就是根据<code>APP</code>传入的参数，调用前面<code>light_device_t</code>结构体里的<code>set_light()</code>。<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setLight_native</span><span class="params">(JNIEnv *env, jobject clazz, jlong ptr,</span></span></div><div class="line">        jint light, jint colorARGB, jint flashMode, jint onMS, jint offMS, jint brightnessMode)</div><div class="line">&#123;</div><div class="line">    Devices* devices = (Devices*)ptr;</div><div class="line">    <span class="keyword">light_state_t</span> state;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (light &lt; <span class="number">0</span> || light &gt;= LIGHT_COUNT || devices-&gt;lights[light] == <span class="literal">NULL</span>) &#123;</div><div class="line">        <span class="keyword">return</span> ;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">memset</span>(&amp;state, <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="keyword">light_state_t</span>));</div><div class="line">    state.color = colorARGB;</div><div class="line">    state.flashMode = flashMode;</div><div class="line">    state.flashOnMS = onMS;</div><div class="line">    state.flashOffMS = offMS;</div><div class="line">    state.brightnessMode = brightnessMode;</div><div class="line"></div><div class="line">    &#123;</div><div class="line">        ALOGD_IF_SLOW(<span class="number">50</span>, <span class="string">"Excessive delay setting light"</span>);</div><div class="line">        devices-&gt;lights[light]-&gt;set_light(devices-&gt;lights[light], &amp;state);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>最后<code>finalize_native()</code>做一些清理操作。</p><p>理清楚了<code>JNI</code>层的操作，对应的<code>HAL</code>层需要提供什么，也基本清晰了：<br>a.实现<code>hw_module_t</code>结构体；<br>b.实现<code>open()</code>，根据传入的<code>name</code>，返回不同的<code>light_device_t</code>结构体；<br>c.针对功能需求，实现对应<code>light_device_t</code>结构体里的<code>set_light()</code>：<code>set_light_battery()</code>、<code>set_light_notifications()</code>、<code>set_light_backlight()</code>；</p><p>根据<code>HAL</code>层的需求，<code>Driver</code>层要做的就是：<br>a.对于<code>set_light_battery()</code>、<code>set_light_notifications()</code>，实现控制R、G、B三个LED的亮、灭、闪烁；<br>b.对于<code>set_light_backlight()</code>，设置<code>PWM</code>实现亮度控制；</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190509/1.jpg"></div><h1 id="2-编写驱动"><a href="#2-编写驱动" class="headerlink" title="2.编写驱动"></a>2.编写驱动</h1><p>驱动需要两个，一个是用于电源灯/通知灯的，一个是用于LCD背光的。<br>用于电源灯/通知灯的，需要实现控制LED亮灭、LED灯定时闪烁；用于LCD背光的需要<code>PWM</code>操作。</p><h2 id="2-1-LED驱动"><a href="#2-1-LED驱动" class="headerlink" title="2.1 LED驱动"></a>2.1 LED驱动</h2><p>先说用于电源灯/通知灯的驱动，之前在<a href="https://hceng.cn/2019/03/15/Tiny4412%E2%80%94%E2%80%94Android%E8%AE%BF%E9%97%AE%E7%A1%AC%E4%BB%B6%E7%9A%84%E6%96%B9%E6%B3%95/#3-1-1-%E7%BC%96%E5%86%99LED%E9%A9%B1%E5%8A%A8" target="_blank" rel="external">Android访问硬件的方法:3.1.1编写LED驱动</a>写过一次，但当时的驱动只支持LED的亮灭，不支持定时闪烁。我们完全可以添加个<code>ioctl()</code>操作，利用定时器实现闪烁功能，但没有必要，可以直接利用Linux的LED子系统。关于LED子系统，在以前写<a href="https://hceng.cn/2017/08/12/AM437x%E2%80%94%E2%80%94LED%E9%A9%B1%E5%8A%A8/#5-LED%E5%AD%90%E7%B3%BB%E7%BB%9F%E9%A9%B1%E5%8A%A8" target="_blank" rel="external">AM437x——LED驱动</a>已经详细介绍过了，这里直接采用LED子系统的方式编写LED驱动程序。</p><ul><li>编写步骤：<br>a.分配<code>led_classde</code>结构体；<br>b.设置<code>led_classdev</code>结构体：<br>　　<code>max_brightness = LED_FULL;</code><br>　　<code>brightness_set = tiny4412_brightness_set;</code><br>　　<code>flags = LED_CORE_SUSPENDRESUME;</code><br>　　<code>brightness = LED_OFF;</code><br>　　<code>name = led_gpios[i].name;</code><br>　　<code>default_trigger = &quot;none&quot;;</code><br>c.硬件相关初始化(设置GPIO，关闭LED等)；<br>d.使用<code>led_classdev_register()</code>注册<code>led_classde</code>；<br>e.实现<code>tiny4412_brightness_set()</code>(GPIO不支持亮度设置，这里仅支持亮灭)；</li></ul><ul><li><p>参考代码：</p><figure class="highlight c"><figcaption><span>[tiny4412_leds.c]</span><a href="https://github.com/hceng/learn/blob/master/android/02_%E7%81%AF%E5%85%89%E7%B3%BB%E7%BB%9F/driver/leds/tiny4412_leds.c" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/kernel.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/slab.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/gpio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/leds.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;plat/gpio-cfg.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">struct</span> led_desc &#123;</div><div class="line">    <span class="keyword">int</span> gpio;</div><div class="line">    <span class="keyword">char</span> *name;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> led_desc led_gpios[] = &#123;</div><div class="line">    &#123;EXYNOS4212_GPM4(<span class="number">0</span>), <span class="string">"led1"</span>&#125;,</div><div class="line">    &#123;EXYNOS4212_GPM4(<span class="number">1</span>), <span class="string">"led2"</span>&#125;,</div><div class="line">    &#123;EXYNOS4212_GPM4(<span class="number">2</span>), <span class="string">"led3"</span>&#125;,</div><div class="line">    &#123;EXYNOS4212_GPM4(<span class="number">3</span>), <span class="string">"led4"</span>&#125;,</div><div class="line">&#125;;</div><div class="line"><span class="keyword">static</span> <span class="keyword">int</span> pin_num = <span class="keyword">sizeof</span>(led_gpios)/<span class="keyword">sizeof</span>(led_gpios[<span class="number">0</span>]);</div><div class="line"></div><div class="line"><span class="keyword">struct</span> tiny4412_led_data &#123;</div><div class="line">    <span class="keyword">struct</span> led_classdev led_dev;</div><div class="line">    <span class="keyword">int</span> gpio;</div><div class="line">    <span class="keyword">struct</span> mutex lock; </div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> tiny4412_led_data *led_devs;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">tiny4412_brightness_set</span><span class="params">(<span class="keyword">struct</span> led_classdev *led_cdev,</span></span></div><div class="line">                      <span class="keyword">enum</span> led_brightness brightness)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">struct</span> tiny4412_led_data *dev = (<span class="keyword">struct</span> tiny4412_led_data *)led_cdev;</div><div class="line">    </div><div class="line">    printk(KERN_DEBUG <span class="string">"Passed %s %d \n"</span>,__FUNCTION__,__LINE__);</div><div class="line"></div><div class="line">    led_cdev-&gt;brightness = brightness;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (brightness != LED_OFF)</div><div class="line">        gpio_set_value(dev-&gt;gpio, <span class="number">0</span>);</div><div class="line">    <span class="keyword">else</span></div><div class="line">        gpio_set_value(dev-&gt;gpio, <span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">leds_drv_init</span><span class="params">(<span class="keyword">void</span>)</span>  </span></div><div class="line">&#123;   </div><div class="line">    <span class="keyword">int</span> i, ret;</div><div class="line">    </div><div class="line">    printk(KERN_DEBUG <span class="string">"Passed %s %d \n"</span>,__FUNCTION__,__LINE__);</div><div class="line">    </div><div class="line">    <span class="comment">//1. alloc led_classdev</span></div><div class="line">    led_devs = kzalloc(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> tiny4412_led_data) * pin_num, GFP_KERNEL);</div><div class="line">    <span class="keyword">if</span> (led_devs == <span class="literal">NULL</span>) &#123;</div><div class="line">        printk(KERN_ERR <span class="string">"No memory for device\n"</span>);</div><div class="line">        <span class="keyword">return</span> -ENOMEM;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; pin_num; i++)</div><div class="line">    &#123;</div><div class="line">        mutex_init(&amp;led_devs[i].lock);</div><div class="line">        mutex_lock(&amp;led_devs[i].lock);</div><div class="line"></div><div class="line">        <span class="comment">//2. set led_classdev</span></div><div class="line">        led_devs[i].led_dev.max_brightness = LED_FULL; <span class="comment">//255</span></div><div class="line">        led_devs[i].led_dev.brightness_set = tiny4412_brightness_set;</div><div class="line">        led_devs[i].led_dev.flags = LED_CORE_SUSPENDRESUME;</div><div class="line">        led_devs[i].led_dev.brightness = LED_OFF;</div><div class="line">        led_devs[i].led_dev.name = led_gpios[i].name;</div><div class="line">        led_devs[i].led_dev.default_trigger = <span class="string">"none"</span>;</div><div class="line">        </div><div class="line">        led_devs[i].gpio = led_gpios[i].gpio;</div><div class="line">        </div><div class="line">        <span class="comment">//3. Hardware setup(Default led off)</span></div><div class="line">        s3c_gpio_cfgpin(led_gpios[i].gpio, S3C_GPIO_OUTPUT);</div><div class="line">        <span class="keyword">if</span> (led_devs[i].led_dev.brightness == LED_OFF)</div><div class="line">            gpio_set_value(led_gpios[i].gpio, <span class="number">1</span>);</div><div class="line">        <span class="keyword">else</span></div><div class="line">            gpio_set_value(led_gpios[i].gpio, <span class="number">0</span>);</div><div class="line"></div><div class="line">        <span class="comment">//4. led_classdev_register </span></div><div class="line">        ret = led_classdev_register(<span class="literal">NULL</span>, &amp;led_devs[i].led_dev);</div><div class="line">        <span class="keyword">if</span> (ret) &#123;</div><div class="line">            i--;</div><div class="line">            <span class="keyword">while</span> (i &gt;= <span class="number">0</span>) &#123;</div><div class="line">                led_classdev_unregister(&amp;led_devs[i].led_dev);</div><div class="line">                i--;</div><div class="line">            &#125;</div><div class="line">            mutex_unlock(&amp;led_devs[i].lock);</div><div class="line">            kfree(led_devs);</div><div class="line">            <span class="keyword">return</span> -EIO;</div><div class="line">        &#125;</div><div class="line">        mutex_unlock(&amp;led_devs[i].lock);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </div><div class="line">&#125;  </div><div class="line">  </div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">leds_drv_exit</span><span class="params">(<span class="keyword">void</span>)</span>  </span></div><div class="line">&#123;  </div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    </div><div class="line">    printk(KERN_DEBUG <span class="string">"Passed %s %d \n"</span>,__FUNCTION__,__LINE__);</div><div class="line">        </div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; pin_num; i++)</div><div class="line">    &#123;</div><div class="line">        mutex_lock(&amp;led_devs[i].lock);</div><div class="line">        </div><div class="line">        led_classdev_unregister(&amp;led_devs[i].led_dev);</div><div class="line">    </div><div class="line">        mutex_unlock(&amp;led_devs[i].lock);</div><div class="line">    &#125;</div><div class="line">    kfree(led_devs);</div><div class="line">&#125; </div><div class="line"></div><div class="line"></div><div class="line">module_init(leds_drv_init);</div><div class="line">module_exit(leds_drv_exit);</div><div class="line">MODULE_LICENSE(<span class="string">"GPL"</span>);</div><div class="line">MODULE_AUTHOR(<span class="string">"hceng &lt;huangcheng.job@foxmail.com&gt;"</span>);</div><div class="line">MODULE_DESCRIPTION(<span class="string">"Tiny4412 leds driver."</span>);</div><div class="line">MODULE_VERSION(<span class="string">"v1.0"</span>);</div></pre></td></tr></table></figure></li><li><p>编译进内核：<br>首先让内核支持LED子系统，且支持<code>Timer</code>触发，在内核根目录执行<code>make menuconfig</code>，勾选上下面选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[*] LED Support  ---&gt;</div><div class="line">    --- LED Support                                              </div><div class="line">    [*]   LED Class Support  </div><div class="line">    ……</div><div class="line">    [*]   LED Trigger support </div><div class="line">     *** LED Triggers ***                                                      </div><div class="line">     &lt;*&gt;   LED Timer Trigger</div></pre></td></tr></table></figure></li></ul><p>接着将<code>tiny4412_leds.c</code>放在<code>drivers/leds/</code>里，并在该路径下的<code>Makefile</code>添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">obj-y += tiny4412_leds.o</div></pre></td></tr></table></figure></p><p>最后执行<code>make zImage</code>重新编译内核，并重新烧写内核。</p><ul><li>应用层测试：<br>进入系统，可以看到已经生成了<code>LED</code>的节点：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">shell@tiny4412:/ # ls /sys/class/leds/ -l</div><div class="line">lrwxrwxrwx root     root              2019-05-10 09:58 led1 -&gt; ../../devices/virtual/leds/led1</div><div class="line">lrwxrwxrwx root     root              2019-05-10 09:58 led2 -&gt; ../../devices/virtual/leds/led2</div><div class="line">lrwxrwxrwx root     root              2019-05-10 09:58 led3 -&gt; ../../devices/virtual/leds/led3</div><div class="line">lrwxrwxrwx root     root              2019-05-10 09:58 led4 -&gt; ../../devices/virtual/leds/led4</div><div class="line">lrwxrwxrwx root     root              2019-05-10 10:05 mmc1:: -&gt; ../../devices/platform/s3c-sdhci.2/leds/mmc1::</div><div class="line">lrwxrwxrwx root     root              2019-05-10 10:05 mmc2:: -&gt; ../../devices/platform/s3c-sdhci.3/leds/mmc2::</div></pre></td></tr></table></figure></li></ul><p>执行<code>su</code>切换到<code>root</code>用户，再执如下命令即可控制对应LED亮灭：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">shell@tiny4412:/ # echo 255 &gt; /sys/class/leds/led1/brightness</div><div class="line">shell@tiny4412:/ # echo 0 &gt; /sys/class/leds/led1/brightness</div></pre></td></tr></table></figure></p><p>执行以下命令，修改触发模式为<code>timer</code>，即可实现LED闪烁：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">shell@tiny4412:/ # echo timer &gt; /sys/class/leds/led1/trigger</div></pre></td></tr></table></figure></p><p>此时<code>/sys/class/leds/led1/</code>会生成<code>delay_off</code>和<code>delay_on</code>，可修改这两个值，控制闪烁亮灭时间。</p><h2 id="2-2-backligth驱动"><a href="#2-2-backligth驱动" class="headerlink" title="2.2 backligth驱动"></a>2.2 backligth驱动</h2><p>在之前的博客<a href="https://hceng.cn/2017/11/22/Exynos4412%E2%80%94%E2%80%94LCD%E4%B9%8Bbackligth/" target="_blank" rel="external">Exynos4412——LCD之backligth</a>里，已经对Tiny4412的背光“一线触摸”有了研究，它采用的并不是PWM控制背光调试，而是背光部分交给了一个屏幕上的MCU处理，Tiny4412与MCU通过一个GPIO进行数据传输。这个传输协议，友善之臂并没有公开，且只适用它们家的屏幕，也没什么研究价值，因此我们只需知道如何使用该驱动即可。</p><p>在友善提供的Android源码<code>android-5.0.2/vendor/friendly-arm/tiny4412/proprietary/</code>路径下可以看到如下文件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fa_codec_ctrl  lights.tiny4412.so  sensors.tiny4412.so</div></pre></td></tr></table></figure></p><p>其中就有控制亮度<code>lights.tiny4412.so</code>，这就是友善提供的<code>HAL</code>，不开源的部分。</p><p>我们可以尝试以下思路进行分析：<br>a.<code>lights.tiny4412.so</code>肯定会操作某个Linux设备节点，从而控制亮度，因此使用下面的命令，找到是操作的哪个节点：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">hceng@android:/work$ hexdump -C lights.tiny4412.so | grep &quot;dev&quot; -A2</div><div class="line">00000a50  3a 25 64 0a 00 2f 64 65  76 2f 62 61 63 6b 6c 69  |:%d../dev/backli|</div><div class="line">00000a60  67 68 74 2d 31 77 69 72  65 00 25 64 0a 00 6c 69  |ght-1wire.%d..li|</div><div class="line">00000a70  67 68 74 73 20 4d 6f 64  75 6c 65 00 47 6f 6f 67  |ghts Module.Goog</div></pre></td></tr></table></figure><br>可以看出是操作的<code>/dev/backlight-1wire</code>节点。</p><p>b.接着去Tiny4412上验证下是否有该节点：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">shell@tiny4412:/ # ls /dev/backlight-1wire</div><div class="line">/dev/backlight-1wire</div></pre></td></tr></table></figure></p><p>确实有该节点。</p><p>c.接着去内核的驱动目录，搜索节点名字:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">hceng@android:/work/linux_source/linux-3.0.86/drivers$ grep &quot;backlight-1wire&quot; -nr</div><div class="line">Binary file built-in.o matches</div><div class="line">Binary file input/built-in.o matches</div><div class="line">input/touchscreen/tiny4412_1wire_host.c:84:#define BACKLIGHT_DEVICE_NAME&quot;backlight-1wire&quot;</div><div class="line">Binary file input/touchscreen/built-in.o matches</div><div class="line">Binary file input/touchscreen/tiny4412_1wire_host.o matches</div></pre></td></tr></table></figure><br>可以看到驱动的源码在<code>drivers/input/touchscreen/tiny4412_1wire_host.c</code>。</p><p>d.最后打开该驱动源码，看是否能直接使用，运气好的是，<code>tiny4412_1wire_host.c</code>里面有个<code>bl_write()</code>操作函数，传入参数就可以控制亮度。即分析得到：向<code>/dev/backlight-1wire</code>，<code>write()</code>值即可实现背光控制。</p><p>另外，从<code>if (v &gt; 127) v = 127;</code>可知，传入的值范围为0~127。</p><p>后面我们写<code>HAL</code>层代码时，就可以<strong>直接写操作<code>/dev/backlight-1wire</code>控制亮度</strong>，该部分驱动无需再写。</p><h1 id="3-编写HAL"><a href="#3-编写HAL" class="headerlink" title="3.编写HAL"></a>3.编写HAL</h1><p>编写完驱动后，得到了<code>/sys/class/leds/led*</code>和<code>/dev/backlight-1wire</code>节点，接下来就是编写<code>HAL</code>代码操作这两个节点，同时向<code>JNI</code>提供接口。</p><h2 id="3-1编写步骤"><a href="#3-1编写步骤" class="headerlink" title="3.1编写步骤"></a>3.1编写步骤</h2><p>编写步骤如下：<br>a.创建一个名为<code>HMI</code>(<code>HAL_MODULE_INFO_SYM</code>)的<code>hw_module_t</code>结构体，该结构体有一个<code>hw_module_methods_t</code>结构体成员；<br>b.<code>hw_module_methods_t</code>结构体里创建一个<code>open()</code>函数成员；<br>c.实现<code>open()</code>函数，分配一个<code>light_device_t</code>结构体，根据传入的名字不同，设置不同的操作函数作为<code>light_device_t</code>的成员，最后返回该结构体；<br>d.操作设备节点，实现需要提供的不同操作函数；</p><h2 id="3-2参考代码及分析"><a href="#3-2参考代码及分析" class="headerlink" title="3.2参考代码及分析"></a>3.2参考代码及分析</h2><figure class="highlight c"><figcaption><span>[lights.c]</span><a href="https://github.com/hceng/learn/blob/master/android/02_%E7%81%AF%E5%85%89%E7%B3%BB%E7%BB%9F/hal/lights.c" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LOG_NDEBUG 0</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LOG_TAG <span class="meta-string">"lights"</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cutils/log.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pthread.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/ioctl.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;hardware/lights.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">char</span> <span class="keyword">const</span>*<span class="keyword">const</span> RED_LED_FILE           = <span class="string">"/sys/class/leds/led1/brightness"</span>;</div><div class="line"><span class="keyword">char</span> <span class="keyword">const</span>*<span class="keyword">const</span> GREEN_LED_FILE         = <span class="string">"/sys/class/leds/led2/brightness"</span>;</div><div class="line"><span class="keyword">char</span> <span class="keyword">const</span>*<span class="keyword">const</span> BLUE_LED_FILE          = <span class="string">"/sys/class/leds/led3/brightness"</span>;</div><div class="line"><span class="keyword">char</span> <span class="keyword">const</span>*<span class="keyword">const</span> RED_LED_FILE_TRIGGER   = <span class="string">"/sys/class/leds/led1/trigger"</span>;</div><div class="line"><span class="keyword">char</span> <span class="keyword">const</span>*<span class="keyword">const</span> GREEN_LED_FILE_TRIGGER = <span class="string">"/sys/class/leds/led2/trigger"</span>;</div><div class="line"><span class="keyword">char</span> <span class="keyword">const</span>*<span class="keyword">const</span> BLUE_LED_FILE_TRIGGER  = <span class="string">"/sys/class/leds/led3/trigger"</span>;</div><div class="line"><span class="keyword">char</span> <span class="keyword">const</span>*<span class="keyword">const</span> RED_LED_FILE_DELAYON   = <span class="string">"/sys/class/leds/led1/delay_on"</span>;</div><div class="line"><span class="keyword">char</span> <span class="keyword">const</span>*<span class="keyword">const</span> GREEN_LED_FILE_DELAYON = <span class="string">"/sys/class/leds/led2/delay_on"</span>;</div><div class="line"><span class="keyword">char</span> <span class="keyword">const</span>*<span class="keyword">const</span> BLUE_LED_FILE_DELAYON  = <span class="string">"/sys/class/leds/led3/delay_on"</span>;</div><div class="line"><span class="keyword">char</span> <span class="keyword">const</span>*<span class="keyword">const</span> RED_LED_FILE_DELAYOFF  = <span class="string">"/sys/class/leds/led1/delay_off"</span>;</div><div class="line"><span class="keyword">char</span> <span class="keyword">const</span>*<span class="keyword">const</span> GREEN_LED_FILE_DELAYOFF= <span class="string">"/sys/class/leds/led2/delay_off"</span>;</div><div class="line"><span class="keyword">char</span> <span class="keyword">const</span>*<span class="keyword">const</span> BLUE_LED_FILE_DELAYOFF = <span class="string">"/sys/class/leds/led3/delay_off"</span>;</div><div class="line"><span class="keyword">char</span> <span class="keyword">const</span>*<span class="keyword">const</span> LCD_BACKLIGHT_FILE     = <span class="string">"/dev/backlight-1wire"</span>;</div><div class="line"></div><div class="line"><span class="comment">/* Synchronization primities */</span> </div><div class="line"><span class="keyword">static</span> <span class="keyword">pthread_once_t</span> g_init = PTHREAD_ONCE_INIT;</div><div class="line"><span class="keyword">static</span> <span class="keyword">pthread_mutex_t</span> g_lock = PTHREAD_MUTEX_INITIALIZER;</div><div class="line"></div><div class="line"><span class="comment">/* LED state machine */</span> </div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> <span class="keyword">light_state_t</span> g_notification;</div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> <span class="keyword">light_state_t</span> g_battery;</div><div class="line"></div><div class="line"><span class="comment">/* Write node function */</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">write_int</span> <span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *path, <span class="keyword">int</span> value)</span> </span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> fd;</div><div class="line">    <span class="keyword">static</span> <span class="keyword">int</span> already_warned = <span class="number">0</span>;</div><div class="line">    fd = open(path, O_RDWR);</div><div class="line">    <span class="keyword">if</span> (fd &lt; <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (already_warned == <span class="number">0</span>) &#123;</div><div class="line">            ALOGE(<span class="string">"write_int failed to open %s\n"</span>, path);</div><div class="line">            already_warned = <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> -errno;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">char</span> buffer[<span class="number">20</span>];</div><div class="line">    <span class="keyword">int</span> bytes = <span class="built_in">snprintf</span>(buffer, <span class="keyword">sizeof</span>(buffer), <span class="string">"%d\n"</span>, value);</div><div class="line">    <span class="keyword">int</span> written = write (fd, buffer, bytes);</div><div class="line">    close(fd);</div><div class="line">    <span class="keyword">return</span> written == <span class="number">-1</span> ? -errno : <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">write_string</span> <span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *path, <span class="keyword">const</span> <span class="keyword">char</span> *value)</span> </span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> fd;</div><div class="line">    <span class="keyword">static</span> <span class="keyword">int</span> already_warned = <span class="number">0</span>;</div><div class="line">    fd = open(path, O_RDWR);</div><div class="line">    <span class="keyword">if</span> (fd &lt; <span class="number">0</span>) &#123;</div><div class="line">        <span class="keyword">if</span> (already_warned == <span class="number">0</span>) &#123;</div><div class="line">            ALOGE(<span class="string">"write_string failed to open %s\n"</span>, path);</div><div class="line">            already_warned = <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> -errno;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">char</span> buffer[<span class="number">20</span>];</div><div class="line">    <span class="keyword">int</span> bytes = <span class="built_in">snprintf</span>(buffer, <span class="keyword">sizeof</span>(buffer), <span class="string">"%s\n"</span>, value);</div><div class="line">    <span class="keyword">int</span> written = write (fd, buffer, bytes);</div><div class="line">    close(fd);</div><div class="line">    <span class="keyword">return</span> written == <span class="number">-1</span> ? -errno : <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* Color tools */</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">is_lit</span> <span class="params">(<span class="keyword">struct</span> <span class="keyword">light_state_t</span> <span class="keyword">const</span>* state)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> state-&gt;color &amp; <span class="number">0x00ffffff</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">rgb_to_brightness</span> <span class="params">(<span class="keyword">struct</span> <span class="keyword">light_state_t</span> <span class="keyword">const</span>* state)</span> </span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> color = state-&gt;color &amp; <span class="number">0x00ffffff</span>;</div><div class="line">    <span class="keyword">return</span> ((<span class="number">77</span>*((color&gt;&gt;<span class="number">16</span>)&amp;<span class="number">0x00ff</span>))</div><div class="line">            + (<span class="number">150</span>*((color&gt;&gt;<span class="number">8</span>)&amp;<span class="number">0x00ff</span>)) + (<span class="number">29</span>*(color&amp;<span class="number">0x00ff</span>))) &gt;&gt; <span class="number">8</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* The actual lights controlling section */</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">set_light_backlight</span> <span class="params">(<span class="keyword">struct</span> <span class="keyword">light_device_t</span> *dev, <span class="keyword">struct</span> <span class="keyword">light_state_t</span> <span class="keyword">const</span> *state)</span> </span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> brightness = rgb_to_brightness(state);</div><div class="line">    ALOGV(<span class="string">"%s brightness=%d color=0x%08x"</span>, __func__,brightness,state-&gt;color);</div><div class="line">    </div><div class="line">    pthread_mutex_lock(&amp;g_lock);</div><div class="line"></div><div class="line">    <span class="comment">//brightness range: 0-255, but LCD_BACKLIGHT_FILE range:0-127   </span></div><div class="line">    write_int (LCD_BACKLIGHT_FILE, brightness/<span class="number">2</span>);</div><div class="line">    </div><div class="line">    pthread_mutex_unlock(&amp;g_lock);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">set_shared_light_locked</span> <span class="params">(<span class="keyword">struct</span> <span class="keyword">light_device_t</span> *dev, <span class="keyword">struct</span> <span class="keyword">light_state_t</span> *state)</span> </span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> r, g, b;</div><div class="line">    <span class="keyword">int</span> delayOn,delayOff;</div><div class="line">    r = (state-&gt;color &gt;&gt; <span class="number">16</span>) &amp; <span class="number">0xFF</span>;</div><div class="line">    g = (state-&gt;color &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>;</div><div class="line">    b = (state-&gt;color) &amp; <span class="number">0xFF</span>;</div><div class="line">    delayOn = state-&gt;flashOnMS;</div><div class="line">    delayOff = state-&gt;flashOffMS;</div><div class="line">    <span class="keyword">if</span> (state-&gt;flashMode != LIGHT_FLASH_NONE) &#123;</div><div class="line">        write_string (RED_LED_FILE_TRIGGER, <span class="string">"timer"</span>);</div><div class="line">        write_string (GREEN_LED_FILE_TRIGGER, <span class="string">"timer"</span>);</div><div class="line">        write_string (BLUE_LED_FILE_TRIGGER, <span class="string">"timer"</span>);</div><div class="line">        write_int (RED_LED_FILE_DELAYON, delayOn);</div><div class="line">        write_int (GREEN_LED_FILE_DELAYON, delayOn);</div><div class="line">        write_int (BLUE_LED_FILE_DELAYON, delayOn);</div><div class="line">        write_int (RED_LED_FILE_DELAYOFF, delayOff);</div><div class="line">        write_int (GREEN_LED_FILE_DELAYOFF, delayOff);</div><div class="line">        write_int (BLUE_LED_FILE_DELAYOFF, delayOff);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        write_string (RED_LED_FILE_TRIGGER, <span class="string">"none"</span>);</div><div class="line">        write_string (GREEN_LED_FILE_TRIGGER, <span class="string">"none"</span>);</div><div class="line">        write_string (BLUE_LED_FILE_TRIGGER, <span class="string">"none"</span>);</div><div class="line">    &#125;</div><div class="line">    write_int (RED_LED_FILE, r);</div><div class="line">    write_int (GREEN_LED_FILE, g);</div><div class="line">    write_int (BLUE_LED_FILE, b);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">handle_shared_battery_locked</span> <span class="params">(<span class="keyword">struct</span> <span class="keyword">light_device_t</span> *dev)</span> </span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (is_lit (&amp;g_notification)) </div><div class="line">        set_shared_light_locked (dev, &amp;g_notification);</div><div class="line">    <span class="keyword">else</span> </div><div class="line">        set_shared_light_locked (dev, &amp;g_battery);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">set_light_battery</span> <span class="params">(<span class="keyword">struct</span> <span class="keyword">light_device_t</span> *dev, <span class="keyword">struct</span> <span class="keyword">light_state_t</span> <span class="keyword">const</span>* state)</span> </span></div><div class="line">&#123;</div><div class="line">    ALOGV(<span class="string">"%s flashMode=%d onMS = %d offMS = %d color=0x%08x"</span>, </div><div class="line">        __func__,state-&gt;flashMode,state-&gt;flashOnMS,state-&gt;flashOffMS,state-&gt;color);</div><div class="line"></div><div class="line">    pthread_mutex_lock (&amp;g_lock);</div><div class="line">    </div><div class="line">    g_battery = *state;</div><div class="line">    handle_shared_battery_locked(dev);</div><div class="line">    </div><div class="line">    pthread_mutex_unlock (&amp;g_lock);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">set_light_notifications</span> <span class="params">(<span class="keyword">struct</span> <span class="keyword">light_device_t</span> *dev, <span class="keyword">struct</span> <span class="keyword">light_state_t</span> <span class="keyword">const</span>* state)</span> </span></div><div class="line">&#123;</div><div class="line">    ALOGV(<span class="string">"%s flashMode=%d onMS = %d offMS = %d color=0x%08x"</span>, </div><div class="line">        __func__,state-&gt;flashMode,state-&gt;flashOnMS,state-&gt;flashOffMS,state-&gt;color);</div><div class="line">    </div><div class="line">    pthread_mutex_lock (&amp;g_lock);</div><div class="line">    </div><div class="line">    g_notification = *state;</div><div class="line">    handle_shared_battery_locked(dev);</div><div class="line">    </div><div class="line">    pthread_mutex_unlock (&amp;g_lock);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_globals</span> <span class="params">()</span> </span></div><div class="line">&#123;</div><div class="line">    pthread_mutex_init (&amp;g_lock, <span class="literal">NULL</span>); <span class="comment">//init the mutex</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">close_lights</span> <span class="params">(<span class="keyword">struct</span> <span class="keyword">light_device_t</span> *dev)</span> </span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (dev)</div><div class="line">        <span class="built_in">free</span>(dev);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// hardware/libhardware/include/hardware/lights.h</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">open_lights</span> <span class="params">(<span class="keyword">const</span> <span class="keyword">struct</span> <span class="keyword">hw_module_t</span>* <span class="keyword">module</span>, <span class="keyword">char</span> <span class="keyword">const</span>* name, </span></span></div><div class="line">        <span class="keyword">struct</span> <span class="keyword">hw_device_t</span>** device) </div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> (*set_light)(<span class="keyword">struct</span> <span class="keyword">light_device_t</span>* dev,</div><div class="line">                     <span class="keyword">struct</span> <span class="keyword">light_state_t</span> <span class="keyword">const</span> *state);</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (<span class="number">0</span> == <span class="built_in">strcmp</span>(LIGHT_ID_BACKLIGHT, name)) </div><div class="line">        set_light = set_light_backlight;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">0</span> == <span class="built_in">strcmp</span>(LIGHT_ID_BATTERY, name)) </div><div class="line">        set_light = set_light_battery;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">0</span> == <span class="built_in">strcmp</span>(LIGHT_ID_NOTIFICATIONS, name)) </div><div class="line">        set_light = set_light_notifications;</div><div class="line">    <span class="keyword">else</span> </div><div class="line">        <span class="keyword">return</span> -EINVAL;</div><div class="line">    </div><div class="line">    pthread_once(&amp;g_init, init_globals);</div><div class="line">    <span class="keyword">struct</span> <span class="keyword">light_device_t</span> *dev = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="keyword">struct</span> <span class="keyword">light_device_t</span>));</div><div class="line">    <span class="built_in">memset</span>(dev, <span class="number">0</span>, <span class="keyword">sizeof</span>(*dev));</div><div class="line">    dev-&gt;common.tag     = HARDWARE_DEVICE_TAG;</div><div class="line">    dev-&gt;common.version = <span class="number">0</span>;</div><div class="line">    dev-&gt;common.<span class="keyword">module</span>  = (<span class="keyword">struct</span> <span class="keyword">hw_module_t</span>*)<span class="keyword">module</span>;</div><div class="line">    dev-&gt;common.close   = (<span class="keyword">int</span> (*)(<span class="keyword">struct</span> <span class="keyword">hw_device_t</span>*))close_lights;</div><div class="line">    dev-&gt;set_light      = set_light;</div><div class="line">    </div><div class="line">    *device = (<span class="keyword">struct</span> <span class="keyword">hw_device_t</span>*)dev;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line">                        </div><div class="line"><span class="comment">//2.create open(), return light_device_t by name                        </span></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> <span class="keyword">hw_module_methods_t</span> lights_module_methods = &#123;</div><div class="line">    .open = open_lights,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">//1.create hw_module_t</span></div><div class="line"><span class="keyword">struct</span> <span class="keyword">hw_module_t</span> HAL_MODULE_INFO_SYM = &#123;</div><div class="line">    .tag = HARDWARE_MODULE_TAG,</div><div class="line">    .version_major = <span class="number">1</span>,</div><div class="line">    .version_minor = <span class="number">0</span>,</div><div class="line">    .id = LIGHTS_HARDWARE_MODULE_ID,</div><div class="line">    .name = <span class="string">"Tiny4412 lights module"</span>,</div><div class="line">    .author = <span class="string">"hceng &lt;huangcheng.job@foxmail.com&gt;"</span>,</div><div class="line">    .methods = &amp;lights_module_methods,</div><div class="line">&#125;;</div></pre></td></tr></table></figure><p>代码还算比较简单，简单分析下。<br>框架部分如前面所介绍的步骤一样，没什么特殊的，这里重点分析需实现的各个操作函数。<br>首先是<code>write_int()</code>和<code>write_string()</code>，实现向指定节点写数字和字符串。<br>接着是颜色相关的<code>is_lit()</code>，用于判断颜色是否为黑色(即<code>0x00000000</code>，没有打开任一RGB灯)，<code>rgb_to_brightness()</code>用于将<code>RGB</code>颜色换算成亮度，用于背光。<br>接着再是<code>set_light_backlight()</code>，用于设置背光，注意的是<code>brightness</code>访问为0-255，但设备节点<code>/dev/backlight-1wire</code>的支持范围是<code>0-127</code>，需要转换下。<br>再来看<code>set_light_battery()</code>和<code>set_light_notifications()</code>，它们的内容差不多，都调用<code>handle_shared_battery_locked()</code>，<code>handle_shared_battery_locked()</code>的作用是让通知灯优先，这里先判断当前是否存在通知灯信号，如果存在，就调用<code>set_shared_light_locked (dev, &amp;g_notification);</code>设置RGB亮通知灯，否则设置电源灯。<br>最后，<code>set_shared_light_locked()</code>，根据传入的<code>light_state_t</code>结构体，根据颜色RGB、是否闪烁、闪烁时间来写<code>/sys/class/leds/led*</code>节点。</p><p><code>light_state_t</code>结构体定义在<code>hardware/libhardware/include/hardware/lights.h</code>：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * The parameters that can be set for a given light.</div><div class="line"> *</div><div class="line"> * Not all lights must support all parameters.  If you</div><div class="line"> * can do something backward-compatible, you should.</div><div class="line"> */</div><div class="line"><span class="keyword">struct</span> <span class="keyword">light_state_t</span> &#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line">     * The color of the LED in ARGB.</div><div class="line">     *</div><div class="line">     * Do your best here.</div><div class="line">     *   - If your light can only do red or green, if they ask for blue,</div><div class="line">     *     you should do green.</div><div class="line">     *   - If you can only do a brightness ramp, then use this formula:</div><div class="line">     *      unsigned char brightness = ((77*((color&gt;&gt;16)&amp;0x00ff))</div><div class="line">     *              + (150*((color&gt;&gt;8)&amp;0x00ff)) + (29*(color&amp;0x00ff))) &gt;&gt; 8;</div><div class="line">     *   - If you can only do on or off, 0 is off, anything else is on.</div><div class="line">     *</div><div class="line">     * The high byte should be ignored.  Callers will set it to 0xff (which</div><div class="line">     * would correspond to 255 alpha).</div><div class="line">     */</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> color;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * See the LIGHT_FLASH_* constants</div><div class="line">     */</div><div class="line">    <span class="keyword">int</span> flashMode;</div><div class="line">    <span class="keyword">int</span> flashOnMS;</div><div class="line">    <span class="keyword">int</span> flashOffMS;</div><div class="line"></div><div class="line">    <span class="comment">/**</span></div><div class="line">     * Policy used by the framework to manage the light's brightness.</div><div class="line">     * Currently the values are BRIGHTNESS_MODE_USER and BRIGHTNESS_MODE_SENSOR.</div><div class="line">     */</div><div class="line">    <span class="keyword">int</span> brightnessMode;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p><p>包含灯颜色<code>color</code>、灯模式<code>flashMode</code>(<code>LIGHT_FLASH_NONE</code>、<code>LIGHT_FLASH_TIMED</code>、<code>LIGHT_FLASH_HARDWARE</code>)、灯闪烁时亮灭时间<code>flashOnMS</code>和<code>flashOffMS</code>、亮度模式<code>brightnessMode</code>(<code>BRIGHTNESS_MODE_USER</code>、<code>BRIGHTNESS_MODE_SENSOR</code>)。</p><h2 id="3-3编译、烧写、测试"><a href="#3-3编译、烧写、测试" class="headerlink" title="3.3编译、烧写、测试"></a>3.3编译、烧写、测试</h2><p>a.在Android源码根目录下，创建<code>hardware/libhardware/modules/lights/</code>，将前面编写的<code>lights.c</code>放在该文件夹，并创建<code>Android.mk</code>，内容如下：<br><figure class="highlight mk"><figcaption><span>[Android.mk]</span><a href="https://github.com/hceng/learn/blob/master/android/02_%E7%81%AF%E5%85%89%E7%B3%BB%E7%BB%9F/hal/Android.mk" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">LOCAL_PATH := <span class="variable">$(call my-dir)</span></div><div class="line"></div><div class="line">include $(CLEAR_VARS)</div><div class="line"></div><div class="line"><span class="comment"># LOCAL_MODULE := lights.default</span></div><div class="line">LOCAL_MODULE := lights.tiny4412</div><div class="line"></div><div class="line">LOCAL_MODULE_RELATIVE_PATH := hw</div><div class="line">LOCAL_C_INCLUDES := hardware/libhardware</div><div class="line">LOCAL_SRC_FILES := lights.c</div><div class="line">LOCAL_SHARED_LIBRARIES := liblog</div><div class="line">LOCAL_MODULE_TAGS := eng</div><div class="line"></div><div class="line">include $(BUILD_SHARED_LIBRARY)</div></pre></td></tr></table></figure></p><p>b.去掉Android源码中，友善之臂提供的灯光<code>HAL</code>层。<br>编辑<code>vendor/friendly-arm/tiny4412/device-tiny4412.mk</code>，注释掉灯光部分：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ifeq ($(BOARD_USES_PWMLIGHTS),false)</div><div class="line">#PRODUCT_COPY_FILES += \</div><div class="line">#       $(VENDOR_PATH)/proprietary/lights.tiny4412.so:system/lib/hw/lights.tiny4412.so</div><div class="line">endif</div></pre></td></tr></table></figure></p><p>c.执行以下命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">source build/envsetup.sh</div><div class="line"></div><div class="line">mmm hardware/libhardware/modules/lights -B //-B参数强制编译</div><div class="line"></div><div class="line">diff vendor/friendly-arm/tiny4412/proprietary/lights.tiny4412.so out/target/product/tiny4412/system/lib/hw/lights.tiny4412.so  //判断是否编译了新的lights.tiny4412.so</div><div class="line"></div><div class="line">make snod</div><div class="line"></div><div class="line">./gen-img.sh</div></pre></td></tr></table></figure></p><p>将生成的system.img重新烧写。</p><p>d.修改内核的文件权限<br>驱动里会操作<code>/sys/class/leds/led*/</code>里的<code>brightness</code>、<code>trigger</code>、<code>delay_on</code>、<code>delay_off</code>，在驱动里原权限是<code>0644</code>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">---  -&gt; 0   (no excute , no write ,no read)</div><div class="line">--x  -&gt; 1   excute, (no write, no read)</div><div class="line">-w-  -&gt; 2   write </div><div class="line">-wx  -&gt; 3   write, excute</div><div class="line">r--  -&gt; 4   read</div><div class="line">r-x  -&gt; 5   read, excute</div><div class="line">rw-  -&gt; 6   read, write , </div><div class="line">rwx  -&gt; 7   read, write , excute</div></pre></td></tr></table></figure></p><p>即用户有读写权限，组用户和其它用户，只有读权限，这会导致应用层写不了，这里简单处理，直接在驱动里改为<code>0666</code>。</p><p>修改Linux内核源码，<code>drivers/leds/led-class.c</code>里的<code>brightness</code>和<code>trigger</code>:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> device_attribute led_class_attrs[] = &#123;</div><div class="line">__ATTR(brightness, <span class="number">0666</span>, led_brightness_show, led_brightness_store),</div><div class="line">__ATTR(max_brightness, <span class="number">0444</span>, led_max_brightness_show, <span class="literal">NULL</span>),</div><div class="line">#ifdef CONFIG_LEDS_TRIGGERS</div><div class="line">__ATTR(trigger, <span class="number">0666</span>, led_trigger_show, led_trigger_store),</div><div class="line">#endif</div><div class="line">__ATTR_NULL,</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p><p><code>drivers/leds/ledtrig-timer.c</code>里的<code>delay_on</code>和<code>delay_off</code>::<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">if</span> defined(CONFIG_MACH_IPCAM)</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="title">DEVICE_ATTR</span><span class="params">(delay_on, <span class="number">0666</span>, led_delay_on_show, led_delay_on_store)</span></span>;</div><div class="line"><span class="function"><span class="keyword">static</span> <span class="title">DEVICE_ATTR</span><span class="params">(delay_off, <span class="number">0666</span>, led_delay_off_show, led_delay_off_store)</span></span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="title">DEVICE_ATTR</span><span class="params">(delay_on, <span class="number">0666</span>, led_delay_on_show, led_delay_on_store)</span></span>;</div><div class="line"><span class="function"><span class="keyword">static</span> <span class="title">DEVICE_ATTR</span><span class="params">(delay_off, <span class="number">0666</span>, led_delay_off_show, led_delay_off_store)</span></span>;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure></p><p>执行<code>make zImage</code>编译内核，烧写内核。</p><p>e.效果<br>重新启动后，执行<code>logcat lights:V *:S</code>，打开APP设置，显示，设置亮度，可以看到如下打印信息：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">shell@tiny4412:/ $ logcat lights:V *:S</div><div class="line">--------- beginning of main</div><div class="line">--------- beginning of system</div><div class="line">V/lights  ( 1973): set_light_battery flashMode=1 onMS = 125 offMS = 2875 color=0xffff0000</div><div class="line">V/lights  ( 1973): set_light_backlight brightness=255 color=0xffffffff</div><div class="line"></div><div class="line">V/lights  ( 1983): set_light_backlight brightness=10 color=0xff0a0a0a</div><div class="line">V/lights  ( 1983): set_light_backlight brightness=11 color=0xff0b0b0b</div><div class="line">V/lights  ( 1983): set_light_backlight brightness=18 color=0xff121212</div><div class="line">V/lights  ( 1983): set_light_backlight brightness=22 color=0xff161616</div><div class="line">……</div><div class="line">V/lights  ( 1983): set_light_backlight brightness=228 color=0xffe4e4e4</div><div class="line">V/lights  ( 1983): set_light_backlight brightness=238 color=0xffeeeeee</div><div class="line">V/lights  ( 1983): set_light_backlight brightness=247 color=0xfff7f7f7</div><div class="line">V/lights  ( 1983): set_light_backlight brightness=255 color=0xffffffff</div></pre></td></tr></table></figure></p><p>可以看到调用了<code>set_light_battery()</code>，模式为1(<code>LIGHT_FLASH_TIMED</code>)闪烁，闪烁时间，颜色为<code>0xff0000</code>红色。因为此时板子连接着电源，且没有电池，认为是充满电状态。<br>接着是<code>set_light_backlight()</code>，将亮度条从最暗拖到最亮，LCD也逐渐变亮，<code>brightness</code>也从10~255变化。</p><h1 id="4-Android源码调用分析"><a href="#4-Android源码调用分析" class="headerlink" title="4.Android源码调用分析"></a>4.Android源码调用分析</h1><p>在进行各种LED调用分析之前，先了解一些Android的基础知识。</p><h2 id="4-1-服务Server"><a href="#4-1-服务Server" class="headerlink" title="4.1 服务Server"></a>4.1 服务Server</h2><h3 id="4-1-1-基本概念"><a href="#4-1-1-基本概念" class="headerlink" title="4.1.1 基本概念"></a>4.1.1 基本概念</h3><p><a href="https://developer.android.com/guide/components/services?hl=zh-cn" target="_blank" rel="external"><code>Service</code></a>是一个可以在后台执行长时间运行操作而不提供用户界面的应用组件。<br>服务可由其他应用组件启动，而且即使用户切换到其他应用，服务仍将在后台继续运行。<br>此外，组件可以绑定到服务，以与之进行交互，甚至是执行进程间通信 (IPC)。 例如，服务可以处理网络事务、播放音乐，执行文件 I/O 或与内容提供程序交互，而所有这一切均可在后台进行。</p><p><code>Service</code>分为本地服务(<code>LocalService</code>)和远程服务(<code>RemoteService</code>)：<br><code>LocalService</code>依附在主进程上而不是独立的进程，这样在一定程度上节约了资源，另外本地服务因为是在同一进程因此不需要IPC，也不需要AIDL。相应<code>bindService</code>会方便很多。主进程被<code>Kill</code>后，服务便会终止。<br><code>RemoteService</code>为独立的进程，对应进程名格式为所在包名加上你指定的<code>android:process</code>字符串。由于是独立的进程，因此在<code>Activity</code>所在进程被<code>Kill</code>的时候，该服务依然在运行，不受其他进程影响，有利于为多个进程提供服务具有较高的灵活性。该服务是独立的进程，会占用一定资源，并且使用AIDL进行IPC稍微麻烦一点。</p><p><code>System Server</code>是<code>Android</code>基本服务的提供者，是<code>Android</code>系统运行的最基本需求。<br>所有<code>Server</code>运行在一个叫<code>system_process</code>的进程中，<code>system_process</code>进程是<code>Android</code>Java虚拟机跑的第一个进程。<br>可以说，整个<code>Android</code>系统的业务都是围绕<code>System Server</code>而展开，所以，当<code>system_process</code>死掉了，手机必须重启。</p><h3 id="4-1-2-系统服务源码分析"><a href="#4-1-2-系统服务源码分析" class="headerlink" title="4.1.2 系统服务源码分析"></a>4.1.2 系统服务源码分析</h3><p>在<code>Zygote</code>创建<code>system_process</code>进程时，实例化了类<code>SystemServer</code>。<br>下面对<code>frameworks/base/services/java/com/android/server/SystemServer.java</code>源码进行分析。</p><p>Java语法里，如果运行某个Java程序，先执行它的<code>main()</code>方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        <span class="keyword">new</span> SystemServer().run();</div><div class="line">    &#125;</div></pre></td></tr></table></figure><br>可以看到它先实例化<code>new</code>一个类<code>SystemServer</code>，再调用它的<code>run()</code>方法。<br>类<code>SystemServer</code>的构造方法如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">SystemServer</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">// Check for factory test mode.</span></div><div class="line">    mFactoryTestMode = FactoryTest.getMode();</div><div class="line">&#125;</div></pre></td></tr></table></figure><br>只是检查了工厂测试模式，暂不用管。接着看<code>run()</code>方法源码：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">// If a device's clock is before 1970 (before 0), a lot of</span></div><div class="line">    <span class="comment">// APIs crash dealing with negative numbers, notably</span></div><div class="line">    <span class="comment">// java.io.File#setLastModified, so instead we fake it and</span></div><div class="line">    <span class="comment">// hope that time from cell towers or NTP fixes it shortly.</span></div><div class="line">    <span class="keyword">if</span> (System.currentTimeMillis() &lt; EARLIEST_SUPPORTED_TIME) &#123;</div><div class="line">        Slog.w(TAG, <span class="string">"System clock is before 1970; setting to 1970."</span>);</div><div class="line">        SystemClock.setCurrentTimeMillis(EARLIEST_SUPPORTED_TIME);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// Here we go!</span></div><div class="line">    Slog.i(TAG, <span class="string">"Entered the Android system server!"</span>);</div><div class="line">    EventLog.writeEvent(EventLogTags.BOOT_PROGRESS_SYSTEM_RUN, SystemClock.uptimeMillis());</div><div class="line"></div><div class="line">    <span class="comment">// In case the runtime switched since last boot (such as when</span></div><div class="line">    <span class="comment">// the old runtime was removed in an OTA), set the system</span></div><div class="line">    <span class="comment">// property so that it is in sync. We can't do this in</span></div><div class="line">    <span class="comment">// libnativehelper's JniInvocation::Init code where we already</span></div><div class="line">    <span class="comment">// had to fallback to a different runtime because it is</span></div><div class="line">    <span class="comment">// running as root and we need to be the system user to set</span></div><div class="line">    <span class="comment">// the property. http://b/11463182</span></div><div class="line">    SystemProperties.set(<span class="string">"persist.sys.dalvik.vm.lib.2"</span>, VMRuntime.getRuntime().vmLibrary());</div><div class="line"></div><div class="line">    <span class="comment">// Enable the sampling profiler.</span></div><div class="line">    <span class="keyword">if</span> (SamplingProfilerIntegration.isEnabled()) &#123;</div><div class="line">        SamplingProfilerIntegration.start();</div><div class="line">        mProfilerSnapshotTimer = <span class="keyword">new</span> Timer();</div><div class="line">        mProfilerSnapshotTimer.schedule(<span class="keyword">new</span> TimerTask() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                SamplingProfilerIntegration.writeSnapshot(<span class="string">"system_server"</span>, <span class="keyword">null</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;, SNAPSHOT_INTERVAL, SNAPSHOT_INTERVAL);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// Mmmmmm... more memory!</span></div><div class="line">    VMRuntime.getRuntime().clearGrowthLimit();</div><div class="line"></div><div class="line">    <span class="comment">// The system server has to run all of the time, so it needs to be</span></div><div class="line">    <span class="comment">// as efficient as possible with its memory usage.</span></div><div class="line">    VMRuntime.getRuntime().setTargetHeapUtilization(<span class="number">0.8f</span>);</div><div class="line"></div><div class="line">    <span class="comment">// Some devices rely on runtime fingerprint generation, so make sure</span></div><div class="line">    <span class="comment">// we've defined it before booting further.</span></div><div class="line">    Build.ensureFingerprintProperty();</div><div class="line"></div><div class="line">    <span class="comment">// Within the system server, it is an error to access Environment paths without</span></div><div class="line">    <span class="comment">// explicitly specifying a user.</span></div><div class="line">    Environment.setUserRequired(<span class="keyword">true</span>);</div><div class="line"></div><div class="line">    <span class="comment">// Ensure binder calls into the system always run at foreground priority.</span></div><div class="line">    BinderInternal.disableBackgroundScheduling(<span class="keyword">true</span>);</div><div class="line"></div><div class="line">    <span class="comment">// Prepare the main looper thread (this thread).</span></div><div class="line">    android.os.Process.setThreadPriority(</div><div class="line">            android.os.Process.THREAD_PRIORITY_FOREGROUND);</div><div class="line">    android.os.Process.setCanSelfBackground(<span class="keyword">false</span>);</div><div class="line">    Looper.prepareMainLooper();</div><div class="line"></div><div class="line">    <span class="comment">// Initialize native services.</span></div><div class="line">    System.loadLibrary(<span class="string">"android_servers"</span>);</div><div class="line">    nativeInit();</div><div class="line"></div><div class="line">    <span class="comment">// Check whether we failed to shut down last time we tried.</span></div><div class="line">    <span class="comment">// This call may not return.</span></div><div class="line">    performPendingShutdown();</div><div class="line"></div><div class="line">    <span class="comment">// Initialize the system context.</span></div><div class="line">    createSystemContext();</div><div class="line"></div><div class="line">    <span class="comment">// Create the system service manager.</span></div><div class="line">    mSystemServiceManager = <span class="keyword">new</span> SystemServiceManager(mSystemContext);</div><div class="line">    LocalServices.addService(SystemServiceManager.class, mSystemServiceManager);</div><div class="line"></div><div class="line">    <span class="comment">// Start services.</span></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        startBootstrapServices();</div><div class="line">        startCoreServices();</div><div class="line">        startOtherServices(); </div><div class="line">    &#125; <span class="keyword">catch</span> (Throwable ex) &#123;</div><div class="line">        Slog.e(<span class="string">"System"</span>, <span class="string">"******************************************"</span>);</div><div class="line">        Slog.e(<span class="string">"System"</span>, <span class="string">"************ Failure starting system services"</span>, ex);</div><div class="line">        <span class="keyword">throw</span> ex;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// For debug builds, log event loop stalls to dropbox for analysis.</span></div><div class="line">    <span class="keyword">if</span> (StrictMode.conditionallyEnableDebugLogging()) &#123;</div><div class="line">        Slog.i(TAG, <span class="string">"Enabled StrictMode for system server main thread."</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// Loop forever.</span></div><div class="line">    Looper.loop();</div><div class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Main thread loop unexpectedly exited"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><br>可以看到使用<code>createSystemContext();</code>创建了一个上下文对象<code>mSystemContext</code>。<br>接着创建一个<code>SystemServiceManager</code>的实例，管理所有的<code>SystemService</code>。接着使用<code>LocalServices.addService()</code>将该对象加到<code>LocalService</code>中。<br>之后就是依次启动三种类型的<code>SystemService</code>：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">startBootstrapServices();</div><div class="line">startCoreServices();</div><div class="line">startOtherServices(); </div></pre></td></tr></table></figure></p><p>先看<code>startBootstrapServices()</code>启动了哪些系统服务：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Starts the small tangle of critical services that are needed to get</div><div class="line"> * the system off the ground.  These services have complex mutual dependencies</div><div class="line"> * which is why we initialize them all in one place here.  Unless your service</div><div class="line"> * is also entwined in these dependencies, it should be initialized in one of</div><div class="line"> * the other functions.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startBootstrapServices</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">// Wait for installd to finish starting up so that it has a chance to</span></div><div class="line">    <span class="comment">// create critical directories such as /data/user with the appropriate</span></div><div class="line">    <span class="comment">// permissions.  We need this to complete before we initialize other services.</span></div><div class="line">    mInstaller = mSystemServiceManager.startService(Installer.class);</div><div class="line"></div><div class="line">    <span class="comment">// Activity manager runs the show.</span></div><div class="line">    mActivityManagerService = mSystemServiceManager.startService(</div><div class="line">            ActivityManagerService.Lifecycle.class).getService();</div><div class="line">    mActivityManagerService.setSystemServiceManager(mSystemServiceManager);</div><div class="line"></div><div class="line">    <span class="comment">// Power manager needs to be started early because other services need it.</span></div><div class="line">    <span class="comment">// Native daemons may be watching for it to be registered so it must be ready</span></div><div class="line">    <span class="comment">// to handle incoming binder calls immediately (including being able to verify</span></div><div class="line">    <span class="comment">// the permissions for those calls).</span></div><div class="line">    mPowerManagerService = mSystemServiceManager.startService(PowerManagerService.class);</div><div class="line"></div><div class="line">    <span class="comment">// Now that the power manager has been started, let the activity manager</span></div><div class="line">    <span class="comment">// initialize power management features.</span></div><div class="line">    mActivityManagerService.initPowerManagement();</div><div class="line"></div><div class="line">    <span class="comment">// Display manager is needed to provide display metrics before package manager</span></div><div class="line">    <span class="comment">// starts up.</span></div><div class="line">    mDisplayManagerService = mSystemServiceManager.startService(DisplayManagerService.class);</div><div class="line"></div><div class="line">    <span class="comment">// We need the default display before we can initialize the package manager.</span></div><div class="line">    mSystemServiceManager.startBootPhase(SystemService.PHASE_WAIT_FOR_DEFAULT_DISPLAY);</div><div class="line"></div><div class="line">    <span class="comment">// Only run "core" apps if we're encrypting the device.</span></div><div class="line">    String cryptState = SystemProperties.get(<span class="string">"vold.decrypt"</span>);</div><div class="line">    <span class="keyword">if</span> (ENCRYPTING_STATE.equals(cryptState)) &#123;</div><div class="line">        Slog.w(TAG, <span class="string">"Detected encryption in progress - only parsing core apps"</span>);</div><div class="line">        mOnlyCore = <span class="keyword">true</span>;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (ENCRYPTED_STATE.equals(cryptState)) &#123;</div><div class="line">        Slog.w(TAG, <span class="string">"Device encrypted - only parsing core apps"</span>);</div><div class="line">        mOnlyCore = <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// Start the package manager.</span></div><div class="line">    Slog.i(TAG, <span class="string">"Package Manager"</span>);</div><div class="line">    mPackageManagerService = PackageManagerService.main(mSystemContext, mInstaller,</div><div class="line">            mFactoryTestMode != FactoryTest.FACTORY_TEST_OFF, mOnlyCore);</div><div class="line">    mFirstBoot = mPackageManagerService.isFirstBoot();</div><div class="line">    mPackageManager = mSystemContext.getPackageManager();</div><div class="line"></div><div class="line">    Slog.i(TAG, <span class="string">"User Service"</span>);</div><div class="line">    ServiceManager.addService(Context.USER_SERVICE, UserManagerService.getInstance());</div><div class="line"></div><div class="line">    <span class="comment">// Initialize attribute cache used to cache resources from packages.</span></div><div class="line">    AttributeCache.init(mSystemContext);</div><div class="line"></div><div class="line">    <span class="comment">// Set up the Application instance for the system process and get started.</span></div><div class="line">    mActivityManagerService.setSystemProcess();</div><div class="line">&#125;</div></pre></td></tr></table></figure><br>有<code>Installer</code>、<code>ActivityManagerService.Lifecycle</code>、<code>PowerManagerService</code>、<code>DisplayManagerService</code>、<code>UserManagerService</code>。<br>基本都是通过<code>SystemServiceManager</code>的<code>startService()</code>的方法启动，启动完成后会回调<code>SystemService</code>的<code>onStart()</code>方法。</p><p>继续看<code>startCoreServices()</code>启动了哪些系统服务：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Starts some essential services that are not tangled up in the bootstrap process.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startCoreServices</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="comment">// Manages LEDs and display backlight.</span></div><div class="line">    mSystemServiceManager.startService(LightsService.class);</div><div class="line"></div><div class="line">    <span class="comment">// Tracks the battery level.  Requires LightService.</span></div><div class="line">    mSystemServiceManager.startService(BatteryService.class);</div><div class="line"></div><div class="line">    <span class="comment">// Tracks application usage stats.</span></div><div class="line">    mSystemServiceManager.startService(UsageStatsService.class);</div><div class="line">    mActivityManagerService.setUsageStatsManager(</div><div class="line">            LocalServices.getService(UsageStatsManagerInternal.class));</div><div class="line"></div><div class="line">    <span class="comment">// Tracks whether the updatable WebView is in a ready state and watches for update installs.</span></div><div class="line">    mSystemServiceManager.startService(WebViewUpdateService.class);</div><div class="line">&#125;</div></pre></td></tr></table></figure><br>有<code>LightsService</code>、<code>BatteryService</code>、<code>UsageStatsService</code>、<code>WebViewUpdateService</code>。<br>也是通过<code>SystemServiceManager</code>的<code>startService()</code>的方法启动。</p><p>最后来看看<code>startOtherServices()</code>启动了哪些系统服务：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div><div class="line">455</div><div class="line">456</div><div class="line">457</div><div class="line">458</div><div class="line">459</div><div class="line">460</div><div class="line">461</div><div class="line">462</div><div class="line">463</div><div class="line">464</div><div class="line">465</div><div class="line">466</div><div class="line">467</div><div class="line">468</div><div class="line">469</div><div class="line">470</div><div class="line">471</div><div class="line">472</div><div class="line">473</div><div class="line">474</div><div class="line">475</div><div class="line">476</div><div class="line">477</div><div class="line">478</div><div class="line">479</div><div class="line">480</div><div class="line">481</div><div class="line">482</div><div class="line">483</div><div class="line">484</div><div class="line">485</div><div class="line">486</div><div class="line">487</div><div class="line">488</div><div class="line">489</div><div class="line">490</div><div class="line">491</div><div class="line">492</div><div class="line">493</div><div class="line">494</div><div class="line">495</div><div class="line">496</div><div class="line">497</div><div class="line">498</div><div class="line">499</div><div class="line">500</div><div class="line">501</div><div class="line">502</div><div class="line">503</div><div class="line">504</div><div class="line">505</div><div class="line">506</div><div class="line">507</div><div class="line">508</div><div class="line">509</div><div class="line">510</div><div class="line">511</div><div class="line">512</div><div class="line">513</div><div class="line">514</div><div class="line">515</div><div class="line">516</div><div class="line">517</div><div class="line">518</div><div class="line">519</div><div class="line">520</div><div class="line">521</div><div class="line">522</div><div class="line">523</div><div class="line">524</div><div class="line">525</div><div class="line">526</div><div class="line">527</div><div class="line">528</div><div class="line">529</div><div class="line">530</div><div class="line">531</div><div class="line">532</div><div class="line">533</div><div class="line">534</div><div class="line">535</div><div class="line">536</div><div class="line">537</div><div class="line">538</div><div class="line">539</div><div class="line">540</div><div class="line">541</div><div class="line">542</div><div class="line">543</div><div class="line">544</div><div class="line">545</div><div class="line">546</div><div class="line">547</div><div class="line">548</div><div class="line">549</div><div class="line">550</div><div class="line">551</div><div class="line">552</div><div class="line">553</div><div class="line">554</div><div class="line">555</div><div class="line">556</div><div class="line">557</div><div class="line">558</div><div class="line">559</div><div class="line">560</div><div class="line">561</div><div class="line">562</div><div class="line">563</div><div class="line">564</div><div class="line">565</div><div class="line">566</div><div class="line">567</div><div class="line">568</div><div class="line">569</div><div class="line">570</div><div class="line">571</div><div class="line">572</div><div class="line">573</div><div class="line">574</div><div class="line">575</div><div class="line">576</div><div class="line">577</div><div class="line">578</div><div class="line">579</div><div class="line">580</div><div class="line">581</div><div class="line">582</div><div class="line">583</div><div class="line">584</div><div class="line">585</div><div class="line">586</div><div class="line">587</div><div class="line">588</div><div class="line">589</div><div class="line">590</div><div class="line">591</div><div class="line">592</div><div class="line">593</div><div class="line">594</div><div class="line">595</div><div class="line">596</div><div class="line">597</div><div class="line">598</div><div class="line">599</div><div class="line">600</div><div class="line">601</div><div class="line">602</div><div class="line">603</div><div class="line">604</div><div class="line">605</div><div class="line">606</div><div class="line">607</div><div class="line">608</div><div class="line">609</div><div class="line">610</div><div class="line">611</div><div class="line">612</div><div class="line">613</div><div class="line">614</div><div class="line">615</div><div class="line">616</div><div class="line">617</div><div class="line">618</div><div class="line">619</div><div class="line">620</div><div class="line">621</div><div class="line">622</div><div class="line">623</div><div class="line">624</div><div class="line">625</div><div class="line">626</div><div class="line">627</div><div class="line">628</div><div class="line">629</div><div class="line">630</div><div class="line">631</div><div class="line">632</div><div class="line">633</div><div class="line">634</div><div class="line">635</div><div class="line">636</div><div class="line">637</div><div class="line">638</div><div class="line">639</div><div class="line">640</div><div class="line">641</div><div class="line">642</div><div class="line">643</div><div class="line">644</div><div class="line">645</div><div class="line">646</div><div class="line">647</div><div class="line">648</div><div class="line">649</div><div class="line">650</div><div class="line">651</div><div class="line">652</div><div class="line">653</div><div class="line">654</div><div class="line">655</div><div class="line">656</div><div class="line">657</div><div class="line">658</div><div class="line">659</div><div class="line">660</div><div class="line">661</div><div class="line">662</div><div class="line">663</div><div class="line">664</div><div class="line">665</div><div class="line">666</div><div class="line">667</div><div class="line">668</div><div class="line">669</div><div class="line">670</div><div class="line">671</div><div class="line">672</div><div class="line">673</div><div class="line">674</div><div class="line">675</div><div class="line">676</div><div class="line">677</div><div class="line">678</div><div class="line">679</div><div class="line">680</div><div class="line">681</div><div class="line">682</div><div class="line">683</div><div class="line">684</div><div class="line">685</div><div class="line">686</div><div class="line">687</div><div class="line">688</div><div class="line">689</div><div class="line">690</div><div class="line">691</div><div class="line">692</div><div class="line">693</div><div class="line">694</div><div class="line">695</div><div class="line">696</div><div class="line">697</div><div class="line">698</div><div class="line">699</div><div class="line">700</div><div class="line">701</div><div class="line">702</div><div class="line">703</div><div class="line">704</div><div class="line">705</div><div class="line">706</div><div class="line">707</div><div class="line">708</div><div class="line">709</div><div class="line">710</div><div class="line">711</div><div class="line">712</div><div class="line">713</div><div class="line">714</div><div class="line">715</div><div class="line">716</div><div class="line">717</div><div class="line">718</div><div class="line">719</div><div class="line">720</div><div class="line">721</div><div class="line">722</div><div class="line">723</div><div class="line">724</div><div class="line">725</div><div class="line">726</div><div class="line">727</div><div class="line">728</div><div class="line">729</div><div class="line">730</div><div class="line">731</div><div class="line">732</div><div class="line">733</div><div class="line">734</div><div class="line">735</div><div class="line">736</div><div class="line">737</div><div class="line">738</div><div class="line">739</div><div class="line">740</div><div class="line">741</div><div class="line">742</div><div class="line">743</div><div class="line">744</div><div class="line">745</div><div class="line">746</div><div class="line">747</div><div class="line">748</div><div class="line">749</div><div class="line">750</div><div class="line">751</div><div class="line">752</div><div class="line">753</div><div class="line">754</div><div class="line">755</div><div class="line">756</div><div class="line">757</div><div class="line">758</div><div class="line">759</div><div class="line">760</div><div class="line">761</div><div class="line">762</div><div class="line">763</div><div class="line">764</div><div class="line">765</div><div class="line">766</div><div class="line">767</div><div class="line">768</div><div class="line">769</div><div class="line">770</div><div class="line">771</div><div class="line">772</div><div class="line">773</div><div class="line">774</div><div class="line">775</div><div class="line">776</div><div class="line">777</div><div class="line">778</div><div class="line">779</div><div class="line">780</div><div class="line">781</div><div class="line">782</div><div class="line">783</div><div class="line">784</div><div class="line">785</div><div class="line">786</div><div class="line">787</div><div class="line">788</div><div class="line">789</div><div class="line">790</div><div class="line">791</div><div class="line">792</div><div class="line">793</div><div class="line">794</div><div class="line">795</div><div class="line">796</div><div class="line">797</div><div class="line">798</div><div class="line">799</div><div class="line">800</div><div class="line">801</div><div class="line">802</div><div class="line">803</div><div class="line">804</div><div class="line">805</div><div class="line">806</div><div class="line">807</div><div class="line">808</div><div class="line">809</div><div class="line">810</div><div class="line">811</div><div class="line">812</div><div class="line">813</div><div class="line">814</div><div class="line">815</div><div class="line">816</div><div class="line">817</div><div class="line">818</div><div class="line">819</div><div class="line">820</div><div class="line">821</div><div class="line">822</div><div class="line">823</div><div class="line">824</div><div class="line">825</div><div class="line">826</div><div class="line">827</div><div class="line">828</div><div class="line">829</div><div class="line">830</div><div class="line">831</div><div class="line">832</div><div class="line">833</div><div class="line">834</div><div class="line">835</div><div class="line">836</div><div class="line">837</div><div class="line">838</div><div class="line">839</div><div class="line">840</div><div class="line">841</div><div class="line">842</div><div class="line">843</div><div class="line">844</div><div class="line">845</div><div class="line">846</div><div class="line">847</div><div class="line">848</div><div class="line">849</div><div class="line">850</div><div class="line">851</div><div class="line">852</div><div class="line">853</div><div class="line">854</div><div class="line">855</div><div class="line">856</div><div class="line">857</div><div class="line">858</div><div class="line">859</div><div class="line">860</div><div class="line">861</div><div class="line">862</div><div class="line">863</div><div class="line">864</div><div class="line">865</div><div class="line">866</div><div class="line">867</div><div class="line">868</div><div class="line">869</div><div class="line">870</div><div class="line">871</div><div class="line">872</div><div class="line">873</div><div class="line">874</div><div class="line">875</div><div class="line">876</div><div class="line">877</div><div class="line">878</div><div class="line">879</div><div class="line">880</div><div class="line">881</div><div class="line">882</div><div class="line">883</div><div class="line">884</div><div class="line">885</div><div class="line">886</div><div class="line">887</div><div class="line">888</div><div class="line">889</div><div class="line">890</div><div class="line">891</div><div class="line">892</div><div class="line">893</div><div class="line">894</div><div class="line">895</div><div class="line">896</div><div class="line">897</div><div class="line">898</div><div class="line">899</div><div class="line">900</div><div class="line">901</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Starts a miscellaneous grab bag of stuff that has yet to be refactored</div><div class="line"> * and organized.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startOtherServices</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">final</span> Context context = mSystemContext;</div><div class="line">    AccountManagerService accountManager = <span class="keyword">null</span>;</div><div class="line">    ContentService contentService = <span class="keyword">null</span>;</div><div class="line">    VibratorService vibrator = <span class="keyword">null</span>;</div><div class="line">    IAlarmManager alarm = <span class="keyword">null</span>;</div><div class="line">    MountService mountService = <span class="keyword">null</span>;</div><div class="line">    NetworkManagementService networkManagement = <span class="keyword">null</span>;</div><div class="line">    NetworkStatsService networkStats = <span class="keyword">null</span>;</div><div class="line">    NetworkPolicyManagerService networkPolicy = <span class="keyword">null</span>;</div><div class="line">    ConnectivityService connectivity = <span class="keyword">null</span>;</div><div class="line">    NetworkScoreService networkScore = <span class="keyword">null</span>;</div><div class="line">    NsdService serviceDiscovery= <span class="keyword">null</span>;</div><div class="line">    WindowManagerService wm = <span class="keyword">null</span>;</div><div class="line">    BluetoothManagerService bluetooth = <span class="keyword">null</span>;</div><div class="line">    UsbService usb = <span class="keyword">null</span>;</div><div class="line">    SerialService serial = <span class="keyword">null</span>;</div><div class="line">    NetworkTimeUpdateService networkTimeUpdater = <span class="keyword">null</span>;</div><div class="line">    CommonTimeManagementService commonTimeMgmtService = <span class="keyword">null</span>;</div><div class="line">    InputManagerService inputManager = <span class="keyword">null</span>;</div><div class="line">    TelephonyRegistry telephonyRegistry = <span class="keyword">null</span>;</div><div class="line">    ConsumerIrService consumerIr = <span class="keyword">null</span>;</div><div class="line">    AudioService audioService = <span class="keyword">null</span>;</div><div class="line">    MmsServiceBroker mmsService = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">    <span class="keyword">boolean</span> disableStorage = SystemProperties.getBoolean(<span class="string">"config.disable_storage"</span>, <span class="keyword">false</span>);</div><div class="line">    <span class="keyword">boolean</span> disableMedia = SystemProperties.getBoolean(<span class="string">"config.disable_media"</span>, <span class="keyword">false</span>);</div><div class="line">    <span class="keyword">boolean</span> disableBluetooth = SystemProperties.getBoolean(<span class="string">"config.disable_bluetooth"</span>, <span class="keyword">false</span>);</div><div class="line">    <span class="keyword">boolean</span> disableTelephony = SystemProperties.getBoolean(<span class="string">"config.disable_telephony"</span>, <span class="keyword">false</span>);</div><div class="line">    <span class="keyword">boolean</span> disableLocation = SystemProperties.getBoolean(<span class="string">"config.disable_location"</span>, <span class="keyword">false</span>);</div><div class="line">    <span class="keyword">boolean</span> disableSystemUI = SystemProperties.getBoolean(<span class="string">"config.disable_systemui"</span>, <span class="keyword">false</span>);</div><div class="line">    <span class="keyword">boolean</span> disableNonCoreServices = SystemProperties.getBoolean(<span class="string">"config.disable_noncore"</span>, <span class="keyword">false</span>);</div><div class="line">    <span class="keyword">boolean</span> disableNetwork = SystemProperties.getBoolean(<span class="string">"config.disable_network"</span>, <span class="keyword">false</span>);</div><div class="line">    <span class="keyword">boolean</span> isEmulator = SystemProperties.get(<span class="string">"ro.kernel.qemu"</span>).equals(<span class="string">"1"</span>);</div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        Slog.i(TAG, <span class="string">"Reading configuration..."</span>);</div><div class="line">        SystemConfig.getInstance();</div><div class="line"></div><div class="line">        Slog.i(TAG, <span class="string">"Scheduling Policy"</span>);</div><div class="line">        ServiceManager.addService(<span class="string">"scheduling_policy"</span>, <span class="keyword">new</span> SchedulingPolicyService());</div><div class="line"></div><div class="line">        Slog.i(TAG, <span class="string">"Telephony Registry"</span>);</div><div class="line">        telephonyRegistry = <span class="keyword">new</span> TelephonyRegistry(context);</div><div class="line">        ServiceManager.addService(<span class="string">"telephony.registry"</span>, telephonyRegistry);</div><div class="line"></div><div class="line">        Slog.i(TAG, <span class="string">"Entropy Mixer"</span>);</div><div class="line">        ServiceManager.addService(<span class="string">"entropy"</span>, <span class="keyword">new</span> EntropyMixer(context));</div><div class="line"></div><div class="line">        mContentResolver = context.getContentResolver();</div><div class="line"></div><div class="line">        <span class="comment">// The AccountManager must come before the ContentService</span></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">// <span class="doctag">TODO:</span> seems like this should be disable-able, but req'd by ContentService</span></div><div class="line">            Slog.i(TAG, <span class="string">"Account Manager"</span>);</div><div class="line">            accountManager = <span class="keyword">new</span> AccountManagerService(context);</div><div class="line">            ServiceManager.addService(Context.ACCOUNT_SERVICE, accountManager);</div><div class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">            Slog.e(TAG, <span class="string">"Failure starting Account Manager"</span>, e);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        Slog.i(TAG, <span class="string">"Content Manager"</span>);</div><div class="line">        contentService = ContentService.main(context,</div><div class="line">                mFactoryTestMode == FactoryTest.FACTORY_TEST_LOW_LEVEL);</div><div class="line"></div><div class="line">        Slog.i(TAG, <span class="string">"System Content Providers"</span>);</div><div class="line">        mActivityManagerService.installSystemProviders();</div><div class="line"></div><div class="line">        Slog.i(TAG, <span class="string">"Vibrator Service"</span>);</div><div class="line">        vibrator = <span class="keyword">new</span> VibratorService(context);</div><div class="line">        ServiceManager.addService(<span class="string">"vibrator"</span>, vibrator);</div><div class="line"></div><div class="line">        Slog.i(TAG, <span class="string">"Consumer IR Service"</span>);</div><div class="line">        consumerIr = <span class="keyword">new</span> ConsumerIrService(context);</div><div class="line">        ServiceManager.addService(Context.CONSUMER_IR_SERVICE, consumerIr);</div><div class="line"></div><div class="line">        mSystemServiceManager.startService(AlarmManagerService.class);</div><div class="line">        alarm = IAlarmManager.Stub.asInterface(</div><div class="line">                ServiceManager.getService(Context.ALARM_SERVICE));</div><div class="line"></div><div class="line">        Slog.i(TAG, <span class="string">"Init Watchdog"</span>);</div><div class="line">        <span class="keyword">final</span> Watchdog watchdog = Watchdog.getInstance();</div><div class="line">        watchdog.init(context, mActivityManagerService);</div><div class="line"></div><div class="line">        Slog.i(TAG, <span class="string">"HDMI Setting"</span>);</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            mHdmiService = <span class="keyword">new</span> HdmiService();</div><div class="line">            <span class="keyword">final</span> Integer tvmode = Settings.System.getInt(mContentResolver, TV_MODE, <span class="number">0</span>);</div><div class="line">            mHdmiService.setHdmiMode(tvmode);</div><div class="line"></div><div class="line">            <span class="keyword">final</span> Integer resolution = Settings.System.getInt(mContentResolver, TV_RESOLUTION, <span class="number">1080960</span>);</div><div class="line">            mHdmiService.setHdmiResolution(resolution);</div><div class="line"></div><div class="line">            <span class="keyword">final</span> Integer tv_hdcp = Settings.System.getInt(mContentResolver, TV_HDCP, <span class="number">0</span>);</div><div class="line">            mHdmiService.setHdmiHdcp(tv_hdcp);</div><div class="line">            Slog.i(TAG, <span class="string">"\tHDMI Service started with following settings:\n"</span></div><div class="line">                        + <span class="string">"\t\ttvmode="</span> + String.valueOf(tvmode) + <span class="string">"\n"</span></div><div class="line">                        + <span class="string">"\t\tresolution="</span> + String.valueOf(resolution) + <span class="string">"\n"</span></div><div class="line">                        + <span class="string">"\t\ttv_hdcp="</span> + String.valueOf(tv_hdcp) + <span class="string">"\n"</span></div><div class="line">                        );</div><div class="line"></div><div class="line">            Slog.i(TAG, <span class="string">"\tbefore: read HDMI OverScan setting"</span>);</div><div class="line">            mAtomicFile = <span class="keyword">new</span> AtomicFile(<span class="keyword">new</span> File(<span class="string">"/data/system/display-manager-state.xml"</span>));</div><div class="line">            InputStream is;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                is = mAtomicFile.openRead();</div><div class="line"></div><div class="line">               XmlPullParser parser;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    parser = Xml.newPullParser();</div><div class="line">                    parser.setInput(<span class="keyword">new</span> BufferedInputStream(is), <span class="keyword">null</span>);</div><div class="line"></div><div class="line">                    <span class="keyword">int</span> gotit = <span class="number">0</span>;</div><div class="line">                    <span class="keyword">int</span> eventType = parser.getEventType();</div><div class="line">                    <span class="keyword">while</span> (eventType != XmlPullParser.END_DOCUMENT) &#123;</div><div class="line">                        <span class="keyword">switch</span> (eventType) &#123;</div><div class="line">                        <span class="keyword">case</span> XmlPullParser.START_DOCUMENT:</div><div class="line">                            Slog.i(TAG, <span class="string">"\tHDMI OverScan Xml: START_DOCUMENT"</span>);</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        <span class="keyword">case</span> XmlPullParser.START_TAG:</div><div class="line">                            Slog.i(TAG, <span class="string">"\tHDMI OverScan Xml: START_TAG - "</span> + parser.getName());</div><div class="line"></div><div class="line">                            <span class="keyword">if</span> (parser.getName().equals(<span class="string">"local-display"</span>)) &#123;</div><div class="line">                                <span class="keyword">int</span> xOverScan = Integer.parseInt(parser.getAttributeValue(<span class="keyword">null</span>, <span class="string">"xOverScan"</span>));</div><div class="line">                                <span class="keyword">int</span> yOverScan = Integer.parseInt(parser.getAttributeValue(<span class="keyword">null</span>, <span class="string">"yOverScan"</span>));</div><div class="line">                                <span class="comment">// int keepRate = Integer.parseInt(parser.getAttributeValue(null, "keepRate"));</span></div><div class="line">                                <span class="comment">// int resolution = Integer.parseInt(parser.getAttributeValue(null, "resolution"));</span></div><div class="line">                                <span class="comment">// int rotangle = Integer.parseInt(parser.getAttributeValue(null, "rotangle"));</span></div><div class="line">                                <span class="comment">// int navbarvisible = Integer.parseInt(parser.getAttributeValue(null, "navbarvisible"));</span></div><div class="line">                                <span class="comment">// String deviceName = parser.getAttributeValue(null, "deviceName");</span></div><div class="line"></div><div class="line">                                Slog.i(TAG, <span class="string">"\tHDMI OverScan as following settings:\n"</span></div><div class="line">                                            + <span class="string">"\t\txOverScan="</span> + xOverScan + <span class="string">"\n"</span></div><div class="line">                                            + <span class="string">"\t\tyOverScan="</span> + yOverScan + <span class="string">"\n"</span></div><div class="line">                                            );</div><div class="line">                                gotit = <span class="number">1</span>;</div><div class="line"></div><div class="line"></div><div class="line">                                <span class="keyword">if</span> (xOverScan &lt; <span class="number">0</span>) &#123;</div><div class="line">                                    xOverScan = <span class="number">0</span>;</div><div class="line">                                &#125;</div><div class="line">                                <span class="keyword">if</span> (yOverScan &lt; <span class="number">0</span>) &#123;</div><div class="line">                                    yOverScan = <span class="number">0</span>;</div><div class="line">                                &#125;</div><div class="line">                                mHdmiService.setHdmiOverScan(xOverScan,yOverScan,-<span class="number">1</span>,-<span class="number">1</span>);</div><div class="line">                            &#125;</div><div class="line"></div><div class="line">                            <span class="keyword">break</span>;</div><div class="line"></div><div class="line">                        <span class="keyword">case</span> XmlPullParser.END_TAG:</div><div class="line">                            Slog.i(TAG, <span class="string">"\tHDMI OverScan Xml: END_TAG - "</span> + parser.getName());</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">                        <span class="keyword">if</span> (gotit == <span class="number">1</span>) &#123;</div><div class="line">                            <span class="keyword">break</span>;</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">                        eventType = parser.next();</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                &#125; <span class="keyword">catch</span> (IOException ex) &#123;</div><div class="line">                    Slog.w(TAG, <span class="string">"\tHDMI OverScan exception: Failed to load display manager persistent store data."</span>, ex);</div><div class="line">                &#125; <span class="keyword">catch</span> (XmlPullParserException ex) &#123;</div><div class="line">                    Slog.w(TAG, <span class="string">"\tHDMI OverScan exception: Failed to load display manager persistent store data."</span>, ex);</div><div class="line">                &#125; <span class="keyword">finally</span> &#123;</div><div class="line">                    Slog.w(TAG, <span class="string">"\tHDMI OverScan enter try-finally"</span>);</div><div class="line">                    IoUtils.closeQuietly(is);</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">catch</span> (FileNotFoundException ex) &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"\tHDMI OverScan exception: mAtomicFile.openRead()"</span>);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">            Slog.e(TAG, <span class="string">"Failure starting HdmiService"</span>, e);</div><div class="line">        &#125;</div><div class="line">        </div><div class="line"></div><div class="line">        Slog.i(TAG, <span class="string">"Input Manager"</span>);</div><div class="line">        inputManager = <span class="keyword">new</span> InputManagerService(context);</div><div class="line"></div><div class="line">        Slog.i(TAG, <span class="string">"Window Manager"</span>);</div><div class="line">        wm = WindowManagerService.main(context, inputManager,</div><div class="line">                mFactoryTestMode != FactoryTest.FACTORY_TEST_LOW_LEVEL,</div><div class="line">                !mFirstBoot, mOnlyCore);</div><div class="line">        ServiceManager.addService(Context.WINDOW_SERVICE, wm);</div><div class="line">        ServiceManager.addService(Context.INPUT_SERVICE, inputManager);</div><div class="line"></div><div class="line">        mActivityManagerService.setWindowManager(wm);</div><div class="line"></div><div class="line">        inputManager.setWindowManagerCallbacks(wm.getInputMonitor());</div><div class="line">        inputManager.start();</div><div class="line"></div><div class="line">        <span class="comment">// <span class="doctag">TODO:</span> Use service dependencies instead.</span></div><div class="line">        mDisplayManagerService.windowManagerAndInputReady();</div><div class="line"></div><div class="line">        <span class="comment">// Skip Bluetooth if we have an emulator kernel</span></div><div class="line">        <span class="comment">// <span class="doctag">TODO:</span> Use a more reliable check to see if this product should</span></div><div class="line">        <span class="comment">// support Bluetooth - see bug 988521</span></div><div class="line">        <span class="keyword">if</span> (isEmulator) &#123;</div><div class="line">            Slog.i(TAG, <span class="string">"No Bluetooh Service (emulator)"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mFactoryTestMode == FactoryTest.FACTORY_TEST_LOW_LEVEL) &#123;</div><div class="line">            Slog.i(TAG, <span class="string">"No Bluetooth Service (factory test)"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!context.getPackageManager().hasSystemFeature</div><div class="line">                   (PackageManager.FEATURE_BLUETOOTH)) &#123;</div><div class="line">            Slog.i(TAG, <span class="string">"No Bluetooth Service (Bluetooth Hardware Not Present)"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (disableBluetooth) &#123;</div><div class="line">            Slog.i(TAG, <span class="string">"Bluetooth Service disabled by config"</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            Slog.i(TAG, <span class="string">"Bluetooth Manager Service"</span>);</div><div class="line">            bluetooth = <span class="keyword">new</span> BluetoothManagerService(context);</div><div class="line">            ServiceManager.addService(BluetoothAdapter.BLUETOOTH_MANAGER_SERVICE, bluetooth);</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">catch</span> (RuntimeException e) &#123;</div><div class="line">        Slog.e(<span class="string">"System"</span>, <span class="string">"******************************************"</span>);</div><div class="line">        Slog.e(<span class="string">"System"</span>, <span class="string">"************ Failure starting core service"</span>, e);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    StatusBarManagerService statusBar = <span class="keyword">null</span>;</div><div class="line">    INotificationManager notification = <span class="keyword">null</span>;</div><div class="line">    InputMethodManagerService imm = <span class="keyword">null</span>;</div><div class="line">    WallpaperManagerService wallpaper = <span class="keyword">null</span>;</div><div class="line">    LocationManagerService location = <span class="keyword">null</span>;</div><div class="line">    CountryDetectorService countryDetector = <span class="keyword">null</span>;</div><div class="line">    TextServicesManagerService tsms = <span class="keyword">null</span>;</div><div class="line">    LockSettingsService lockSettings = <span class="keyword">null</span>;</div><div class="line">    AssetAtlasService atlas = <span class="keyword">null</span>;</div><div class="line">    MediaRouterService mediaRouter = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">    <span class="comment">// Bring up services needed for UI.</span></div><div class="line">    <span class="keyword">if</span> (mFactoryTestMode != FactoryTest.FACTORY_TEST_LOW_LEVEL) &#123;</div><div class="line">        <span class="comment">//if (!disableNonCoreServices) &#123; // <span class="doctag">TODO:</span> View depends on these; mock them?</span></div><div class="line">        <span class="keyword">if</span> (<span class="keyword">true</span>) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Input Method Service"</span>);</div><div class="line">                imm = <span class="keyword">new</span> InputMethodManagerService(context, wm);</div><div class="line">                ServiceManager.addService(Context.INPUT_METHOD_SERVICE, imm);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting Input Manager Service"</span>, e);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Accessibility Manager"</span>);</div><div class="line">                ServiceManager.addService(Context.ACCESSIBILITY_SERVICE,</div><div class="line">                        <span class="keyword">new</span> AccessibilityManagerService(context));</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting Accessibility Manager"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        wm.displayReady();</div><div class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">        reportWtf(<span class="string">"making display ready"</span>, e);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (mFactoryTestMode != FactoryTest.FACTORY_TEST_LOW_LEVEL) &#123;</div><div class="line">        <span class="keyword">if</span> (!disableStorage &amp;&amp;</div><div class="line">            !<span class="string">"0"</span>.equals(SystemProperties.get(<span class="string">"system_init.startmountservice"</span>))) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="comment">/*</span></div><div class="line">                 * NotificationManagerService is dependant on MountService,</div><div class="line">                 * (for media / usb notifications) so we must start MountService first.</div><div class="line">                 */</div><div class="line">                Slog.i(TAG, <span class="string">"Mount Service"</span>);</div><div class="line">                mountService = <span class="keyword">new</span> MountService(context);</div><div class="line">                ServiceManager.addService(<span class="string">"mount"</span>, mountService);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting Mount Service"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        mPackageManagerService.performBootDexOpt();</div><div class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">        reportWtf(<span class="string">"performing boot dexopt"</span>, e);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        ActivityManagerNative.getDefault().showBootMessage(</div><div class="line">                context.getResources().getText(</div><div class="line">                        com.android.internal.R.string.android_upgrading_starting_apps),</div><div class="line">                <span class="keyword">false</span>);</div><div class="line">    &#125; <span class="keyword">catch</span> (RemoteException e) &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (mFactoryTestMode != FactoryTest.FACTORY_TEST_LOW_LEVEL) &#123;</div><div class="line">        <span class="keyword">if</span> (!disableNonCoreServices) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG,  <span class="string">"LockSettingsService"</span>);</div><div class="line">                lockSettings = <span class="keyword">new</span> LockSettingsService(context);</div><div class="line">                ServiceManager.addService(<span class="string">"lock_settings"</span>, lockSettings);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting LockSettingsService service"</span>, e);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (!SystemProperties.get(PERSISTENT_DATA_BLOCK_PROP).equals(<span class="string">""</span>)) &#123;</div><div class="line">                mSystemServiceManager.startService(PersistentDataBlockService.class);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="comment">// Always start the Device Policy Manager, so that the API is compatible with</span></div><div class="line">            <span class="comment">// API8.</span></div><div class="line">            mSystemServiceManager.startService(DevicePolicyManagerService.Lifecycle.class);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableSystemUI) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Status Bar"</span>);</div><div class="line">                statusBar = <span class="keyword">new</span> StatusBarManagerService(context, wm);</div><div class="line">                ServiceManager.addService(Context.STATUS_BAR_SERVICE, statusBar);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting StatusBarManagerService"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableNonCoreServices) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Clipboard Service"</span>);</div><div class="line">                ServiceManager.addService(Context.CLIPBOARD_SERVICE,</div><div class="line">                        <span class="keyword">new</span> ClipboardService(context));</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting Clipboard Service"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableNetwork) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"NetworkManagement Service"</span>);</div><div class="line">                networkManagement = NetworkManagementService.create(context);</div><div class="line">                ServiceManager.addService(Context.NETWORKMANAGEMENT_SERVICE, networkManagement);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting NetworkManagement Service"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableNonCoreServices) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Text Service Manager Service"</span>);</div><div class="line">                tsms = <span class="keyword">new</span> TextServicesManagerService(context);</div><div class="line">                ServiceManager.addService(Context.TEXT_SERVICES_MANAGER_SERVICE, tsms);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting Text Service Manager Service"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableNetwork) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Network Score Service"</span>);</div><div class="line">                networkScore = <span class="keyword">new</span> NetworkScoreService(context);</div><div class="line">                ServiceManager.addService(Context.NETWORK_SCORE_SERVICE, networkScore);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting Network Score Service"</span>, e);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"NetworkStats Service"</span>);</div><div class="line">                networkStats = <span class="keyword">new</span> NetworkStatsService(context, networkManagement, alarm);</div><div class="line">                ServiceManager.addService(Context.NETWORK_STATS_SERVICE, networkStats);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting NetworkStats Service"</span>, e);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"NetworkPolicy Service"</span>);</div><div class="line">                networkPolicy = <span class="keyword">new</span> NetworkPolicyManagerService(</div><div class="line">                        context, mActivityManagerService,</div><div class="line">                        (IPowerManager)ServiceManager.getService(Context.POWER_SERVICE),</div><div class="line">                        networkStats, networkManagement);</div><div class="line">                ServiceManager.addService(Context.NETWORK_POLICY_SERVICE, networkPolicy);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting NetworkPolicy Service"</span>, e);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            mSystemServiceManager.startService(WIFI_P2P_SERVICE_CLASS);</div><div class="line">            mSystemServiceManager.startService(WIFI_SERVICE_CLASS);</div><div class="line">            mSystemServiceManager.startService(</div><div class="line">                        <span class="string">"com.android.server.wifi.WifiScanningService"</span>);</div><div class="line"></div><div class="line">            mSystemServiceManager.startService(<span class="string">"com.android.server.wifi.RttService"</span>);</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (mPackageManager.hasSystemFeature(PackageManager.FEATURE_ETHERNET)) &#123;</div><div class="line">                mSystemServiceManager.startService(ETHERNET_SERVICE_CLASS);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Connectivity Service"</span>);</div><div class="line">                connectivity = <span class="keyword">new</span> ConnectivityService(</div><div class="line">                        context, networkManagement, networkStats, networkPolicy);</div><div class="line">                ServiceManager.addService(Context.CONNECTIVITY_SERVICE, connectivity);</div><div class="line">                networkStats.bindConnectivityManager(connectivity);</div><div class="line">                networkPolicy.bindConnectivityManager(connectivity);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting Connectivity Service"</span>, e);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Network Service Discovery Service"</span>);</div><div class="line">                serviceDiscovery = NsdService.create(context);</div><div class="line">                ServiceManager.addService(</div><div class="line">                        Context.NSD_SERVICE, serviceDiscovery);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting Service Discovery Service"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableNonCoreServices) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"UpdateLock Service"</span>);</div><div class="line">                ServiceManager.addService(Context.UPDATE_LOCK_SERVICE,</div><div class="line">                        <span class="keyword">new</span> UpdateLockService(context));</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting UpdateLockService"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/*</span></div><div class="line">         * MountService has a few dependencies: Notification Manager and</div><div class="line">         * AppWidget Provider. Make sure MountService is completely started</div><div class="line">         * first before continuing.</div><div class="line">         */</div><div class="line">        <span class="keyword">if</span> (mountService != <span class="keyword">null</span> &amp;&amp; !mOnlyCore) &#123;</div><div class="line">            mountService.waitForAsecScan();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (accountManager != <span class="keyword">null</span>)</div><div class="line">                accountManager.systemReady();</div><div class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">            reportWtf(<span class="string">"making Account Manager Service ready"</span>, e);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">if</span> (contentService != <span class="keyword">null</span>)</div><div class="line">                contentService.systemReady();</div><div class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">            reportWtf(<span class="string">"making Content Service ready"</span>, e);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        mSystemServiceManager.startService(NotificationManagerService.class);</div><div class="line">        notification = INotificationManager.Stub.asInterface(</div><div class="line">                ServiceManager.getService(Context.NOTIFICATION_SERVICE));</div><div class="line">        networkPolicy.bindNotificationManager(notification);</div><div class="line"></div><div class="line">        mSystemServiceManager.startService(DeviceStorageMonitorService.class);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableLocation) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Location Manager"</span>);</div><div class="line">                location = <span class="keyword">new</span> LocationManagerService(context);</div><div class="line">                ServiceManager.addService(Context.LOCATION_SERVICE, location);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting Location Manager"</span>, e);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Country Detector"</span>);</div><div class="line">                countryDetector = <span class="keyword">new</span> CountryDetectorService(context);</div><div class="line">                ServiceManager.addService(Context.COUNTRY_DETECTOR, countryDetector);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting Country Detector"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableNonCoreServices) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Search Service"</span>);</div><div class="line">                ServiceManager.addService(Context.SEARCH_SERVICE,</div><div class="line">                        <span class="keyword">new</span> SearchManagerService(context));</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting Search Service"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            Slog.i(TAG, <span class="string">"DropBox Service"</span>);</div><div class="line">            ServiceManager.addService(Context.DROPBOX_SERVICE,</div><div class="line">                    <span class="keyword">new</span> DropBoxManagerService(context, <span class="keyword">new</span> File(<span class="string">"/data/system/dropbox"</span>)));</div><div class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">            reportWtf(<span class="string">"starting DropBoxManagerService"</span>, e);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableNonCoreServices &amp;&amp; context.getResources().getBoolean(</div><div class="line">                    R.bool.config_enableWallpaperService)) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Wallpaper Service"</span>);</div><div class="line">                wallpaper = <span class="keyword">new</span> WallpaperManagerService(context);</div><div class="line">                ServiceManager.addService(Context.WALLPAPER_SERVICE, wallpaper);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting Wallpaper Service"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableMedia &amp;&amp; !<span class="string">"0"</span>.equals(SystemProperties.get(<span class="string">"system_init.startaudioservice"</span>))) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Audio Service"</span>);</div><div class="line">                audioService = <span class="keyword">new</span> AudioService(context);</div><div class="line">                ServiceManager.addService(Context.AUDIO_SERVICE, audioService);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting Audio Service"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableNonCoreServices) &#123;</div><div class="line">            mSystemServiceManager.startService(DockObserver.class);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableMedia) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Wired Accessory Manager"</span>);</div><div class="line">                <span class="comment">// Listen for wired headset changes</span></div><div class="line">                inputManager.setWiredAccessoryCallbacks(</div><div class="line">                        <span class="keyword">new</span> WiredAccessoryManager(context, inputManager));</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting WiredAccessoryManager"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableNonCoreServices) &#123;</div><div class="line">            <span class="keyword">if</span> (mPackageManager.hasSystemFeature(PackageManager.FEATURE_USB_HOST)</div><div class="line">                    || mPackageManager.hasSystemFeature(</div><div class="line">                            PackageManager.FEATURE_USB_ACCESSORY)) &#123;</div><div class="line">                <span class="comment">// Manage USB host and device support</span></div><div class="line">                mSystemServiceManager.startService(USB_SERVICE_CLASS);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Serial Service"</span>);</div><div class="line">                <span class="comment">// Serial port support</span></div><div class="line">                serial = <span class="keyword">new</span> SerialService(context);</div><div class="line">                ServiceManager.addService(Context.SERIAL_SERVICE, serial);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                Slog.e(TAG, <span class="string">"Failure starting SerialService"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        mSystemServiceManager.startService(TwilightService.class);</div><div class="line"></div><div class="line">        mSystemServiceManager.startService(UiModeManagerService.class);</div><div class="line"></div><div class="line">        mSystemServiceManager.startService(JobSchedulerService.class);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableNonCoreServices) &#123;</div><div class="line">            <span class="keyword">if</span> (mPackageManager.hasSystemFeature(PackageManager.FEATURE_BACKUP)) &#123;</div><div class="line">                mSystemServiceManager.startService(BACKUP_MANAGER_SERVICE_CLASS);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (mPackageManager.hasSystemFeature(PackageManager.FEATURE_APP_WIDGETS)) &#123;</div><div class="line">                mSystemServiceManager.startService(APPWIDGET_SERVICE_CLASS);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (mPackageManager.hasSystemFeature(PackageManager.FEATURE_VOICE_RECOGNIZERS)) &#123;</div><div class="line">                mSystemServiceManager.startService(VOICE_RECOGNITION_MANAGER_SERVICE_CLASS);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            Slog.i(TAG, <span class="string">"DiskStats Service"</span>);</div><div class="line">            ServiceManager.addService(<span class="string">"diskstats"</span>, <span class="keyword">new</span> DiskStatsService(context));</div><div class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">            reportWtf(<span class="string">"starting DiskStats Service"</span>, e);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="comment">// need to add this service even if SamplingProfilerIntegration.isEnabled()</span></div><div class="line">            <span class="comment">// is false, because it is this service that detects system property change and</span></div><div class="line">            <span class="comment">// turns on SamplingProfilerIntegration. Plus, when sampling profiler doesn't work,</span></div><div class="line">            <span class="comment">// there is little overhead for running this service.</span></div><div class="line">            Slog.i(TAG, <span class="string">"SamplingProfiler Service"</span>);</div><div class="line">            ServiceManager.addService(<span class="string">"samplingprofiler"</span>,</div><div class="line">                        <span class="keyword">new</span> SamplingProfilerService(context));</div><div class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">            reportWtf(<span class="string">"starting SamplingProfiler Service"</span>, e);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableNetwork) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"NetworkTimeUpdateService"</span>);</div><div class="line">                networkTimeUpdater = <span class="keyword">new</span> NetworkTimeUpdateService(context);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting NetworkTimeUpdate service"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableMedia) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"CommonTimeManagementService"</span>);</div><div class="line">                commonTimeMgmtService = <span class="keyword">new</span> CommonTimeManagementService(context);</div><div class="line">                ServiceManager.addService(<span class="string">"commontime_management"</span>, commonTimeMgmtService);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting CommonTimeManagementService service"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableNetwork) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"CertBlacklister"</span>);</div><div class="line">                CertBlacklister blacklister = <span class="keyword">new</span> CertBlacklister(context);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting CertBlacklister"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableNonCoreServices) &#123;</div><div class="line">            <span class="comment">// Dreams (interactive idle-time views, a/k/a screen savers, and doze mode)</span></div><div class="line">            mSystemServiceManager.startService(DreamManagerService.class);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableNonCoreServices) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Assets Atlas Service"</span>);</div><div class="line">                atlas = <span class="keyword">new</span> AssetAtlasService(context);</div><div class="line">                ServiceManager.addService(AssetAtlasService.ASSET_ATLAS_SERVICE, atlas);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting AssetAtlasService"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (mPackageManager.hasSystemFeature(PackageManager.FEATURE_PRINTING)) &#123;</div><div class="line">            mSystemServiceManager.startService(PRINT_MANAGER_SERVICE_CLASS);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        mSystemServiceManager.startService(RestrictionsManagerService.class);</div><div class="line"></div><div class="line">        mSystemServiceManager.startService(MediaSessionService.class);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (mPackageManager.hasSystemFeature(PackageManager.FEATURE_HDMI_CEC)) &#123;</div><div class="line">            mSystemServiceManager.startService(HdmiControlService.class);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (mPackageManager.hasSystemFeature(PackageManager.FEATURE_LIVE_TV)) &#123;</div><div class="line">            mSystemServiceManager.startService(TvInputManagerService.class);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!disableNonCoreServices) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"Media Router Service"</span>);</div><div class="line">                mediaRouter = <span class="keyword">new</span> MediaRouterService(context);</div><div class="line">                ServiceManager.addService(Context.MEDIA_ROUTER_SERVICE, mediaRouter);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting MediaRouterService"</span>, e);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            mSystemServiceManager.startService(TrustManagerService.class);</div><div class="line"></div><div class="line">            mSystemServiceManager.startService(FingerprintService.class);</div><div class="line"></div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                Slog.i(TAG, <span class="string">"BackgroundDexOptService"</span>);</div><div class="line">                BackgroundDexOptService.schedule(context);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting BackgroundDexOptService"</span>, e);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        mSystemServiceManager.startService(LauncherAppsService.class);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (!disableNonCoreServices) &#123;</div><div class="line">        mSystemServiceManager.startService(MediaProjectionManagerService.class);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// Before things start rolling, be sure we have decided whether</span></div><div class="line">    <span class="comment">// we are in safe mode.</span></div><div class="line">    <span class="keyword">final</span> <span class="keyword">boolean</span> safeMode = wm.detectSafeMode();</div><div class="line">    <span class="keyword">if</span> (safeMode) &#123;</div><div class="line">        mActivityManagerService.enterSafeMode();</div><div class="line">        <span class="comment">// Disable the JIT for the system_server process</span></div><div class="line">        VMRuntime.getRuntime().disableJitCompilation();</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="comment">// Enable the JIT for the system_server process</span></div><div class="line">        VMRuntime.getRuntime().startJitCompilation();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// MMS service broker</span></div><div class="line">    mmsService = mSystemServiceManager.startService(MmsServiceBroker.class);</div><div class="line"></div><div class="line">    <span class="comment">// It is now time to start up the app processes...</span></div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        vibrator.systemReady();</div><div class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">        reportWtf(<span class="string">"making Vibrator Service ready"</span>, e);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (lockSettings != <span class="keyword">null</span>) &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            lockSettings.systemReady();</div><div class="line">        &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">            reportWtf(<span class="string">"making Lock Settings Service ready"</span>, e);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// Needed by DevicePolicyManager for initialization</span></div><div class="line">    mSystemServiceManager.startBootPhase(SystemService.PHASE_LOCK_SETTINGS_READY);</div><div class="line"></div><div class="line">    mSystemServiceManager.startBootPhase(SystemService.PHASE_SYSTEM_SERVICES_READY);</div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        wm.systemReady();</div><div class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">        reportWtf(<span class="string">"making Window Manager Service ready"</span>, e);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (safeMode) &#123;</div><div class="line">        mActivityManagerService.showSafeModeOverlay();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// Update the configuration for this context by hand, because we're going</span></div><div class="line">    <span class="comment">// to start using it before the config change done in wm.systemReady() will</span></div><div class="line">    <span class="comment">// propagate to it.</span></div><div class="line">    Configuration config = wm.computeNewConfiguration();</div><div class="line">    DisplayMetrics metrics = <span class="keyword">new</span> DisplayMetrics();</div><div class="line">    WindowManager w = (WindowManager)context.getSystemService(Context.WINDOW_SERVICE);</div><div class="line">    w.getDefaultDisplay().getMetrics(metrics);</div><div class="line">    context.getResources().updateConfiguration(config, metrics);</div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="comment">// <span class="doctag">TODO:</span> use boot phase</span></div><div class="line">        mPowerManagerService.systemReady(mActivityManagerService.getAppOpsService());</div><div class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">        reportWtf(<span class="string">"making Power Manager Service ready"</span>, e);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        mPackageManagerService.systemReady();</div><div class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">        reportWtf(<span class="string">"making Package Manager Service ready"</span>, e);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        <span class="comment">// <span class="doctag">TODO:</span> use boot phase and communicate these flags some other way</span></div><div class="line">        mDisplayManagerService.systemReady(safeMode, mOnlyCore);</div><div class="line">    &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">        reportWtf(<span class="string">"making Display Manager Service ready"</span>, e);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// These are needed to propagate to the runnable below.</span></div><div class="line">    <span class="keyword">final</span> MountService mountServiceF = mountService;</div><div class="line">    <span class="keyword">final</span> NetworkManagementService networkManagementF = networkManagement;</div><div class="line">    <span class="keyword">final</span> NetworkStatsService networkStatsF = networkStats;</div><div class="line">    <span class="keyword">final</span> NetworkPolicyManagerService networkPolicyF = networkPolicy;</div><div class="line">    <span class="keyword">final</span> ConnectivityService connectivityF = connectivity;</div><div class="line">    <span class="keyword">final</span> NetworkScoreService networkScoreF = networkScore;</div><div class="line">    <span class="keyword">final</span> WallpaperManagerService wallpaperF = wallpaper;</div><div class="line">    <span class="keyword">final</span> InputMethodManagerService immF = imm;</div><div class="line">    <span class="keyword">final</span> LocationManagerService locationF = location;</div><div class="line">    <span class="keyword">final</span> CountryDetectorService countryDetectorF = countryDetector;</div><div class="line">    <span class="keyword">final</span> NetworkTimeUpdateService networkTimeUpdaterF = networkTimeUpdater;</div><div class="line">    <span class="keyword">final</span> CommonTimeManagementService commonTimeMgmtServiceF = commonTimeMgmtService;</div><div class="line">    <span class="keyword">final</span> TextServicesManagerService textServiceManagerServiceF = tsms;</div><div class="line">    <span class="keyword">final</span> StatusBarManagerService statusBarF = statusBar;</div><div class="line">    <span class="keyword">final</span> AssetAtlasService atlasF = atlas;</div><div class="line">    <span class="keyword">final</span> InputManagerService inputManagerF = inputManager;</div><div class="line">    <span class="keyword">final</span> TelephonyRegistry telephonyRegistryF = telephonyRegistry;</div><div class="line">    <span class="keyword">final</span> MediaRouterService mediaRouterF = mediaRouter;</div><div class="line">    <span class="keyword">final</span> AudioService audioServiceF = audioService;</div><div class="line">    <span class="keyword">final</span> MmsServiceBroker mmsServiceF = mmsService;</div><div class="line"></div><div class="line">    <span class="comment">// We now tell the activity manager it is okay to run third party</span></div><div class="line">    <span class="comment">// code.  It will call back into us once it has gotten to the state</span></div><div class="line">    <span class="comment">// where third party code can really run (but before it has actually</span></div><div class="line">    <span class="comment">// started launching the initial applications), for us to complete our</span></div><div class="line">    <span class="comment">// initialization.</span></div><div class="line">    mActivityManagerService.systemReady(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">            Slog.i(TAG, <span class="string">"Making services ready"</span>);</div><div class="line">            mSystemServiceManager.startBootPhase(</div><div class="line">                    SystemService.PHASE_ACTIVITY_MANAGER_READY);</div><div class="line"></div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                mActivityManagerService.startObservingNativeCrashes();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"observing native crashes"</span>, e);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            Slog.i(TAG, <span class="string">"WebViewFactory preparation"</span>);</div><div class="line">            WebViewFactory.prepareWebViewInSystemServer();</div><div class="line"></div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                startSystemUi(context);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"starting System UI"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (mountServiceF != <span class="keyword">null</span>) mountServiceF.systemReady();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"making Mount Service ready"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (networkScoreF != <span class="keyword">null</span>) networkScoreF.systemReady();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"making Network Score Service ready"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (networkManagementF != <span class="keyword">null</span>) networkManagementF.systemReady();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"making Network Managment Service ready"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (networkStatsF != <span class="keyword">null</span>) networkStatsF.systemReady();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"making Network Stats Service ready"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (networkPolicyF != <span class="keyword">null</span>) networkPolicyF.systemReady();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"making Network Policy Service ready"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (connectivityF != <span class="keyword">null</span>) connectivityF.systemReady();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"making Connectivity Service ready"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (audioServiceF != <span class="keyword">null</span>) audioServiceF.systemReady();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"Notifying AudioService running"</span>, e);</div><div class="line">            &#125;</div><div class="line">            Watchdog.getInstance().start();</div><div class="line"></div><div class="line">            <span class="comment">// It is now okay to let the various system services start their</span></div><div class="line">            <span class="comment">// third party code...</span></div><div class="line">            mSystemServiceManager.startBootPhase(</div><div class="line">                    SystemService.PHASE_THIRD_PARTY_APPS_CAN_START);</div><div class="line"></div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (wallpaperF != <span class="keyword">null</span>) wallpaperF.systemRunning();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"Notifying WallpaperService running"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (immF != <span class="keyword">null</span>) immF.systemRunning(statusBarF);</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"Notifying InputMethodService running"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (locationF != <span class="keyword">null</span>) locationF.systemRunning();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"Notifying Location Service running"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (countryDetectorF != <span class="keyword">null</span>) countryDetectorF.systemRunning();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"Notifying CountryDetectorService running"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (networkTimeUpdaterF != <span class="keyword">null</span>) networkTimeUpdaterF.systemRunning();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"Notifying NetworkTimeService running"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (commonTimeMgmtServiceF != <span class="keyword">null</span>) &#123;</div><div class="line">                    commonTimeMgmtServiceF.systemRunning();</div><div class="line">                &#125;</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"Notifying CommonTimeManagementService running"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (textServiceManagerServiceF != <span class="keyword">null</span>)</div><div class="line">                    textServiceManagerServiceF.systemRunning();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"Notifying TextServicesManagerService running"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (atlasF != <span class="keyword">null</span>) atlasF.systemRunning();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"Notifying AssetAtlasService running"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="comment">// TODO(BT) Pass parameter to input manager</span></div><div class="line">                <span class="keyword">if</span> (inputManagerF != <span class="keyword">null</span>) inputManagerF.systemRunning();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"Notifying InputManagerService running"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (telephonyRegistryF != <span class="keyword">null</span>) telephonyRegistryF.systemRunning();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"Notifying TelephonyRegistry running"</span>, e);</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (mediaRouterF != <span class="keyword">null</span>) mediaRouterF.systemRunning();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"Notifying MediaRouterService running"</span>, e);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">if</span> (mmsServiceF != <span class="keyword">null</span>) mmsServiceF.systemRunning();</div><div class="line">            &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">                reportWtf(<span class="string">"Notifying MmsService running"</span>, e);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure><br>可以看到比较夸张，包含了<code>SchedulingPolicyService</code>、<code>TelephonyRegistry</code>、<code>EntropyMixer</code>、<code>AccountManagerService</code>、<code>VibratorService</code>、<code>ConsumerIrService</code>、<code>AlarmManagerService</code>、<code>InputManagerService</code>、<code>WindowManagerService</code>、<code>BluetoothManagerService</code>、<code>InputMethodManagerService</code>、<code>AccessibilityManagerService</code>、<code>MountService</code>、<code>LockSettingsService</code>、<code>PersistentDataBlockService</code>、<code>DevicePolicyManagerService</code>、<code>StatusBarManagerService</code>、<code>ClipboardService</code>、<code>NetworkManagementService</code>、<code>TextServicesManagerService</code>、<code>NetworkScoreService</code>、<code>NotificationManagerService</code>、<code>DeviceStorageMonitorService</code>、<code>NetworkStatsService</code>、<code>NetworkPolicyManagerService</code>、<code>ConnectivityService</code>、<code>NsdService</code>、<code>UpdateLockService</code>、<code>LocationManagerService</code>、<code>CountryDetectorService</code>、<code>SearchManagerService</code>、<code>DropBoxManagerService</code>、<code>WallpaperManagerService</code>、<code>AudioService</code>、<code>DockObserver</code>、<code>SerialService</code>、<code>TwilightService</code>、<code>UiModeManagerService</code>、<code>JobSchedulerService</code>、<code>DiskStatsService</code>、<code>SamplingProfilerService</code>、<code>CommonTimeManagementService</code>、<code>AssetAtlasService</code>、<code>MediaRouterService</code>、<code>DreamManagerService</code>、<code>RestrictionsManagerService</code>、<code>MediaSessionService</code>、<code>HdmiControlService</code>、<code>TvInputManagerService</code>、<code>TrustManagerService</code>、<code>FingerprintService</code>、<code>LauncherAppsService</code>、<code>MediaProjectionManagerService</code>、<code>MmsServiceBroker</code>等。<br>以上服务不一定都会启动，系统会根据配置，选择性的启动某些服务，比如Android TV就会启动<code>TvInputManagerService</code>，而Android手机则不会。</p><p>在前面三次启动各种<code>SystemService</code>里，出现了三个不同的启动方法：<code>SystemServiceManager.startService()</code>、<code>LocalServices.addService()</code>、<code>ServiceManager.addService()</code>。<br>1、先看<code>SystemServiceManager.startService()</code>和<code>LocalServices.addService()</code>，启动系统服务都是<code>SystemService</code>的子类，启动这些服务后会回调<code>SystemService</code>的<code>onStart()</code>方法。<br>2、常用的是<code>SystemServiceManager.startService()</code>和<code>ServiceManager.addService()</code>：</p><table style="border-collapse:collapse;border-spacing:0" class="tg"><tr><th style="font-family:Arial, sans-serif;font-size:14px;font-weight:bold;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:inherit;text-align:center">方式</th><th style="font-family:Arial, sans-serif;font-size:14px;font-weight:bold;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:inherit;text-align:center">功能</th><th style="font-family:Arial, sans-serif;font-size:14px;font-weight:bold;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:inherit;text-align:center">特点</th></tr><tr><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:inherit;text-align:left">ServiceManager.addService</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:inherit;text-align:left">向 ServiceManager 注册该服务</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:inherit;text-align:left">服务往往直接或间接继承于Binder服务</td></tr><tr><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:inherit;text-align:left">SystemServiceManager.startService</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:inherit;text-align:left">1.创建服务对象<br>2.回调该服务的 onStart() 方法；该方法会执行上面的 ServiceManager.addService()<br>3.根据启动到不同的阶段会回调 mServices 中注册 service 的 onBootPhase() 方法</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:inherit;text-align:left">1.service 往往自身或者内部类（如 ActivityManagerService）继承于SystemService<br>2.在开机过程中，service 除了注册到 ServiceManager 中，还需要做一些其他的处理，如根据系统启动阶段（phase）的不同，做一些不同的处理</td></tr></table><p>全部启动所需要的服务以后，<code>SystemServer</code>便要进入了接受<code>Message</code>的循环中，等待<code>Message</code>的事件。</p><p>参考博客：<a href="https://blog.csdn.net/myfriend0/article/details/55098173" target="_blank" rel="external">Android系统之System Server大纲</a></p><h2 id="4-2-广播Broadcasrs"><a href="#4-2-广播Broadcasrs" class="headerlink" title="4.2 广播Broadcasrs"></a>4.2 广播Broadcasrs</h2><p>前面讲<code>Server</code>有点多，这里就简单说下广播<code>Broadcasrs</code>，给后面分析电源灯铺垫下基础。</p><h3 id="4-2-1-基本概念"><a href="#4-2-1-基本概念" class="headerlink" title="4.2.1 基本概念"></a>4.2.1 基本概念</h3><p>广播是Android系统中一种组件间的通信方式，Android中的每个应用程序都可以对自己感兴趣的广播进行注册，这​样该程序就只会接收到自己所关心的广播内容，这些广播可能是来自于系统的，也可能是来自于其它的应用程序。<br>发送广播借助于<code>Intent</code>，而接收广播则需要广播接收器<code>BroadcastReceiver</code>。</p><p>广播的总体实现流程<br>1、广播接收者<code>BroadcastReceiver</code>通过<code>Binder</code>机制向AMS(<code>Activity Manager Service</code>)进行注册；<br>2、广播发送者通过<code>Binder</code>机制向AMS发送广播；<br>3、AMS查找符合相应条件(<code>IntentFilter</code>/<code>Permission</code>等)的<code>BroadcastReceiver</code>，将广播发送到<code>BroadcastReceiver</code>(一般情况下是<code>Activity</code>)相应的消息循环队列中；<br>4、消息循环执行拿到此广播，回调<code>BroadcastReceiver</code>中的<code>onReceive()</code>方法。</p><h3 id="4-2-2-广播使用示例"><a href="#4-2-2-广播使用示例" class="headerlink" title="4.2.2 广播使用示例"></a>4.2.2 广播使用示例</h3><ul><li><strong>动态注册广播接收器</strong><br>1、创建该自定义广播接收器的实例；<br>2、创建一个<code>IntentFilter</code>实例，调用<code>addAction()</code>方法配置具体要接收什么广播消息；<br>3、调用<code>registerReceiver()</code>方法关联<code>intentFilter</code>和自定义广播接收器，完成注册；<br>4、在<code>onDestroy()</code>方法调用<code>unRegisterReceiver()</code>解除注册；</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line"></div><div class="line">        intentFilter = <span class="keyword">new</span> IntentFilter();</div><div class="line">        networkChangeReceiver = <span class="keyword">new</span> NetworkChangeReceiver();</div><div class="line">   </div><div class="line">        intentFilter.addAction(<span class="string">"android.net.conn.CONNECTIVITY_CHANGE"</span>);</div><div class="line">        registerReceiver(networkChangeReceiver, intentFilter);</div><div class="line">    &#125;   </div><div class="line"> </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onDestroy();</div><div class="line">        unregisterReceiver( networkChangeReceiver );</div><div class="line">      &#125;</div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">NetworkChangeReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span></span>&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context,Intent intent)</span></span>&#123;</div><div class="line">        <span class="comment">//这里写接收到广播后执行的操作  </span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li><strong>发送自定义广播</strong><br>1、<code>new</code>一个<code>Intent</code>，构造函数可以传入自定义的<code>action</code>属性，或者调用<code>Intent</code>的<code>setAction()</code>方法，也可以调用<code>Intent</code>的<code>putExtra()</code>传递数据；<br>2、若要发送标准广播就调用<code>sendBroadcast(intent)</code>，而要发送有序广播就调用<code>sendOrderedBroadcast(intent，null)</code>。<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Intent intent = <span class="keyword">new</span> Intent();</div><div class="line">intent.setAction(BROADCAST_ACTION);</div><div class="line">intent.putExtra(<span class="string">"name"</span>, <span class="string">"hceng"</span>);</div><div class="line">sendBroadcast(intent);</div></pre></td></tr></table></figure></li></ul><h2 id="4-3-电源灯"><a href="#4-3-电源灯" class="headerlink" title="4.3 电源灯"></a>4.3 电源灯</h2><h3 id="4-3-1-整体分析"><a href="#4-3-1-整体分析" class="headerlink" title="4.3.1 整体分析"></a>4.3.1 整体分析</h3><p>电源灯主要涉及三个<code>SystemServer</code>:<code>PowerManagerService</code>、<code>LightsService</code>、<code>BatteryService</code>。</p><p><code>PowerManagerService</code>会先注册广播接收器，<code>BatteryService</code>会监听底层驱动电池驱动，当电池发生事件时，<code>BatteryService</code>会发出电池事件广播，同时获取<code>LightsService</code>改变LED状态，<code>PowerManagerService</code>收到广播再做一些其它操作，比如低电量弹窗提醒。</p><p>UML时序图参考如下：</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190509/2.jpg"></div><ul><li>Setp1-14：参考前面的<code>SystemService</code>的内容，主要就是注册本地服务；注意Step12注册了监听，用于监听电池驱动的状态；</li><li>Step15-17：做了获取电池灯的操作，后面再详细解释；</li><li>Step18-20：动态注册广播接收器，用于接收电池广播；</li><li>Step21-28：假设电池驱动上报了变化，将会导致Step21调用，通过Step24发送广播，通过Step27改变LED状态；</li></ul><h3 id="4-3-2-电池灯调用分析"><a href="#4-3-2-电池灯调用分析" class="headerlink" title="4.3.2 电池灯调用分析"></a>4.3.2 电池灯调用分析</h3><p>从上面整个流程可以发现，<code>LightsService</code>先加入本地服务，<code>BatteryService</code>再获取该服务，从而操作LED，再详细分析下该过程。<br>1、最开始，通过<code>startService()</code>启动了<code>LightsService</code>服务(Step6)；</p><p>2、接着回调<code>onStart()</code>(Step7)，使用<code>publishLocalService()</code>将<code>mService</code>添加到本地服务(Step8)。<br>这个<code>mService</code>是一个<code>LightsManager</code>的实例，里面实现了一个<code>getLight()</code>方法，返回<code>mLights[]</code>数组的对应项。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">final</span> LightsManager mService = <span class="keyword">new</span> LightsManager() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> com.android.server.lights.<span class="function">Light <span class="title">getLight</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (id &lt; LIGHT_ID_COUNT) &#123;</div><div class="line">            <span class="keyword">return</span> mLights[id];</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p><p><code>mLights[]</code>数组的每项保存的是类<code>LightImpl</code>传入的不同参数的对象。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">final</span> LightImpl mLights[] = <span class="keyword">new</span> LightImpl[LightsManager.LIGHT_ID_COUNT];</div><div class="line">……</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LightsService</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>(context);</div><div class="line"></div><div class="line">        mNativePointer = init_native();</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; LightsManager.LIGHT_ID_COUNT; i++) &#123;</div><div class="line">            mLights[i] = <span class="keyword">new</span> LightImpl(i);</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure><br><code>LightImpl</code>类继承于<code>Light</code>，实现了操作LED的各种方法，最后都调用到<code>setLight_native()</code>，也就是JNI里提供的本地接口方法。</p><p>经过前面的一系列操作，现在<code>mService</code>通过自己的<code>getLight(LIGHT_ID_BATTERY)</code>就可以找到对应<code>mLights[LIGHT_ID_BATTERY]</code>，再通过<code>mLights[LIGHT_ID_BATTERY]</code>的<code>LightImpl</code>操作<code>setLight_native(LIGHT_ID_BATTERY)</code>，实现对JNI本地接口方法的调用，且通过<code>publishLocalService()</code>将<code>mService</code>添加到本地服务。</p><p>3、在<code>BatteryService</code>里，先通过<code>getLocalService()</code>获取前面的<code>mService</code>，再通过<code>getLight()</code>得到<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BatteryService</span><span class="params">(Context context)</span> </span>&#123;</div><div class="line">        ……</div><div class="line">        mLed = <span class="keyword">new</span> Led(context, getLocalService(LightsManager.class));</div><div class="line">        ……</div><div class="line">    &#125;</div><div class="line"></div><div class="line">……</div><div class="line"></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Led</span><span class="params">(Context context, LightsManager lights)</span> </span>&#123;</div><div class="line">            mBatteryLight = lights.getLight(LightsManager.LIGHT_ID_BATTERY);</div><div class="line"></div><div class="line">            ……</div><div class="line">        &#125;</div></pre></td></tr></table></figure><br>此时，<code>mBatteryLight</code>就相当于前面<code>LightImpl</code>(都继承于<code>Light</code>)，里面包含各种操作LED的各种方法。</p><p>4、当电池驱动发生变化，导致监听函数调用，最后调用到<code>updateLightsLocked()</code>(Step21-27)，在<code>updateLightsLocked()</code>调用<code>setColor()</code>、<code>setFlashing()</code>等操作LED灯。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Synchronize on BatteryService.</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateLightsLocked</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">final</span> <span class="keyword">int</span> level = mBatteryProps.batteryLevel;</div><div class="line">    <span class="keyword">final</span> <span class="keyword">int</span> status = mBatteryProps.batteryStatus;</div><div class="line">    <span class="keyword">if</span> (level &lt; mLowBatteryWarningLevel) &#123;</div><div class="line">        <span class="keyword">if</span> (status == BatteryManager.BATTERY_STATUS_CHARGING) &#123;</div><div class="line">            <span class="comment">// Solid red when battery is charging</span></div><div class="line">            mBatteryLight.setColor(mBatteryLowARGB);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="comment">// Flash red when battery is low and not charging</span></div><div class="line">            mBatteryLight.setFlashing(mBatteryLowARGB, Light.LIGHT_FLASH_TIMED,</div><div class="line">                    mBatteryLedOn, mBatteryLedOff);</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (status == BatteryManager.BATTERY_STATUS_CHARGING</div><div class="line">            || status == BatteryManager.BATTERY_STATUS_FULL) &#123;</div><div class="line">        <span class="keyword">if</span> (status == BatteryManager.BATTERY_STATUS_FULL || level &gt;= <span class="number">90</span>) &#123;</div><div class="line">            <span class="comment">// Solid green when full or charging and nearly full</span></div><div class="line">            mBatteryLight.setColor(mBatteryFullARGB);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="comment">// Solid orange when charging and halfway full</span></div><div class="line">            mBatteryLight.setColor(mBatteryMediumARGB);</div><div class="line">        &#125;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        <span class="comment">// No lights if not charging and not low</span></div><div class="line">        mBatteryLight.turnOff();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br>看看里面的判断逻辑：<br>先判断电量是否低于<code>mLowBatteryWarningLevel</code>，是的话再判断是否是充电状态，如果是充电状态，则设置颜色为<code>mBatteryLowARGB</code>(在前面通过<code>getResources</code>获取，定义在<code>frameworks/base/core/res/res/values/config.xml</code>)，反之就闪烁。<br>如果电池是在充电或满电状态，电量大于90则显示<code>mBatteryFullARGB</code>，反之显示<code>mBatteryMediumARGB</code>，都不是前面的情况，则<code>turnOff()</code>关闭。<br>完全和我们常识相符。</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190509/3.jpg"></div><h2 id="4-4-通知灯"><a href="#4-4-通知灯" class="headerlink" title="4.4 通知灯"></a>4.4 通知灯</h2><p>前面电池灯不好通过编写APP来控制，基本都是系统服务去控制的，这里的通知灯则可以通过APP控制。<br>先编写APP，通过按键延时发出通知，让通知灯亮，再分析调用过程，延时原因是让屏幕息屏再发出通知，通知灯才会亮。</p><h3 id="4-4-1-APP使用通知灯"><a href="#4-4-1-APP使用通知灯" class="headerlink" title="4.4.1 APP使用通知灯"></a>4.4.1 APP使用通知灯</h3><p>APP主要有两个文件，布局文件和代码操作文件。<br>布局文件比较简单，主要是一个按键：<br><figure class="highlight xml"><figcaption><span>[activity_main.xml]</span><a href="https://github.com/hceng/learn/blob/master/android/02_%E7%81%AF%E5%85%89%E7%B3%BB%E7%BB%9F/app/notification/layout/activity_main.xml" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/TEXT"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_marginTop</span>=<span class="string">"60dp"</span></div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"Lights demo!"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#008577"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"25sp"</span></div><div class="line">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span> /&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/BUTTON"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_gravity</span>=<span class="string">"center"</span></div><div class="line">            <span class="attr">android:layout_marginTop</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:textAllCaps</span>=<span class="string">"false"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"Flashing Light after 20s"</span> /&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure></p><p>代码文件如下：<br><figure class="highlight java"><figcaption><span>[MainActivity.java]</span><a href="https://github.com/hceng/learn/blob/master/android/02_%E7%81%AF%E5%85%89%E7%B3%BB%E7%BB%9F/app/notification/lights/MainActivity.java" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> cn.hceng.lights;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.app.Notification;</div><div class="line"><span class="keyword">import</span> android.app.NotificationChannel;</div><div class="line"><span class="keyword">import</span> android.app.NotificationManager;</div><div class="line"><span class="keyword">import</span> android.app.PendingIntent;</div><div class="line"><span class="keyword">import</span> android.content.Intent;</div><div class="line"><span class="keyword">import</span> android.graphics.Color;</div><div class="line"><span class="keyword">import</span> android.net.Uri;</div><div class="line"><span class="keyword">import</span> android.os.Build;</div><div class="line"><span class="keyword">import</span> android.os.Handler;</div><div class="line"><span class="keyword">import</span> android.support.v4.app.NotificationCompat;</div><div class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.widget.Button;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Button button = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">boolean</span> flashing = <span class="keyword">false</span>;</div><div class="line">    <span class="keyword">final</span> <span class="keyword">private</span> <span class="keyword">int</span> LED_NOTIFICATION_ID = <span class="number">12</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Handler mHander = <span class="keyword">new</span> Handler();</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line"></div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</div><div class="line">        button = (Button) findViewById(R.id.BUTTON);</div><div class="line">        button.setOnClickListener(<span class="keyword">new</span> MyButtonListener());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyButtonListener</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">            flashing = !flashing;</div><div class="line">            <span class="keyword">if</span> (flashing) &#123;</div><div class="line">                button.setText(<span class="string">"Stop Flashing the Light"</span>);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                button.setText(<span class="string">"Flashing Light after 20S"</span>);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            mHander.postDelayed(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">                <span class="meta">@Override</span></div><div class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                    <span class="keyword">if</span> (flashing)</div><div class="line">                        FlashingLight();</div><div class="line">                    <span class="keyword">else</span></div><div class="line">                        StopFlashingLight();</div><div class="line"></div><div class="line">                &#125;</div><div class="line">            &#125;, <span class="number">20000</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FlashingLight</span><span class="params">()</span> </span>&#123;</div><div class="line">        Intent mIntent = <span class="keyword">new</span> Intent(Intent.ACTION_VIEW, Uri.parse(<span class="string">"https://www.hceng.cn"</span>));</div><div class="line">        PendingIntent mPendingIntent = PendingIntent.getActivity(<span class="keyword">this</span>, <span class="number">0</span>, mIntent, <span class="number">0</span>);</div><div class="line"></div><div class="line">        NotificationManager mNotificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= android.os.Build.VERSION_CODES.O) &#123; <span class="comment">//Android O之上，需要渠道</span></div><div class="line">            NotificationChannel notificationChannel =</div><div class="line">                    <span class="keyword">new</span> NotificationChannel(<span class="string">"channelid1"</span>, <span class="string">"channelname"</span>, NotificationManager.IMPORTANCE_HIGH);<span class="comment">//如果用IMPORTANCE_NOENE需要在系统的设置里面开启渠道，通知才能正常弹出</span></div><div class="line">            mNotificationManager.createNotificationChannel(notificationChannel);</div><div class="line">        &#125;</div><div class="line">        NotificationCompat.Builder mBuilder = <span class="keyword">new</span> NotificationCompat.Builder(MainActivity.<span class="keyword">this</span>, <span class="string">"channelid1"</span>);</div><div class="line">        mBuilder.setContentTitle(<span class="string">"Notification"</span>) <span class="comment">//设置通知栏标题</span></div><div class="line">                .setContentText(<span class="string">"Lights demo"</span>) <span class="comment">//设置通知栏显示内容</span></div><div class="line">                .setSmallIcon(R.mipmap.ic_launcher) <span class="comment">//设置通知ICON</span></div><div class="line">                .setContentIntent(mPendingIntent) <span class="comment">//设置点击通知事件</span></div><div class="line">                .setAutoCancel(<span class="keyword">true</span>) <span class="comment">//设置点击通知后自动取消</span></div><div class="line">                .setDefaults(Notification.FLAG_SHOW_LIGHTS) <span class="comment">//Notification.FLAG_SHOW_LIGHTS  Notification.DEFAULT_SOUND(需要权限)</span></div><div class="line">                .setLights(Color.BLUE, <span class="number">1000</span>, <span class="number">1000</span>); <span class="comment">//ledARGB ledOnMS ledOffMS</span></div><div class="line"></div><div class="line">        Notification mNotification = mBuilder.build();</div><div class="line"></div><div class="line">        <span class="comment">//设置lights参数的另一种方式</span></div><div class="line">        <span class="comment">/*</span></div><div class="line">        mNotification.flags |= Notification.FLAG_SHOW_LIGHTS;</div><div class="line">        mNotification.ledARGB = 0xFF0000FF; //Color.BLUE</div><div class="line">        mNotification.ledOnMS = 1000;</div><div class="line">        mNotification.ledOffMS = 100;</div><div class="line">        */</div><div class="line">        mNotificationManager.notify(LED_NOTIFICATION_ID, mNotification); <span class="comment">//发出通知</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">StopFlashingLight</span><span class="params">()</span> </span>&#123;</div><div class="line">        NotificationManager mNotificationManager = (NotificationManager) getSystemService(NOTIFICATION_SERVICE);</div><div class="line">        mNotificationManager.cancel(LED_NOTIFICATION_ID); <span class="comment">//取消通知</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br>简单说下思路：<br>1、获取<code>Button</code>的<code>ID</code>，绑定监听方法<code>MyButtonListener()</code>；<br>2、实现监听方法<code>MyButtonListener()</code>，延时调用<code>FlashingLight()</code>发送通知或<code>StopFlashingLight()</code>停止通知；<br>3、这里使用<code>Handler</code>的<code>postDelayed()</code>方法实现延迟操作；<br>4、发送通知方法<code>FlashingLight()</code>里：<br>　　a.获取<code>NotificationManager</code>实例；<br>　　b.实例化<code>NotificationCompat.Builder</code>并设置相关属性；(注意Android O以上版本，需要<code>&quot;channelid</code>)<br>　　c.通过<code>builder.build()</code>方法生成<code>Notification</code>对象；并发送通知；</p><p>编译APP，连接Tiny4412开发板，首先在系统设置-&gt;显示-&gt;休眠，把息屏时间改为15秒。<br>选择在Tiny4412开发板运行APP，点击APP上的<code>Flashing Light after 20S</code>按钮，在串口输入<code>logcat lights:V *:S</code>，可以看到如下打印：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">V/lights  ( 1981): set_light_notifications flashMode=1 onMS = 1000 offMS = 1000 color=0xff0000ff</div></pre></td></tr></table></figure></p><p>操作通知灯的模式、时间、颜色与APP的设置相同，说明HAL层的<code>lights.c</code>已经成功被调用，接下来分析调用流程。</p><h3 id="4-4-2-通知灯调用分析"><a href="#4-4-2-通知灯调用分析" class="headerlink" title="4.4.2 通知灯调用分析"></a>4.4.2 通知灯调用分析</h3><p>UML时序图参考如下：</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190509/4.jpg"></div><p>Setp1-5：和前面的电源灯一样，先启动<code>LightsService</code>，创建<code>LightsManager</code>；<br>Step6-10：启动<code>NotificationManagerService</code>，在启动过程中获取<code>LightsManager</code>，具备了操作LED的能力；<br>Step11-12：<code>ContextImpl</code>在调用过程中会<code>registerService</code>，<code>HashMap</code>将<code>String</code>和<code>ServiceFetcher</code>绑定，通过<code>String</code>就能找到对应的<code>ServiceFetcher</code>，这里就是可以通过<code>NOTIFICATION_SERVICE</code>得到对应的实例化对象。；<br>Step13-14：在APP里，通过<code>getSystemService</code>传入<code>NOTIFICATION_SERVICE</code>获得通知服务，再构造通知，调用<code>notify</code>发送通知；<br>Step15-20：<code>notify</code>里会获取<code>NotificationManagerService</code>，进而调用到HAL层；</p><h2 id="4-5-背光灯"><a href="#4-5-背光灯" class="headerlink" title="4.5 背光灯"></a>4.5 背光灯</h2><h3 id="4-5-1-APP设置背光"><a href="#4-5-1-APP设置背光" class="headerlink" title="4.5.1 APP设置背光"></a>4.5.1 APP设置背光</h3><p>首先还是编写一个APP来感受下APP如何设置背光亮度。<br>这次涉及到背光权限，因此会涉及三个文件：布局文件、代码操作文件、涉及权限的<code>AndroidManifest</code>文件。</p><p>布局文件比较简单，主要是一个<code>SeekBar</code>滑动条：<br><figure class="highlight xml"><figcaption><span>[activity_main.xml]</span><a href="https://github.com/hceng/learn/blob/master/android/02_%E7%81%AF%E5%85%89%E7%B3%BB%E7%BB%9F/app/brightness/layout/activity_main.xml" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/TEXT"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_marginTop</span>=<span class="string">"60dp"</span></div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"Lights demo!"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#008577"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"25sp"</span></div><div class="line">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span> /&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">SeekBar</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"fill_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_marginTop</span>=<span class="string">"60dp"</span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/SEEKBAR"</span></div><div class="line">            <span class="attr">android:max</span>=<span class="string">"100"</span></div><div class="line">            <span class="attr">android:progress</span>=<span class="string">"50"</span> /&gt;</div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure></p><p>代码文件如下：<br><figure class="highlight java"><figcaption><span>[MainActivity.java]</span><a href="https://github.com/hceng/learn/blob/master/android/02_%E7%81%AF%E5%85%89%E7%B3%BB%E7%BB%9F/app/brightness/lights/MainActivity.java" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> cn.hceng.lights;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.provider.Settings;</div><div class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.widget.SeekBar;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> SeekBar mBacklightSeekBar = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line"></div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</div><div class="line"></div><div class="line">        mBacklightSeekBar = (SeekBar) findViewById(R.id.SEEKBAR);</div><div class="line"></div><div class="line">        <span class="comment">//关闭自动背光,以便后面手动设置亮度</span></div><div class="line">        Settings.System.putInt(getContentResolver(),</div><div class="line">                Settings.System.SCREEN_BRIGHTNESS_MODE,</div><div class="line">                Settings.System.SCREEN_BRIGHTNESS_MODE_MANUAL);</div><div class="line"></div><div class="line">        <span class="comment">//获取当前背光,自动设置当前SeekBar位置</span></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            <span class="keyword">int</span> brightness = android.provider.Settings.System.getInt(getContentResolver(),</div><div class="line">                    android.provider.Settings.System.SCREEN_BRIGHTNESS);</div><div class="line">            mBacklightSeekBar.setProgress(brightness * <span class="number">100</span> / <span class="number">255</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (Settings.SettingNotFoundException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">//监听SeekBar改变,对应设置背光</span></div><div class="line">        mBacklightSeekBar.setOnSeekBarChangeListener(<span class="keyword">new</span> SeekBar.OnSeekBarChangeListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgressChanged</span><span class="params">(SeekBar seekBar, <span class="keyword">int</span> progress, <span class="keyword">boolean</span> fromUser)</span> </span>&#123;</div><div class="line">                android.provider.Settings.System.putInt(getContentResolver(),</div><div class="line">                        android.provider.Settings.System.SCREEN_BRIGHTNESS,</div><div class="line">                        mBacklightSeekBar.getProgress() * <span class="number">255</span> / <span class="number">100</span>);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStartTrackingTouch</span><span class="params">(SeekBar seekBar)</span> </span>&#123;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStopTrackingTouch</span><span class="params">(SeekBar seekBar)</span> </span>&#123;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>内容还是比较简单，先获取<code>SeekBar</code>，接着使用<code>Settings.System.putInt()</code>关闭自动背光，以便后面手动设置亮度。再使用<code>android.provider.Settings.System.getInt()</code>获取当前亮度，以变自动设置当前SeekBar位置。最后监听<code>SeekBar改变</code>，覆写匿名类，调用<code>android.provider.Settings.System.putInt()</code>设置背光。</p><p>可以看到，APP设置背光就是调用<code>android.provider.Settings.System.putInt()</code>。</p><p>最后在<code>AndroidManifest.xml</code>里添加写系统设置权限<code>WRITE_SETTINGS</code>。<br><figure class="highlight xml"><figcaption><span>[AndroidManifest.xml]</span><a href="https://github.com/hceng/learn/blob/master/android/02_%E7%81%AF%E5%85%89%E7%B3%BB%E7%BB%9F/app/brightness/AndroidManifest.xml" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">package</span>=<span class="string">"cn.hceng.lights"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">application</span></span></div><div class="line">        <span class="attr">android:allowBackup</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:icon</span>=<span class="string">"@mipmap/ic_launcher"</span></div><div class="line">        <span class="attr">android:label</span>=<span class="string">"@string/app_name"</span></div><div class="line">        <span class="attr">android:roundIcon</span>=<span class="string">"@mipmap/ic_launcher_round"</span></div><div class="line">        <span class="attr">android:supportsRtl</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</div><div class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">".MainActivity"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MAIN"</span> /&gt;</span></div><div class="line"></div><div class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.LAUNCHER"</span> /&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.WRITE_SETTINGS"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></div></pre></td></tr></table></figure></p><p>现在编译APP，安装，便可以设置屏幕背光亮度了。</p><h3 id="4-5-2-背光灯调用分析"><a href="#4-5-2-背光灯调用分析" class="headerlink" title="4.5.2 背光灯调用分析"></a>4.5.2 背光灯调用分析</h3><p>UML时序图参考如下：</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190509/5.jpg"></div><p>Android提供了一个叫<code>ContentObserver</code>的机制，目的是观察特定<code>Uri</code>引起的数据库的变化，继而做一些相应的处理，当<code>ContentObserver</code>所观察的<code>Uri</code>发生变化时，便会触发它。<br>对于背光，APP修改亮度值写到数据库，对应的内容观察者监测到该数据库变化，就会设置背光。</p><p>Setp1-14：启动<code>DisplayManagerService</code>、<code>PowerManagerService</code>、<code>LightsService</code>；<br>Setp15-19：创建线程<code>PhotonicModulator</code>，该线程通常情况是<code>wait()</code>，当收到通知后将调用<code>setBrightness()</code>设置背光；<br>Setp20-25：注册了一个<code>ContentObserver</code>，之后就对<code>SCREEN_BRIGHTNESS</code>进行观察；<br>Setp26-52：APP发来<code>SCREEN_BRIGHTNESS</code>，将导致<code>notifyAll()</code>发出通知，让前面的线程<code>PhotonicModulator</code>得以调用<code>setBrightness()</code>设置背光；</p><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;继续学习Android驱动，Android灯光系统。&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux驱动" scheme="http://yoursite.com/tags/Linux%E9%A9%B1%E5%8A%A8/"/>
    
      <category term="Android驱动" scheme="http://yoursite.com/tags/Android%E9%A9%B1%E5%8A%A8/"/>
    
      <category term="灯光系统" scheme="http://yoursite.com/tags/%E7%81%AF%E5%85%89%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>黑群晖</title>
    <link href="http://yoursite.com/2019/04/22/%E9%BB%91%E7%BE%A4%E6%99%96/"/>
    <id>http://yoursite.com/2019/04/22/黑群晖/</id>
    <published>2019-04-22T08:39:05.000Z</published>
    <updated>2019-12-31T13:56:58.602Z</updated>
    
    <content type="html"><![CDATA[<p>黑群晖折腾记录。<br><a id="more"></a><br>最近，权游第八季上映，下载好的资源，如何在众多播放设备：IPad、小米盒子、Android手机以及多台电脑之间共享成了一个问题。<br>想到之前折腾过树莓派做过NAS，实现过文件共享，但受制性能，导致实用性不高，这次准备弄个X86迷你主机折腾黑群晖。</p><p>出于实际需求和学习，运用所学知识开始折腾之旅。</p><h1 id="1-硬件篇"><a href="#1-硬件篇" class="headerlink" title="1.硬件篇"></a>1.硬件篇</h1><p>先说说黑群晖的概念，黑群晖就是在普通主机上运行Synology DSM系统，对应的白群晖就是使用官方提供的主机运行Synology DSM系统，因此售卖主机成了Synology的主要收入来源。<br>Synology两个盘位的服务器主机价格在1000元以上，只从硬件成本角度看，价格太高了，但Synology还有系统、软件成本，这个价位也可以理解。Synology对待盗版的举措有点像微软，用盗版先培养用户使用习惯，等市场占有率提高，用户成长起来，体会到存储安全的重要性，了解群晖正版产品的便利性后，逐步转为白群晖。</p><h2 id="1-1-硬件成本"><a href="#1-1-硬件成本" class="headerlink" title="1.1 硬件成本"></a>1.1 硬件成本</h2><p>在淘宝逛了一圈黑群晖主机后，发现价格都普遍300左右，且体积都比较肥大。<br>我的要求是：在性能基本够用的情况下，主机体积一定要小，最好双盘位，CPU要64位以便升级DSM 6.2，还要考虑功耗、散热、噪音等。</p><p>最后花费364.14元，其中主机220元、两个500G西数绿盘141.6元、20个1N5408二极管2.54元。</p><div align="center"><img width="900" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/1.png"></div><p>主机配置：</p><ul><li>CPU: <a href="https://www.cpubenchmark.net/cpu_lookup.php?cpu=Intel+Celeron+1037U+%40+1.80GHz&amp;id=1988" target="_blank" rel="external">Intel Celeron 1037U @ 双核 1.80GHz</a></li><li>RAM: 2G DDR3 1600笔记本内存(单卡槽)</li><li>ROM: 32G msata接口SSD</li><li>硬盘位: 可放两个3.5寸硬盘或2.5寸硬盘</li><li>网卡: 千兆网卡</li><li>USB: 4个USB 2.0</li><li>显示接口: VGA、HDMI</li><li>主板尺寸：17 X 17CM</li><li>机箱尺寸：20 X 22.5 X 6.5CM</li><li>电源：12V直流供电(配送12v/5A适配器)</li><li>功耗：20W(负载两个3.5寸硬盘)</li></ul><p>拿到主机和硬盘后，就可以装机了，过程比较简单，插上两个硬盘，拧好固定螺丝：</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/2.jpg"></div><h2 id="1-2-改善噪音"><a href="#1-2-改善噪音" class="headerlink" title="1.2 改善噪音"></a>1.2 改善噪音</h2><p>上电后，发现CPU上的散热风扇噪声有点大，整机温度不算高，因此使用二极管降低风扇的电压，从而降低转速减少噪音，这里串联了四个1N5408二极管：</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/3.jpg"></div><p>修改后，噪声明显降低，已经比室内空调声音还小，几乎可以忽略不计，此时主机温度也可以接受。</p><h1 id="2-系统篇"><a href="#2-系统篇" class="headerlink" title="2.系统篇"></a>2.系统篇</h1><h2 id="2-1-装机思路"><a href="#2-1-装机思路" class="headerlink" title="2.1 装机思路"></a>2.1 装机思路</h2><p>先回顾一下普通的Windows/Linux电脑，如何U盘装系统。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/4.jpg"></div><ul><li>正常启动：上电后，首先运行的是BIOS，在进行硬件自检后，会根据BOOT里设置的启动顺序（此时装有系统的硬盘在第一顺序），将硬盘里的系统加载到RAM，从而启动系统。</li><li>U盘重装：首先将<a href="http://www.wepe.com.cn/" target="_blank" rel="external">U盘制作为启动盘</a>（实质就是装一个精简版的Windows系统），然后插在电脑上，进入BIOS，在BOOT里将U盘设置为第一启动盘。重新上电后，仍然先运行BIOS，此时U盘作为第一启动盘，将U盘的精简系统加载到RAM里，进入该精简系统后，可以操作读写其它硬盘，此时再将完整的系统写入到硬盘里。最后拔掉U盘，将硬盘设置为第一启动盘。</li></ul><p>再来看看群辉的Synology DSM系统(实质是一个Linux系统)：</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/5.jpg"></div><ul><li>正常启动：上电后，首先运行的是BIOS，在进行硬件自检后，会根据BOOT里设置的启动顺序（此时装有引导系统的硬盘1在第一顺序），将硬盘1里的引导系统加载到RAM，运行引导系统，在加载硬盘2里的DSM系统（硬盘2、3都有DSM系统，优先使用第一个分区的DSM系统）。</li><li>U盘重装：首先将<a href="http://www.wepe.com.cn/" target="_blank" rel="external">U盘制作为启动盘</a>（实质就是装一个精简版的Windows系统），然后插在电脑上，进入BIOS，在BOOT里将U盘设置为第一启动盘。重新上电后，仍然先运行BIOS，此时U盘作为第一启动盘，将U盘的精简系统加载到RAM里，进入该精简系统后，可以操作读写任意硬盘，接着将引导系统写入到硬盘1里，然后拔掉U盘，将硬盘1设置为第一启动盘，进入系统盘的引导系统，再根据提示安装DSM系统到硬盘2、3里面。</li></ul><p>上述重装DSM系统的方法是由装Windows类比过来的，对于黑群辉，还有一个更简便的方法，在Windows上使用<a href="https://sourceforge.net/projects/win32diskimager/" target="_blank" rel="external">win32diskimager</a>等工具，直接将引导系统写到U盘上，将U盘设置为第一启动顺序，上电后直接进入引导系统，然后安装、启动DSM系统。但这样有个缺点，每次启动都需要插U盘进行引导。因为主机送了一个32G的SSD，于是把这个作为引导盘，使用U盘的PE将引导系统烧写到SSD上，这样每次启动就自动引导，不在需要额外U盘。</p><h2 id="2-2-装机准备"><a href="#2-2-装机准备" class="headerlink" title="2.2 装机准备"></a>2.2 装机准备</h2><p>系统安装过程，需要准备：</p><ul><li>一个VGA/HDMI接口的显示器</li><li>键盘、鼠标</li><li>可用网络、网线</li><li>一个做好PE的U盘</li><li>查看SSD的信息<a href="http://www.upantool.com/liangchan/Phison/2012/MPALL_V3.63.html" target="_blank" rel="external">MPALL_V3.63</a>或<a href="http://down.nas2x.com/tools/" target="_blank" rel="external">ChipEasy.exe</a>     </li><li>写IMG工具<a href="http://www.roadkil.net/program.php?ProgramID=12" target="_blank" rel="external">Roadkil’s Disk Image V1.6</a></li><li>引导系统<a href="http://down.nas2x.com/synology/dsm/6.2/6.2.0/ds3617_6.2/" target="_blank" rel="external">synoboot.img</a></li><li>DSM系统<a href="https://archive.synology.com/download/DSM/release/6.2/23739/" target="_blank" rel="external">DSM_DS3617xs_23739.pat</a></li></ul><p>将<code>MPALL_V3.63</code>、<code>synoboot.img</code>和<code>Roadkil&#39;s Disk Image</code>拷贝到U盘里。<br>连接好显示器、键盘、鼠标，插上U盘，启动电源，跳按<code>Delete</code>(一般就<code>F2</code>、<code>F10</code>、<code>Delete</code>中某一个)进入BIOS。<br>在<code>BOOT</code>选项卡里将U盘设置为第一启动顺序，保存，重启。</p><h2 id="2-3-安装引导系统"><a href="#2-3-安装引导系统" class="headerlink" title="2.3 安装引导系统"></a>2.3 安装引导系统</h2><p>进入PE后，打开<code>DiskGenius</code>查看分区情况，可以看到四个盘：两个500G的机械硬盘，一个32G的固态硬盘，一个16G的U盘。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/6.jpg"></div><p>使用<code>DiskGenius</code>先将SSD格式化，再运行<code>MPALL_V3.63</code>，输入对应的盘符，记录下SSD的<code>VID</code>和<code>PID</code>：</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/7.jpg"></div><p>在<code>DiskGenius</code>里选择<code>硬盘</code>-&gt;<code>打开虚拟磁盘文件</code>，选择<code>synoboot.img</code>，点击<code>grub</code>文件夹，选择<code>grub.cfg</code>，右键选择<code>复制到&quot;桌面&quot;</code>。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/8.jpg"></div><p>打开<code>grub.cfg</code>，找到：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">set vid=0x058f</div><div class="line">set pid=0x6387</div><div class="line">set sn=A8ODN02468</div><div class="line">set mac1=0011322CA603</div></pre></td></tr></table></figure></p><p><code>set vid=0x058f</code> 改为U盘的VID：0x13fe<br><code>set pid=0x6387</code> 改为U盘的PID：0x5500<br><code>set sn=A8ODN02468</code> 序列号，用于洗白，现在不好洗白，不用修改<br><code>set mac1=0011322CA603</code> MAC地址，用于洗白，现在不好洗白，不用修改</p><p>改完之后，在<code>DiskGenius</code>里，右键<code>复制文件到当前分区</code>，覆盖掉原来的<code>grub.cfg</code>，退出<code>DiskGenius</code>。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/9.jpg"></div><p>接着打开<code>Roadkil&#39;s Disk Image</code>，在<code>映像写入</code>选项卡里，选择要写入的SSD，再选中前面修改过的<code>synoboot.img</code>，点击<code>开始</code>，待写入完成后退出程序。</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/10.jpg"></div><p>重启PE，进入BIOS，将SSD设置为第一启动顺序，拔掉U盘，再次重启。</p><h2 id="2-4-安装DSM系统"><a href="#2-4-安装DSM系统" class="headerlink" title="2.4 安装DSM系统"></a>2.4 安装DSM系统</h2><p>插上网线，SSD作为引导盘，启动后显示屏上显示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Screen will stop updating shortly, please open http://find.synology.com to continue.</div></pre></td></tr></table></figure></p><p>此时，使用在同一局域网的笔记本，浏览器打开<code>http://find.synology.com</code>搜索设备，或者安装<a href="https://archive.synology.com/download/Tools/Assistant/6.2-23733/Windows/" target="_blank" rel="external"><code>SynologyAssistant</code></a>搜索设备。<br>搜出设备后，根据提示点击<code>设置</code>，上传<code>DSM_DS3617xs_23739.pat</code>安装，待安装完成后，自动重启即可。</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/11.jpg"></div><p>重启后，进入系统初始化设置界面，根据提示进行设置，因为是黑群晖，没有洗白的缘故，不能使用<code>QuickConnect</code>，在该设置界面直接跳过即可。</p><h1 id="3-必要设置"><a href="#3-必要设置" class="headerlink" title="3.必要设置"></a>3.必要设置</h1><h2 id="3-1-配置存储空间"><a href="#3-1-配置存储空间" class="headerlink" title="3.1 配置存储空间"></a>3.1 配置存储空间</h2><p>刚装好的DSM系统，没有设置存储空间，需要自己根据硬盘情况组建存储空间。<br>比如，我这有两个HDD，一个SSD，SSD作为引导盘，自然不能使用，两个HDD可以组建RAUD1。<br>具体的操作步骤，当时没有截图，现在已经在使用中，又不好重新删除演示一遍，下次重装再补教程。<br>网上也有很多教程，直接参考<a href="https://jingyan.baidu.com/article/fcb5aff7442512edaa4a718b.html" target="_blank" rel="external">群晖无存储空间怎么设置</a>。</p><h2 id="3-2-内网穿透"><a href="#3-2-内网穿透" class="headerlink" title="3.2 内网穿透"></a>3.2 内网穿透</h2><p>白群晖用户，可以登陆账户，使用Quickconnect功能，在外面通过Quickconnect就可以操作群晖，访问文件。<br>黑群晖用户，不能登陆也就不能使用该功能，就算洗白后可以使用，占用群晖的服务器资源也不厚道，况且还有许多其它方法实现外网访问群晖。</p><p>之前<a href="https://hceng.cn/2017/12/30/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B%E2%80%94%E2%80%94TCP_UDP/" target="_blank" rel="external">嵌入式Linux网络编程——TCP/UDP</a>里提到了<strong>使用端口号和网络地址的组合可以唯一的确定整个网络中的一个网络进程</strong>。</p><p>比如访问百度，可以直接在浏览器输入<code>119.75.217.109:80</code>访问。<br>这里的<code>119.75.217.109</code>是百度的固定IP，<code>80</code>是http网页服务端口，用于普通网页浏览，该端口是默认端口，可不写。<br>可以看到，如果我们有一个固定IP，便可直接通过固定IP访问到群晖，对于个人用户，拥有一个固定IP用于家庭网络，是一件不太现实的事情。目前个人用户都是从运营商那里购买宽带服务，运营商提供的大部分都是<strong>内网IP</strong>，即便申请到<strong>公网IP</strong>，也不是<strong>固定IP</strong>。</p><p>另外，我们不容易记住类似<code>119.75.217.109</code>的固定IP，一般都是在浏览器输入<code>www.baidu.com</code>，也可以打开百度。这里是运用了DNS(Domain Name System)，将域名自动解析成了相应的IP地址。</p><p>没有固定IP，要想通过外网访问黑群晖，也就是内网穿透，还有两个方法：<strong>动态域名</strong>和<strong>反向代理</strong>。</p><h3 id="3-2-1-动态域名DDNS"><a href="#3-2-1-动态域名DDNS" class="headerlink" title="3.2.1 动态域名DDNS"></a>3.2.1 动态域名DDNS</h3><p>动态域名服务(Dynamic Domain Name Server)，简称DDNS。<br>DDNS将用户的动态IP地址映射到一个固定的域名解析服务上，用户每次连接网络的时候客户端程序就会把该主机的动态IP地址传送给位于服务商主机上的服务器程序，而服务器程序负责提供DNS服务并实现动态域名解析。</p><p>通俗一点的解释：<br>首先向宽带运营商申请公网IP，找个DDNS服务商(比如花生壳)，注册账号，添加内网IP、端口、访问域名等信息。<br>打开群晖/路由器的DDNS服务客户端，选择同一DDNS服务商，输入账号，再设置端口转发等。<br>内网设备，每次连接网络，群晖/路由器的DDNS客户端将本机的公网IP发送给DDNS服务器端。<br>外网用户，输入域名+端口，DNS先解析域名找到DDNS服务商，DDNS服务器端找到对应公网IP，返回给用户，实现访问。<br>就算以后设备的公网IP发生了变化，仍然可以访问内网设备。</p><div align="center"><img width="500" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/12.jpg"></div><p>优点：配置简单，成本低；<br>缺点：需要公网IP，公网IP发生变化时可能半小时无法访问；</p><h3 id="3-2-2-反向代理frp-已有frps"><a href="#3-2-2-反向代理frp-已有frps" class="headerlink" title="3.2.2 反向代理frp(已有frps)"></a>3.2.2 反向代理frp(已有frps)</h3><p>如果没有公网IP，就只能进行反向代理，反向代理的常见工具有<code>ngrok</code>和<code>frp</code>，其中<code>frp</code>简单一点，这里使用<code>frp</code>。<br><a href="https://github.com/fatedier/frp/blob/master/README_zh.md" target="_blank" rel="external"><code>frp</code></a>的原理就是，利用有固定IP的VPS(<code>Virtual Private Server</code>)虚拟专用服务器做中转。<br>在外网VPS上搭建服务端<code>frps</code>，在内网服务器上启动客户端<code>frpc</code>，以后访问外网VPS的某个端口，就可以反向代理转发到内网的对应端口上。</p><div align="center"><img width="500" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/13.png"></div><p>之前在<a href="https://banwagong.cn/" target="_blank" rel="external">搬瓦工</a>上购买了一个VPS搭建SSR用于”科学上网”，理论上完全可以在上面搭建服务端<code>frps</code>，但因为是和朋友合购的，怕影响性能，就没在VPS上搭建，直接使用现成免费的VPS，以后有机会再补上VPS搭建服务端<code>frps</code>。</p><p><strong>1.frp服务器</strong><br>首先找到一个免费frp服务器，比如在<a href="https://www.waiwang.men/" target="_blank" rel="external">外网门</a>里选择一个适合自己的服务器。</p><div align="center"><img width="500" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/14.png"></div><p>这个截图里有服务器的很多信息，后面慢慢会用到。</p><p>使用其提供的<a href="https://www.waiwang.men/frpc_ini.html" target="_blank" rel="external">工具</a>或者自己新建<code>frpc.ini</code>文件，生成文件内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"># frps信息</div><div class="line">[common]</div><div class="line">server_addr = aliyunsz2.waiwang.men #服务器地址</div><div class="line">server_port = 6666                  #服务器端口</div><div class="line">token = waiwang.men                 #连接凭证</div><div class="line">protocol= tcp                       #协议类型</div><div class="line"></div><div class="line"># frpc信息</div><div class="line">[hceng.nas]                         #名字，同一类型的名字不能一样</div><div class="line">type = http                         #类型</div><div class="line">privilege_mode = true               #开启特权模式</div><div class="line">local_ip = 192.168.123.123          #群晖本地IP地址</div><div class="line">local_port = 5000                   #群晖控制界面端口号</div><div class="line">use_encryption = true               #开启加密</div><div class="line">use_compression = true              #开启压缩</div><div class="line">custom_domains = nas.hceng.cn       #绑定的域名</div></pre></td></tr></table></figure></p><p>然后将该文件上传到群晖，比如放在<code>docker/frpc/</code>里。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/15.jpg"></div><p><strong>2.安装docker和frp客户端</strong><br>在群晖里打开“套件中心”，在“所有套件”中找到<code>docker</code>，点击“安装套件”。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/16.jpg"></div><p>安装完后，启动<code>docker</code>，在“注册表”选项卡的搜索框输入<code>oldiy</code>，找到<code>oldiy/frpc</code>，双击它弹出“选择标签”，这里选择<code>0.24.1</code>版本即可。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/17.jpg"></div><p>注意，随着frp版本的更新，出现了配置文件不兼容的情况，大致可以分为三个版本：<br>0.93以前的版本、0.93-0.17.0版本、0.17.0-0.26.0版本。<br>因为前面选择的frp服务器版本为0.20.0，这里选择0.17-0.26.0都行。</p><p>待其下载完后，切换到“映像”选项卡，双击<code>oldiy/frpc:0.24.1</code>，在弹出的“创建容器”窗口里，设置“容器名称”、勾选“使用高权限执行容器”，点击“高级设置”。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/18.jpg"></div><p>在弹出的“高级设置”窗口里，切换到“卷”选项卡，点击“添加文件”，选择前面新建的<code>docker/frpc/frpc.ini</code>，“装载路径”里填写<code>/frp/frpc.ini</code>。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/19.jpg"></div><p>这样设置后，<code>docker</code>里的<code>frpc</code>在启动时，执行<code>/bash/sh -c /frpc -c /frp/frpc.ini</code>，就使用的是前面编写的<code>frpc.ini</code>。</p><p>接着切换到“网络”选项卡，勾选“使用与 Docker Host 相同的网络”，再点击“应用”。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/20.jpg"></div><p>切换到“容器”选项卡，可以看到<code>frpc</code>已经启动了。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/21.jpg"></div><p><strong>3.查看连接</strong><br>打开frp服务器的<code>Dashboard</code>监控界面<code>aliyunsz2.waiwang.men:7777</code>，输入账号、密码(监控端口，账号密码等信息都在前面frp服务器截图里面)，在<code>Overview</code>选项卡界面可以看到frp服务器信息，其中<code>http</code>端口是88。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/22.jpg"></div><p>切换到<code>Proxies</code>选项卡，选择<code>HTTP</code>，可以看到<code>hceng.nas</code>的状态是<code>online</code>，说明连接成功。</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/23.jpg"></div><p><strong>4.设置DNS</strong><br>最后还要域名解析，我们希望通过<code>nas.hceng.cn</code>的方式来访问，虽然在<code>frpc.ini</code>里设置了该域名，还需要找个DNS解析服务商，将<code>nas.hceng.cn</code>解析到<code>aliyunsz2.waiwang.men</code>。<br>参考之前<a href="https://hceng.cn/2017/03/06/GitHub+Hexo%E6%90%AD%E5%BB%BA%E5%8F%8A%E4%BC%98%E5%8C%96/#4-2%E7%BB%91%E5%AE%9A%E5%9F%9F%E5%90%8D" target="_blank" rel="external">GitHub+Hexo博客搭建及优化——4.2绑定域名</a>，在<a href="https://www.dnspod.cn" target="_blank" rel="external">DNSPod</a>里添加一条记录。<br>主机记录：<code>nas</code><br>记录类型：<code>CNAME</code><br>线路类型：默认<br>记录值：<code>aliyunsz2.waiwang.men</code> （frp服务器域名）</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/24.jpg"></div><p>优点：相对稳定，无需公网IP；<br>缺点：需要VPS搭建frps，配置相对复杂；</p><p>参考资料：<br><a href="https://zhuanlan.zhihu.com/p/46580280" target="_blank" rel="external">DDNS简单教程</a><br><a href="http://blog.adiglobal.us/how-ddns-works/" target="_blank" rel="external">How DDNS Works</a><br><a href="https://zhuanlan.zhihu.com/p/57477087" target="_blank" rel="external">内网穿透：在公网访问你家的 NAS</a><br><a href="https://odcn.top/2018/10/27/1156/" target="_blank" rel="external">群晖 Docker版的frp客户端配置详解+免费服务器分享</a></p><h3 id="3-2-3-反向代理frp-没有frps"><a href="#3-2-3-反向代理frp-没有frps" class="headerlink" title="3.2.3 反向代理frp(没有frps)"></a>3.2.3 反向代理frp(没有frps)</h3><p>2019131：补充使用VPS搭建frps<br><strong>1.frp服务器</strong><br>前面在黑群晖里使用的是frpc版本为0.24.1，因此这里fprc也最好选择对应版本。<br>此外，VPS是X64架构，因此从<a href="https://github.com/fatedier/frp/releases" target="_blank" rel="external">GitHub</a>下载<code>frp_0.24.1_linux_amd64.tar.gz</code>。<br>解压，修改<code>frps.ini</code>如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[common]</div><div class="line">bind_port = 7000          #绑定端口</div><div class="line">token = xxxxx             #连接凭证</div><div class="line">max_pool_count = 50       #最大链接池</div><div class="line"></div><div class="line">vhost_http_port = 80      #http访问端口</div><div class="line">custom_domains = hceng.cn #自定义域</div><div class="line"></div><div class="line">dashboard_port = 7500     #控制面板端口</div><div class="line">dashboard_user = hceng    #控制面板用户名</div><div class="line">dashboard_pwd = xxxxx     #控制面板用户密码</div></pre></td></tr></table></figure></p><p>随后执行<code>./frps -c ./frps.ini</code>运行<code>frps</code>。</p><p><strong>2.frp客户端</strong><br>参考前面的内容创建<code>docker</code>，配置<code>frpc.ini</code>如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"># frps信息</div><div class="line">[common]</div><div class="line">server_addr = 118.123.x.x           #服务器地址</div><div class="line">server_port = 70000                 #服务器端口</div><div class="line">token = xxxxx                       #连接凭证</div><div class="line">protocol= tcp                       #协议类型</div><div class="line"></div><div class="line"># frpc信息</div><div class="line">[hceng.nas]                         #名字，同一类型的名字不能一样</div><div class="line">type = http                         #类型</div><div class="line">privilege_mode = true               #开启特权模式</div><div class="line">local_ip = 192.168.123.123          #群晖本地IP地址</div><div class="line">local_port = 5000                   #群晖控制界面端口号</div><div class="line">use_encryption = true               #开启加密</div><div class="line">use_compression = true              #开启压缩</div><div class="line">custom_domains = nas.hceng.cn       #绑定的域名</div></pre></td></tr></table></figure></p><p><strong>3.设置DNS</strong><br>参考前面的，将<code>nas.hceng.cn</code>解析到<code>118.123.x.x</code>。<br>在<a href="https://www.dnspod.cn" target="_blank" rel="external">DNSPod</a>里添加一条记录。<br>主机记录：<code>nas</code><br>记录类型：<code>A</code><br>线路类型：默认<br>记录值：<code>118.123.x.x</code> （frp服务器域名）</p><p><strong>4.其它配置</strong><br>前面配置完成后，即可通过<code>nas.hceng.cn</code>直接访问了，因为前面<code>frps</code>里<code>vhost_http_port</code>设置的http端口为80，因此默认可以不显示。<br>最后需要配置<code>frps</code>开机后台自启动。<br>之前在<a href="https://hceng.cn/2019/11/24/SS%E7%AC%94%E8%AE%B0/#1-5-VPS%E5%AE%9A%E6%97%B6%E9%87%8D%E5%90%AF%E8%AE%BE%E7%BD%AE" target="_blank" rel="external">SS笔记</a>里制作了一个自启动脚本<code>/etc/init.d/autostart.sh</code>，这里往脚本添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nohup /root/frps/frp_0.24.1_linux_amd64/frps -c /root/frps/frp_0.24.1_linux_amd64/frps.ini &gt; /dev/null 2&gt;&amp;1 &amp;</div></pre></td></tr></table></figure></p><h1 id="4-扩展设置"><a href="#4-扩展设置" class="headerlink" title="4.扩展设置"></a>4.扩展设置</h1><p>后面这些设置就不是必须的了，以后遇到什么有趣的，就记录下来，不断更新。</p><h2 id="4-1-自动修改登陆壁纸"><a href="#4-1-自动修改登陆壁纸" class="headerlink" title="4.1 自动修改登陆壁纸"></a>4.1 自动修改登陆壁纸</h2><p><strong>实现每日抓取bing美图作为登陆界面壁纸，并替换欢迎信息为美图简介。</strong></p><ul><li><a href="https://github.com/kkkgo/DSM_Login_BingWallpaper" target="_blank" rel="external">设置教程</a></li><li><a href="https://github.com/kkkgo/DSM_Login_BingWallpaper/blob/master/ChangeBing.sh" target="_blank" rel="external">脚本源码</a></li><li>效果：<div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/25.jpg"></div></li></ul><h2 id="4-2-将NAS入口添加到博客"><a href="#4-2-将NAS入口添加到博客" class="headerlink" title="4.2 将NAS入口添加到博客"></a>4.2 将NAS入口添加到博客</h2><p><strong>实现将群晖登陆接口添加到博客左下方图标位置。</strong></p><p>1、使用<a href="https://www.high-logic.com/font-editor/fontcreator" target="_blank" rel="external"><code>FontCreator</code></a>修改博客主题下的<code>ttf</code>文件。<br>比如我使用的<code>yilia</code>主题<code>ttf</code>路径为：<code>blog\themes\yilia\source\fonts\iconfont.16acc2.ttf</code>。</p><p>使用<code>FontCreator</code>打开<code>iconfont.16acc2.ttf</code>后，选择一个合适图标，或者修改一个没有图标，这里直接选择原来<code>home</code>图标作为<code>nas</code>图标。<br>选中图标，右键选择“字形属性”，在弹出的窗口里，将名称<code>home</code>改为<code>nas</code>。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/26.jpg"></div><p>然后点击“文件”-&gt;“导出字体”-&gt;“导出TrueType/OpenType字体”，覆盖掉原来的<code>iconfont.16acc2.ttf</code>。</p><p>2、将<code>iconfont.16acc2.ttf</code>上传到网站<a href="https://www.fontke.com/tool/convfont/" target="_blank" rel="external"><code>fontke</code></a>，勾选<code>eot</code>、<code>woff</code>、<code>svg</code>，点击“立即转换”，将生成的<code>iconfont.16acc2.eot</code>、<code>iconfont.16acc2.svg</code>和<code>iconfont.16acc2.woff</code>，覆盖掉原来的这几个文件。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/27.jpg"></div><p>3、打开<code>blog\themes\yilia\source\main.0cf68a.css</code>，搜索里面的<code>home</code>，全改为<code>nas</code>。<br>改完后，找到<code>a.nas{background:#6ea3ff;border:1px solid #6ea3ff}</code>，可以修改图标背景颜色。</p><p>4、打开<code>blog\themes\yilia\_config.yml</code>，在<code>subnav</code>下添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nas: &quot;http://nas.hceng.cn:88/&quot;</div></pre></td></tr></table></figure></p><ul><li>效果：<div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/28.jpg"></div></li></ul><h2 id="4-3-安装浏览器访问内网"><a href="#4-3-安装浏览器访问内网" class="headerlink" title="4.3 安装浏览器访问内网"></a>4.3 安装浏览器访问内网</h2><p><strong>通过外网访问群晖里的浏览器，实现科学上网或访问内网路由器，并设置访问密码</strong></p><p>之前有个需求：在不能使用SSR的特殊情况下，想科学上网访问Google，并且下载文件资料。<br>家里的路由器搭了<code>ShadowSocks</code>，可以访问外网，只要能够访问家里的内网，就能科学上网。<br>群辉的<code>docker</code>就像一个大宝盒，由它可以扩展出许多意想不到的功能，<code>chrome</code>也是通过它实现的。</p><p><strong>1、安装<code>chrome</code></strong><br>参考前面安装<code>frpc</code>的过程。打开<code>docker</code>，在“注册表”选项卡搜索框里输入<code>oldiy</code>，找到<code>oldiy/chrome-novnc</code>，并双击下载。<br>下载完成后，在“映像”选项卡里双击<code>oldiy/chrome-novnc:latest</code>，在弹出的“创建容器”窗口里设置“容器名字”，再点击“高级设置”。<br>在弹出的“编辑”窗口里，选择“常规设置”选项卡，勾选“创建桌面快捷方式”，选择“网页”，输入自定义域名或本地IP+端口号+vnc.html。<br>因为想后面通过外网访问，所以这里填写自定义域名，<code>frps</code>提供的<code>http</code>端口为88。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/29.jpg"></div><p>接着切换到“卷”选项卡，因为要通过<code>chrome</code>下载文件，默认的下载路径在<code>docker</code>里的<code>/root/Downloads</code>，这里将其映射到本地文件路径，后面通过<code>chrome</code>下载的文件放在默认路径，就可以在群辉的<code>public/download</code>里找到。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/30.jpg"></div><p>再切换到“端口设置”选项卡，右边的容器端口<code>5900</code>和<code>8083</code>不要修改，左边的本地端口，根据自己需求，自行设置。需要考虑<code>frps</code>中是否被占用，设置的端口是否在开放范围以内。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/31.jpg"></div><p>最后点击“应用”即可。</p><p><strong>2、设置<code>frpc</code></strong><br>要想通过外网访问，还要配置<code>frpc</code>进行反向代理，因为<code>chrome</code>用到了两个端口，这里也需要配置两个，修改<code>frpc.ini</code>如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"># frps信息</div><div class="line">[common]</div><div class="line">server_addr = aliyunsz2.waiwang.men #服务器地址</div><div class="line">server_port = 6666                  #服务器端口</div><div class="line">token = waiwang.men                 #连接凭证</div><div class="line">protocol= tcp                       #协议类型</div><div class="line"></div><div class="line"># frpc信息</div><div class="line">[hceng.web]                         #名字，同一类型的名字不能一样</div><div class="line">type = tcp                          #类型</div><div class="line">local_ip = 192.168.123.123          #群晖本地IP地址</div><div class="line">local_port = 12140                  #chrome端口号</div><div class="line">remote_port = 12140                 #反向代理后的端口号</div><div class="line"></div><div class="line">[hceng.web]                         #名字，同一类型的名字不能一样</div><div class="line">type = http                         #类型</div><div class="line">local_ip = 192.168.123.123          #群晖本地IP地址</div><div class="line">local_port = 12141                  #chrome端口号</div><div class="line">use_encryption = true               #开启加密</div><div class="line">use_compression = true              #开启压缩</div><div class="line">custom_domains = web.hceng.cn       #绑定的域名</div></pre></td></tr></table></figure>  <p>修改完后，重新启动<code>frpc</code>。</p><p><strong>3、设置DNS</strong><br>在<a href="https://www.dnspod.cn" target="_blank" rel="external">DNSPod</a>里添加一条记录。<br>主机记录：<code>web</code><br>记录类型：<code>CNAME</code><br>线路类型：默认<br>记录值：<code>aliyunsz2.waiwang.men</code> </p><p>此时，访问<code>web.hceng.cn:88/vnc.html</code>就可以访问<code>chrome</code>。但这样任何人都可以访问，导致一些安全隐患，因此还需设置密码。</p><p><strong>4、设置密码</strong><br>在<code>docker</code>的“容器”选项卡里选中正在运行的<code>chrome</code>，点击上方“详情”，在弹出的窗口里切换到“终端”选项卡，点击“新增”，再点击刚才出现的<code>bash</code>，此时右边就会出现终端。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/32.jpg"></div><p>在终端输入:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">x11vnc -storepasswd</div></pre></td></tr></table></figure></p><p>然后输入密码，确认再输入一次，然后会有提示，问你是否保存到<code>/root/.vnc/passwd</code>，按<code>y</code>回车。<br>接着还要改下启动命令，让x11启动时候加载密码文件。先安装<code>vim</code>以便后面修改文件，输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apt install -y vim</div></pre></td></tr></table></figure></p><p>安装完成后，输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim /etc/supervisor/conf.d/supervisord.conf</div></pre></td></tr></table></figure></p><p>在第9行后面添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">-rfbauth /root/.vnc/passwd</div></pre></td></tr></table></figure></p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/33.jpg"></div><p>这里会用到<code>vim</code>编辑器的基本操作，自行百度。随后重启<code>chrome</code>容器即可。<br>以后，通过群晖桌面的快捷方式或者输入<code>web.hceng.cn:88/vnc.html</code>就可以打开<code>noVNC</code>，再输入密码即可打开<code>chrome</code>。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/34.jpg"></div><p>建议把缩放模式改为“本地缩放”，这样就可以全屏显示<code>chrome</code>。</p><p>参考文章：<br><a href="https://odcn.top/2019/02/01/2373/" target="_blank" rel="external">在群晖里使用浏览器，通过Docker安装火狐/Chrome浏览器+Enpass，可以外网访问群晖所在内网路由等！</a><br><a href="https://odcn.top/2019/03/09/2902/" target="_blank" rel="external">给Docker镜像运行的chrome镜像添加访问密码</a></p><h2 id="4-4-加快群晖自带下载器速度"><a href="#4-4-加快群晖自带下载器速度" class="headerlink" title="4.4 加快群晖自带下载器速度"></a>4.4 加快群晖自带下载器速度</h2><p><strong>加快群晖自带<code>Download Station</code>下载种子的速度。</strong></p><p>群辉自带的下载工具<code>Download Station</code>下载效果还是可以，如果遇到下载比较慢的任务，可以添加<code>tracker</code>服务器。<br>打开<a href="https://github.com/ngosang/trackerslist" target="_blank" rel="external"><code>trackerslist</code></a>，选择<code>trackers_best_ip.txt</code>，复制里面所有的内容。</p><p>再打开<code>Download Station</code>，选中下载慢的种子，切换到“Tracker服务器”选项卡，点击“加入”，粘贴前面复制的内容，最后点击“确定”。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/35.jpg"></div><p>参考链接：<a href="https://wp.gxnas.com/2618.html" target="_blank" rel="external">自己添加tracker服务器，加快群晖下载速度</a></p><h2 id="4-5-临时作为Windows主机"><a href="#4-5-临时作为Windows主机" class="headerlink" title="4.5 临时作为Windows主机"></a>4.5 临时作为Windows主机</h2><p><strong>20191115：将NAS切换到Windows系统，临时办公使用。</strong></p><p>最近有个需求，晚上在家需要连接公司Linux主机，查看编译结果、简单操作、以及学习Buildroot、Yocto查看大量配置。<br>完成这个需求需要两个条件：</p><ul><li>1.Linux主机实现内网穿透；</li><li>2.需要一台配置要求很低的电脑远程连接Linux主机、以及查阅资料、记笔记；</li></ul><p><strong>1、Linux主机内网穿透</strong><br>对于Linux主机内网穿透，有了前面<code>frp</code>的知识后，很容易实现。<br>使用前面<a href="https://www.waiwang.men/" target="_blank" rel="external">外网门</a>的<code>frps</code>或者自己服务器搭建一个<code>frps</code>，然后在Linux主机上运行<code>frpc</code>即可。<br>Linux主机的操作如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">wget https://github.com/fatedier/frp/releases/download/v0.29.1/frp_0.29.1_linux_amd64.tar.gz</div><div class="line">tar xf frp_0.29.1_linux_amd64.tar.gz</div><div class="line">cd frp_0.27.1_linux_amd64/</div><div class="line">vim frpc.ini</div></pre></td></tr></table></figure></p><p><code>frpc.ini</code>的配置参考如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">[common]</div><div class="line">server_addr = xx.waiwang.men</div><div class="line">server_port = 6666</div><div class="line">token = waiwang.men</div><div class="line"></div><div class="line">[linux_ssh]</div><div class="line">type = tcp</div><div class="line">local_ip = 192.168.1.x</div><div class="line">local_port = 22</div><div class="line">use_encryption = true</div><div class="line">remote_port = 12345</div></pre></td></tr></table></figure></p><p>配置完后，执行<code>./frpc -c frpc.ini</code>即可。</p><p>为了Linux服务器意外重启后能自动运行<code>frpc</code>，针对Ubuntu18.04，进行如下设置：<br>创建<code>/etc/systemd/system/rc-local.service</code>，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[Unit]</div><div class="line">Description=/etc/rc.local Compatibility</div><div class="line">ConditionPathExists=/etc/rc.local</div><div class="line"> </div><div class="line">[Service]</div><div class="line">Type=forking</div><div class="line">ExecStart=/etc/rc.local start</div><div class="line">TimeoutSec=0</div><div class="line">StandardOutput=tty</div><div class="line">RemainAfterExit=yes</div><div class="line">SysVStartPriority=99</div><div class="line"> </div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure></p><p>创建<code>/etc/rc.local</code>，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh -e</div><div class="line">#/etc/rc.local</div><div class="line">#</div><div class="line"># This script is executed at the end of each multiuser runlevel.</div><div class="line"># Make sure that the script will &quot;exit 0&quot; on success or any other</div><div class="line"># value on error.</div><div class="line">#</div><div class="line"># In order to enable or disable this script just change the execution</div><div class="line"># bits.</div><div class="line">#</div><div class="line"># By default this script does nothing.</div><div class="line">echo &quot;==========hceng: frpc start! ==========&quot; &gt; /usr/local/test.log</div><div class="line"></div><div class="line">/home/hceng/frp/frp_0.27.1_linux_amd64/frpc -c /home/hceng/frp/frp_0.27.1_linux_amd64/frpc.ini &amp;</div><div class="line"></div><div class="line">exit 0</div></pre></td></tr></table></figure></p><p>最后加入<code>systemd</code>系统和服务管理器:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo chmod 755 /etc/rc.local</div><div class="line">sudo systemctl enable rc-local</div><div class="line">sudo systemctl start rc-local.service</div><div class="line">sudo systemctl status rc-local.service</div></pre></td></tr></table></figure></p><p>此外，在实际使用中有个问题。<br>比如，在公司通过<code>mobaxterm</code>的<code>ssh</code>连接Linux主机编译<code>Yocto</code>，运行<code>mobaxterm</code>的Windows主机不能关机，一旦关机<code>ssh</code>断开，编译也就中断。又或者在公司运行编译，在家想查看编译进度、结果，也是无法连接到公司的<code>ssh</code>。<br>在网络上搜索一番后，发现<code>screen</code>能解决以上问题，在Ubuntu里执行<code>sudo apt-get install screen</code>安装。<br>常用的命令或快捷方式如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">创建一个子界面：screen + 回车</div><div class="line">切换回主界面：Ctrl +  + 松开 + d</div><div class="line">查看子界面列表：screen -list </div><div class="line">切换到某一子界面：screen -r 子界面列表显示的对应编号</div><div class="line">结束子界面：进入子界面后，exit + 回车</div></pre></td></tr></table></figure></p><p><strong>2、实现Windows主机</strong><br>前面配置完了，就可以实现外网<code>ssh</code>登陆Linux主机。<br>此时需要一个设备进行连接，Android手机、Linux主机、Windows主机等可以。<br>最后选择了Windows主机方案，因为要查资料和一些配套的Windows软件。<br>家里没有闲置Windows电脑，刚好双11淘了个500G的固态当系统盘，笔记本上120G的固态也就闲置了下来。</p><p>说到此次换固态，有两个小波折。<br>换固态前，特地看了笔记本自带的SSD接口为mSATA接口，以为笔记本就只支持mSATA接口SSD，就网上按这个接口买。<br>逛着逛着，来回比价，梦游一样，就下单了，顺便买了一个mSATA接口的SSD转USB的硬盘盒，用于转移系统和闲置SSD当U盘用。<br>过了两天，快递到了，将新SSD放入硬盘盒，准备将电脑的C盘克隆出来。换上后插上电脑，发现不对劲，始终读取不出SSD，一度怀疑硬盘盒是坏的。<br>都准备问客服了，看到SSD包装硕大的NVMe，心里一凉，买错了SSD了。想着C盘不到5G的空间，还得继续用几天，心里一阵不爽。<br>想着电脑都带回来了，拆机清个灰吧，于是就参考B站的拆机视频开始拆机玩。<br>拆到硬盘位置，看到字幕说<strong>支持stat和NVME协议</strong>，以为字幕打错了，再去了搜了下，确实有说支持的，加上记得在Bios看到过stat、NVME之类的关键词，感觉应该还有戏。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/36.jpg"></div><p>于是将旧SSD拆下来放入硬盘盒，将新SSD装入电脑，插入U盘PE、硬盘盒，开机进入Bios，选择PE启动，在PE里将旧SSD克隆到新SSD里。<br>这样一番操作后，新SSD可用，买来的mSATA接口硬盘盒也可以用，完美解决问题。</p><p>再来说另一个波折，就是克隆C盘到新SSD。<br>在网上看到不少教程，基本都是傲梅分区助手来实现了，试了一下失败了，最后还是用PE里的<code>Ghost</code>，完美克隆。</p><p>回到目前的情况，有一台amd64架构的Nas，一块USB接口的120G固态，完全可以组成一台运行Windows的电脑。<br>考虑到SSD通过USB进行连接，于是想到了<code>Windows To Go</code>，通过<a href="https://bbs.luobotou.org/thread-761-1-1.html" target="_blank" rel="external">WTG辅助工具</a>将<code>Windows To Go</code>装到SSD上。<br>另外，考虑到性能有限，决定使用Windows10 LTSB(Long Term Servicing Branch)版本，精简掉了应用商店等。<br>将SSD插到NAS的USB口，接上鼠标键盘、HDMI显示器，重启NAS，进入Bios，将SSD设置为第一启动顺序，完美启动。<br>实际体验感受了一下，运行<code>mobaxterm</code>连接Linux主机，再打开<code>Notepad++</code>和<code>copytranslator</code>，不时再开一下浏览器查阅下资料，完全没有问题。</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/37.png"></div><p>播放1080P视频，CPU维持在50%左右。</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190422/38.png"></div><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;黑群晖折腾记录。&lt;br&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>Linux驱动、应用调试技巧</title>
    <link href="http://yoursite.com/2019/04/08/Linux%E9%A9%B1%E5%8A%A8%E3%80%81%E5%BA%94%E7%94%A8%E8%B0%83%E8%AF%95%E6%8A%80%E5%B7%A7/"/>
    <id>http://yoursite.com/2019/04/08/Linux驱动、应用调试技巧/</id>
    <published>2019-04-08T01:39:03.000Z</published>
    <updated>2019-04-15T06:41:34.507Z</updated>
    
    <content type="html"><![CDATA[<p>记录几个Linux驱动、应用调试技巧。<br><a id="more"></a></p><h1 id="1-printk"><a href="#1-printk" class="headerlink" title="1.printk"></a>1.printk</h1><p><code>printk</code>都比较熟悉了，在日常中用得最多的一个。</p><p>示例：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">printk(KERN_DEBUG <span class="string">"Passed %s %d \n"</span>,__FUNCTION__,__LINE__);</div></pre></td></tr></table></figure></p><p>其中<code>KERN_DEBUG</code>表示log的级别，参考<a href="https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/include/linux/kern_levels.h?id=HEAD" target="_blank" rel="external">kern_levels.h</a>:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> KERN_EMERG      KERN_SOH <span class="meta-string">"0"</span>    <span class="comment">/* system is unusable 紧急事件，一般是系统崩溃之前的提示消息 */</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> KERN_ALERT      KERN_SOH <span class="meta-string">"1"</span>    <span class="comment">/* action must be taken immediately 必须立即采取行动 */</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> KERN_CRIT       KERN_SOH <span class="meta-string">"2"</span>    <span class="comment">/* critical conditions 临界状态，通常涉及严重的硬件或者软件操作失败 */</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> KERN_ERR        KERN_SOH <span class="meta-string">"3"</span>    <span class="comment">/* error conditions 报告错误状态，经常用来报告硬件错误 */</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> KERN_WARNING    KERN_SOH <span class="meta-string">"4"</span>    <span class="comment">/* warning conditions 对可能出现问题的情况进行警告，通常不会对系统造成严重问题 */</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> KERN_NOTICE     KERN_SOH <span class="meta-string">"5"</span>    <span class="comment">/* normal but significant condition 有必要的提示，通常用于安全相关的状况汇报 */</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> KERN_INFO       KERN_SOH <span class="meta-string">"6"</span>    <span class="comment">/* informational 提示信息，驱动程序常用来打印硬件信息 */</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> KERN_DEBUG      KERN_SOH <span class="meta-string">"7"</span>    <span class="comment">/* debug-level messages 用于调试信息 */</span> </span></div></pre></td></tr></table></figure></p><p>一个有8个等级，从0到7，优先级依次降低。<br>通常通过修改<code>/proc/sys/kernel/printk</code>来设置<code>printk</code>打印。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cat /proc/sys/kernel/printk</div><div class="line"><span class="number">7</span>       <span class="number">4</span>       <span class="number">1</span>       <span class="number">7</span></div><div class="line"></div><div class="line">echo <span class="number">8</span> &gt; /proc/sys/kernel/printk</div><div class="line"></div><div class="line">cat /proc/sys/kernel/printk</div><div class="line"><span class="number">8</span>       <span class="number">4</span>       <span class="number">1</span>       <span class="number">7</span></div></pre></td></tr></table></figure></p><p>4个值的含义依次如下：<br><code>console_loglevel</code>：当前console的log级别，只有更高优先级的log才被允许打印到console；<br><code>default_message_loglevel</code>：当不指定log级别时，printk默认使用的log级别；<br><code>minimum_console_loglevel</code>：console能设定的最高log级别；<br><code>default_console_loglevel</code>：默认的console的log级别。</p><p>另外，关于printk格式化字符串形式，参考<a href="https://www.kernel.org/doc/Documentation/printk-formats.txt" target="_blank" rel="external">printk-formats.txt</a>。</p><p>使用<code>dmesg</code>命令，可以显示之前所有的打印信息，常配合<code>grep</code>来查找历史纪录。</p><h1 id="2-dump-stack"><a href="#2-dump-stack" class="headerlink" title="2.dump_stack"></a>2.dump_stack</h1><p>在分析驱动源码的调用关系时，常遇到分支结构、回调函数，往往要多次添加打印来追溯调用过程。<br>这时，可以使用内核提供的<code>dump_stack();</code>函数来一次性打印调用过程，将该函数加在要调试位置，当运行到该函数时，就会打印出之前的调用关系。</p><p>加入<code>dump_stack</code>：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">spidevx_drv_init</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    ……</div><div class="line">    dump_stack();</div><div class="line">    ……</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>效果：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"># insmod spidev.ko</div><div class="line">CPU: 0 PID: 198 Comm: insmod Tainted: G           O    4.1.18-g4b7863b4-dirty #32</div><div class="line">Hardware name: Generic AM33XX (Flattened Device Tree)</div><div class="line">Backtrace:</div><div class="line">[&lt;c0012b48&gt;] (dump_backtrace) from [&lt;c0012d68&gt;] (show_stack+0x18/0x1c)</div><div class="line"> r7:ddfb6100 r6:c0910960 r5:bf0012cc r4:c0910960</div><div class="line">[&lt;c0012d50&gt;] (show_stack) from [&lt;c06833d8&gt;] (dump_stack+0x20/0x28)</div><div class="line">[&lt;c06833b8&gt;] (dump_stack) from [&lt;bf000fd4&gt;] (spidevx_drv_init+0x18/0xe8 [spidev])</div><div class="line">[&lt;bf000fbc&gt;] (spidevx_drv_init [spidev]) from [&lt;c0009694&gt;] (do_one_initcall+0x88/0x1e0)</div><div class="line"> r5:bf000fbc r4:c0910960</div><div class="line">[&lt;c000960c&gt;] (do_one_initcall) from [&lt;c068142c&gt;] (do_init_module+0x60/0x1b0)</div><div class="line"> r10:bf001488 r9:00000001 r8:dddd5f40 r7:bf0014d0 r6:ddfb6040 r5:00000001</div><div class="line"> r4:bf001488</div><div class="line">[&lt;c06813cc&gt;] (do_init_module) from [&lt;c008f634&gt;] (load_module+0x1bec/0x1e54)</div><div class="line"> r6:dddd5f48 r5:00000001 r4:ddcc3f48</div><div class="line">[&lt;c008da48&gt;] (load_module) from [&lt;c008fa74&gt;] (SyS_finit_module+0x84/0x98)</div><div class="line"> r10:00000000 r9:ddcc2000 r8:c000f9c4 r7:0000017b r6:0002541e r5:00000003</div><div class="line"> r4:00000000</div><div class="line">[&lt;c008f9f0&gt;] (SyS_finit_module) from [&lt;c000f820&gt;] (ret_fast_syscall+0x0/0x3c)</div><div class="line"> r6:00038d08 r5:00000000 r4:00000000</div></pre></td></tr></table></figure></p><p>可以看到调用关系为：<br><code>ret_fast_syscall</code>-&gt;<code>SyS_finit_module</code>-&gt;<code>load_module</code>-&gt;<code>do_init_module</code>-&gt;<code>do_one_initcall</code>-&gt;<code>spidevx_drv_init</code>。</p><h1 id="3-strace"><a href="#3-strace" class="headerlink" title="3.strace"></a>3.strace</h1><p><code>strace</code>是个功能强大的Linux调试分析诊断工具，可用于跟踪程序执行时进程<strong>系统调用</strong>(<code>system call</code>)和所接收的信号，尤其是针对源码不可读或源码无法再编译的程序。<br>在Linux系统中，用户程序运行在一个沙箱(<code>sandbox</code>)里，用户进程不能直接访问计算机硬件设备。当进程需要访问硬件设备(如读取磁盘文件或接收网络数据等)时，必须由用户态模式切换至内核态模式，通过系统调用访问硬件设备。<br><code>strace</code>可跟踪进程产生的系统调用，包括参数、返回值和执行所消耗的时间。<br><code>strace</code>常用参数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">strace: </div><div class="line">    -p &lt;pid&gt;:      跟踪一个PID进程</div><div class="line">    -f:            继续子进程的跟踪</div><div class="line">    -T:            打印出每次调用所花费的时间，单位：秒</div><div class="line">    -c:            统计和报告每个系统调用所执行的时间、调用次数和出错次数等</div><div class="line">    -o &lt;outfile&gt;:  指定保存strace输出信息的文件</div></pre></td></tr></table></figure></p><p>示例，执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">strace -o log.txt date</div></pre></td></tr></table></figure></p><p>查看<code>log.txt</code>：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">……</div><div class="line">open(<span class="string">"/etc/localtime"</span>, O_RDONLY|O_CLOEXEC) = <span class="number">3</span></div><div class="line">fstat64(<span class="number">3</span>, &#123;st_mode=S_IFREG|<span class="number">0644</span>, st_size=<span class="number">127</span>, ...&#125;) = <span class="number">0</span></div><div class="line">fstat64(<span class="number">3</span>, &#123;st_mode=S_IFREG|<span class="number">0644</span>, st_size=<span class="number">127</span>, ...&#125;) = <span class="number">0</span>           </div><div class="line">mmap2(<span class="literal">NULL</span>, <span class="number">4096</span>, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, <span class="number">-1</span>, <span class="number">0</span>) = <span class="number">0xb6f9f000</span></div><div class="line">read(<span class="number">3</span>, <span class="string">"TZif2\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\1\0\0\0\1\0\0\0\0"</span>..., <span class="number">1024</span>) = <span class="number">127</span></div><div class="line">_llseek(<span class="number">3</span>, <span class="number">-6</span>, [<span class="number">121</span>], SEEK_CUR)         = <span class="number">0</span></div><div class="line">read(<span class="number">3</span>, <span class="string">"\nUTC0\n"</span>, <span class="number">1024</span>)               = <span class="number">6</span></div><div class="line">close(<span class="number">3</span>)                                = <span class="number">0</span></div><div class="line">……</div></pre></td></tr></table></figure><br>可以清楚的看到<code>date</code>先打开<code>/etc/localtime</code>，得到文件描述符为3，再去<code>read</code>文件，最后<code>close</code>文件。</p><h1 id="4-应用层读写寄存器"><a href="#4-应用层读写寄存器" class="headerlink" title="4.应用层读写寄存器"></a>4.应用层读写寄存器</h1><p>在判断某个硬件是否按期望正常工作，最简单粗暴的就是直接读取对应寄存器值来分析。<br>Linux内核提供了一个<code>/dev/mem</code>节点来访问硬件寄存器，可以通过<code>devmem</code>或<code>devmem2</code>等应用程序来读写寄存器。<br>一些嵌入式的<code>BusyBox</code>包含了<code>devmem</code>，一些发行版的Linux，可以通过<code>sudo apt install devmem2</code>等方式安装，或者手动编译源码：</p><figure class="highlight c"><figcaption><span>[devmem2.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"> * http://sources.buildroot.net/devmem2.c</div><div class="line"> *</div><div class="line"> * devmem2.c: Simple program to read/write from/to any location in memory.</div><div class="line"> *</div><div class="line"> *  Copyright (C) 2000, Jan-Derk Bakker (J.D.Bakker@its.tudelft.nl)</div><div class="line"> *</div><div class="line"> *</div><div class="line"> * This software has been developed for the LART computing board</div><div class="line"> * (http://www.lart.tudelft.nl/). The development has been sponsored by</div><div class="line"> * the Mobile MultiMedia Communications (http://www.mmc.tudelft.nl/)</div><div class="line"> * and Ubiquitous Communications (http://www.ubicom.tudelft.nl/)</div><div class="line"> * projects.</div><div class="line"> *</div><div class="line"> * The author can be reached at:</div><div class="line"> *</div><div class="line"> *  Jan-Derk Bakker</div><div class="line"> *  Information and Communication Theory Group</div><div class="line"> *  Faculty of Information Technology and Systems</div><div class="line"> *  Delft University of Technology</div><div class="line"> *  P.O. Box 5031</div><div class="line"> *  2600 GA Delft</div><div class="line"> *  The Netherlands</div><div class="line"> *</div><div class="line"> *</div><div class="line"> * This program is free software; you can redistribute it and/or modify</div><div class="line"> * it under the terms of the GNU General Public License as published by</div><div class="line"> * the Free Software Foundation; either version 2 of the License, or</div><div class="line"> * (at your option) any later version.</div><div class="line"> *</div><div class="line"> * This program is distributed in the hope that it will be useful,</div><div class="line"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</div><div class="line"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the</div><div class="line"> * GNU General Public License for more details.</div><div class="line"> * </div><div class="line"> * You should have received a copy of the GNU General Public License</div><div class="line"> * along with this program; if not, write to the Free Software</div><div class="line"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA</div><div class="line"> *</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;signal.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ctype.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;termios.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/mman.h&gt;</span></span></div><div class="line">  </div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FATAL do &#123; fprintf(stderr, <span class="meta-string">"Error at line %d, file %s (%d) [%s]\n"</span>, \</span></div><div class="line">  __LINE__, __FILE__, errno, strerror(errno)); exit(1); &#125; while(0)</div><div class="line"> </div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAP_SIZE 4096UL</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAP_MASK (MAP_SIZE - 1)</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> fd;</div><div class="line">    <span class="keyword">void</span> *map_base, *virt_addr; </div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> read_result, writeval;</div><div class="line">    <span class="keyword">long</span> <span class="keyword">int</span> target;</div><div class="line">    <span class="keyword">int</span> access_type = <span class="string">'w'</span>;</div><div class="line">    </div><div class="line">    <span class="comment">/*</span></div><div class="line">    usage:  ./devmem  &#123; address &#125; [ type [ data ] ] </div><div class="line">    */</div><div class="line">    <span class="keyword">if</span>(argc &lt; <span class="number">2</span>) &#123;</div><div class="line">        <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nUsage:\t%s &#123; address &#125; [ type [ data ] ]\n"</span></div><div class="line">            <span class="string">"\taddress : memory address to act upon\n"</span></div><div class="line">            <span class="string">"\ttype    : access operation type : [b]yte, [h]alfword, [w]ord\n"</span></div><div class="line">            <span class="string">"\tdata    : data to be written\n\n"</span>,</div><div class="line">            argv[<span class="number">0</span>]);</div><div class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">    target = strtoul(argv[<span class="number">1</span>], <span class="number">0</span>, <span class="number">0</span>);</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(argc &gt; <span class="number">2</span>)</div><div class="line">        access_type = <span class="built_in">tolower</span>(argv[<span class="number">2</span>][<span class="number">0</span>]);</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">if</span>((fd = open(<span class="string">"/dev/mem"</span>, O_RDWR | O_SYNC)) == <span class="number">-1</span>) FATAL;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"/dev/mem opened.\n"</span>); </div><div class="line">    fflush(<span class="built_in">stdout</span>);</div><div class="line">    </div><div class="line">    <span class="comment">/* Map one page */</span></div><div class="line">    map_base = mmap(<span class="number">0</span>, MAP_SIZE, PROT_READ | PROT_WRITE, MAP_SHARED, fd, target &amp; ~MAP_MASK);</div><div class="line">    <span class="keyword">if</span>(map_base == (<span class="keyword">void</span> *) <span class="number">-1</span>) FATAL;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"Memory mapped at address %p.\n"</span>, map_base); </div><div class="line">    fflush(<span class="built_in">stdout</span>);</div><div class="line">    </div><div class="line">    virt_addr = map_base + (target &amp; MAP_MASK);</div><div class="line">    <span class="keyword">switch</span>(access_type) &#123;</div><div class="line">        <span class="keyword">case</span> <span class="string">'b'</span>:</div><div class="line">            read_result = *((<span class="keyword">unsigned</span> <span class="keyword">char</span> *) virt_addr);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'h'</span>:</div><div class="line">            read_result = *((<span class="keyword">unsigned</span> <span class="keyword">short</span> *) virt_addr);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'w'</span>:</div><div class="line">            read_result = *((<span class="keyword">unsigned</span> <span class="keyword">long</span> *) virt_addr);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">default</span>:</div><div class="line">            <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Illegal data type '%c'.\n"</span>, access_type);</div><div class="line">            <span class="built_in">exit</span>(<span class="number">2</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"Value at address 0x%X (%p): 0x%X\n"</span>, target, virt_addr, read_result); </div><div class="line">    fflush(<span class="built_in">stdout</span>);</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(argc &gt; <span class="number">3</span>) &#123;</div><div class="line">        writeval = strtoul(argv[<span class="number">3</span>], <span class="number">0</span>, <span class="number">0</span>);</div><div class="line">        <span class="keyword">switch</span>(access_type) &#123;</div><div class="line">            <span class="keyword">case</span> <span class="string">'b'</span>:</div><div class="line">                *((<span class="keyword">unsigned</span> <span class="keyword">char</span> *) virt_addr) = writeval;</div><div class="line">                read_result = *((<span class="keyword">unsigned</span> <span class="keyword">char</span> *) virt_addr);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">'h'</span>:</div><div class="line">                *((<span class="keyword">unsigned</span> <span class="keyword">short</span> *) virt_addr) = writeval;</div><div class="line">                read_result = *((<span class="keyword">unsigned</span> <span class="keyword">short</span> *) virt_addr);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="string">'w'</span>:</div><div class="line">                *((<span class="keyword">unsigned</span> <span class="keyword">long</span> *) virt_addr) = writeval;</div><div class="line">                read_result = *((<span class="keyword">unsigned</span> <span class="keyword">long</span> *) virt_addr);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"Written 0x%X; readback 0x%X\n"</span>, writeval, read_result); </div><div class="line">        fflush(<span class="built_in">stdout</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">if</span>(munmap(map_base, MAP_SIZE) == <span class="number">-1</span>) FATAL;</div><div class="line">    close(fd);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>以操作一个LED为例，GPIO1_18的寄存器基地址为<code>0x4804C000</code>，数据输出寄存器偏移为<code>0x13C</code>。</p><p>值得注意的是，这里使用的是AM335X，测试中发现不能直接操作数据输出寄存器，需要先操作GPIO控制寄存器，这里先通过GPIO子系统完成GPIO寄存器前期工作，也许换个SOC不会出现该情况，可以直接操作任意寄存器：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">echo 50 &gt; /sys/class/gpio/export</div><div class="line">echo out &gt; /sys/class/gpio/gpio50/direction</div><div class="line">cat /sys/class/gpio/gpio50/value</div><div class="line">0</div></pre></td></tr></table></figure></p><p>可以看到，现在数据输出寄存器<code>0x4804C13C</code>的值为0，使用<code>devmem2</code>查看：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">./devmem2 0x4804c13c w</div><div class="line">/dev/mem opened.</div><div class="line">Memory mapped at address 0xb6f86000.</div><div class="line">Value at address 0x4804C13C (0xb6f8613c): 0x0</div></pre></td></tr></table></figure></p><p>读取到的值和前面使用GPIO子系统的结果一致。</p><p>继续写操作测试：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">./devmem2 0x4804c13c w 0x40000</div><div class="line">/dev/mem opened.</div><div class="line">Memory mapped at address 0xb6fcc000.</div><div class="line">Value at address 0x4804C13C (0xb6fcc13c): 0x0</div><div class="line">Written 0x40000; readback 0x40000</div><div class="line"></div><div class="line">cat /sys/class/gpio/gpio50/value</div><div class="line">1</div></pre></td></tr></table></figure></p><p>使用<code>devmem2</code>操作寄存器，使用GPIO子系统查看发现确实被改变了。</p><p>使用<code>devmem2</code>还存在几个问题：<br>一是需要保证<code>/dev/mem</code>节点存在；<br>二是不能同时读取多个寄存器值；<br>三是必须依赖应用程序，不能直接<code>echo</code>或<code>cat</code>读写寄存器；</p><p>因此，编写一个新的驱动和应用程序，独立的实现读写寄存器的功能，以解决前面可能出现的情况。</p><p>驱动程序如下:<br><figure class="highlight c"><figcaption><span>[ker_rw.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/kernel.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/fs.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/init.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;asm/io.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/cdev.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/types.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;asm/uaccess.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/device.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/ioport.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> MAX_LEN           1000</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> REG_IOC_MAGIC     <span class="meta-string">'r'</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> REG_IOC_R8        _IOWR(REG_IOC_MAGIC, 0, void *)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> REG_IOC_R16       _IOWR(REG_IOC_MAGIC, 1, void *)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> REG_IOC_R32       _IOWR(REG_IOC_MAGIC, 2, void *)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> REG_IOC_W8        _IOWR(REG_IOC_MAGIC, 3, void *)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> REG_IOC_W16       _IOWR(REG_IOC_MAGIC, 4, void *)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> REG_IOC_W32       _IOWR(REG_IOC_MAGIC, 5, void *)</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> REG_ATTR(_name, _mode, _show, _store, _index)   \</span></div><div class="line">    &#123; .dev_attr = __ATTR(_name, _mode, _show, _store),  \</div><div class="line">      .index = _index &#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">int</span> reg_major;</div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> cdev reg_cdev;</div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> <span class="keyword">class</span> *reg_class;</div><div class="line"><span class="keyword">struct</span> device* reg_device = <span class="literal">NULL</span>;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">struct</span> ker_rw_msg &#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> val;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> addr;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> width;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> num;</div><div class="line"></div><div class="line">    <span class="keyword">struct</span> mutex lock;  </div><div class="line">&#125;; </div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> ker_rw_msg rw_msg;</div><div class="line"></div><div class="line"><span class="keyword">struct</span> reg_device_attribute&#123;</div><div class="line">    <span class="keyword">struct</span> device_attribute dev_attr;</div><div class="line">    <span class="keyword">int</span> index;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">reg_num_show</span><span class="params">(<span class="keyword">struct</span> device *dev, <span class="keyword">struct</span> device_attribute *devattr, </span></span></div><div class="line">                <span class="keyword">char</span> *buf)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">sprintf</span>(buf, <span class="string">"%u\n"</span>, rw_msg.num);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">reg_num_store</span><span class="params">(<span class="keyword">struct</span> device *dev, <span class="keyword">struct</span> device_attribute *attr,</span></span></div><div class="line">             <span class="keyword">const</span> <span class="keyword">char</span> *buf, <span class="keyword">size_t</span> count)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> num;</div><div class="line"></div><div class="line">    num = simple_strtoul(buf, <span class="literal">NULL</span>, <span class="number">10</span>);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> ((num &gt; MAX_LEN) || (num == <span class="number">0</span>))</div><div class="line">        printk(KERN_ERR <span class="string">"%s: num range is 0~%d\n"</span>,__FUNCTION__, MAX_LEN);</div><div class="line">    <span class="keyword">else</span>    </div><div class="line">        rw_msg.num = num;</div><div class="line">        </div><div class="line">    <span class="keyword">return</span> count;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">reg_width_show</span><span class="params">(<span class="keyword">struct</span> device *dev, <span class="keyword">struct</span> device_attribute *devattr, </span></span></div><div class="line">                <span class="keyword">char</span> *buf)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">sprintf</span>(buf, <span class="string">"%u\n"</span>, rw_msg.width);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">reg_width_store</span><span class="params">(<span class="keyword">struct</span> device *dev, <span class="keyword">struct</span> device_attribute *attr,</span></span></div><div class="line">             <span class="keyword">const</span> <span class="keyword">char</span> *buf, <span class="keyword">size_t</span> count)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> width = <span class="number">0</span>;</div><div class="line"></div><div class="line">    width = simple_strtoul(buf, <span class="literal">NULL</span>, <span class="number">10</span>);</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> ((width != <span class="number">8</span>) &amp;&amp; (width != <span class="number">16</span>) &amp;&amp; (width != <span class="number">32</span>))</div><div class="line">        printk(KERN_WARNING <span class="string">"Address width can only be 8 or 16 or 32.\n"</span>);</div><div class="line">    <span class="keyword">else</span></div><div class="line">        rw_msg.width = width;</div><div class="line">        </div><div class="line">    <span class="keyword">return</span> count;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">reg_addr_show</span><span class="params">(<span class="keyword">struct</span> device *dev, <span class="keyword">struct</span> device_attribute *devattr, </span></span></div><div class="line">                <span class="keyword">char</span> *buf)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> <span class="built_in">sprintf</span>(buf, <span class="string">"0x%08x\n"</span>, rw_msg.addr);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">reg_addr_store</span><span class="params">(<span class="keyword">struct</span> device *dev, <span class="keyword">struct</span> device_attribute *attr,</span></span></div><div class="line">             <span class="keyword">const</span> <span class="keyword">char</span> *buf, <span class="keyword">size_t</span> count)</div><div class="line">&#123;</div><div class="line">    rw_msg.addr = simple_strtoul(buf, <span class="literal">NULL</span>, <span class="number">16</span>);</div><div class="line">        </div><div class="line">    <span class="keyword">return</span> count;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">reg_val_show</span><span class="params">(<span class="keyword">struct</span> device *dev, <span class="keyword">struct</span> device_attribute *devattr, </span></span></div><div class="line">                <span class="keyword">char</span> *buf)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">void</span> __iomem *virtbase;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> addr;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> phy_addr[rw_msg.num];</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> vir_addr[rw_msg.num];</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> val[rw_msg.num];</div><div class="line">    <span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>  *p8;</div><div class="line">    <span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">short</span> *p16;</div><div class="line">    <span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">int</span>   *p32;</div><div class="line"></div><div class="line">    <span class="comment">//if (!request_mem_region(rw_msg.addr, 4, "ker_rw")) </span></div><div class="line">        <span class="comment">//return -EBUSY;</span></div><div class="line"></div><div class="line">    mutex_lock(&amp;rw_msg.lock);   </div><div class="line">    </div><div class="line">    addr = rw_msg.addr;</div><div class="line">    virtbase = ioremap(addr, <span class="number">4</span>);</div><div class="line">    <span class="keyword">if</span> (virtbase == <span class="literal">NULL</span>)</div><div class="line">        <span class="keyword">return</span> -ENOMEM;</div><div class="line"></div><div class="line">    p8  = (<span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *)virtbase;</div><div class="line">    p16 = (<span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">short</span> *)virtbase;</div><div class="line">    p32 = (<span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> *)virtbase;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;rw_msg.num; i++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (rw_msg.width == <span class="number">8</span>)</div><div class="line">        &#123;</div><div class="line">            phy_addr[i] = addr;</div><div class="line">            vir_addr[i] = (<span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">int</span>)p8;</div><div class="line">            val[i] = readb(p8); <span class="comment">//val[i] = *p8;</span></div><div class="line">            p8++;</div><div class="line">            addr = addr + <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (rw_msg.width == <span class="number">16</span>)</div><div class="line">        &#123;</div><div class="line">            phy_addr[i] = addr;</div><div class="line">            vir_addr[i] = (<span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">int</span>)p16;</div><div class="line">            val[i] = readw(p16); <span class="comment">//val[i] = *p16;</span></div><div class="line">            p16++;</div><div class="line">            addr = addr + <span class="number">2</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (rw_msg.width == <span class="number">32</span>)</div><div class="line">        &#123;</div><div class="line">            phy_addr[i] = addr;</div><div class="line">            vir_addr[i] = (<span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">int</span>)p32;</div><div class="line">            val[i] = readl(p32); <span class="comment">//val[i] = *p32;</span></div><div class="line">            p32++;</div><div class="line">            addr = addr + <span class="number">4</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">            printk(KERN_WARNING <span class="string">"Please check the address width.\n"</span>);</div><div class="line">        </div><div class="line">        <span class="built_in">sprintf</span>(buf + <span class="built_in">strlen</span>(buf), <span class="string">"phy_addr:0x%08x  vir_addr:0x%08x  val:0x%08x\n"</span>, phy_addr[i], vir_addr[i], val[i]);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    iounmap(virtbase);</div><div class="line">    </div><div class="line">    mutex_unlock(&amp;rw_msg.lock);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="built_in">strlen</span>(buf);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">reg_val_store</span><span class="params">(<span class="keyword">struct</span> device *dev, <span class="keyword">struct</span> device_attribute *attr,</span></span></div><div class="line">             <span class="keyword">const</span> <span class="keyword">char</span> *buf, <span class="keyword">size_t</span> count)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">void</span> __iomem *virtbase;</div><div class="line"></div><div class="line">    mutex_lock(&amp;rw_msg.lock);   </div><div class="line"></div><div class="line">    rw_msg.val = simple_strtoul(buf, <span class="literal">NULL</span>, <span class="number">16</span>);</div><div class="line"></div><div class="line">    virtbase = ioremap(rw_msg.addr, <span class="number">4</span>);</div><div class="line">    <span class="keyword">if</span> (virtbase == <span class="literal">NULL</span>)</div><div class="line">        <span class="keyword">return</span> -ENOMEM;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (rw_msg.width == <span class="number">8</span>)</div><div class="line">        writeb(rw_msg.val, virtbase);</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (rw_msg.width == <span class="number">16</span>)</div><div class="line">        writew(rw_msg.val, virtbase);</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (rw_msg.width == <span class="number">32</span>)</div><div class="line">        writel(rw_msg.val, virtbase);</div><div class="line">    <span class="keyword">else</span></div><div class="line">        printk(KERN_WARNING <span class="string">"Please check the address width.\n"</span>);</div><div class="line"></div><div class="line">    iounmap(virtbase);</div><div class="line">    </div><div class="line">    mutex_unlock(&amp;rw_msg.lock);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> count;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> reg_device_attribute reg_attribute[] = &#123;</div><div class="line">    REG_ATTR(val,   S_IRUGO | S_IWUSR, reg_val_show, reg_val_store, <span class="number">1</span>),</div><div class="line">    REG_ATTR(addr,  S_IRUGO | S_IWUSR, reg_addr_show, reg_addr_store, <span class="number">2</span>),</div><div class="line">    REG_ATTR(width, S_IRUGO | S_IWUSR, reg_width_show, reg_width_store, <span class="number">3</span>),</div><div class="line">    REG_ATTR(num,   S_IRUGO | S_IWUSR, reg_num_show, reg_num_store, <span class="number">4</span>),</div><div class="line">&#125;;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">long</span> <span class="title">ker_rw_ioctl</span><span class="params">(<span class="keyword">struct</span> file *file, <span class="keyword">unsigned</span> <span class="keyword">int</span> cmd, <span class="keyword">unsigned</span> <span class="keyword">long</span> arg)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">char</span>  *p8;</div><div class="line">    <span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">short</span> *p16;</div><div class="line">    <span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">int</span>   *p32;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> val;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> addr;</div><div class="line"></div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> buf[<span class="number">2</span>];</div><div class="line"></div><div class="line">    mutex_lock(&amp;rw_msg.lock);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (copy_from_user(buf, (<span class="keyword">const</span> <span class="keyword">void</span> __user *)arg, <span class="number">8</span>))</div><div class="line">        printk(KERN_ERR <span class="string">"%s: copy_from_user error in the %d \n"</span>,__FUNCTION__,__LINE__);</div><div class="line">    </div><div class="line">    addr = buf[<span class="number">0</span>];</div><div class="line">    val  = buf[<span class="number">1</span>];</div><div class="line"></div><div class="line">    p8  = (<span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *)ioremap(addr, <span class="number">4</span>);</div><div class="line">    <span class="keyword">if</span> (p8 == <span class="literal">NULL</span>)</div><div class="line">        <span class="keyword">return</span> -ENOMEM;</div><div class="line">    p16 = (<span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">short</span> *)p8;</div><div class="line">    p32 = (<span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> *)p8;</div><div class="line"></div><div class="line">    <span class="keyword">switch</span> (cmd)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">case</span> REG_IOC_R8:</div><div class="line">        &#123;</div><div class="line">            val = *p8;</div><div class="line">            <span class="keyword">if</span> (copy_to_user((<span class="keyword">void</span> __user *)(arg+<span class="number">4</span>), &amp;val, <span class="number">4</span>))</div><div class="line">            &#123;           </div><div class="line">                printk(KERN_ERR <span class="string">"%s: copy_to_user error in the %d \n"</span>,__FUNCTION__,__LINE__);</div><div class="line">                <span class="keyword">return</span> -EINVAL;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">case</span> REG_IOC_R16:</div><div class="line">        &#123;</div><div class="line">            val = *p16;</div><div class="line">            <span class="keyword">if</span> (copy_to_user((<span class="keyword">void</span> __user *)(arg+<span class="number">4</span>), &amp;val, <span class="number">4</span>))</div><div class="line">            &#123;           </div><div class="line">                printk(KERN_ERR <span class="string">"%s: copy_to_user error in the %d \n"</span>,__FUNCTION__,__LINE__);</div><div class="line">                <span class="keyword">return</span> -EINVAL;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">case</span> REG_IOC_R32:</div><div class="line">        &#123;</div><div class="line">            val = *p32;</div><div class="line">            <span class="keyword">if</span> (copy_to_user((<span class="keyword">void</span> __user *)(arg+<span class="number">4</span>), &amp;val, <span class="number">4</span>))</div><div class="line">            &#123;           </div><div class="line">                printk(KERN_ERR <span class="string">"%s: copy_to_user error in the %d \n"</span>,__FUNCTION__,__LINE__);</div><div class="line">                <span class="keyword">return</span> -EINVAL;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">case</span> REG_IOC_W8:</div><div class="line">        &#123;</div><div class="line">            *p8 = val;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">case</span> REG_IOC_W16:</div><div class="line">        &#123;</div><div class="line">            *p16 = val;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">case</span> REG_IOC_W32:</div><div class="line">        &#123;</div><div class="line">            *p32 = val;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    iounmap(p8);</div><div class="line"></div><div class="line">    mutex_unlock(&amp;rw_msg.lock);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> file_operations ker_rw_ops = &#123;</div><div class="line">    .owner            = THIS_MODULE,</div><div class="line">    .unlocked_ioctl   = ker_rw_ioctl,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">ker_rw_init</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</div><div class="line">    <span class="keyword">dev_t</span> reg_devid = <span class="number">0</span>;</div><div class="line">    </div><div class="line">    mutex_init(&amp;rw_msg.lock);</div><div class="line">    mutex_lock(&amp;rw_msg.lock);</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(alloc_chrdev_region(&amp;reg_devid, <span class="number">0</span>, <span class="number">1</span>, <span class="string">"ker_rw"</span>) &lt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        printk(KERN_ERR <span class="string">"%s: alloc_chrdev_region error in the %d \n"</span>,__FUNCTION__,__LINE__);</div><div class="line">        <span class="keyword">return</span> -EINVAL;</div><div class="line">    &#125; </div><div class="line">    </div><div class="line">    reg_major = MAJOR(reg_devid);</div><div class="line">    cdev_init(&amp;reg_cdev, &amp;ker_rw_ops);   </div><div class="line">    </div><div class="line">    ret = cdev_add(&amp;reg_cdev, reg_devid, <span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span> (ret &lt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        printk(KERN_ALERT <span class="string">"%s: cdev_add error in the %d \n"</span>,__FUNCTION__,__LINE__);</div><div class="line">        <span class="keyword">goto</span> error1;</div><div class="line">    &#125;</div><div class="line">        </div><div class="line">    reg_class = class_create(THIS_MODULE, <span class="string">"ker_rw"</span>); </div><div class="line">    <span class="keyword">if</span> (IS_ERR(reg_class))</div><div class="line">    &#123;</div><div class="line">        printk(KERN_ALERT <span class="string">"%s: device_create error in the %d \n"</span>,__FUNCTION__,__LINE__);</div><div class="line">        <span class="keyword">goto</span> error2;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    reg_device = device_create(reg_class, <span class="literal">NULL</span>, MKDEV(reg_major, <span class="number">0</span>), <span class="literal">NULL</span>, <span class="string">"ker_rw"</span>); </div><div class="line">    <span class="keyword">if</span> (IS_ERR(reg_device))</div><div class="line">    &#123;</div><div class="line">        printk(KERN_ALERT <span class="string">"%s: device_create error in the %d \n"</span>,__FUNCTION__,__LINE__);</div><div class="line">        <span class="keyword">goto</span> error3;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)</div><div class="line">    &#123;</div><div class="line">        ret = device_create_file(reg_device, &amp;reg_attribute[i].dev_attr);</div><div class="line">        <span class="keyword">if</span> (ret)</div><div class="line">        &#123;</div><div class="line">            printk(KERN_ALERT <span class="string">"%s: device_create_file error in the %d \n"</span>,__FUNCTION__,__LINE__);</div><div class="line">            <span class="keyword">goto</span> error4;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//Defaults</span></div><div class="line">    rw_msg.num = <span class="number">1</span>;</div><div class="line">    rw_msg.width = <span class="number">32</span>;</div><div class="line">    mutex_unlock(&amp;rw_msg.lock);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    </div><div class="line">error4:</div><div class="line">    device_destroy(reg_class,  MKDEV(reg_major, <span class="number">0</span>));</div><div class="line">error3:</div><div class="line">    class_destroy(reg_class);</div><div class="line">error2:</div><div class="line">    cdev_del(&amp;reg_cdev);</div><div class="line">error1:</div><div class="line">    unregister_chrdev_region(MKDEV(reg_major, <span class="number">0</span>), <span class="number">1</span>);</div><div class="line">    mutex_unlock(&amp;rw_msg.lock);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> -EINVAL;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ker_rw_exit</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    mutex_lock(&amp;rw_msg.lock);</div><div class="line">    </div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">4</span>; i++)</div><div class="line">        device_remove_file(reg_device, &amp;reg_attribute[i].dev_attr);</div><div class="line"></div><div class="line">    device_destroy(reg_class,  MKDEV(reg_major, <span class="number">0</span>));</div><div class="line">    class_destroy(reg_class);</div><div class="line"> </div><div class="line">    unregister_chrdev_region(MKDEV(reg_major, <span class="number">0</span>), <span class="number">1</span>);</div><div class="line">    cdev_del(&amp;reg_cdev);</div><div class="line">    </div><div class="line">    mutex_unlock(&amp;rw_msg.lock);</div><div class="line">&#125;</div><div class="line"></div><div class="line">module_init(ker_rw_init);</div><div class="line">module_exit(ker_rw_exit);</div><div class="line"></div><div class="line">MODULE_LICENSE(<span class="string">"GPL"</span>);</div><div class="line">MODULE_AUTHOR(<span class="string">"hceng &lt;huangcheng.job@foxmail.com&gt;"</span>);</div><div class="line">MODULE_DESCRIPTION(<span class="string">"Read and write register."</span>);</div><div class="line">MODULE_VERSION(<span class="string">"v1.0"</span>);</div></pre></td></tr></table></figure></p><p>该驱动程序向用户层提供了两个接口：<code>sysfs</code>文件系统接口和<code>devfs</code>文件系统接口。<br>对于<code>sysfs</code>文件系统接口，加载驱动后，会在<code>/sys/class/ker_rw/ker_rw/</code>生成如下节点：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">addr       num        subsystem  val</div><div class="line">dev        power      uevent     width</div></pre></td></tr></table></figure></p><p>其中，<code>num</code>用于设置一次读取的寄存器数量，范围为1~MAX_LEN(1000)；<br><code>witdh</code>用于设置每次读/写寄存器的宽度，支持8、16、32；<br><code>addr</code>用于设置每次读/写寄存器的地址(16进制)；<br><code>val</code>用于设置每次读/写寄存器的值(16进制)；</p><p>因此，查看操作前面的GPIO可执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"># echo 0x4804c13c &gt; addr</div><div class="line"></div><div class="line"># cat val</div><div class="line">phy_addr:0x4804c13c  vir_addr:0xfa04c13c  val:0x00000000</div><div class="line"></div><div class="line"># echo 0x40000 &gt; val</div><div class="line"># cat val</div><div class="line">phy_addr:0x4804c13c  vir_addr:0xfa04c13c  val:0x00040000</div><div class="line"></div><div class="line"># echo 4 &gt; num</div><div class="line"></div><div class="line"># cat val</div><div class="line">phy_addr:0x4804c13c  vir_addr:0xfa04c13c  val:0x00040000</div><div class="line">phy_addr:0x4804c140  vir_addr:0xfa04c140  val:0x00000000</div><div class="line">phy_addr:0x4804c144  vir_addr:0xfa04c144  val:0x00000000</div><div class="line">phy_addr:0x4804c148  vir_addr:0xfa04c148  val:0x00000000</div></pre></td></tr></table></figure></p><p>这里仍然保留了传统的<code>devfs</code>文件系统接口，需要编写应用程序访问：</p><figure class="highlight c"><figcaption><span>[app_rw.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/ioctl.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> REG_IOC_MAGIC     <span class="meta-string">'r'</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> REG_IOC_R8        _IOWR(REG_IOC_MAGIC, 0, void *)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> REG_IOC_R16       _IOWR(REG_IOC_MAGIC, 1, void *)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> REG_IOC_R32       _IOWR(REG_IOC_MAGIC, 2, void *)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> REG_IOC_W8        _IOWR(REG_IOC_MAGIC, 3, void *)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> REG_IOC_W16       _IOWR(REG_IOC_MAGIC, 4, void *)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> REG_IOC_W32       _IOWR(REG_IOC_MAGIC, 5, void *)</span></div><div class="line"></div><div class="line"><span class="comment">/* Usage:</span></div><div class="line"> * ./regeditor r8  addr [num]</div><div class="line"> * ./regeditor r16 addr [num]</div><div class="line"> * ./regeditor r32 addr [num]</div><div class="line"> *</div><div class="line"> * ./regeditor w8  addr val</div><div class="line"> * ./regeditor w16 addr val </div><div class="line"> * ./regeditor w32 addr val</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_usage</span><span class="params">(<span class="keyword">char</span> *file)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"Usage:\n"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s &lt;r8 | r16 | r32&gt; &lt;phy addr&gt; [num]\n"</span>, file);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s &lt;w8 | w16 | w32&gt; &lt;phy addr&gt; &lt;val&gt;\n"</span>, file);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> fd;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> buf[<span class="number">2</span>];</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> num;</div><div class="line">    <span class="keyword">int</span> ret;</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> ((argc != <span class="number">3</span>) &amp;&amp; (argc != <span class="number">4</span>))</div><div class="line">    &#123;</div><div class="line">        print_usage(argv[<span class="number">0</span>]);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    fd = open(<span class="string">"/dev/ker_rw"</span>, O_RDWR);</div><div class="line">    <span class="keyword">if</span> (fd &lt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"can't open /dev/ker_rw\n"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">-2</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/* addr */</span></div><div class="line">    buf[<span class="number">0</span>] = strtoul(argv[<span class="number">2</span>], <span class="literal">NULL</span>, <span class="number">0</span>);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (argc == <span class="number">4</span>)</div><div class="line">    &#123;</div><div class="line">        buf[<span class="number">1</span>] = strtoul(argv[<span class="number">3</span>], <span class="literal">NULL</span>, <span class="number">0</span>);</div><div class="line">        num    = buf[<span class="number">1</span>];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        num = <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">"r8"</span>) == <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; num; i++)</div><div class="line">        &#123;</div><div class="line">            ioctl(fd, REG_IOC_R8, buf);  <span class="comment">/* val = buf[1] */</span></div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%02d. [%08x] = %02x\n"</span>, i, buf[<span class="number">0</span>], (<span class="keyword">unsigned</span> <span class="keyword">char</span>)buf[<span class="number">1</span>]);</div><div class="line">            buf[<span class="number">0</span>] += <span class="number">1</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">"r16"</span>) == <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; num; i++)</div><div class="line">        &#123;</div><div class="line">            ioctl(fd, REG_IOC_R16, buf);  <span class="comment">/* val = buf[1] */</span></div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%02d. [%08x] = %04x\n"</span>, i, buf[<span class="number">0</span>], (<span class="keyword">unsigned</span> <span class="keyword">short</span>)buf[<span class="number">1</span>]);</div><div class="line">            buf[<span class="number">0</span>] += <span class="number">2</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">"r32"</span>) == <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; num; i++)</div><div class="line">        &#123;</div><div class="line">            ret = ioctl(fd, REG_IOC_R32, buf);  <span class="comment">/* val = buf[1] */</span></div><div class="line">            <span class="keyword">if</span> (ret == <span class="number">-1</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"errno = %d\n"</span>, errno);</div><div class="line">            &#125;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%02d. [%08x] = %08x\n"</span>, i, buf[<span class="number">0</span>], (<span class="keyword">unsigned</span> <span class="keyword">int</span>)buf[<span class="number">1</span>]);</div><div class="line">            buf[<span class="number">0</span>] += <span class="number">4</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">"w8"</span>) == <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        ioctl(fd, REG_IOC_W8, buf);  <span class="comment">/* val = buf[1] */</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">"w16"</span>) == <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        ioctl(fd, REG_IOC_W16, buf);  <span class="comment">/* val = buf[1] */</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">"w32"</span>) == <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        ioctl(fd, REG_IOC_W32, buf);  <span class="comment">/* val = buf[1] */</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(argv[<span class="number">0</span>]);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    </div><div class="line">&#125;</div></pre></td></tr></table></figure><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录几个Linux驱动、应用调试技巧。&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux驱动" scheme="http://yoursite.com/tags/Linux%E9%A9%B1%E5%8A%A8/"/>
    
      <category term="Linux应用" scheme="http://yoursite.com/tags/Linux%E5%BA%94%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Tiny4412——Android访问硬件的方法</title>
    <link href="http://yoursite.com/2019/03/15/Tiny4412%E2%80%94%E2%80%94Android%E8%AE%BF%E9%97%AE%E7%A1%AC%E4%BB%B6%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2019/03/15/Tiny4412——Android访问硬件的方法/</id>
    <published>2019-03-15T08:46:28.000Z</published>
    <updated>2019-05-06T10:24:32.379Z</updated>
    
    <content type="html"><![CDATA[<p>2019年，正式学习Android驱动。<br>以LED为切入点，学习Android访问硬件的方法。<br><a id="more"></a></p><p>之前写第一个<a href="https://hceng.cn/2017/08/12/AM437x%E2%80%94%E2%80%94LED%E9%A9%B1%E5%8A%A8/" target="_blank" rel="external">Linux下的LED驱动</a>时候，提到：<strong>Linux驱动 = 裸机 + 框架</strong><br>这个思维在写Linux驱动的过程中，得到了充分验证。<br>如今，学习Android驱动，开始验证：<strong>Android驱动 = Linux驱动 + 框架</strong></p><h1 id="1-环境搭建"><a href="#1-环境搭建" class="headerlink" title="1. 环境搭建"></a>1. 环境搭建</h1><p>开发环境主要包含：<br>1.一个Linux主机(虚拟机)，在该主机里编译Linux内核和Android源码等；<br>2.一个Windows主机，在该主机里编写Android APP，并连接开发板调试；</p><h2 id="1-1-搭建Ubuntu虚拟机"><a href="#1-1-搭建Ubuntu虚拟机" class="headerlink" title="1.1 搭建Ubuntu虚拟机"></a>1.1 搭建Ubuntu虚拟机</h2><p>前面在<a href="https://hceng.cn/2018/09/12/JAVA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#0-%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E7%9A%84%E6%90%AD%E5%BB%BA" target="_blank" rel="external">学习Java</a>时，已经安装了Ubuntu18.04的虚拟机，这里继续使用该虚拟机。</p><p>值得一提的是，虚拟机的内存给多一点，虚拟机参考配置：<strong>内存6G，硬盘100G，CPU 8核</strong>。<br>在编译内核源码的过程中，发现编译太慢，一般挂一晚上都能编译好，之前内存给小了，编译了一天一夜也没好，后来改大了内存后，一会就编译完了。</p><h2 id="1-2-编译Kernel和Android"><a href="#1-2-编译Kernel和Android" class="headerlink" title="1.2 编译Kernel和Android"></a>1.2 编译Kernel和Android</h2><p>以下所有安装包都是从<a href="https://eyun.baidu.com/s/3b1UtLc#sharelink/path=%2F" target="_blank" rel="external">百问网云盘下载</a>。</p><p><strong>1、安装交叉编译工具链</strong><br>下载<code>arm-linux-gcc-4.5.1-v6-vfp-20120301.tgz</code>并解压。<br>修改<code>/etc/environment</code>，将解压的交叉编译工具链加在末尾：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">PATH=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/work/tools/toolschain/4.5.1/bin&quot;</div></pre></td></tr></table></figure></p><p>执行<code>source /etc/environment</code>更新环境变量。<br>此时执行<code>arm-linux-gcc -v</code>，打印出<code>gcc version 4.5.1 (ctng-1.8.1-FA)</code>即OK。</p><p><strong>2、编译Kernel</strong><br>下载<code>linux-3.0.86-20150324.tgz</code>并解压。<br>进入内核源码根目录执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cp tiny4412_android_defconfig .config</div><div class="line">make zImage</div></pre></td></tr></table></figure></p><p>最后生成<code>/work/linux_source/linux-3.0.86/arch/arm/boot/zImage</code>。</p><p><strong>3、编译Android</strong><br>下载<code>android-5.0.2-fs-20150325.tar.gz</code>并解压。<br>进入Android源码根目录执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">. setenv</div><div class="line">lunch</div></pre></td></tr></table></figure></p><p>在选择界面：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">You&apos;re building on Linux</div><div class="line"></div><div class="line">Lunch menu... pick a combo:</div><div class="line">     1. aosp_arm-eng</div><div class="line">     2. aosp_arm64-eng</div><div class="line">     3. aosp_mips-eng</div><div class="line">     4. aosp_mips64-eng</div><div class="line">     5. aosp_x86-eng</div><div class="line">     6. aosp_x86_64-eng</div><div class="line">     7. mini_emulator_x86-userdebug</div><div class="line">     8. m_e_arm-userdebug</div><div class="line">     9. mini_emulator_arm64-userdebug</div><div class="line">     10. mini_emulator_mips-userdebug</div><div class="line">     11. mini_emulator_x86_64-userdebug</div><div class="line">     12. aosp_hammerhead-userdebug</div><div class="line">     13. aosp_mako-userdebug</div><div class="line">     14. full_tiny4412-userdebug</div><div class="line">     15. full_tiny4412-eng</div><div class="line">     16. aosp_shamu-userdebug</div><div class="line">     17. aosp_deb-userdebug</div><div class="line">     18. aosp_flo-userdebug</div><div class="line">     19. aosp_grouper-userdebug</div><div class="line">     20. full_fugu-userdebug</div><div class="line">     21. aosp_fugu-userdebug</div><div class="line">     22. aosp_tilapia-userdebug</div><div class="line">     23. aosp_manta-userdebug</div><div class="line"></div><div class="line">Which would you like? [aosp_arm-eng]</div></pre></td></tr></table></figure></p><p>输入<code>15</code>，即选择<code>full_tiny4412-eng</code>。<br>再执行<code>make –j8</code>，等待几个小时，编译完成后执行<code>./gen-img.sh</code>生成<code>/work/android_source/android-5.0.2/system.img</code>.</p><p>当然编译过程不可能是那么一帆风顺的，实际编译Android源码过程中遇到的问题有：<br>①JDK版本过高，重新安装<code>openjdk-7-jdk</code>，<a href="https://blog.csdn.net/cwh250/article/details/81948610" target="_blank" rel="external">参考解决链接</a>。<br>②编译报错<code>aidl_language_l</code>，<a href="https://blog.csdn.net/xljxiang/article/details/83044067" target="_blank" rel="external">参考解决链接</a>。<br>③编译报错<code>error: unsupported reloc 43</code>，<a href="https://blog.csdn.net/u014770862/article/details/52624851" target="_blank" rel="external">参考解决链接</a>。<br>④制作映像文件出错<code>mkimage: command not found</code>，执行<code>sudo apt-get install u-boot-tools</code>安装即可。</p><p><strong>4、烧写</strong><br>使用厂家提供的<code>MiniTools</code>。<br>将<code>zImage</code>和<code>system.img</code>分别烧写到<code>Android Kernel</code>和<code>Android RooFs/System Image</code>。</p><h2 id="1-3-安装JDK-Windows"><a href="#1-3-安装JDK-Windows" class="headerlink" title="1.3 安装JDK(Windows)"></a>1.3 安装JDK(Windows)</h2><p>因为要在Windows上使用Android Studio编写APP，所以在Windows上也需要安装Java JDK(Java Development Kit)。<br>通过<a href="https://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="external">Oracle官网</a>下载最新的JDK：</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/1.jpg"></div><p>安装好后，将JDK安装路径加入Windows的环境变量：</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/2.jpg"></div><p>最后在CMD里验证：</p><div align="center"><img width="700" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/3.jpg"></div><h2 id="1-4-安装Android-Studio"><a href="#1-4-安装Android-Studio" class="headerlink" title="1.4 安装Android Studio"></a>1.4 安装Android Studio</h2><p>首先从<a href="https://developer.android.google.cn/studio/" target="_blank" rel="external">官网</a>下载Android Studio。</p><p>点击安装，会弹出首次运行没有Android SDK，点击“Cancel”。</p><div align="center"><img width="400" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/4.png"></div><p>然后选择”Custom”以自定义SDK安装路径。在弹出的界面勾选上”Android Virtual Device”，再指定SDK的安装路径。</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/5.jpg"></div><p>此时会下载Android SDK和AVD，两个文件都很大，为了C盘节省空间，应用界面只指定了SDK的安装路径在D盘，还需手动指定AVD的安装路径，这个需要修改环境变量设置。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/6.png"></div><p>然后，等待一段时间就安装完了。</p><h2 id="1-5-Android-Studio的常用快捷键"><a href="#1-5-Android-Studio的常用快捷键" class="headerlink" title="1.5 Android Studio的常用快捷键"></a>1.5 Android Studio的常用快捷键</h2><p>参考博客：<a href="https://www.open-open.com/lib/view/open1466732917214.html#articleHeader0" target="_blank" rel="external">Android Studio2.0 教程从入门到精通MAC版 - 提高篇</a></p><h1 id="2-Android应用程序"><a href="#2-Android应用程序" class="headerlink" title="2. Android应用程序"></a>2. Android应用程序</h1><p>我的目的是写一个Android应用程序，通过该应用程序控制开发板上的LED灯。<br>因此首先得设计一个APP，该APP有一个总开关控制所有灯的亮灭，每个灯又有单独的开关控制亮灭。</p><h2 id="2-1-创建APP工程"><a href="#2-1-创建APP工程" class="headerlink" title="2.1 创建APP工程"></a>2.1 创建APP工程</h2><p>打开Android Studio，选择”Start a new Android Studio project”创建一个新APP工程。<br>然后选择”Empty Activity”空主界面，最后设置APP信息、保存路径、兼容API版本。</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/7.jpg"></div><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/8.jpg"></div><p>等待自动创建完成后，会自动生成工程文件，其中有两个文件后面常用：</p><ul><li><code>app\src\main\res\layout\activity_main.xml</code>，界面控件布局文件，既可通过图形界面设计控件，也可直接编辑xml；</li><li><code>app\src\main\java\cn\hceng\led\MainActivity.java</code>，实现控件各种具体功能，逻辑关系。</li></ul><h2 id="2-2-常用控件介绍"><a href="#2-2-常用控件介绍" class="headerlink" title="2.2 常用控件介绍"></a>2.2 常用控件介绍</h2><h3 id="2-2-1-TextView"><a href="#2-2-1-TextView" class="headerlink" title="2.2.1 TextView"></a>2.2.1 TextView</h3><p><strong>TextView是文本视图，用来显示文字的。</strong></p><ul><li>xml创建：<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/TEXT"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">    <span class="attr">android:text</span>=<span class="string">"hceng first APP!"</span></div><div class="line">    <span class="attr">android:textColor</span>=<span class="string">"#008577"</span></div><div class="line">    <span class="attr">android:textSize</span>=<span class="string">"25sp"</span></div><div class="line">    <span class="attr">android:textStyle</span>=<span class="string">"bold"</span> /&gt;</div></pre></td></tr></table></figure></li></ul><blockquote><p>1.标签<code>&lt;TextView /&gt;</code>代表着要在<code>Activity</code>中添加一个<code>TextView</code>，标签中可以设置一些属性；<br>2.<strong><code>android:id</code></strong>代表<code>TextView</code>的<code>ID</code>，也就是<code>TextView</code>的唯一标识；在java代码中我们可以通过<code>findViewById()</code>方法来通过<code>ID</code>获取控件；上述控件的唯一<code>ID</code>为<code>TEXT</code>；<br>3.<strong><code>android:layout_width</code></strong>代表控件的宽度，该属性的值是<code>match_parent</code>，表示该控件的宽度与父视图的宽度相同；<br>4.<strong><code>android:layout_height</code></strong>代表控件的高度，该属性的值是<code>wrap_content</code>，表示控件的高度根据内容的高度进行改变；<br>5.<strong><code>android:gravity</code></strong>代表文字对齐方式，该属性的值是<code>center</code>，表示居中显示；<br>6.<strong><code>android:text</code></strong>代表文字内容，该属性的值是<code>hceng first APP!</code>，表示显示这串字符；<br>7.<strong><code>android:textColor</code></strong>代表文字的颜色，该属性的值是<code>#008577</code>，表示16进制色值的绿色；<br>7.<strong><code>android:textSize</code></strong>代表文字的大小，该属性的值是<code>25sp</code>，长度宽度的数值用<code>dp</code>，字体的大小用<code>sp</code>；<br>7.<strong><code>android:textStyle</code></strong>代表文字的样，<code>normal</code>、<code>bold</code>、<code>italic</code>分别为正常，加粗、斜体，默认为<code>normal</code>；</p></blockquote><ul><li>代码控制：<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.widget.TextView;</div><div class="line"></div><div class="line">        TextView myTextView = (TextView) findViewById(R.id.TEXT);</div><div class="line">        String myText = myTextView.getText().toString();</div><div class="line">        myTextView.setText(myText+<span class="string">"  Add String"</span>);</div></pre></td></tr></table></figure></li></ul><h3 id="2-2-2-Button"><a href="#2-2-2-Button" class="headerlink" title="2.2.2 Button"></a>2.2.2 Button</h3><p><strong>Button是按钮，用来控制某个目的的开关。</strong></p><ul><li>xml创建：<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/BUTTON"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"50pt"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:layout_gravity</span>=<span class="string">"center"</span></div><div class="line">    <span class="attr">android:text</span>=<span class="string">"ALL ON"</span> /&gt;</div></pre></td></tr></table></figure></li></ul><blockquote><p>1.<code>Button</code>标签里面的属性和前面<code>TextView</code>基本类似，这里就不赘述了；</p></blockquote><ul><li>代码控制：<br>在<code>Activity</code>的类中也是使用<code>findViewById()</code>来通过<code>ID</code>获取该按钮。<br>获取按钮后需要给按钮绑定点击事件，也就是点击按钮要做的事情，常用的方法有四种：<strong>布局文件指定响应函数</strong>、<strong>直接匿名内部类</strong>、<strong>新建子类实现</strong>、<strong>在当前类实现接口</strong>。</li></ul><p><strong>布局文件指定响应函数</strong>：</p><p>在布局文件的<code>&lt;Button /&gt;</code>标签里，添加<code>android:onClick=&quot;onClick&quot;</code>，<code>MainActivity.java</code>里就只需要实现<code>onClick()</code>方法即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.widget.Button;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line"></div><div class="line">        Button button = (Button) findViewById(R.id.BUTTON);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="comment">//Todo</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><strong>直接匿名内部类</strong>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.widget.Button;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line"></div><div class="line">        Button button = (Button) findViewById(R.id.BUTTON);</div><div class="line"></div><div class="line">        button.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span> <span class="params">(View v)</span></span>&#123;</div><div class="line">                <span class="comment">//Todo</span></div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><strong>新建子类实现</strong>:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.widget.Button;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line"></div><div class="line">        Button button = (Button) findViewById(R.id.BUTTON);</div><div class="line">        button.setOnClickListener(<span class="keyword">new</span> MyButtonListener());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyButtonListener</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">            <span class="comment">//Todo</span></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p><strong>在当前类实现接口</strong>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.widget.Button;</div><div class="line"><span class="keyword">import</span> android.view.View.OnClickListener;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">OnClickListener</span> </span>&#123; <span class="comment">//注意这里实现接口</span></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line"></div><div class="line">        Button button = (Button) findViewById(R.id.BUTTON);</div><div class="line">        button.setOnClickListener(<span class="keyword">this</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="comment">//Todo</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>参考博客：<a href="https://www.cnblogs.com/smyhvae/p/4375710.html" target="_blank" rel="external">Android代码规范—-按钮单击事件的四种写法</a></p><h3 id="2-2-3-CheckBox"><a href="#2-2-3-CheckBox" class="headerlink" title="2.2.3 CheckBox"></a>2.2.3 CheckBox</h3><p><strong>CheckBox是复选框，用来多项选择。</strong></p><ul><li><p>xml创建：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">CheckBox</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/LED1"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:onClick</span>=<span class="string">"onCheckboxClicked"</span></div><div class="line">    <span class="attr">android:text</span>=<span class="string">"LED1"</span> /&gt;</div></pre></td></tr></table></figure></li><li><p>分析：</p><blockquote><p>1.<code>CheckBox</code>标签里面的属性和前面也基本类似；<br>2.<code>android:onClick</code>代表控件的响应函数，该属性的值是<code>onCheckboxClicked</code>，表示操作该控件将调用<code>onCheckboxClicked()</code>方法；</p></blockquote></li><li><p>代码控制：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.widget.CheckBox;</div><div class="line"><span class="keyword">import</span> android.widget.Toast;</div><div class="line"></div><div class="line">    CheckBox checkBoxLed1 = (CheckBox) findViewById(R.id.LED1);</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckboxClicked</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> checked = ((CheckBox) v).isChecked();</div><div class="line"></div><div class="line">        <span class="keyword">switch</span> (v.getId()) &#123;</div><div class="line">            <span class="keyword">case</span> R.id.LED1:</div><div class="line">                <span class="keyword">if</span> (checked) &#123;</div><div class="line">                    Toast.makeText(getApplicationContext(), <span class="string">"LED1 on"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    Toast.makeText(getApplicationContext(), <span class="string">"LED1 off"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> R.id.LED2:</div><div class="line">                <span class="comment">//Todo</span></div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></li></ul><p>在XML里，多个<code>CheckBox</code>的<code>android:onClick</code>都是<code>onCheckboxClicked</code>，也就是任意一个<code>CheckBox</code>被点击，都会调用到<code>onCheckboxClicked()</code>方法。<br>因此，需要使用<code>getId()</code>获取是按的哪一个<code>CheckBox</code>，再根据<code>isChecked()</code>的状态，进行相应操作。</p><h3 id="2-2-4-EditText"><a href="#2-2-4-EditText" class="headerlink" title="2.2.4 EditText"></a>2.2.4 EditText</h3><p><strong>EditText是输入框，用来接收用户输入的数据。</strong></p><ul><li>xml创建：<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">EditText</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/EDIT_TEXT"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:hint</span>=<span class="string">"Please input the text "</span></div><div class="line">    <span class="attr">android:maxLines</span>=<span class="string">"1"</span> /&gt;</div></pre></td></tr></table></figure></li></ul><blockquote><p>1.<strong><code>android:hint</code></strong>代表占提示字符串，用来提示用户输入内容；<br>2.<strong><code>android:macLines</code></strong>表示显示的最多行数；</p></blockquote><ul><li>代码控制：<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.widget.EditText;</div><div class="line"><span class="keyword">import</span> android.widget.Toast;</div><div class="line"></div><div class="line">        EditText myEditText = (EditText) findViewById(R.id.EDIT_TEXT);</div><div class="line">        String inputText = myEditText.getText().toString();</div><div class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, inputText, Toast.LENGTH_SHORT).show();</div></pre></td></tr></table></figure></li></ul><p>一般<code>EditText</code>还需要监控键盘回车键，或者和<code>Button</code>搭配，从而判断用户输完了数据，再获取数据。</p><h3 id="2-2-5-ImageView"><a href="#2-2-5-ImageView" class="headerlink" title="2.2.5 ImageView"></a>2.2.5 ImageView</h3><p><strong>ImageView是图片显示框，用来在界面上显示贴图。</strong></p><ul><li>xml创建：<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/IMAGEVIEW"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">android:src</span>=<span class="string">"@drawable/p1"</span> /&gt;</div></pre></td></tr></table></figure></li></ul><blockquote><p>1.<strong><code>android:src</code></strong>代表图片资源的，使用<code>@xx</code>来引用，图片一般放在<code>res/drawable</code>里面；</p></blockquote><ul><li>代码控制：<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.widget.ImageView;</div><div class="line"></div><div class="line">        ImageView imageView = (ImageView) findViewById(R.id.IMAGEVIEW);</div><div class="line">        imageView.setImageResource(R.drawable.p2);</div></pre></td></tr></table></figure></li></ul><h3 id="2-2-6-ProgressBar"><a href="#2-2-6-ProgressBar" class="headerlink" title="2.2.6 ProgressBar"></a>2.2.6 ProgressBar</h3><p><strong>ProgressBar是进度条，用来展示当前进度。</strong></p><ul><li>xml创建：<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ProgressBar</span></span></div><div class="line">    <span class="attr">android:id</span>=<span class="string">"@+id/PROGRESSBAR"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">    <span class="attr">style</span>=<span class="string">"@style/Widget.AppCompat.ProgressBar.Horizontal"</span></div><div class="line">    <span class="attr">android:max</span>=<span class="string">"100"</span></div><div class="line">    <span class="attr">android:visibility</span>=<span class="string">"visible"</span></div><div class="line">    <span class="attr">android:progress</span>=<span class="string">"60"</span>/&gt;</div></pre></td></tr></table></figure></li></ul><blockquote><p>1.<strong><code>style</code></strong>用来指定进度条样式，默认是转动的圆，这里是水平的一根横线表示进度条；<br>2.<strong><code>android:max</code></strong>表示进度条的最大值；<br>3.<strong><code>android:visibility</code></strong>表示是否可见进度条，<code>visible</code>是可见，<code>invisible</code>是不可见，<code>gone</code>是隐藏，即不保留控件所占空间；<br>4.<strong><code>android:progress</code></strong>表示进度条的当前值(初始值)；</p></blockquote><ul><li>代码控制：<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.widget.ProgressBar;</div><div class="line"></div><div class="line">        ProgressBar myProgressBar = (ProgressBar) findViewById(R.id.PROGRESSBAR);</div><div class="line">        myProgressBar.setProgress(myProgressBar.getProgress()+<span class="number">10</span>);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (myProgressBar.getProgress() == myProgressBar.getMax()) &#123;</div><div class="line">            <span class="comment">//myProgressBar.setVisibility(View.GONE);</span></div><div class="line">            myProgressBar.setProgress(<span class="number">0</span>);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            myProgressBar.setVisibility(View.VISIBLE);</div><div class="line">        &#125;</div></pre></td></tr></table></figure></li></ul><blockquote><p>1、通过<code>findViewById()</code>方法找到指定<code>ProgressBar</code>；<br>2、通过<code>getProgress()</code>方法获取当前进度值，<code>setProgress()</code>方法设置当前进度值；<br>3、通过<code>getMax()</code>方法获取xml设置的最大值；<br>4、通过<code>setVisibility()</code>方法设置进度条是否可见，<code>VISIBLE</code>、<code>INVISIBLE</code>、<code>GONE</code>含义同上；</p></blockquote><h3 id="2-2-7-AlterDialog"><a href="#2-2-7-AlterDialog" class="headerlink" title="2.2.7 AlterDialog"></a>2.2.7 AlterDialog</h3><p><strong>AlterDialog是警告对话框，用来展示警告信息和简单的交互。</strong></p><ul><li>代码创建：<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.widget.Toast;</div><div class="line"><span class="keyword">import</span> android.app.AlertDialog;</div><div class="line"><span class="keyword">import</span> android.content.DialogInterface;</div><div class="line"></div><div class="line">        AlertDialog.Builder alterDialog = <span class="keyword">new</span> AlertDialog.Builder(MainActivity.<span class="keyword">this</span>);</div><div class="line">        alterDialog.setTitle(<span class="string">"Warning"</span>);</div><div class="line">        alterDialog.setMessage(<span class="string">"Warning content"</span>);</div><div class="line">        alterDialog.setCancelable(<span class="keyword">false</span>);</div><div class="line">        alterDialog.setPositiveButton(<span class="string">"YES"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"yes"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        alterDialog.setNegativeButton(<span class="string">"NO"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</div><div class="line">            <span class="meta">@Override</span></div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</div><div class="line">                Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"no"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        alterDialog.show();</div></pre></td></tr></table></figure></li></ul><blockquote><p>1、<code>AlterDialog</code>是通过<code>Builder</code>进行创建，在创建的时候会指定该<code>AlterDialog</code>在那个<code>Activity</code>上进行显示；<br>2、通过<code>setTitle()</code>方法设置标题，通过<code>setMessage()</code>设置内容；<br>3、<code>setCancelable()</code>方法，表示弹出的<code>AlterDialog</code>在用户点击返回键是否消失，默认是<code>true</code>，这里设置为<code>false</code>，表示点击返回键不消失；<br>4、<code>setPositiveButton()</code>方法是设置点击“确定”按钮时的事件，<code>setNegativeButton</code>是设置点击“取消”按钮的事件；<br>5、<code>show()</code>方法弹出<code>AlterDialog</code>；</p></blockquote><h3 id="2-2-8-ProgressDialog"><a href="#2-2-8-ProgressDialog" class="headerlink" title="2.2.8 ProgressDialog"></a>2.2.8 ProgressDialog</h3><p><strong>ProgressDialog是进度提示框，即在<code>AlterDialog</code>上添加<code>Progress</code>。</strong></p><ul><li>代码创建：<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.app.ProgressDialog;</div><div class="line"></div><div class="line">        ProgressDialog myProgressDialog = <span class="keyword">new</span> ProgressDialog(MainActivity.<span class="keyword">this</span>);</div><div class="line"></div><div class="line">        myProgressDialog.setTitle(<span class="string">"ProgressDialog"</span>);</div><div class="line">        myProgressDialog.setMessage(<span class="string">"Loading……"</span>);</div><div class="line">        myProgressDialog.setCancelable(<span class="keyword">true</span>);</div><div class="line"></div><div class="line">        myProgressDialog.show();</div></pre></td></tr></table></figure></li></ul><h2 id="2-3-四种布局介绍"><a href="#2-3-四种布局介绍" class="headerlink" title="2.3 四种布局介绍"></a>2.3 四种布局介绍</h2><p>Android中的布局方式有四种：<strong>线性布局</strong>(LinearLayout)、<strong>相对布局</strong>(RelativeLayout)、<strong>帧布局</strong>(FrameLayout)、<strong>表格布局</strong>(TableLayout)。</p><h3 id="2-3-1-线性布局"><a href="#2-3-1-线性布局" class="headerlink" title="2.3.1 线性布局"></a>2.3.1 线性布局</h3><p>线性布局是最常用的布局之一，如名字一样，将控件在线性方向上依次排列。<br>既然是线性，那么就可能是水平线性<code>horizontal</code>，也可以是垂直线性<code>vertical</code>。</p><ul><li><p>xml示例：</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line">&lt;LinearLayout &lt;!--LinearLayout 1--&gt;</div><div class="line">    android:layout_width="match_parent"</div><div class="line">    android:layout_height="match_parent"</div><div class="line">    android:orientation="vertical" &gt;</div><div class="line"></div><div class="line">    &lt;LinearLayout &lt;!--LinearLayout 1.1--&gt;</div><div class="line">        android:layout_width="match_parent"</div><div class="line">        android:layout_height="960px"</div><div class="line">        android:background="#005A5B" &gt;</div><div class="line"></div><div class="line">        &lt;TextView</div><div class="line">            android:layout_width="wrap_content"</div><div class="line">            android:layout_height="wrap_content"</div><div class="line">            android:text="A"</div><div class="line">            android:textSize="100dp"/&gt;</div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line"></div><div class="line">    &lt;LinearLayout &lt;!--LinearLayout 1.2--&gt;</div><div class="line">        android:layout_width="match_parent"</div><div class="line">        android:layout_height="960px"</div><div class="line">        android:orientation="horizontal" &gt;</div><div class="line"></div><div class="line">        &lt;LinearLayout &lt;!--LinearLayout 1.2.1--&gt;</div><div class="line">            android:layout_width="540px"</div><div class="line">            android:layout_height="match_parent"</div><div class="line">            android:background="#008C72" &gt;</div><div class="line"></div><div class="line">            &lt;TextView</div><div class="line">                android:layout_width="wrap_content"</div><div class="line">                android:layout_height="wrap_content"</div><div class="line">                android:text="B"</div><div class="line">                android:textSize="100dp"/&gt;</div><div class="line">        &lt;/LinearLayout&gt;</div><div class="line"></div><div class="line">        &lt;LinearLayout &lt;!--LinearLayout 1.2.2--&gt;</div><div class="line">            android:layout_width="540px"</div><div class="line">            android:layout_height="match_parent"</div><div class="line">            android:background="#02A676" &gt;</div><div class="line"></div><div class="line">            &lt;TextView</div><div class="line">                android:layout_width="wrap_content"</div><div class="line">                android:layout_height="wrap_content"</div><div class="line">                android:text="C"</div><div class="line">                android:textSize="100dp"/&gt;</div><div class="line">        &lt;/LinearLayout&gt;</div><div class="line">    &lt;/LinearLayout&gt;</div><div class="line">&lt;/LinearLayout&gt;</div></pre></td></tr></table></figure></li><li><p>效果：</p></li></ul><div align="center"><img width="200" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/9.jpg"></div><p>示例实现了三个色块，最外层的<code>LinearLayout 1</code>是整个区域，它指定内部按垂直排列。<br>然后里面的两个<code>LinearLayout 1.1</code>和<code>LinearLayout 1.2</code>就按垂直的上下排列。<br>再在<code>LinearLayout 1.2</code>里又指定水平排列，里面的<code>LinearLayout 1.2.1</code>和<code>LinearLayout 1.2.2</code>就左右排列。</p><h3 id="2-3-2-相对布局"><a href="#2-3-2-相对布局" class="headerlink" title="2.3.2 相对布局"></a>2.3.2 相对布局</h3><p>相对布局可以根据已经固定的控件来确定其它新加控件的位置。</p><ul><li><p>xml示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/button_center"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"center"</span> /&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/button_above"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_above</span>=<span class="string">"@+id/button_center"</span></div><div class="line">        <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"above"</span> /&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/button_below"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_below</span>=<span class="string">"@+id/button_center"</span></div><div class="line">        <span class="attr">android:layout_centerInParent</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"below"</span> /&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/button_left"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_centerVertical</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:layout_toLeftOf</span>=<span class="string">"@+id/button_center"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"left"</span> /&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">        <span class="attr">android:id</span>=<span class="string">"@+id/button_right"</span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">        <span class="attr">android:layout_centerVertical</span>=<span class="string">"true"</span></div><div class="line">        <span class="attr">android:layout_toRightOf</span>=<span class="string">"@+id/button_center"</span></div><div class="line">        <span class="attr">android:text</span>=<span class="string">"right"</span> /&gt;</div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>效果：</p></li></ul><div align="center"><img width="200" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/10.jpg"></div><p>示例实现了五个按键，先确定最中间<code>button_center</code>。<br>然后使用<code>layout_above</code>、<code>layout_below</code>、<code>layout_toLeftOf</code>、<code>layout_toRightOf</code>分别在其上下左右。<br>其中<code>layout_centerVertical</code>作用是将控件置于父控件的中心位置。</p><h3 id="2-3-3-帧布局"><a href="#2-3-3-帧布局" class="headerlink" title="2.3.3 帧布局"></a>2.3.3 帧布局</h3><p>帧布局就是以屏幕左上角为坐标原点，指定每个控件的大小，后加进来的控件覆盖前面的控件。</p><ul><li><p>xml示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"120pt"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"120pt"</span></div><div class="line">    <span class="attr">android:background</span>=<span class="string">"#00BF80"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"100pt"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"100pt"</span></div><div class="line">    <span class="attr">android:background</span>=<span class="string">"#298A6A"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"80pt"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"80pt"</span></div><div class="line">    <span class="attr">android:background</span>=<span class="string">"#00734D"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"60pt"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"60pt"</span></div><div class="line">    <span class="attr">android:background</span>=<span class="string">"#39BF93"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"40pt"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"40pt"</span></div><div class="line">    <span class="attr">android:background</span>=<span class="string">"#00402B"</span>&gt;</div><div class="line"><span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>效果：</p></li></ul><div align="center"><img width="200" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/11.jpg"></div><p>示例实现了五个色块，都以左上角为原点，设置不同的大小，实现层级覆盖的效果。</p><h3 id="2-3-4-表格布局"><a href="#2-3-4-表格布局" class="headerlink" title="2.3.4 表格布局"></a>2.3.4 表格布局</h3><p>在表格布局中，整个页面就相当于一张大的表格，控件就放在每个表格中。</p><ul><li><p>xml示例：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"> <span class="tag">&lt;<span class="name">TableLayout</span></span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:stretchColumns</span>=<span class="string">"0"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"75pt"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"75pt"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"#00BF80"</span>&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"75pt"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"75pt"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"#298A6A"</span>&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TableRow</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"75pt"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"75pt"</span></div><div class="line">            <span class="attr">android:background</span>=<span class="string">"#00734D"</span></div><div class="line">            <span class="attr">android:layout_span</span>=<span class="string">"2"</span>&gt;</div><div class="line">        <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">TableRow</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">TableLayout</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>效果：</p></li></ul><div align="center"><img width="200" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/12.jpg"></div><p>示例实现了三个色块，先用<code>TableLayout</code>圈出整个表格，<code>stretchColumns</code>表示第N列自动扩充，可以看到上面的两个色块虽然设置的大小一样，但第0列的比第1列的大，就是因为第0列的自动扩充占据了两个剩余的部分。<br><code>TableRow</code>代表一行，在标签里可以根据需求设置多个控件，<br>再用<code>TableRow</code>，表示继续下一行，<code>layout_span</code>属性表示该控件占两个表格。</p><p>参考博客：<a href="https://www.cnblogs.com/ludashi/p/4883915.html" target="_blank" rel="external">Android开发之基本控件和详解四种布局方式</a></p><h2 id="2-4-设计的APP"><a href="#2-4-设计的APP" class="headerlink" title="2.4 设计的APP"></a>2.4 设计的APP</h2><p>有了上面的基础知识，基本就可以编写APP了。</p><h3 id="2-4-1-布局设计"><a href="#2-4-1-布局设计" class="headerlink" title="2.4.1 布局设计"></a>2.4.1 布局设计</h3><p>布局比较简单，采用线性布局，里面有6个控件：1个<code>TextView</code>显示字符、1个<code>Button</code>作为所有LED总开关、4个<code>CheckBox</code>分别控制每一个LED。<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</div><div class="line"><span class="tag">&lt;<span class="name">android.support.constraint.ConstraintLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></div><div class="line">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></div><div class="line">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">    <span class="attr">tools:context</span>=<span class="string">".MainActivity"</span>&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></div><div class="line">        <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">TextView</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/TEXT"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:gravity</span>=<span class="string">"center"</span></div><div class="line">            <span class="attr">android:layout_marginTop</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"Android access hardware"</span></div><div class="line">            <span class="attr">android:textColor</span>=<span class="string">"#008577"</span></div><div class="line">            <span class="attr">android:textSize</span>=<span class="string">"25sp"</span></div><div class="line">            <span class="attr">android:textStyle</span>=<span class="string">"bold"</span> /&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">Button</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/BUTTON"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"50pt"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_marginTop</span>=<span class="string">"30dp"</span></div><div class="line">            <span class="attr">android:layout_gravity</span>=<span class="string">"center"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"ALL ON"</span> /&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">CheckBox</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/LED1"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:onClick</span>=<span class="string">"onCheckboxClicked"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"LED1"</span> /&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">CheckBox</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/LED2"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:onClick</span>=<span class="string">"onCheckboxClicked"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"LED2"</span> /&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">CheckBox</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/LED3"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:onClick</span>=<span class="string">"onCheckboxClicked"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"LED3"</span> /&gt;</div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">CheckBox</span></span></div><div class="line">            <span class="attr">android:id</span>=<span class="string">"@+id/LED4"</span></div><div class="line">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></div><div class="line">            <span class="attr">android:onClick</span>=<span class="string">"onCheckboxClicked"</span></div><div class="line">            <span class="attr">android:text</span>=<span class="string">"LED4"</span> /&gt;</div><div class="line"></div><div class="line">    <span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">android.support.constraint.ConstraintLayout</span>&gt;</span></div></pre></td></tr></table></figure></p><h3 id="2-4-2-代码操作"><a href="#2-4-2-代码操作" class="headerlink" title="2.4.2 代码操作"></a>2.4.2 代码操作</h3><p>代码的操作逻辑也很简单，先是获取每个按键的ID，然后绑定<code>button</code>按键监听和<code>chekbox</code>按键监听。<br>在监听的函数里，进行相应的逻辑控制。这里展示屏蔽了所有的硬件操作，硬件操作在后面再添加。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> cn.hceng.led;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</div><div class="line"><span class="keyword">import</span> android.os.Bundle;</div><div class="line"><span class="keyword">import</span> android.widget.Button;</div><div class="line"></div><div class="line"><span class="keyword">import</span> android.view.View;</div><div class="line"><span class="keyword">import</span> android.widget.CheckBox;</div><div class="line"><span class="keyword">import</span> android.widget.Toast;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> ledStatus = <span class="keyword">false</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> Button button = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">private</span> CheckBox checkBoxLed1 = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">private</span> CheckBox checkBoxLed2 = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">private</span> CheckBox checkBoxLed3 = <span class="keyword">null</span>;</div><div class="line">    <span class="keyword">private</span> CheckBox checkBoxLed4 = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</div><div class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_main);</div><div class="line"></div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</div><div class="line">        checkBoxLed1 = (CheckBox) findViewById(R.id.LED1);</div><div class="line">        checkBoxLed2 = (CheckBox) findViewById(R.id.LED2);</div><div class="line">        checkBoxLed3 = (CheckBox) findViewById(R.id.LED3);</div><div class="line">        checkBoxLed4 = (CheckBox) findViewById(R.id.LED4);</div><div class="line"></div><div class="line">        button = (Button) findViewById(R.id.BUTTON);</div><div class="line">        button.setOnClickListener(<span class="keyword">new</span> MyButtonListener());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">MyButtonListener</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span> </span>&#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</div><div class="line">            ledStatus = !ledStatus;</div><div class="line"></div><div class="line">            <span class="keyword">if</span> (ledStatus) &#123;</div><div class="line">                button.setText(<span class="string">"ALL OFF"</span>);</div><div class="line">                checkBoxLed1.setChecked(<span class="keyword">true</span>);</div><div class="line">                checkBoxLed2.setChecked(<span class="keyword">true</span>);</div><div class="line">                checkBoxLed3.setChecked(<span class="keyword">true</span>);</div><div class="line">                checkBoxLed4.setChecked(<span class="keyword">true</span>);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                button.setText(<span class="string">"ALL  ON"</span>);</div><div class="line">                checkBoxLed1.setChecked(<span class="keyword">false</span>);</div><div class="line">                checkBoxLed2.setChecked(<span class="keyword">false</span>);</div><div class="line">                checkBoxLed3.setChecked(<span class="keyword">false</span>);</div><div class="line">                checkBoxLed4.setChecked(<span class="keyword">false</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckboxClicked</span><span class="params">(View view)</span> </span>&#123;</div><div class="line">        <span class="keyword">boolean</span> checked = ((CheckBox) view).isChecked();</div><div class="line"></div><div class="line">        <span class="keyword">switch</span> (view.getId()) &#123;</div><div class="line">            <span class="keyword">case</span> R.id.LED1:</div><div class="line">                <span class="keyword">if</span> (checked) &#123;</div><div class="line">                    Toast.makeText(getApplicationContext(), <span class="string">"LED1 on"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    Toast.makeText(getApplicationContext(), <span class="string">"LED1 off"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> R.id.LED2:</div><div class="line">                <span class="keyword">if</span> (checked) &#123;</div><div class="line">                    Toast.makeText(getApplicationContext(), <span class="string">"LED2 on"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    Toast.makeText(getApplicationContext(), <span class="string">"LED2 off"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line"></div><div class="line">            <span class="keyword">case</span> R.id.LED3:</div><div class="line">                <span class="keyword">if</span> (checked) &#123;</div><div class="line">                    Toast.makeText(getApplicationContext(), <span class="string">"LED3 on"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    Toast.makeText(getApplicationContext(), <span class="string">"LED3 off"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line"></div><div class="line">            <span class="keyword">case</span> R.id.LED4:</div><div class="line">                <span class="keyword">if</span> (checked) &#123;</div><div class="line">                    Toast.makeText(getApplicationContext(), <span class="string">"LED4 on"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">                &#125; <span class="keyword">else</span> &#123;</div><div class="line">                    Toast.makeText(getApplicationContext(), <span class="string">"LED4 off"</span>, Toast.LENGTH_SHORT).show();</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/13.jpg"></div><h1 id="3-Android访问硬件的方法"><a href="#3-Android访问硬件的方法" class="headerlink" title="3. Android访问硬件的方法"></a>3. Android访问硬件的方法</h1><p>Android APP采用Java编写的，Java不能直接访问硬件，因此Android APP访问硬件只能两种方式：<strong>通过JNI直接访问</strong>和<strong>Android硬件访问服务</strong>。</p><h2 id="3-1-通过JNI直接访问"><a href="#3-1-通过JNI直接访问" class="headerlink" title="3.1 通过JNI直接访问"></a>3.1 通过JNI直接访问</h2><div align="center"><img width="500" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/14.jpg"></div><p><strong>驱动层</strong>：<br>和Linux驱动完全一样，编写驱动，向上提供<code>/dev/leds</code>节点；<br><strong>C库</strong>：<br>使用C/C++操作<code>/dev/leds</code>，将C库函数名和Java函数名建立映射关系，注册java本地方法；<br><strong>应用层</strong>：<br>APP加载C库(so文件)，加载后便可以调用C库提供的java本地方法：<code>open()</code>、<code>ioctl()</code>、<code>close()</code>实现对硬件的操作；</p><h3 id="3-1-1-编写LED驱动"><a href="#3-1-1-编写LED驱动" class="headerlink" title="3.1.1 编写LED驱动"></a>3.1.1 编写LED驱动</h3><p>LED的驱动很简单，就不多废话了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/kernel.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/miscdevice.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/device.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/fs.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/types.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/moduleparam.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/slab.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/ioctl.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/cdev.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/delay.h&gt;</span></span></div><div class="line"> </div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/gpio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mach/gpio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;plat/gpio-cfg.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">int</span> led_gpios[] = &#123;</div><div class="line">    EXYNOS4212_GPM4(<span class="number">0</span>),</div><div class="line">    EXYNOS4212_GPM4(<span class="number">1</span>),</div><div class="line">    EXYNOS4212_GPM4(<span class="number">2</span>),</div><div class="line">    EXYNOS4212_GPM4(<span class="number">3</span>),</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">led_open</span><span class="params">(<span class="keyword">struct</span> inode *inode, <span class="keyword">struct</span> file *file)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</div><div class="line">        s3c_gpio_cfgpin(led_gpios[i], S3C_GPIO_OUTPUT);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* app : ioctl(fd, cmd, arg) */</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">long</span> <span class="title">led_ioctl</span><span class="params">(<span class="keyword">struct</span> file *filp, <span class="keyword">unsigned</span> <span class="keyword">int</span> cmd, <span class="keyword">unsigned</span> <span class="keyword">long</span> arg)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">/* cmd : 0-off, 1-on */</span></div><div class="line">    <span class="comment">/* arg : 0-3, which led */</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> ((cmd != <span class="number">0</span>) &amp;&amp; (cmd != <span class="number">1</span>))</div><div class="line">        <span class="keyword">return</span> -EINVAL;</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (arg &gt; <span class="number">4</span>)</div><div class="line">        <span class="keyword">return</span> -EINVAL;</div><div class="line">    </div><div class="line">    gpio_set_value(led_gpios[arg], !cmd);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> file_operations leds_ops = &#123;</div><div class="line">    .owner  =   THIS_MODULE,    </div><div class="line">    .open   =   led_open,     </div><div class="line">    .unlocked_ioctl = led_ioctl,</div><div class="line">    </div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">int</span> major;</div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> <span class="keyword">class</span> *cls;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">leds_init</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    major = register_chrdev(<span class="number">0</span>, <span class="string">"leds"</span>, &amp;leds_ops);</div><div class="line"></div><div class="line">    cls = class_create(THIS_MODULE, <span class="string">"leds"</span>);</div><div class="line">    device_create(cls, <span class="literal">NULL</span>, MKDEV(major, <span class="number">0</span>), <span class="literal">NULL</span>, <span class="string">"leds"</span>); <span class="comment">/* /dev/leds */</span></div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">leds_exit</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    device_destroy(cls, MKDEV(major, <span class="number">0</span>));</div><div class="line">    class_destroy(cls);</div><div class="line">    unregister_chrdev(major, <span class="string">"leds"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">module_init(leds_init);</div><div class="line">module_exit(leds_exit);</div><div class="line"></div><div class="line">MODULE_LICENSE(<span class="string">"GPL"</span>);</div><div class="line">MODULE_AUTHOR(<span class="string">"hceng &lt;huangcheng.job@foxmail.com&gt;"</span>);</div><div class="line">MODULE_DESCRIPTION(<span class="string">"Tiny4412 leds driver."</span>);</div><div class="line">MODULE_VERSION(<span class="string">"v1.0"</span>);</div></pre></td></tr></table></figure><p>编写好后，放在内核目录<code>drivers/char/</code>里，并在Makefile里添加<code>obj-y += leds_drv.o</code>。<br>重新编译<code>make zImage</code>，将内核重新烧写到开发板里。</p><h3 id="3-1-2-编写C库文件"><a href="#3-1-2-编写C库文件" class="headerlink" title="3.1.2 编写C库文件"></a>3.1.2 编写C库文件</h3><p>参考前面Java的JNI，编写<code>hardcontrol.c</code>，生成<code>libhardcontrol.so</code>。<br>在<code>hardcontrol.c</code>里，操作<code>/dev/leds</code>，将操作函数与Java方法绑定，并注册。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;jni.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/ioctl.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;android/log.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DEBUG 1</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span>(DEBUG==1)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LOG_TAG <span class="meta-string">"JNI"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGV(...) __android_log_print(ANDROID_LOG_VERBOSE,TAG,__VA_ARGS__)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGD(...) __android_log_print(ANDROID_LOG_DEBUG, LOG_TAG, __VA_ARGS__)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGI(...) __android_log_print(ANDROID_LOG_INFO, LOG_TAG, __VA_ARGS__)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGE(...) __android_log_print(ANDROID_LOG_ERROR, LOG_TAG, __VA_ARGS__)</span></div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGV(...) NULL</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGD(...) NULL</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGI(...) NULL</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LOGE(...) NULL</span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="keyword">static</span> jint fd;</div><div class="line"></div><div class="line"><span class="function">jint <span class="title">ledOpen</span><span class="params">(JNIEnv *env, jobject cls)</span></span></div><div class="line">&#123;</div><div class="line">    LOGD(<span class="string">"hardcontrol ledOpen\n"</span>);</div><div class="line">    </div><div class="line">    fd = open(<span class="string">"/dev/leds"</span>, O_RDWR);</div><div class="line">    <span class="keyword">if</span> (fd &gt;= <span class="number">0</span>)</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">ledClose</span><span class="params">(JNIEnv *env, jobject cls)</span></span></div><div class="line">&#123;</div><div class="line">    LOGD(<span class="string">"hardcontrol ledClose\n"</span>);</div><div class="line">    </div><div class="line">    close(fd);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">jint <span class="title">ledCtrl</span><span class="params">(JNIEnv *env, jobject cls, jint number, jint status)</span></span></div><div class="line">&#123;</div><div class="line">    LOGD(<span class="string">"hardcontrol ledCtrl number=%d status=%d\n"</span>, number, status);</div><div class="line">    </div><div class="line">    <span class="keyword">int</span> ret = ioctl(fd, status, number);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> JNINativeMethod methods[] = &#123;</div><div class="line">    &#123;<span class="string">"ledOpen"</span>,  <span class="string">"()I"</span>,   (<span class="keyword">void</span> *)ledOpen&#125;, </div><div class="line">    &#123;<span class="string">"ledClose"</span>, <span class="string">"()V"</span>,   (<span class="keyword">void</span> *)ledClose&#125;, </div><div class="line">    &#123;<span class="string">"ledCtrl"</span>,  <span class="string">"(II)I"</span>, (<span class="keyword">void</span> *)ledCtrl&#125;, </div><div class="line">&#125;;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function">JNIEXPORT jint JNICALL</span></div><div class="line"><span class="title">JNI_OnLoad</span><span class="params">(JavaVM *jvm, <span class="keyword">void</span> *reserved)</span></div><div class="line">&#123;</div><div class="line">    JNIEnv *env;</div><div class="line">    jclass cls;</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> ((*jvm)-&gt;GetEnv(jvm, (<span class="keyword">void</span> **)&amp;env, JNI_VERSION_1_4)) </div><div class="line">        <span class="keyword">return</span> JNI_ERR; </div><div class="line">    </div><div class="line">    cls = (*env)-&gt;FindClass(env, <span class="string">"cn/hceng/hardlibrary/HardControl"</span>); </div><div class="line">    <span class="keyword">if</span> (cls == <span class="literal">NULL</span>) </div><div class="line">        <span class="keyword">return</span> JNI_ERR;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> ((*env)-&gt;RegisterNatives(env, cls, methods, <span class="keyword">sizeof</span>(methods)/<span class="keyword">sizeof</span>(methods[<span class="number">0</span>])) &lt; <span class="number">0</span>)</div><div class="line">        <span class="keyword">return</span> JNI_ERR;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> JNI_VERSION_1_4;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>编译：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">arm-linux-gcc -fPIC -shared hardcontrol.c -o libhardcontrol.so -I /usr/lib/jvm/java-1.7.0-openjdk-amd64/include/ -nostdlib /work/android_source/android-5.0.2/prebuilts/ndk/9/platforms/android-19/arch-arm/usr/lib/libc.so</div></pre></td></tr></table></figure></p><p>这里的<code>-I</code>指定头文件<code>jni.h</code>的路径；<code>-nostdlib</code>是为了不使用标准的<code>libc</code>库，因为后面<code>libhardcontrol.so</code>依赖<code>libc.so.6</code>，需要重新构建系统得到<code>libc.so.6</code>，但源码中有很多<code>libc.so</code>也能用，为了方便找了一个版本较高的<code>libc.so</code>。</p><p>最后把生成的<code>libhardcontrol.so</code>放在APP的<code>D:\Android\APP\LED\app\libs\armeabi\</code>路径下。</p><blockquote><p><strong>如何在C语言中打印log到android控制台</strong>：<br>1.修改<code>app\build.gradle</code>，在Android里添加ndk：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//hceng add for c language printing</div><div class="line">ndk &#123;</div><div class="line">    moduleName &quot;printing&quot;</div><div class="line">    abiFilters &quot;armeabi&quot;,&quot;armeabi-v7a&quot;,&quot;x86&quot;</div><div class="line"></div><div class="line">    ldLibs &quot;log&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>2.C文件中添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">#include &lt;android/log.h&gt;</div><div class="line">#define DEBUG 1 </div><div class="line"></div><div class="line">#if(DEBUG==1)</div><div class="line">#define LOG_TAG &quot;JNI&quot;</div><div class="line">#define LOGV(...) __android_log_print(ANDROID_LOG_VERBOSE,TAG,__VA_ARGS__)</div><div class="line">#define LOGD(...) __android_log_print(ANDROID_LOG_DEBUG, LOG_TAG, __VA_ARGS__)</div><div class="line">#define LOGI(...) __android_log_print(ANDROID_LOG_INFO, LOG_TAG, __VA_ARGS__)</div><div class="line">#define LOGE(...) __android_log_print(ANDROID_LOG_ERROR, LOG_TAG, __VA_ARGS__)</div><div class="line">#else</div><div class="line">#define LOGV(...) NULL</div><div class="line">#define LOGD(...) NULL</div><div class="line">#define LOGI(...) NULL</div><div class="line">#define LOGE(...) NULL</div><div class="line">#endif</div></pre></td></tr></table></figure></p><p>3.和printf一样使用：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">//打印logcat</div><div class="line">LOGD(&quot;name=%s age=%f\n&quot;,name,age);</div></pre></td></tr></table></figure></p><p>4.编译C文件，需指定<code>android/log.h</code>路径和添加<code>liblog.so</code>库:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">arm-linux-gcc -fPIC -shared hardcontrol.c -o libhardcontrol.so -I /usr/lib/jvm/java-1.7.0-openjdk-amd64/include/ -I /work/android_source/android-5.0.2/prebuilts/ndk/9/platforms/android-19/arch-arm/usr/include/ -nostdlib /work/android_source/android-5.0.2/prebuilts/ndk/9/platforms/android-19/arch-arm/usr/lib/libc.so /work/android_source/android-5.0.2/prebuilts/ndk/9/platforms/android-19/arch-arm/usr/lib/liblog.so</div></pre></td></tr></table></figure></p><p>参考博客：<a href="https://www.jianshu.com/p/620861484ab4?open_source=weibo_search" target="_blank" rel="external">C语言中打印log到android控制台</a></p></blockquote><h3 id="3-1-2-修改APP文件"><a href="#3-1-2-修改APP文件" class="headerlink" title="3.1.2 修改APP文件"></a>3.1.2 修改APP文件</h3><p>在APP目录<code>app\src\main\java\cn\hceng\hardlibrary\</code>下创建<code>HardControl.java</code>来加载C库和声明<code>Native</code>方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> cn.hceng.hardlibrary;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HardControl</span> </span>&#123;</div><div class="line">    <span class="comment">//1.load</span></div><div class="line">    <span class="keyword">static</span> &#123;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            System.loadLibrary(<span class="string">"hardcontrol"</span>); <span class="comment">//Call libhardcontrol.so from C.</span></div><div class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//2.Function declaration</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">int</span> <span class="title">ledCtrl</span><span class="params">(<span class="keyword">int</span> number, <span class="keyword">int</span> status)</span></span>;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">int</span> <span class="title">ledOpen</span><span class="params">()</span></span>;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">ledClose</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>在APP里，即可通过JNI调用本地方法：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> cn.hceng.hardlibrary.*; <span class="comment">//硬件库</span></div><div class="line"></div><div class="line">    HardControl.ledOpen(); <span class="comment">//硬件初始化</span></div><div class="line">    HardControl.ledCtrl(<span class="number">0</span>, <span class="number">1</span>); <span class="comment">//硬件操作</span></div><div class="line">    HardControl.ledCtrl(<span class="number">0</span>, <span class="number">0</span>); <span class="comment">//硬件操作</span></div></pre></td></tr></table></figure><br>在APP的适当位置，根据操作逻辑，调用本地方法。</p><p>最后还要修改<code>app\build.gradle</code>，在Android里添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">//hceng add for led</div><div class="line">sourceSets &#123;</div><div class="line">    main &#123;</div><div class="line">        jniLibs.srcDirs = [&apos;libs&apos;];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>此时修改后，将不能在AVD里仿真了，必须在开发板上测试。</p><p>最后，编译APP，插上USB线，连接开发板，运行测试，通过APP实现对LED的控制。</p><h2 id="3-2-Android硬件访问服务"><a href="#3-2-Android硬件访问服务" class="headerlink" title="3.2 Android硬件访问服务"></a>3.2 Android硬件访问服务</h2><p>前面直接通过JNI访问硬件，操作比较简单，同时也存在一些问题。<br>比如，当多个APP同时访问某个硬件时，就可能发生硬件冲突。<br>为了解决这个问题，Android提供了硬件访问服务，APP不能直接访问硬件，而是都给<code>System Server</code>申请操作硬件，<code>System Server</code>决策后，再去访问硬件，解决多个APP同时访问硬件冲突的问题。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/15.jpg"></div><p><strong>驱动层</strong>：<br>和Linux驱动完全一样，编写驱动，向上提供<code>/dev/leds</code>节点；<br><strong>C库</strong>：<br>HAL层操作<code>/dev/leds</code>，JNI层加载HAL文件和向上注册java本地方法；<br><strong>系统服务</strong>：<br>通过注册android服务的方式加载C库，再将服务加入<code>service_manager</code>里面。<br><strong>应用层</strong>：<br>从<code>service_manager</code>里获取相关服务，再通过接口调用，接口里实现对本地方法的调用。</p><h3 id="3-2-1-编写AIDL"><a href="#3-2-1-编写AIDL" class="headerlink" title="3.2.1 编写AIDL"></a>3.2.1 编写AIDL</h3><p>AIDL(Android Interface Definition Language)，即Android接口定义语言，顾名思义就是定义接口，提供给APP使用。<br>LED对APP而言，就一个控制方法，因此<code>ILedService.aidl</code>如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">package android.os;</div><div class="line"></div><div class="line">interface ILedService &#123;</div><div class="line">    int ledCtrl(int number, int status);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p><code>ILedService.aidl</code>并不能直接被APP调用，需要生成<code>ILedService.java</code>才能被APP使用。<br>将<code>ILedService.aidl</code>放在<code>frameworks/base/core/java/android/os/</code>里，修改<code>frameworks/base/Android.mk</code>，添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">core/java/android/os/ILedService.aidl \</div></pre></td></tr></table></figure></p><p>然后执行<code>mmm frameworks/base/</code>，将自动生成<code>out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/src/core/java/android/os/ILedService.java</code>。</p><h3 id="3-2-2-编写LedService-java"><a href="#3-2-2-编写LedService-java" class="headerlink" title="3.2.2 编写LedService.java"></a>3.2.2 编写LedService.java</h3><p>前面生成了<code>ILedService.java</code>，需要实现<code>ILedService</code>接口的成员函数。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> com.android.server;</div><div class="line"><span class="keyword">import</span> android.os.ILedService;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LedService</span> <span class="keyword">extends</span> <span class="title">ILedService</span>.<span class="title">Stub</span> </span>&#123;</div><div class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"ILedService"</span>;</div><div class="line"></div><div class="line"><span class="comment">//Call native c function to access hardware</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">ledCtrl</span><span class="params">(<span class="keyword">int</span> number, <span class="keyword">int</span> status)</span> <span class="keyword">throws</span> android.os.RemoteException </span></div><div class="line">&#123;</div><div class="line"><span class="keyword">return</span> native_ledCtrl(number, status);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="title">LedService</span><span class="params">()</span> </span>&#123;</div><div class="line">native_ledOpen();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//Function declaration</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">int</span> <span class="title">native_ledCtrl</span><span class="params">(<span class="keyword">int</span> number, <span class="keyword">int</span> status)</span></span>;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">int</span> <span class="title">native_ledOpen</span><span class="params">()</span></span>;</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="keyword">void</span> <span class="title">native_ledClose</span><span class="params">()</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>将其放在<code>frameworks/base/services/core/java/com/android/server/</code>路径下。</p><p>可以看到<code>LedService.java</code>继承于<code>ILedService</code>，并调用本地方法实现了成员函数。并在构造函数里调用<code>native_ledOpen()</code>。</p><h3 id="3-2-3-修改SystemServer-java"><a href="#3-2-3-修改SystemServer-java" class="headerlink" title="3.2.3 修改SystemServer.java"></a>3.2.3 修改SystemServer.java</h3><p><code>SystemServer.java</code>主要做两件事，一是加载C库，二是使用<code>addService</code>将LED服务加入<code>service_manager</code>里面。<br>加载C库这个是调用<code>onload.cpp</code>，这个后面只修改<code>onload.cpp</code>，这里就不需要改了。<br>修改<code>frameworks/base/services/java/com/android/server/SystemServer.java</code>，添加：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Slog.i(TAG, <span class="string">"Led Service"</span>);</div><div class="line">ServiceManager.addService(<span class="string">"led"</span>, <span class="keyword">new</span> LedService());</div></pre></td></tr></table></figure></p><h3 id="3-2-4-修改onload-cpp"><a href="#3-2-4-修改onload-cpp" class="headerlink" title="3.2.4 修改onload.cpp"></a>3.2.4 修改onload.cpp</h3><p><code>SystemServer.java</code>会加载C库，调用到<code>onload.cpp</code>，需要在<code>onload.cpp</code>注册LED服务。<br>修改<code>frameworks/base/services/core/jni/onload.cpp</code>，添加：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">register_android_server_LedService</span><span class="params">(JNIEnv* env)</span></span>;</div><div class="line"></div><div class="line">……</div><div class="line"></div><div class="line">register_android_server_LedService(env);</div></pre></td></tr></table></figure></p><h3 id="3-2-5-编写com-android-server-LedService-cpp"><a href="#3-2-5-编写com-android-server-LedService-cpp" class="headerlink" title="3.2.5 编写com_android_server_LedService.cpp"></a>3.2.5 编写com_android_server_LedService.cpp</h3><p>前面用到了<code>register_android_server_LedService()</code>，是在<code>com_android_server_LedService.cpp</code>里实现的。<br><code>com_android_server_LedService.cpp</code>理论上可以直接操作节点<code>/dev/leds</code>，但一般不这样做。<br>通常的做法是，向上提供本地方法(<code>native_ledOpen</code>)，向下加载hal文件(<code>led_hal.c</code>)，并调用HAL的函数。<br>这样操作有两个好处：<br><strong>1.方便修改；</strong><br>如果需要修改硬件部分的操作，只需要修改<code>led_hal.c</code>，生成so文件，放入系统即可，而不需要编译整个Android系统；<br><strong>2.保密代码；</strong><br>因为Linux的<code>GPL</code>协议，一旦使用的内核代码，自己的代码也得开源出去，硬件厂商为了保密硬件的具体细节，只在内核实现操作寄存器的接口，具体的操作逻辑放在HAL文件里，而Android采用<code>Apache</code>协议，修改了代码而无需开源，这样就实现了保密代码；</p><p>Google的这一”骚”操作就不评论了，积极的看确实加快的Linux的传播，但也伤害了Linux的开源社区。</p><p>编写步骤如下：<br>1、定义<code>JNINativeMethod</code>，建立Java本地方法与C库函数名的映射关系；<br>2、使用<code>jniRegisterNativeMethods</code>注册本地方法，将在<code>onload.cpp</code>被调用；<br>3、在<code>open()</code>里：<br>　3.1、使用<code>hw_get_module</code>获得<code>hw_module_t</code>结构体；<br>　3.2、使用<code>module-&gt;methods-&gt;open</code>获得<code>hw_device_t</code>结构体；<br>　3.3、将<code>hw_device_t</code>转换为<code>led_device_t</code>，调用对应<code>open</code>；<br>4、完成其它函数<code>ctrl</code>、<code>close</code>的调用；</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LOG_TAG <span class="meta-string">"LedService"</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"jni.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"JNIHelp.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"android_runtime/AndroidRuntime.h"</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utils/misc.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utils/Log.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/ioctl.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;hardware/led_hal.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">namespace</span> android</div><div class="line">&#123;</div><div class="line">    <span class="keyword">static</span> <span class="keyword">led_device_t</span>* led_device;</div><div class="line"></div><div class="line">    <span class="function">jint <span class="title">ledOpen</span><span class="params">(JNIEnv *env, jobject cls)</span></span></div><div class="line">    &#123;</div><div class="line">        jint err;</div><div class="line">        <span class="keyword">hw_module_t</span>* <span class="keyword">module</span>;</div><div class="line">        <span class="keyword">hw_device_t</span>* device;</div><div class="line"></div><div class="line">        ALOGI(<span class="string">"native ledOpen"</span>);</div><div class="line"></div><div class="line">        <span class="comment">//1. hw_get_module for get module</span></div><div class="line">        err = hw_get_module(<span class="string">"led"</span>, (<span class="keyword">hw_module_t</span> <span class="keyword">const</span>**)&amp;<span class="keyword">module</span>);</div><div class="line">        <span class="keyword">if</span> (err == <span class="number">0</span>) &#123;</div><div class="line">            <span class="comment">//2. module-&gt;methods-&gt;open for get device </span></div><div class="line">            err = <span class="keyword">module</span>-&gt;methods-&gt;open(<span class="keyword">module</span>, <span class="literal">NULL</span>, &amp;device);</div><div class="line">            </div><div class="line">            <span class="keyword">if</span> (err == <span class="number">0</span>) &#123;</div><div class="line">                <span class="comment">//3. conversion, call led_open</span></div><div class="line">                led_device = (<span class="keyword">led_device_t</span> *)device;</div><div class="line">                <span class="keyword">return</span> led_device-&gt;led_open(led_device);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">ledClose</span><span class="params">(JNIEnv *env, jobject cls)</span></span></div><div class="line">    &#123;</div><div class="line">        ALOGI(<span class="string">"nativeled Close"</span>);</div><div class="line">        </div><div class="line">        <span class="keyword">return</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function">jint <span class="title">ledCtrl</span><span class="params">(JNIEnv *env, jobject cls, jint number, jint status)</span></span></div><div class="line">    &#123;</div><div class="line">        ALOGI(<span class="string">"native ledCtrl %d, %d"</span>, number, status);</div><div class="line">        </div><div class="line">        <span class="keyword">return</span> led_device-&gt;led_ctrl(led_device, number, status);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">static</span> <span class="keyword">const</span> JNINativeMethod method_table[] = &#123;</div><div class="line">        &#123;<span class="string">"native_ledOpen"</span>,  <span class="string">"()I"</span>,   (<span class="keyword">void</span> *)ledOpen&#125;, </div><div class="line">        &#123;<span class="string">"native_ledClose"</span>, <span class="string">"()V"</span>,   (<span class="keyword">void</span> *)ledClose&#125;, </div><div class="line">        &#123;<span class="string">"native_ledCtrl"</span>,  <span class="string">"(II)I"</span>, (<span class="keyword">void</span> *)ledCtrl&#125;, </div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">register_android_server_LedService</span><span class="params">(JNIEnv *env)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> jniRegisterNativeMethods(env, <span class="string">"com/android/server/LedService"</span>,</div><div class="line">                method_table, NELEM(method_table));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;;</div></pre></td></tr></table></figure><p>将其放到<code>./frameworks/base/services/core/jni/</code>路径下。</p><h3 id="3-2-6-编写HAL文件led-hal-c"><a href="#3-2-6-编写HAL文件led-hal-c" class="headerlink" title="3.2.6 编写HAL文件led_hal.c"></a>3.2.6 编写HAL文件led_hal.c</h3><p>接着前面，HAL负责访问驱动程序执行硬件操作。</p><p>编写步骤如下：<br>1、创建一个名为<code>HMI</code>(<code>HAL_MODULE_INFO_SYM</code>)的<code>hw_module_t</code>结构体；<br>2、创建一个<code>open</code>函数, 它返回<code>led_device_t</code>结构体；<br>3、创建<code>led_device_t</code>结构体，里面包含<code>hw_device_t</code>结构体和提供的函数；<br>4、操作设备节点实现提供的函数；</p><figure class="highlight h"><figcaption><span>[led_hal.h]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> ANDROID_LED_INTERFACE_H    </span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> ANDROID_LED_INTERFACE_H  </span></div><div class="line"> </div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span>   </span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/cdefs.h&gt;</span>   </span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span> </span></div><div class="line">  </div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;hardware/hardware.h&gt;</span>   </span></div><div class="line"></div><div class="line">__BEGIN_DECLS   </div><div class="line"></div><div class="line"><span class="keyword">struct</span> <span class="keyword">led_device_t</span>  &#123;  </div><div class="line">    <span class="keyword">struct</span> <span class="keyword">hw_device_t</span> common;  </div><div class="line">    </div><div class="line">    <span class="keyword">int</span> (*led_open) (<span class="keyword">struct</span> <span class="keyword">led_device_t</span>* dev);</div><div class="line">    <span class="keyword">int</span> (*led_ctrl) (<span class="keyword">struct</span> <span class="keyword">led_device_t</span>* dev, <span class="keyword">int</span> number, <span class="keyword">int</span> status);</div><div class="line">&#125;;  </div><div class="line">  </div><div class="line">__END_DECLS  </div><div class="line">  </div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> </span></div></pre></td></tr></table></figure><figure class="highlight c"><figcaption><span>[led_hal.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;hardware/hardware.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cutils/log.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/ioctl.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utils/Log.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;hardware/led_hal.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LOG_TAG <span class="meta-string">"LED_HAL"</span></span></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">int</span> fd;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">led_open</span><span class="params">(<span class="keyword">struct</span> <span class="keyword">led_device_t</span>* dev __unused)</span></span></div><div class="line">&#123;</div><div class="line">    fd = open(<span class="string">"/dev/leds"</span>, O_RDWR);</div><div class="line">    </div><div class="line">    ALOGI(<span class="string">"led_open : %d"</span>, fd);</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (fd &gt;= <span class="number">0</span>)</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">led_ctrl</span><span class="params">(<span class="keyword">struct</span> <span class="keyword">led_device_t</span>* dev __unused, <span class="keyword">int</span> number, <span class="keyword">int</span> status)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> ret = ioctl(fd, status, number);</div><div class="line">    </div><div class="line">    ALOGI(<span class="string">"led_ctrl : %d, %d, %d"</span>, number, status, ret);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">led_close</span><span class="params">(<span class="keyword">struct</span> <span class="keyword">hw_device_t</span>* device __unused)</span></span></div><div class="line">&#123;</div><div class="line">    ALOGI(<span class="string">"led_close : %d"</span>, fd);</div><div class="line">    </div><div class="line">    close(fd);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> <span class="keyword">led_device_t</span> led_dev = &#123;</div><div class="line">    .common = &#123;</div><div class="line">        .tag   = HARDWARE_DEVICE_TAG,</div><div class="line">        .close = led_close,</div><div class="line">    &#125;,</div><div class="line">    .led_open  = led_open,</div><div class="line">    .led_ctrl  = led_ctrl,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">led_device_open</span><span class="params">(<span class="keyword">const</span> <span class="keyword">struct</span> <span class="keyword">hw_module_t</span>* <span class="keyword">module</span> __unused, <span class="keyword">const</span> <span class="keyword">char</span>* id __unused,</span></span></div><div class="line">        <span class="keyword">struct</span> <span class="keyword">hw_device_t</span>** device)</div><div class="line">&#123;</div><div class="line">    <span class="comment">//return by id</span></div><div class="line">    *device = &amp;led_dev; </div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> <span class="keyword">hw_module_methods_t</span> led_module_methods = &#123;</div><div class="line">    .open = led_device_open,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">struct</span> <span class="keyword">hw_module_t</span> HAL_MODULE_INFO_SYM = &#123;</div><div class="line">    .tag = HARDWARE_MODULE_TAG,</div><div class="line">    .id = <span class="string">"led"</span>,</div><div class="line">    .methods = &amp;led_module_methods,</div><div class="line">&#125;;</div></pre></td></tr></table></figure><p>将<code>led_hal.h</code>放在<code>./hardware/libhardware/include/hardware/</code>目录下；<br>将<code>led_hal.c</code>上放在<code>./hardware/libhardware/modules/led/</code>目录下；</p><h3 id="3-2-7-编译和重新烧写system-img"><a href="#3-2-7-编译和重新烧写system-img" class="headerlink" title="3.2.7 编译和重新烧写system.img"></a>3.2.7 编译和重新烧写system.img</h3><p>前面添加了<code>LedService.java</code>，其<code>Android.mk</code>自动包含了所有java文件，不需要修改Android.mk。<br>前面添加了<code>com_android_server_LedService.cpp</code>，不会自动包含cpp文件，其Android.mk需要修改。<br>打开<code>frameworks/base/services/core/jni/Android.mk</code>，添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(LOCAL_REL_DIR)/com_android_server_LedService.cpp \</div></pre></td></tr></table></figure></p><p>前面添加了<code>led_hal.c</code>，需要创建<code>hardware/libhardware/modules/led/Android.mk</code>，内容如下：<br><figure class="highlight mk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">LOCAL_PATH := <span class="variable">$(call my-dir)</span></div><div class="line"></div><div class="line">include $(CLEAR_VARS)</div><div class="line"></div><div class="line">LOCAL_MODULE := led.default</div><div class="line"></div><div class="line">LOCAL_MODULE_RELATIVE_PATH := hw</div><div class="line">LOCAL_C_INCLUDES := hardware/libhardware</div><div class="line">LOCAL_SRC_FILES := led_hal.c</div><div class="line">LOCAL_SHARED_LIBRARIES := liblog</div><div class="line">LOCAL_MODULE_TAGS := eng</div><div class="line"></div><div class="line">include $(BUILD_SHARED_LIBRARY)</div></pre></td></tr></table></figure></p><p>然后执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mmm ./frameworks/base/services/             //保证com_android_server_LedService.cpp和onload.cpp都重新编译</div><div class="line">mmm ./hardware/libhardware/modules/led/     //保证led_hal.c编译</div><div class="line">make snod                                   //重新生成./out/target/product/tiny4412/system.img</div><div class="line">./gen-img.sh                                //脚本，生成system.img并移动到源码根目录，且生成其他用户数据镜像等</div></pre></td></tr></table></figure></p><p>将生成的<code>system.img</code>重新烧写，重新启动后界面卡在Android logo，串口一直打印<code>request_suspend_state: wakeup (0-&gt;0)</code>。<br>解决方法：<br>修改android源码的<code>./device/friendly-arm/tiny4412/conf/init.rc</code><br>将<code>mount rootfs rootfs / ro remount</code>改为<code>mount rootfs rootfs / rw remount</code>，重新编译，烧写即可。</p><h3 id="3-2-8-修改APP文件"><a href="#3-2-8-修改APP文件" class="headerlink" title="3.2.8 修改APP文件"></a>3.2.8 修改APP文件</h3><p>在APP里，会用到<code>ILedService</code>类，这个类是我们自己定义的，直接在APP里使用，连编译都过不了。<br>因此，就需要把包含<code>ILedService</code>类的文件导入工程，或者使用JAVA的反射机制。</p><p><strong>1、使用导入的方法</strong><br>①首先还是修改<code>MainActivity.java</code>，修改其中对硬件的调用，参考如下：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> android.os.ILedService;</div><div class="line"><span class="keyword">import</span> android.os.ServiceManager;</div><div class="line"><span class="keyword">import</span> <span class="keyword">static</span> android.os.ServiceManager.getService;</div><div class="line">    ……</div><div class="line">    ILedService iLedService = ILedService.Stub.asInterface(ServiceManager.getService(<span class="string">"led"</span>));</div><div class="line">    ……</div><div class="line">    iLedService.ledCtrl(<span class="number">0</span>, <span class="number">1</span>);</div></pre></td></tr></table></figure><br>注意<code>getService()</code>的名字和<code>SystemServer.java</code>里<code>addServer</code>添加的名字要一致。</p><p>②将<code>out/target/common/obj/JAVA_LIBRARIES/framework_intermediates/classes.jar</code>放在Windows里。<br>在Android Studio里，选择<code>File</code>-&gt;<code>Project Structure</code>，此时弹出配置界面，点击左上角的<code>+</code>，选择<code>Import .JAR/.AAR Package</code>，选择刚才的<code>classes.jar</code>。<br>再选中<code>app</code>，切换到<code>Dependencies</code>选项卡，点击右边的<code>+</code>号，选择<code>3 Module dependency</code>，在弹出的界面选择刚才添加的<code>classes</code>，最后点击<code>OK</code>。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/16.jpg"></div><br>以上操作后，会在APP工程根目录下生成<code>classes</code>文件夹，里面就包含了<code>classes.jar</code>。<br><br>为了减小生成的APP体积，还需要设置JAR包只在编译时使用，而不打包到APP里面。如下图，选中<code>classes</code>，在右边的选项卡选择<code>Compile only</code>。<br><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190315/17.jpg"></div><p>③此时，再次编译可能遇到<code>INSTALL_FAILED_NO_MATCHING_ABIS: Failed to extract native libraries, res=-113</code>等错误，在<code>app\build.gradle</code>添加：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//hceng add for solved:INSTALL_FAILED_NO_MATCHING_ABIS: Failed to extract native libraries, res=-113.</div><div class="line">splits &#123;</div><div class="line">    abi &#123;</div><div class="line">        enable true</div><div class="line">        reset()</div><div class="line">        include &apos;x86&apos;, &apos;armeabi-v7a&apos;, &apos;x86_64&apos;</div><div class="line">        universalApk true</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p><strong>2、使用反射机制</strong></p><p>JAVA的反射机制原理参考之前的<a href="https://hceng.cn/2018/09/12/JAVA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/#4-2-%E5%8F%8D%E5%B0%84" target="_blank" rel="external">JAVA学习笔记——4.2反射</a>。</p><p>使用放射机制就不用导入<code>classes.jar</code>，通过<code>Class.forName()</code>获取类、<code>getMethod()</code>获取方法，最终得到<code>ledCtrl()</code>方法。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">Object proxy = <span class="keyword">null</span>;</div><div class="line">Method ledCtrl = <span class="keyword">null</span>;</div><div class="line"></div><div class="line">……</div><div class="line"></div><div class="line"><span class="keyword">try</span> &#123;</div><div class="line"><span class="comment">//iLedService = ILedService.Stub.asInterface(ServiceManager.getService("led"));</span></div><div class="line">Method getService = Class.forName(<span class="string">"android.os.ServiceManager"</span>).getMethod(<span class="string">"getService"</span>, String.class);</div><div class="line">Object ledService = getService.invoke(<span class="keyword">null</span>, <span class="string">"led"</span>);</div><div class="line">Method asInterface = Class.forName(<span class="string">"android.os.ILedService$Stub"</span>).getMethod(<span class="string">"asInterface"</span>, IBinder.class);</div><div class="line">proxy = asInterface.invoke(<span class="keyword">null</span>, ledService);</div><div class="line">ledCtrl = Class.forName(<span class="string">"android.os.ILedService$Stub$Proxy"</span>).getMethod(<span class="string">"ledCtrl"</span>, <span class="keyword">int</span>.class, <span class="keyword">int</span>.class);</div><div class="line">&#125; <span class="keyword">catch</span> (NoSuchMethodException e) &#123;</div><div class="line">e.printStackTrace();</div><div class="line">&#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</div><div class="line">e.printStackTrace();</div><div class="line">&#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</div><div class="line">e.printStackTrace();</div><div class="line">&#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</div><div class="line">e.printStackTrace();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>使用：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">try</span> &#123;</div><div class="line">ledCtrl.invoke(proxy, i, <span class="number">1</span>);</div><div class="line">&#125; <span class="keyword">catch</span> (IllegalAccessException e) &#123;</div><div class="line">e.printStackTrace();</div><div class="line">&#125; <span class="keyword">catch</span> (InvocationTargetException e) &#123;</div><div class="line">e.printStackTrace();</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h1 id="4-总结"><a href="#4-总结" class="headerlink" title="4.总结"></a>4.总结</h1><p>如何实现一个硬件访问服务:<br>①编写Linux驱动<code>led_drv.c</code>，操作硬件；<br>②编写HAL层<code>led_hal.c</code>，访问Linux设备节点；<br>③编写JNI层<code>com_android_server_LedService.cpp</code>，调用HAL层，注册本地方法；<br>④修改<code>onload.cpp</code>注册服务，修改<code>SystemServer.java</code>加入服务；<br>⑤编写<code>LedService.java</code>调用本地方法；<br>⑥编写<code>ILedService.aidl</code>生成<code>ILedService.java</code>，提供接口；<br>⑦编写APP，实现UI、操作逻辑，调用接口访问硬件；</p><p>参考资料：<br><a href="http://www.100ask.org/index.html" target="_blank" rel="external">韦东山第四期Android驱动_Android系统</a><br><a href="https://book.douban.com/subject/19986441/" target="_blank" rel="external">Android系统源代码情景分析_罗升阳 </a><br><a href="https://book.douban.com/subject/26915433/" target="_blank" rel="external">第一行代码：Android</a></p><p>涉及示例源码:<br><a href="https://github.com/hceng/learn/tree/master/android/01_硬件访问服务" target="_blank" rel="external">Github</a></p><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2019年，正式学习Android驱动。&lt;br&gt;以LED为切入点，学习Android访问硬件的方法。&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux驱动" scheme="http://yoursite.com/tags/Linux%E9%A9%B1%E5%8A%A8/"/>
    
      <category term="Android应用" scheme="http://yoursite.com/tags/Android%E5%BA%94%E7%94%A8/"/>
    
      <category term="Android驱动" scheme="http://yoursite.com/tags/Android%E9%A9%B1%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>博客两周年</title>
    <link href="http://yoursite.com/2019/03/01/%E5%8D%9A%E5%AE%A2%E4%B8%A4%E5%91%A8%E5%B9%B4/"/>
    <id>http://yoursite.com/2019/03/01/博客两周年/</id>
    <published>2019-03-01T08:58:00.000Z</published>
    <updated>2019-02-25T03:52:55.730Z</updated>
    
    <content type="html"><![CDATA[<p>2018-2019，博客一年统计。<br><a id="more"></a></p><p><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190301/1.jpg" alt=""><br><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190301/2.jpg" alt=""><br><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190301/3.jpg" alt=""><br><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190301/4.jpg" alt=""><br><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190301/5.jpg" alt=""><br><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190301/6.jpg" alt=""><br><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190301/7.jpg" alt=""><br><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190301/8.jpg" alt=""></p><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;2018-2019，博客一年统计。&lt;br&gt;
    
    </summary>
    
    
      <category term="随笔" scheme="http://yoursite.com/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>AM335X——1-Wire和IrDA驱动</title>
    <link href="http://yoursite.com/2019/02/15/AM335X%E2%80%94%E2%80%941-Wire%E5%92%8CIrDA%E9%A9%B1%E5%8A%A8/"/>
    <id>http://yoursite.com/2019/02/15/AM335X——1-Wire和IrDA驱动/</id>
    <published>2019-02-15T06:38:22.000Z</published>
    <updated>2019-07-26T02:20:47.080Z</updated>
    
    <content type="html"><![CDATA[<p>记录DS18B20温度传感器、DHT11温湿度传感器、红外遥控驱动。<br><a id="more"></a><br>1-wire(单总线协议)就是只使用一条线(GPIO)实现时钟/数据的双向传输。<br>DS18B20是比较标准的1-wire协议，可以通过逻辑分析仪显示出含义，DHT11不是很标准(专利原因？)，需要自己参考芯片手册理解含义。<br>但它们原理都差不多，且都对时序要求比较高(us级的延时)。</p><p>IrDA也是一根线，原理也差不多，因此也把它放在一起记录。<br>AM335X没有1-wire的控制器，因此使用GPIO模拟。</p><h1 id="1-DS18B20"><a href="#1-DS18B20" class="headerlink" title="1. DS18B20"></a>1. DS18B20</h1><h2 id="1-1-基础知识"><a href="#1-1-基础知识" class="headerlink" title="1.1 基础知识"></a>1.1 基础知识</h2><h3 id="1-1-1-性能参数"><a href="#1-1-1-性能参数" class="headerlink" title="1.1.1 性能参数"></a>1.1.1 性能参数</h3><p>分辨率：9~12位可编程(上电默认12位)<br>精度：±0.5℃(在-10~+85℃)<br>量程：-55°C ~ 125°C<br>转换时间：750ms(12位分辨率)</p><h3 id="1-1-2-温度数据格式"><a href="#1-1-2-温度数据格式" class="headerlink" title="1.1.2 温度数据格式"></a>1.1.2 温度数据格式</h3><p>一次返回的温度数据为16位，前五位表示正负，中间七位表示整数部分，最低四位为小数部分；<br>温度传感器的分辨率为用户可编程的9、10、11或12位, 分别对应0.5℃、0.25℃、0.125℃和 0.0625℃｡<br>因此温度计算结果为：<strong>(正负)整数部分+小数部分*分辨率</strong> </p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190215/1.png"></div><p>以<code>0000 0000 1010 0010</code>为例，前五位为0，即温度为零上；中间七位<code>0001010</code>，即温度整数部分为10；最后四位<code>0010</code>，即温度小数部分为<code>2*0.625=0.125</code>，因此温度为<code>+10.125</code>。</p><h3 id="1-1-3-64Bits只读数据"><a href="#1-1-3-64Bits只读数据" class="headerlink" title="1.1.3 64Bits只读数据"></a>1.1.3 64Bits只读数据</h3><p>低八位用于CRC校验，中间48位是DS18B20唯一序列号，高八位是产品系列号(为28h)</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190215/2.png"></div><h3 id="1-1-4-操作步骤"><a href="#1-1-4-操作步骤" class="headerlink" title="1.1.4 操作步骤"></a>1.1.4 操作步骤</h3><p>每次对DS18B20操作，都必须严格按照以下步骤：<br>1、初始化；<br>2、ROM指令；<br>3、功能指令；</p><h3 id="1-1-5-ROM指令和功能指令"><a href="#1-1-5-ROM指令和功能指令" class="headerlink" title="1.1.5 ROM指令和功能指令"></a>1.1.5 ROM指令和功能指令</h3><table style="border-collapse:collapse;border-spacing:0" class="tg"><tr><th style="font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;background-color:#efefef;text-align:center;vertical-align:top" colspan="3">ROM指令</th></tr><tr><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">指令名称</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">指令代码</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">指令功能</td></tr><tr><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;color:#fe0000;text-align:center;vertical-align:top">读ROM</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;color:#fe0000;text-align:center;vertical-align:top">33H</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;color:#fe0000;text-align:left;vertical-align:top">读ROM中64Bits的只读数据</td></tr><tr><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">ROM匹配</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">55H</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:left;vertical-align:top">发出此命令后接着发64Bits的ROM编码，使单总线上与编码匹配的DS18B3做出响应</td></tr><tr><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">搜索ROM</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">F0H</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:left;vertical-align:top">用于确定挂在总线上的DS18B20的个数和识别64Bits的ROM地址</td></tr><tr><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;color:#fe0000;text-align:center;vertical-align:top">跳过ROM</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;color:#fe0000;text-align:center;vertical-align:top">CCH</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;color:#fe0000;text-align:left;vertical-align:top">忽略64BitsROM只读数据，接着发出功能指令，进行温度转换或读取温度</td></tr><tr><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">警报搜索</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">ECH</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:left;vertical-align:top">只有温度超过设定上限或下限的DS18B20才做出响应</td></tr></table><table style="border-collapse:collapse;border-spacing:0" class="tg"><tr><th style="font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;background-color:#efefef;text-align:center;vertical-align:top" colspan="3">功能指令</th></tr><tr><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">指令名称</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">指令代码</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">指令功能</td></tr><tr><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;color:#fe0000;text-align:center;vertical-align:top">温度转换</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;color:#fe0000;text-align:center;vertical-align:top">44H</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;color:#fe0000;text-align:left;vertical-align:top">启动温度转换，结果将保存在内部RAM中</td></tr><tr><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;color:#fe0000;text-align:center;vertical-align:top">读取温度</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;color:#fe0000;text-align:center;vertical-align:top">BEH</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;color:#fe0000;text-align:left;vertical-align:top">读取内部RAM中的温度数据</td></tr><tr><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">设置报警温度</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">4EH</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:left;vertical-align:top">设置上或下限报警温度指令，接着应发送两字节数据</td></tr><tr><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">保存报警温度</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">48H</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:left;vertical-align:top">将RAM中的报警温度数据，复制到EEPROM中保存</td></tr><tr><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">恢复RAM</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">B8H</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:left;vertical-align:top">将EEPROM中的报警温度数据恢复到RAM</td></tr><tr><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">读供电方式</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:center;vertical-align:top">B4H</td><td style="font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:black;text-align:left;vertical-align:top">寄生供电返回0，外界电源供电返回1</td></tr></table><h3 id="1-1-5-初始化时序"><a href="#1-1-5-初始化时序" class="headerlink" title="1.1.5 初始化时序"></a>1.1.5 初始化时序</h3><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190215/3.png"></div><p>初始化DS18B20的时序如上，先拉低480us，然后拉高释放总线，随后在60-240us内，DS18B20将会拉低总线进行响应。<br>此时检测总线释放被拉低既可判断出DS18B20是否初始化成功。</p><h3 id="1-1-6-读写时序"><a href="#1-1-6-读写时序" class="headerlink" title="1.1.6 读写时序"></a>1.1.6 读写时序</h3><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190215/4.png"></div><p>上面的图是写0或1的时序：<br>如果写0，拉低至少60us(写周期为60-120us)即可；如果写1，先拉低至少1us，然后拉高，整个写周期至少为60us即可。</p><p>下面的图是读0或1的时序：<br>先拉低至少1us，随后读取电平，如果为0，即读到的数据是0，如果为1，即可读到的数据是1。<br>整个过程必须在15us内完成，15us后引脚都会被拉高。</p><h2 id="1-2-内核驱动"><a href="#1-2-内核驱动" class="headerlink" title="1.2 内核驱动"></a>1.2 内核驱动</h2><p>内核中自带1-Wire和DS18B20的驱动。<br><code>drivers/w1/masters/w1-gpio.c</code>是单总线的IO操作方法,用于模拟单总线时序；<br><code>drivers/w1/slaves/w1_therm.c</code>是DS18B20的寄存器操作方法，和IO时序无关；</p><h3 id="1-2-1-加入内核"><a href="#1-2-1-加入内核" class="headerlink" title="1.2.1 加入内核"></a>1.2.1 加入内核</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Device Drivers  ---&gt;</div><div class="line">    &lt;*&gt; Dallas's 1-wire support  ---&gt;                                                                </div><div class="line">        [*]   Userspace communication over connector                                                   </div><div class="line">              1-wire Bus Masters  ---&gt;       </div><div class="line">                  &lt;*&gt; GPIO 1-wire busmaster</div><div class="line">              1-wire Slaves  ---&gt;       </div><div class="line">                  &lt;*&gt; Thermal family implementation</div></pre></td></tr></table></figure><h3 id="1-2-2-修改设备树"><a href="#1-2-2-修改设备树" class="headerlink" title="1.2.2 修改设备树"></a>1.2.2 修改设备树</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="class">onewire@0 </span>&#123; </div><div class="line">    compatible = <span class="string">"w1-gpio"</span>;</div><div class="line">    gpios = <span class="params">&lt;<span class="variable">&amp;gpio0</span> <span class="number">13</span> <span class="number">0</span>&gt;</span>;</div><div class="line">    <span class="comment">//pinctrl-0 = &lt;&amp;ds18b20_dq_pin&gt;;</span></div><div class="line">&#125;;  </div></pre></td></tr></table></figure><h3 id="1-2-3-应用测试"><a href="#1-2-3-应用测试" class="headerlink" title="1.2.3 应用测试"></a>1.2.3 应用测试</h3><p><code>cat /sys/bus/w1/drivers/w1_slave_driver/28-01d58c07010c/w1_slave</code></p><div align="left"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190215/5.png"></div><h2 id="1-3-自己驱动"><a href="#1-3-自己驱动" class="headerlink" title="1.3 自己驱动"></a>1.3 自己驱动</h2><p>这次驱动，吸取了前面<a href="https://hceng.cn/2019/01/18/AM335X%E2%80%94%E2%80%94hwmon%E5%92%8Cinput%E5%AD%90%E7%B3%BB%E7%BB%9F/#3-%E6%80%BB%E7%BB%93" target="_blank" rel="external">AM335X——hwmon和input子系统</a>的经验。</p><h3 id="1-3-1-完整代码"><a href="#1-3-1-完整代码" class="headerlink" title="1.3.1 完整代码"></a>1.3.1 完整代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//cat /sys/class/hwmon/hwmon0/device/temperature</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/kernel.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/delay.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/gpio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of_gpio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/platform_device.h&gt;</span> </span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/hwmon.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/hwmon-sysfs.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/irqflags.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">struct</span> ds18b20 &#123;</div><div class="line">    <span class="keyword">struct</span> device *hwmon_dev;</div><div class="line">    <span class="keyword">struct</span> mutex lock;  </div><div class="line">    <span class="keyword">int</span> dq_pin;</div><div class="line">    u8 value[<span class="number">2</span>];</div><div class="line">    u8 family_code;</div><div class="line">    u8 serial_num[<span class="number">6</span>];</div><div class="line">    u8 crc;</div><div class="line">&#125;;</div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> ds18b20 ds;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">ds18b20_init</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> ret = <span class="number">1</span>;</div><div class="line">    </div><div class="line">    mutex_lock(&amp;ds.lock);</div><div class="line"></div><div class="line">    gpio_direction_output(ds.dq_pin, <span class="number">1</span>);</div><div class="line">    udelay(<span class="number">2</span>);</div><div class="line">    gpio_direction_output(ds.dq_pin, <span class="number">0</span>); <span class="comment">//Low level 480us for reset</span></div><div class="line">    udelay(<span class="number">480</span>);                      </div><div class="line">    gpio_direction_output(ds.dq_pin, <span class="number">1</span>); <span class="comment">//Pull high release bus</span></div><div class="line">    udelay(<span class="number">60</span>);</div><div class="line">    </div><div class="line">    gpio_direction_input(ds.dq_pin); <span class="comment">//Read response pulse</span></div><div class="line">    ret = gpio_get_value(ds.dq_pin);</div><div class="line">    udelay(<span class="number">240</span>);  <span class="comment">//Waiting for the corresponding end</span></div><div class="line">    </div><div class="line">    mutex_unlock(&amp;ds.lock);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">write_byte</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> data)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> flags;</div><div class="line"></div><div class="line">    mutex_lock(&amp;ds.lock);</div><div class="line">    </div><div class="line">    local_irq_save(flags); <span class="comment">//Save interrupt</span></div><div class="line">    <span class="comment">//local_irq_disable(); //Close all interrupts</span></div><div class="line"></div><div class="line">    gpio_direction_output(ds.dq_pin, <span class="number">1</span>); </div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i ++)</div><div class="line">    &#123;</div><div class="line">        gpio_direction_output(ds.dq_pin, <span class="number">1</span>); </div><div class="line">        udelay(<span class="number">2</span>);    </div><div class="line">        gpio_direction_output(ds.dq_pin, <span class="number">0</span>); <span class="comment">//Start at a low level greater than 1us</span></div><div class="line">        udelay(<span class="number">5</span>);</div><div class="line">        </div><div class="line">        gpio_direction_output(ds.dq_pin, data &amp; <span class="number">0x01</span>);  </div><div class="line">        udelay(<span class="number">60</span>); <span class="comment">//Write cycle is greater than 60us</span></div><div class="line">        </div><div class="line">        data &gt;&gt;= <span class="number">1</span>;   </div><div class="line">    &#125;</div><div class="line">    local_irq_restore(flags); <span class="comment">//Recovery interrupt</span></div><div class="line">    <span class="comment">//local_irq_enable(); //Open all interrupts</span></div><div class="line"></div><div class="line">    mutex_unlock(&amp;ds.lock); </div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">read_byte</span><span class="params">(<span class="keyword">void</span>)</span>    </span></div><div class="line">&#123;    </div><div class="line">    <span class="keyword">int</span> i;    </div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> flags;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> data = <span class="number">0</span>;    </div><div class="line"></div><div class="line">    mutex_lock(&amp;ds.lock);</div><div class="line">    </div><div class="line">    local_irq_save(flags);</div><div class="line">    <span class="comment">//local_irq_disable();</span></div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)    </div><div class="line">    &#123;    </div><div class="line">        gpio_direction_output(ds.dq_pin, <span class="number">1</span>);    </div><div class="line">        udelay(<span class="number">2</span>);    </div><div class="line">        gpio_direction_output(ds.dq_pin, <span class="number">0</span>); <span class="comment">//Start at a low level greater than 1us</span></div><div class="line">        udelay(<span class="number">5</span>);    </div><div class="line">        </div><div class="line">        gpio_direction_output(ds.dq_pin, <span class="number">1</span>); <span class="comment">//Pull high release bus </span></div><div class="line">        udelay(<span class="number">1</span>); </div><div class="line">      </div><div class="line">        data &gt;&gt;= <span class="number">1</span>;   </div><div class="line">        gpio_direction_input(ds.dq_pin);</div><div class="line">        <span class="keyword">if</span> (gpio_get_value(ds.dq_pin)) <span class="comment">//Must be read within 15us after being pulled low</span></div><div class="line">            data |= <span class="number">0x80</span>;  </div><div class="line">      </div><div class="line">        udelay(<span class="number">60</span>); <span class="comment">//Read cycle is greater than 60us;   </span></div><div class="line">    &#125;    </div><div class="line">    </div><div class="line">    local_irq_restore(flags); </div><div class="line">    <span class="comment">//local_irq_enable();</span></div><div class="line"></div><div class="line">    mutex_unlock(&amp;ds.lock);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> data;    </div><div class="line">&#125; </div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">ds18b20_get_sensor_value</span><span class="params">(<span class="keyword">struct</span> device *dev, <span class="keyword">struct</span> device_attribute *devattr, <span class="keyword">char</span> *buf)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> ret = <span class="number">-1</span>;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> m, n;</div><div class="line"></div><div class="line">    ret = ds18b20_init(); <span class="comment">//Reset initialization of the DS18B20 before each read and write</span></div><div class="line">    <span class="keyword">if</span>(<span class="number">0</span> != ret)</div><div class="line">    &#123;</div><div class="line">        printk(KERN_ER<span class="string">R"%s ds18b20_init error.\n"</span>,__func__);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;    </div><div class="line">    &#125;</div><div class="line">    write_byte(<span class="number">0xCC</span>); <span class="comment">//Skip commands for ROM operations</span></div><div class="line">    write_byte(<span class="number">0x44</span>); <span class="comment">//Start the DS18B20 acquisition temperature</span></div><div class="line"></div><div class="line">    </div><div class="line">    ret = ds18b20_init(); </div><div class="line">    <span class="keyword">if</span>(<span class="number">0</span> != ret)</div><div class="line">    &#123;</div><div class="line">        printk(KERN_ER<span class="string">R"%s ds18b20_init error.\n"</span>,__func__);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;    </div><div class="line">    &#125;</div><div class="line">    write_byte(<span class="number">0xCC</span>); <span class="comment">//Skip commands for ROM operations    </span></div><div class="line">    write_byte(<span class="number">0xBE</span>); <span class="comment">//Read the data in the DS18B20 register</span></div><div class="line"></div><div class="line">    ds.value[<span class="number">0</span>] = read_byte(); <span class="comment">//Low byte</span></div><div class="line">    ds.value[<span class="number">1</span>] = read_byte(); <span class="comment">//High byte</span></div><div class="line"></div><div class="line">    m = ((ds.value[<span class="number">1</span>] &amp; <span class="number">0x07</span>)&lt;&lt;<span class="number">4</span>) + ((ds.value[<span class="number">0</span>] &amp; <span class="number">0xF0</span>)&gt;&gt;<span class="number">4</span>); <span class="comment">//Integer part(7 bits in the middle)</span></div><div class="line">    n = ds.value[<span class="number">0</span>] &amp; <span class="number">0x0F</span>; <span class="comment">//Fractional part(lower 4 bits)</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span>(ds.value[<span class="number">1</span>] &amp; <span class="number">0xF8</span>)<span class="comment">//The high 5 bits indicate positive and negative</span></div><div class="line">        ret = <span class="built_in">sprintf</span>(buf, <span class="string">"TEMP: -%d.%02d\n"</span>, m, n*<span class="number">625</span>);</div><div class="line">    <span class="keyword">else</span></div><div class="line">        ret = <span class="built_in">sprintf</span>(buf, <span class="string">"TEMP: %d.%02d\n"</span>, m, n*<span class="number">625</span>);;   </div><div class="line"></div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">ds18b20_get_sensor_info</span><span class="params">(<span class="keyword">struct</span> device *dev, <span class="keyword">struct</span> device_attribute *devattr, <span class="keyword">char</span> *buf)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i, ret = <span class="number">-1</span>;</div><div class="line">    <span class="keyword">struct</span> sensor_device_attribute *attr = to_sensor_dev_attr(devattr);</div><div class="line">    </div><div class="line">    ret = ds18b20_init();  </div><div class="line">    <span class="keyword">if</span>(<span class="number">0</span> != ret)</div><div class="line">    &#123;</div><div class="line">        printk(KERN_ER<span class="string">R"%s ds18b20_init error.\n"</span>,__func__);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;    </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    write_byte(<span class="number">0x33</span>); <span class="comment">//Read ROM command</span></div><div class="line">    </div><div class="line">    ds.family_code = read_byte(); <span class="comment">//The lower 8 bits is the family code(28h)</span></div><div class="line">    </div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">6</span>; i++) <span class="comment">//The middle 48 bits are the unique serial number</span></div><div class="line">        ds.serial_num[i] = read_byte();</div><div class="line">  </div><div class="line">    </div><div class="line">    ds.crc = read_byte(); <span class="comment">//The high 8 bits are the CRC check data.</span></div><div class="line"></div><div class="line">    <span class="keyword">switch</span>(attr-&gt;index)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">            ret = <span class="built_in">sprintf</span>(buf, <span class="string">"0x%x\n"</span>, ds.family_code);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="number">2</span>:</div><div class="line">            ret = <span class="built_in">sprintf</span>(buf, <span class="string">"%02d%02d%02d%02d%02d%02d\n"</span>, ds.serial_num[<span class="number">0</span>],ds.serial_num[<span class="number">1</span>], \</div><div class="line">                          ds.serial_num[<span class="number">2</span>], ds.serial_num[<span class="number">3</span>],ds.serial_num[<span class="number">4</span>],ds.serial_num[<span class="number">5</span>]);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="number">3</span>:</div><div class="line">            ret = <span class="built_in">sprintf</span>(buf, <span class="string">"%d\n"</span>, ds.crc);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">default</span>:</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> sensor_device_attribute ds18b20_temp_attr[] = &#123;</div><div class="line">    SENSOR_ATTR(temperature, S_IRUGO, ds18b20_get_sensor_value, <span class="literal">NULL</span>, <span class="number">0</span>),</div><div class="line">    SENSOR_ATTR(family_code, S_IRUGO, ds18b20_get_sensor_info, <span class="literal">NULL</span>, <span class="number">1</span>),</div><div class="line">    SENSOR_ATTR(serial_num, S_IRUGO, ds18b20_get_sensor_info, <span class="literal">NULL</span>, <span class="number">2</span>),</div><div class="line">    SENSOR_ATTR(crc, S_IRUGO, ds18b20_get_sensor_info, <span class="literal">NULL</span>, <span class="number">3</span>),</div><div class="line">&#125;;</div><div class="line"> </div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span>  <span class="title">ds18b20_probe</span><span class="params">(<span class="keyword">struct</span> platform_device *pdev)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> status, i;</div><div class="line">    </div><div class="line">    <span class="comment">//printk(KERN_INFO"%s OK.\n",__func__);</span></div><div class="line"></div><div class="line">    ds.dq_pin = of_get_named_gpio(pdev-&gt;dev.of_node, <span class="string">"dq-gpio"</span>, <span class="number">0</span>);</div><div class="line">    status = gpio_request(ds.dq_pin, <span class="string">"ds18b20_dq_pin"</span>);   </div><div class="line">    <span class="keyword">if</span> (status)</div><div class="line">    &#123;</div><div class="line">        dev_err(&amp;pdev-&gt;dev, <span class="string">"gpio_request() fail.\n"</span>);</div><div class="line">        <span class="keyword">return</span> -EBUSY;</div><div class="line">    &#125;   </div><div class="line"> </div><div class="line">    mutex_init(&amp;ds.lock);</div><div class="line">    mutex_lock(&amp;ds.lock);</div><div class="line">    </div><div class="line">    dev_set_drvdata(&amp;pdev-&gt;dev, &amp;ds);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;(<span class="keyword">sizeof</span>(ds18b20_temp_attr)/<span class="keyword">sizeof</span>(<span class="keyword">struct</span> sensor_device_attribute)); i++)</div><div class="line">    &#123;</div><div class="line">        status = device_create_file(&amp;pdev-&gt;dev, &amp;ds18b20_temp_attr[i].dev_attr);</div><div class="line">        <span class="keyword">if</span> (status)</div><div class="line">        &#123;</div><div class="line">            dev_err(&amp;pdev-&gt;dev, <span class="string">"device_create_file() failed.\n"</span>);</div><div class="line">            <span class="keyword">goto</span> fail_crete_file;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ds.hwmon_dev = hwmon_device_register(&amp;pdev-&gt;dev);</div><div class="line">    <span class="keyword">if</span> (IS_ERR(ds.hwmon_dev))</div><div class="line">    &#123;</div><div class="line">        dev_err(&amp;pdev-&gt;dev, <span class="string">"hwmon_device_register() fail.\n"</span>);</div><div class="line">        status = PTR_ERR(ds.hwmon_dev);</div><div class="line">        <span class="keyword">goto</span> fail_device_register;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    mutex_unlock(&amp;ds.lock);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    </div><div class="line">fail_device_register:</div><div class="line">    hwmon_device_unregister(ds.hwmon_dev);</div><div class="line">fail_crete_file:</div><div class="line">    <span class="keyword">for</span> (i--; i&gt;=<span class="number">0</span>; i--)</div><div class="line">        device_remove_file(&amp;pdev-&gt;dev, &amp;ds18b20_temp_attr[i].dev_attr);</div><div class="line">    </div><div class="line">    dev_set_drvdata(&amp;pdev-&gt;dev, <span class="literal">NULL</span>);</div><div class="line">    gpio_free(ds.dq_pin);</div><div class="line">    mutex_unlock(&amp;ds.lock);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> status;</div><div class="line">&#125;</div><div class="line"> </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span>  <span class="title">ds18b20_remove</span><span class="params">(<span class="keyword">struct</span> platform_device *pdev)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    </div><div class="line">    mutex_lock(&amp;ds.lock);</div><div class="line">    </div><div class="line">    hwmon_device_unregister(ds.hwmon_dev);</div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;(<span class="keyword">sizeof</span>(ds18b20_temp_attr)/<span class="keyword">sizeof</span>(<span class="keyword">struct</span> sensor_device_attribute)); i++)</div><div class="line">        device_remove_file(&amp;pdev-&gt;dev, &amp;ds18b20_temp_attr[i].dev_attr);</div><div class="line">    dev_set_drvdata(&amp;pdev-&gt;dev, <span class="literal">NULL</span>);</div><div class="line">    gpio_free(ds.dq_pin);</div><div class="line">    </div><div class="line">    mutex_unlock(&amp;ds.lock);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">struct</span> of_device_id ds18b20_of_match[] = &#123;</div><div class="line">    &#123; .compatible = <span class="string">"maxim,ds18b20"</span>, .data = <span class="literal">NULL</span> &#125;,</div><div class="line">    &#123; <span class="comment">/* sentinel */</span> &#125;</div><div class="line"></div><div class="line">&#125;;</div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> platform_driver ds18b20_drv = &#123;</div><div class="line">    .probe      = ds18b20_probe,</div><div class="line">    .remove     = ds18b20_remove,</div><div class="line">    .driver     = &#123;</div><div class="line">        .name   = <span class="string">"ds18b20_drv"</span>,</div><div class="line">        .owner  = THIS_MODULE,</div><div class="line">        .of_match_table = of_match_ptr(ds18b20_of_match),</div><div class="line">    &#125;,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">ds18b20_drv_init</span><span class="params">(<span class="keyword">void</span>)</span>  </span></div><div class="line">&#123;  </div><div class="line">    <span class="comment">//printk(KERN_INFO"%s OK.\n",__func__);</span></div><div class="line">    <span class="keyword">return</span> platform_driver_register(&amp;ds18b20_drv);  </div><div class="line">&#125;  </div><div class="line">  </div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ds18b20_drv_exit</span><span class="params">(<span class="keyword">void</span>)</span>  </span></div><div class="line">&#123;  </div><div class="line">    <span class="comment">//printk(KERN_INFO"%s OK.\n",__func__);</span></div><div class="line">    platform_driver_unregister(&amp;ds18b20_drv);  </div><div class="line">&#125;  </div><div class="line"></div><div class="line">module_init(ds18b20_drv_init);</div><div class="line">module_exit(ds18b20_drv_exit);</div><div class="line"></div><div class="line">MODULE_LICENSE(<span class="string">"GPL"</span>);</div><div class="line">MODULE_AUTHOR(<span class="string">"hceng &lt;huangcheng.job@foxmail.com&gt;"</span>);</div><div class="line">MODULE_DESCRIPTION(<span class="string">"TI am335x board ds18b20 driver."</span>);</div><div class="line">MODULE_VERSION(<span class="string">"v1.0"</span>);</div></pre></td></tr></table></figure><p>驱动内容比较简单，严格按照前面的时序操作即可。<br>值得一提的是，因为时序是us级的，如果在发送时序过程中，产生中断就可能导致时序出错，因此在读写函数里加入<code>local_irq_save(flags);</code>、<code>local_irq_restore(flags);</code>临时开/关中断。</p><h3 id="1-3-2-设备树"><a href="#1-3-2-设备树" class="headerlink" title="1.3.2 设备树"></a>1.3.2 设备树</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">    <span class="class">ds18b20 </span>&#123;</div><div class="line">        compatible = <span class="string">"maxim,ds18b20"</span>;</div><div class="line">        dq-gpio = <span class="params">&lt;<span class="variable">&amp;gpio0</span> <span class="number">13</span> <span class="number">0</span>&gt;</span>;</div><div class="line">        pinctrl<span class="number">-0</span> = <span class="params">&lt;<span class="variable">&amp;ds18b20_dq_pin</span>&gt;</span>;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    ……</div><div class="line"></div><div class="line"><span class="variable">&amp;am33xx_pinmux</span> &#123;</div><div class="line"><span class="symbol">    ds18b20_dq_pin:</span> <span class="class">ds18b20_dq_pin0 </span>&#123;</div><div class="line">        pinctrl-single,pins = <span class="params">&lt;</span></div><div class="line">            <span class="number">0x17C</span> (PIN_INPUT_PULLDOWN | MUX_MODE7)  /* conf_uart1_rtsn.gpio0_13 */</div><div class="line">        &gt;;</div><div class="line">    &#125;;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h3 id="1-3-3-应用测试"><a href="#1-3-3-应用测试" class="headerlink" title="1.3.3 应用测试"></a>1.3.3 应用测试</h3><div align="left"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190215/6.png"></div><h1 id="2-DHT11"><a href="#2-DHT11" class="headerlink" title="2. DHT11"></a>2. DHT11</h1><h2 id="2-1-基础知识"><a href="#2-1-基础知识" class="headerlink" title="2.1 基础知识"></a>2.1 基础知识</h2><h3 id="2-1-1-性能参数"><a href="#2-1-1-性能参数" class="headerlink" title="2.1.1 性能参数"></a>2.1.1 性能参数</h3><ul><li><p>温度<br>分辨率：1°C<br>精度：±2℃<br>检测范围：-20°C ~ 60°C</p></li><li><p>湿度<br>分辨率：1%RH<br>精度：±5%RH (0~50°C)<br>检测范围：5%RH ~ 95%RH (25°C)</p></li></ul><p>采样周期间隔不得低于1秒钟。</p><p>可以看到无论是测量温度的精度还是范围、采样周期，都比较烂。。</p><h3 id="2-1-2-数据格式"><a href="#2-1-2-数据格式" class="headerlink" title="2.1.2 数据格式"></a>2.1.2 数据格式</h3><p>一次返回的数据长度为40Bits，高位在前。<br><strong>8bit湿度整数数据+8bit湿度小数数据+8bit温度整数数据+8bit温度小数数据+8bit校验和</strong><br>可以看到数据分小数部分和整数部分，当前小数部分用于以后扩展，现读出为零。</p><p>另外还有数据校验，如果”8bit湿度整数数据+8bit湿度小数数据+8bi温度整数数据+8bit温度小数数据”所得结果的末8位，等于”8bit校验和”即数据正确。</p><h3 id="2-1-3-开始时序"><a href="#2-1-3-开始时序" class="headerlink" title="2.1.3 开始时序"></a>2.1.3 开始时序</h3><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190215/7.jpg"></div><p>开始时，主机拉低至少18ms，随后拉高20-40us，然后释放总线，完成开始信号。<br>DHT11随后拉低80us，再拉高80us，最后发送40Bits数据。</p><h3 id="2-1-4-读时序"><a href="#2-1-4-读时序" class="headerlink" title="2.1.4 读时序"></a>2.1.4 读时序</h3><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190215/8.jpg"></div><p>先读到50us的低电平，随后如果是26-28us的高电平即收到的是数据0，如果是70us的高电平即收到的数据是1。</p><h2 id="2-2-内核驱动"><a href="#2-2-内核驱动" class="headerlink" title="2.2 内核驱动"></a>2.2 内核驱动</h2><p>本来以为内核不含DHT11驱动，后面又看到了，在iio子系统里面，路径为：<code>linux-4.1.18/drivers/iio/humidity/dht11.c</code>。</p><h3 id="2-2-1-内核代码"><a href="#2-2-1-内核代码" class="headerlink" title="2.2.1 内核代码"></a>2.2.1 内核代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/*</span></div><div class="line"> * DHT11/DHT22 bit banging GPIO driver</div><div class="line"> *</div><div class="line"> * Copyright (c) Harald Geyer &lt;harald@ccbib.org&gt;</div><div class="line"> *</div><div class="line"> * This program is free software; you can redistribute it and/or modify</div><div class="line"> * it under the terms of the GNU General Public License as published by</div><div class="line"> * the Free Software Foundation; either version 2 of the License, or</div><div class="line"> * (at your option) any later version.</div><div class="line"> *</div><div class="line"> * This program is distributed in the hope that it will be useful,</div><div class="line"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</div><div class="line"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</div><div class="line"> * GNU General Public License for more details.</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/err.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/interrupt.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/device.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/kernel.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/printk.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/slab.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of_device.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/sysfs.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/io.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/platform_device.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/wait.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/bitops.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/completion.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/mutex.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/delay.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/gpio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of_gpio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/iio/iio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DRIVER_NAME <span class="meta-string">"dht11"</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DHT11_DATA_VALID_TIME   2000000000  <span class="comment">/* 2s in ns */</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DHT11_EDGES_PREAMBLE 2</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DHT11_BITS_PER_READ 40</span></div><div class="line"><span class="comment">/*</span></div><div class="line"> * Note that when reading the sensor actually 84 edges are detected, but</div><div class="line"> * since the last edge is not significant, we only store 83:</div><div class="line"> */</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DHT11_EDGES_PER_READ (2*DHT11_BITS_PER_READ + DHT11_EDGES_PREAMBLE + 1)</span></div><div class="line"></div><div class="line"><span class="comment">/* Data transmission timing (nano seconds) */</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DHT11_START_TRANSMISSION    18  <span class="comment">/* ms */</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DHT11_SENSOR_RESPONSE   80000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DHT11_START_BIT     50000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DHT11_DATA_BIT_LOW  27000</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> DHT11_DATA_BIT_HIGH 70000</span></div><div class="line"></div><div class="line"><span class="keyword">struct</span> dht11 &#123;</div><div class="line">    <span class="keyword">struct</span> device           *dev;</div><div class="line"></div><div class="line">    <span class="keyword">int</span>             gpio;</div><div class="line">    <span class="keyword">int</span>             irq;</div><div class="line"></div><div class="line">    <span class="keyword">struct</span> completion       completion;</div><div class="line">    <span class="keyword">struct</span> mutex            lock;</div><div class="line"></div><div class="line">    s64             timestamp;</div><div class="line">    <span class="keyword">int</span>             temperature;</div><div class="line">    <span class="keyword">int</span>             humidity;</div><div class="line"></div><div class="line">    <span class="comment">/* num_edges: -1 means "no transmission in progress" */</span></div><div class="line">    <span class="keyword">int</span>             num_edges;</div><div class="line">    <span class="keyword">struct</span> &#123;s64 ts; <span class="keyword">int</span> value; &#125;    edges[DHT11_EDGES_PER_READ];</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">dht11_decode_byte</span><span class="params">(<span class="keyword">int</span> *timing, <span class="keyword">int</span> threshold)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> ret = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i) &#123;</div><div class="line">        ret &lt;&lt;= <span class="number">1</span>;</div><div class="line">        <span class="keyword">if</span> (timing[i] &gt;= threshold)</div><div class="line">            ++ret;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dht11_decode</span><span class="params">(<span class="keyword">struct</span> dht11 *dht11, <span class="keyword">int</span> offset)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i, t, timing[DHT11_BITS_PER_READ], threshold,</div><div class="line">        timeres = DHT11_SENSOR_RESPONSE;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> temp_int, temp_dec, hum_int, hum_dec, checksum;</div><div class="line"></div><div class="line">    <span class="comment">/* Calculate timestamp resolution */</span></div><div class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; dht11-&gt;num_edges; ++i) &#123;</div><div class="line">        t = dht11-&gt;edges[i].ts - dht11-&gt;edges[i<span class="number">-1</span>].ts;</div><div class="line">        <span class="keyword">if</span> (t &gt; <span class="number">0</span> &amp;&amp; t &lt; timeres)</div><div class="line">            timeres = t;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (<span class="number">2</span>*timeres &gt; DHT11_DATA_BIT_HIGH) &#123;</div><div class="line">        pr_err(<span class="string">"dht11: timeresolution %d too bad for decoding\n"</span>,</div><div class="line">            timeres);</div><div class="line">        <span class="keyword">return</span> -EIO;</div><div class="line">    &#125;</div><div class="line">    threshold = DHT11_DATA_BIT_HIGH / timeres;</div><div class="line">    <span class="keyword">if</span> (DHT11_DATA_BIT_LOW/timeres + <span class="number">1</span> &gt;= threshold)</div><div class="line">        pr_err(<span class="string">"dht11: WARNING: decoding ambiguous\n"</span>);</div><div class="line"></div><div class="line">    <span class="comment">/* scale down with timeres and check validity */</span></div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; DHT11_BITS_PER_READ; ++i) &#123;</div><div class="line">        t = dht11-&gt;edges[offset + <span class="number">2</span>*i + <span class="number">2</span>].ts -</div><div class="line">            dht11-&gt;edges[offset + <span class="number">2</span>*i + <span class="number">1</span>].ts;</div><div class="line">        <span class="keyword">if</span> (!dht11-&gt;edges[offset + <span class="number">2</span>*i + <span class="number">1</span>].value)</div><div class="line">            <span class="keyword">return</span> -EIO;  <span class="comment">/* lost synchronisation */</span></div><div class="line">        timing[i] = t / timeres;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    hum_int = dht11_decode_byte(timing, threshold);</div><div class="line">    hum_dec = dht11_decode_byte(&amp;timing[<span class="number">8</span>], threshold);</div><div class="line">    temp_int = dht11_decode_byte(&amp;timing[<span class="number">16</span>], threshold);</div><div class="line">    temp_dec = dht11_decode_byte(&amp;timing[<span class="number">24</span>], threshold);</div><div class="line">    checksum = dht11_decode_byte(&amp;timing[<span class="number">32</span>], threshold);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (((hum_int + hum_dec + temp_int + temp_dec) &amp; <span class="number">0xff</span>) != checksum)</div><div class="line">        <span class="keyword">return</span> -EIO;</div><div class="line"></div><div class="line">    dht11-&gt;timestamp = iio_get_time_ns();</div><div class="line">    <span class="keyword">if</span> (hum_int &lt; <span class="number">20</span>) &#123;  <span class="comment">/* DHT22 */</span></div><div class="line">        dht11-&gt;temperature = (((temp_int &amp; <span class="number">0x7f</span>) &lt;&lt; <span class="number">8</span>) + temp_dec) *</div><div class="line">                    ((temp_int &amp; <span class="number">0x80</span>) ? <span class="number">-100</span> : <span class="number">100</span>);</div><div class="line">        dht11-&gt;humidity = ((hum_int &lt;&lt; <span class="number">8</span>) + hum_dec) * <span class="number">100</span>;</div><div class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (temp_dec == <span class="number">0</span> &amp;&amp; hum_dec == <span class="number">0</span>) &#123;  <span class="comment">/* DHT11 */</span></div><div class="line">        dht11-&gt;temperature = temp_int * <span class="number">1000</span>;</div><div class="line">        dht11-&gt;humidity = hum_int * <span class="number">1000</span>;</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        dev_err(dht11-&gt;dev,</div><div class="line">            <span class="string">"Don't know how to decode data: %d %d %d %d\n"</span>,</div><div class="line">            hum_int, hum_dec, temp_int, temp_dec);</div><div class="line">        <span class="keyword">return</span> -EIO;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line"> * IRQ handler called on GPIO edges</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">static</span> irqreturn_t <span class="title">dht11_handle_irq</span><span class="params">(<span class="keyword">int</span> irq, <span class="keyword">void</span> *data)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">struct</span> iio_dev *iio = data;</div><div class="line">    <span class="keyword">struct</span> dht11 *dht11 = iio_priv(iio);</div><div class="line"></div><div class="line">    <span class="comment">/* <span class="doctag">TODO:</span> Consider making the handler safe for IRQ sharing */</span></div><div class="line">    <span class="keyword">if</span> (dht11-&gt;num_edges &lt; DHT11_EDGES_PER_READ &amp;&amp; dht11-&gt;num_edges &gt;= <span class="number">0</span>) &#123;</div><div class="line">        dht11-&gt;edges[dht11-&gt;num_edges].ts = iio_get_time_ns();</div><div class="line">        dht11-&gt;edges[dht11-&gt;num_edges++].value =</div><div class="line">                        gpio_get_value(dht11-&gt;gpio);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (dht11-&gt;num_edges &gt;= DHT11_EDGES_PER_READ)</div><div class="line">            complete(&amp;dht11-&gt;completion);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> IRQ_HANDLED;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dht11_read_raw</span><span class="params">(<span class="keyword">struct</span> iio_dev *iio_dev,</span></span></div><div class="line">            <span class="keyword">const</span> <span class="keyword">struct</span> iio_chan_spec *chan,</div><div class="line">            <span class="keyword">int</span> *val, <span class="keyword">int</span> *val2, <span class="keyword">long</span> m)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">struct</span> dht11 *dht11 = iio_priv(iio_dev);</div><div class="line">    <span class="keyword">int</span> ret;</div><div class="line"></div><div class="line">    mutex_lock(&amp;dht11-&gt;lock);</div><div class="line">    <span class="keyword">if</span> (dht11-&gt;timestamp + DHT11_DATA_VALID_TIME &lt; iio_get_time_ns()) &#123;</div><div class="line">        reinit_completion(&amp;dht11-&gt;completion);</div><div class="line"></div><div class="line">        dht11-&gt;num_edges = <span class="number">0</span>;</div><div class="line">        ret = gpio_direction_output(dht11-&gt;gpio, <span class="number">0</span>);</div><div class="line">        <span class="keyword">if</span> (ret)</div><div class="line">            <span class="keyword">goto</span> err;</div><div class="line">        msleep(DHT11_START_TRANSMISSION);</div><div class="line">        ret = gpio_direction_input(dht11-&gt;gpio);</div><div class="line">        <span class="keyword">if</span> (ret)</div><div class="line">            <span class="keyword">goto</span> err;</div><div class="line"></div><div class="line">        ret = request_irq(dht11-&gt;irq, dht11_handle_irq,</div><div class="line">                  IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING,</div><div class="line">                  iio_dev-&gt;name, iio_dev);</div><div class="line">        <span class="keyword">if</span> (ret)</div><div class="line">            <span class="keyword">goto</span> err;</div><div class="line"></div><div class="line">        ret = wait_for_completion_killable_timeout(&amp;dht11-&gt;completion,</div><div class="line">                                 HZ);</div><div class="line"></div><div class="line">        free_irq(dht11-&gt;irq, iio_dev);</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (ret == <span class="number">0</span> &amp;&amp; dht11-&gt;num_edges &lt; DHT11_EDGES_PER_READ - <span class="number">1</span>) &#123;</div><div class="line">            dev_err(&amp;iio_dev-&gt;dev,</div><div class="line">                    <span class="string">"Only %d signal edges detected\n"</span>,</div><div class="line">                    dht11-&gt;num_edges);</div><div class="line">            ret = -ETIMEDOUT;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (ret &lt; <span class="number">0</span>)</div><div class="line">            <span class="keyword">goto</span> err;</div><div class="line"></div><div class="line">        ret = dht11_decode(dht11,</div><div class="line">                dht11-&gt;num_edges == DHT11_EDGES_PER_READ ?</div><div class="line">                    DHT11_EDGES_PREAMBLE :</div><div class="line">                    DHT11_EDGES_PREAMBLE - <span class="number">2</span>);</div><div class="line">        <span class="keyword">if</span> (ret)</div><div class="line">            <span class="keyword">goto</span> err;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ret = IIO_VAL_INT;</div><div class="line">    <span class="keyword">if</span> (chan-&gt;type == IIO_TEMP)</div><div class="line">        *val = dht11-&gt;temperature;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (chan-&gt;type == IIO_HUMIDITYRELATIVE)</div><div class="line">        *val = dht11-&gt;humidity;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        ret = -EINVAL;</div><div class="line">err:</div><div class="line">    dht11-&gt;num_edges = <span class="number">-1</span>;</div><div class="line">    mutex_unlock(&amp;dht11-&gt;lock);</div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">struct</span> iio_info dht11_iio_info = &#123;</div><div class="line">    .driver_module      = THIS_MODULE,</div><div class="line">    .read_raw       = dht11_read_raw,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">struct</span> iio_chan_spec dht11_chan_spec[] = &#123;</div><div class="line">    &#123; .type = IIO_TEMP,</div><div class="line">        .info_mask_separate = BIT(IIO_CHAN_INFO_PROCESSED), &#125;,</div><div class="line">    &#123; .type = IIO_HUMIDITYRELATIVE,</div><div class="line">        .info_mask_separate = BIT(IIO_CHAN_INFO_PROCESSED), &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">struct</span> of_device_id dht11_dt_ids[] = &#123;</div><div class="line">    &#123; .compatible = <span class="string">"dht11"</span>, &#125;,</div><div class="line">    &#123; &#125;</div><div class="line">&#125;;</div><div class="line">MODULE_DEVICE_TABLE(of, dht11_dt_ids);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">dht11_probe</span><span class="params">(<span class="keyword">struct</span> platform_device *pdev)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">struct</span> device *dev = &amp;pdev-&gt;dev;</div><div class="line">    <span class="keyword">struct</span> device_node *node = dev-&gt;of_node;</div><div class="line">    <span class="keyword">struct</span> dht11 *dht11;</div><div class="line">    <span class="keyword">struct</span> iio_dev *iio;</div><div class="line">    <span class="keyword">int</span> ret;</div><div class="line"></div><div class="line">    iio = devm_iio_device_alloc(dev, <span class="keyword">sizeof</span>(*dht11));</div><div class="line">    <span class="keyword">if</span> (!iio) &#123;</div><div class="line">        dev_err(dev, <span class="string">"Failed to allocate IIO device\n"</span>);</div><div class="line">        <span class="keyword">return</span> -ENOMEM;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    dht11 = iio_priv(iio);</div><div class="line">    dht11-&gt;dev = dev;</div><div class="line"></div><div class="line">    dht11-&gt;gpio = ret = of_get_gpio(node, <span class="number">0</span>);</div><div class="line">    <span class="keyword">if</span> (ret &lt; <span class="number">0</span>)</div><div class="line">        <span class="keyword">return</span> ret;</div><div class="line">    ret = devm_gpio_request_one(dev, dht11-&gt;gpio, GPIOF_IN, pdev-&gt;name);</div><div class="line">    <span class="keyword">if</span> (ret)</div><div class="line">        <span class="keyword">return</span> ret;</div><div class="line"></div><div class="line">    dht11-&gt;irq = gpio_to_irq(dht11-&gt;gpio);</div><div class="line">    <span class="keyword">if</span> (dht11-&gt;irq &lt; <span class="number">0</span>) &#123;</div><div class="line">        dev_err(dev, <span class="string">"GPIO %d has no interrupt\n"</span>, dht11-&gt;gpio);</div><div class="line">        <span class="keyword">return</span> -EINVAL;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    dht11-&gt;timestamp = iio_get_time_ns() - DHT11_DATA_VALID_TIME - <span class="number">1</span>;</div><div class="line">    dht11-&gt;num_edges = <span class="number">-1</span>;</div><div class="line"></div><div class="line">    platform_set_drvdata(pdev, iio);</div><div class="line"></div><div class="line">    init_completion(&amp;dht11-&gt;completion);</div><div class="line">    mutex_init(&amp;dht11-&gt;lock);</div><div class="line">    iio-&gt;name = pdev-&gt;name;</div><div class="line">    iio-&gt;dev.parent = &amp;pdev-&gt;dev;</div><div class="line">    iio-&gt;info = &amp;dht11_iio_info;</div><div class="line">    iio-&gt;modes = INDIO_DIRECT_MODE;</div><div class="line">    iio-&gt;channels = dht11_chan_spec;</div><div class="line">    iio-&gt;num_channels = ARRAY_SIZE(dht11_chan_spec);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> devm_iio_device_register(dev, iio);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> platform_driver dht11_driver = &#123;</div><div class="line">    .driver = &#123;</div><div class="line">        .name   = DRIVER_NAME,</div><div class="line">        .of_match_table = dht11_dt_ids,</div><div class="line">    &#125;,</div><div class="line">    .probe  = dht11_probe,</div><div class="line">&#125;;</div><div class="line"></div><div class="line">module_platform_driver(dht11_driver);</div><div class="line"></div><div class="line">MODULE_AUTHOR(<span class="string">"Harald Geyer &lt;harald@ccbib.org&gt;"</span>);</div><div class="line">MODULE_DESCRIPTION(<span class="string">"DHT11 humidity/temperature sensor driver"</span>);</div><div class="line">MODULE_LICENSE(<span class="string">"GPL v2"</span>);</div></pre></td></tr></table></figure><h2 id="2-3-自己驱动"><a href="#2-3-自己驱动" class="headerlink" title="2.3 自己驱动"></a>2.3 自己驱动</h2><h3 id="2-3-1-完整代码"><a href="#2-3-1-完整代码" class="headerlink" title="2.3.1 完整代码"></a>2.3.1 完整代码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//cat /sys/class/hwmon/hwmon0/device/temperature</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/kernel.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/delay.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/gpio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of_gpio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/platform_device.h&gt;</span> </span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/hwmon.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/hwmon-sysfs.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/irqflags.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/wait.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/sched.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">struct</span> dht11 &#123;</div><div class="line">    <span class="keyword">struct</span> device *hwmon_dev;</div><div class="line">    <span class="keyword">struct</span> mutex lock;  </div><div class="line">    <span class="keyword">int</span> da_pin;</div><div class="line">    u8 value[<span class="number">5</span>];</div><div class="line">    u8 humdity;</div><div class="line">    u8 temperature;</div><div class="line"></div><div class="line">    <span class="keyword">struct</span> timer_list timer;</div><div class="line">    <span class="keyword">struct</span> work_struct work;</div><div class="line">&#125;;</div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> dht11 dh;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">read_byte</span><span class="params">(<span class="keyword">void</span>)</span>  </span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> i, count, dat = <span class="number">0</span>;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> flags;</div><div class="line"></div><div class="line">    local_irq_save(flags); <span class="comment">//Save interrupt</span></div><div class="line">    </div><div class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">8</span>; i++)          </div><div class="line">    &#123;      </div><div class="line">        count = <span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span>(<span class="number">0</span> == gpio_get_value(dh.da_pin)) <span class="comment">//Waiting for 50us low level end</span></div><div class="line">        &#123;</div><div class="line">            udelay(<span class="number">5</span>);</div><div class="line">            count ++;</div><div class="line">            <span class="keyword">if</span> (count &gt; <span class="number">20</span>)</div><div class="line">                <span class="keyword">goto</span> time_out;</div><div class="line">        &#125;</div><div class="line">      </div><div class="line">        udelay(<span class="number">30</span>); <span class="comment">//Delay 30us, if it is still high, the data is 1, otherwise it is 0.</span></div><div class="line">      </div><div class="line">        dat &lt;&lt;= <span class="number">1</span>;                   </div><div class="line">      </div><div class="line">        <span class="keyword">if</span>(gpio_get_value(dh.da_pin))    </div><div class="line">            dat += <span class="number">1</span>;</div><div class="line">         </div><div class="line">        <span class="keyword">while</span>(gpio_get_value(dh.da_pin)) <span class="comment">//Waiting low level end</span></div><div class="line">        &#123;</div><div class="line">            udelay(<span class="number">5</span>);</div><div class="line">            count ++;</div><div class="line">            <span class="keyword">if</span> (count &gt; <span class="number">20</span>)</div><div class="line">                <span class="keyword">goto</span> time_out;</div><div class="line">        &#125;</div><div class="line">    &#125;  </div><div class="line"></div><div class="line">    local_irq_restore(flags); </div><div class="line">    <span class="keyword">return</span> dat;</div><div class="line">    </div><div class="line">time_out:</div><div class="line">    local_irq_restore(flags); </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>; </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//Work queue callback function for read DHT11</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dht11_work_callback</span><span class="params">(<span class="keyword">struct</span> work_struct *work)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i, count;</div><div class="line"></div><div class="line">    mutex_lock(&amp;dh.lock);</div><div class="line"></div><div class="line">    <span class="comment">//Start signal</span></div><div class="line">    gpio_direction_output(dh.da_pin, <span class="number">1</span>);</div><div class="line">    udelay(<span class="number">2</span>);</div><div class="line">    gpio_direction_output(dh.da_pin, <span class="number">0</span>);</div><div class="line">    mdelay(<span class="number">20</span>);  <span class="comment">//Low level hold time cannot be less than 18ms</span></div><div class="line">    gpio_direction_output(dh.da_pin, <span class="number">1</span>); <span class="comment">//Pull up 20-40us</span></div><div class="line">    udelay(<span class="number">40</span>);    </div><div class="line">    </div><div class="line">    gpio_direction_input(dh.da_pin);</div><div class="line">    <span class="keyword">if</span> (<span class="number">0</span> == gpio_get_value(dh.da_pin)) <span class="comment">//Read response signal</span></div><div class="line">    &#123;</div><div class="line">        count = <span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span>(<span class="number">0</span> == gpio_get_value(dh.da_pin)) <span class="comment">//Waiting for the response signal to end(80us)   </span></div><div class="line">        &#123;</div><div class="line">            udelay(<span class="number">5</span>);</div><div class="line">            count ++;</div><div class="line">            <span class="keyword">if</span> (count &gt; <span class="number">20</span>)</div><div class="line">                <span class="keyword">goto</span> time_out;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        count = <span class="number">0</span>;</div><div class="line">        <span class="keyword">while</span>(<span class="number">1</span> == gpio_get_value(dh.da_pin)) <span class="comment">//Waiting for DHT11 to pull up end(80us)</span></div><div class="line">        &#123;</div><div class="line">            udelay(<span class="number">5</span>);</div><div class="line">            count ++;</div><div class="line">            <span class="keyword">if</span> (count &gt; <span class="number">20</span>)</div><div class="line">                <span class="keyword">goto</span> time_out;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++) <span class="comment">//Start reading 40 bits of data</span></div><div class="line">            dh.value[i] = read_byte();</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        printk(KERN_WARNING<span class="string">"DHT11 response error.\n"</span>); </div><div class="line"></div><div class="line">    <span class="comment">//checksum</span></div><div class="line">    <span class="keyword">if</span> ((dh.value[<span class="number">0</span>] + dh.value[<span class="number">1</span>] + dh.value[<span class="number">2</span>] + dh.value[<span class="number">3</span>]) == dh.value[<span class="number">4</span>]) </div><div class="line">    &#123;</div><div class="line">        dh.humdity = dh.value[<span class="number">0</span>];</div><div class="line">        dh.temperature = dh.value[<span class="number">2</span>];</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        printk(KERN_WARNING<span class="string">"DHT11 checksum error.\n"</span>); </div><div class="line"></div><div class="line">    mutex_unlock(&amp;dh.lock); </div><div class="line">    <span class="keyword">return</span>;</div><div class="line"></div><div class="line">time_out:</div><div class="line">    printk(KERN_WARNING<span class="string">"DHT11 timeout error.\n"</span>); </div><div class="line">    mutex_unlock(&amp;dh.lock); </div><div class="line">    <span class="keyword">return</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//Timercallback function for callback work queue </span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">dht11_timer_callback</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">long</span> data)</span></span></div><div class="line">&#123;</div><div class="line">    schedule_work(&amp;dh.work);</div><div class="line">    mod_timer(&amp;dh.timer, jiffies + (<span class="number">1200</span> * HZ/<span class="number">1000</span>)); <span class="comment">//Modify a timer's timeout</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">dht11_get_sensor_value</span><span class="params">(<span class="keyword">struct</span> device *dev, <span class="keyword">struct</span> device_attribute *devattr, <span class="keyword">char</span> *buf)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> ret = <span class="number">-1</span>;</div><div class="line">    <span class="keyword">struct</span> sensor_device_attribute *attr = to_sensor_dev_attr(devattr);</div><div class="line"></div><div class="line">    <span class="keyword">switch</span>(attr-&gt;index)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">case</span> <span class="number">0</span>:</div><div class="line">            ret = <span class="built_in">sprintf</span>(buf, <span class="string">"%d\n"</span>, dh.humdity);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="number">1</span>:</div><div class="line">            ret = <span class="built_in">sprintf</span>(buf, <span class="string">"%d\n"</span>, dh.temperature);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">default</span>:</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> sensor_device_attribute dht11_temp_attr[] = &#123;</div><div class="line">    SENSOR_ATTR(humdity, S_IRUGO, dht11_get_sensor_value, <span class="literal">NULL</span>, <span class="number">0</span>),</div><div class="line">    SENSOR_ATTR(temperature, S_IRUGO, dht11_get_sensor_value, <span class="literal">NULL</span>, <span class="number">1</span>),</div><div class="line">&#125;;</div><div class="line"> </div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span>  <span class="title">dht11_probe</span><span class="params">(<span class="keyword">struct</span> platform_device *pdev)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> status, i;</div><div class="line">    </div><div class="line">    <span class="comment">//printk(KERN_INFO"%s OK.\n",__func__);</span></div><div class="line"></div><div class="line">    dh.da_pin = of_get_named_gpio(pdev-&gt;dev.of_node, <span class="string">"da-gpio"</span>, <span class="number">0</span>);</div><div class="line">    status = gpio_request(dh.da_pin, <span class="string">"dht11_da_pin"</span>);   </div><div class="line">    <span class="keyword">if</span> (status)</div><div class="line">    &#123;</div><div class="line">        dev_err(&amp;pdev-&gt;dev, <span class="string">"gpio_request() fail.\n"</span>);</div><div class="line">        <span class="keyword">return</span> -EBUSY;</div><div class="line">    &#125;   </div><div class="line"> </div><div class="line">    mutex_init(&amp;dh.lock);</div><div class="line">    mutex_lock(&amp;dh.lock);</div><div class="line">    </div><div class="line">    dev_set_drvdata(&amp;pdev-&gt;dev, &amp;dh);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;(<span class="keyword">sizeof</span>(dht11_temp_attr)/<span class="keyword">sizeof</span>(<span class="keyword">struct</span> sensor_device_attribute)); i++)</div><div class="line">    &#123;</div><div class="line">        status = device_create_file(&amp;pdev-&gt;dev, &amp;dht11_temp_attr[i].dev_attr);</div><div class="line">        <span class="keyword">if</span> (status)</div><div class="line">        &#123;</div><div class="line">            dev_err(&amp;pdev-&gt;dev, <span class="string">"device_create_file() failed.\n"</span>);</div><div class="line">            <span class="keyword">goto</span> fail_crete_file;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    dh.hwmon_dev = hwmon_device_register(&amp;pdev-&gt;dev);</div><div class="line">    <span class="keyword">if</span> (IS_ERR(dh.hwmon_dev))</div><div class="line">    &#123;</div><div class="line">        dev_err(&amp;pdev-&gt;dev, <span class="string">"hwmon_device_register() fail.\n"</span>);</div><div class="line">        status = PTR_ERR(dh.hwmon_dev);</div><div class="line">        <span class="keyword">goto</span> fail_device_register;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//Timer</span></div><div class="line">    init_timer(&amp;dh.timer);</div><div class="line">    dh.timer.function = dht11_timer_callback;</div><div class="line">    dh.timer.expires = jiffies + (<span class="number">1200</span> * HZ/<span class="number">1000</span>); <span class="comment">//1.2s (must &gt; 1s)</span></div><div class="line">    dh.timer.data = ((<span class="keyword">unsigned</span> <span class="keyword">long</span>)<span class="number">0</span>);</div><div class="line">    add_timer(&amp;dh.timer);</div><div class="line">    <span class="comment">//Workqueue</span></div><div class="line">    INIT_WORK(&amp;dh.work, dht11_work_callback);</div><div class="line"></div><div class="line">    mutex_unlock(&amp;dh.lock);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    </div><div class="line">fail_device_register:</div><div class="line">    hwmon_device_unregister(dh.hwmon_dev);</div><div class="line">    </div><div class="line">fail_crete_file:</div><div class="line">    <span class="keyword">for</span> (i--; i&gt;=<span class="number">0</span>; i--)</div><div class="line">        device_remove_file(&amp;pdev-&gt;dev, &amp;dht11_temp_attr[i].dev_attr);</div><div class="line">    dev_set_drvdata(&amp;pdev-&gt;dev, <span class="literal">NULL</span>);</div><div class="line">    gpio_free(dh.da_pin);</div><div class="line">    del_timer(&amp;dh.timer);</div><div class="line">    cancel_work_sync(&amp;dh.work);</div><div class="line"></div><div class="line">    mutex_unlock(&amp;dh.lock);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> status;</div><div class="line">&#125;</div><div class="line"> </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span>  <span class="title">dht11_remove</span><span class="params">(<span class="keyword">struct</span> platform_device *pdev)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    </div><div class="line">    mutex_lock(&amp;dh.lock);</div><div class="line">    </div><div class="line">    hwmon_device_unregister(dh.hwmon_dev);</div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;(<span class="keyword">sizeof</span>(dht11_temp_attr)/<span class="keyword">sizeof</span>(<span class="keyword">struct</span> sensor_device_attribute)); i++)</div><div class="line">        device_remove_file(&amp;pdev-&gt;dev, &amp;dht11_temp_attr[i].dev_attr);</div><div class="line">    dev_set_drvdata(&amp;pdev-&gt;dev, <span class="literal">NULL</span>);</div><div class="line">    gpio_free(dh.da_pin);</div><div class="line">    del_timer(&amp;dh.timer);</div><div class="line">    cancel_work_sync(&amp;dh.work);</div><div class="line">    </div><div class="line">    mutex_unlock(&amp;dh.lock);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">struct</span> of_device_id dht11_of_match[] = &#123;</div><div class="line">    &#123; .compatible = <span class="string">"aosong,dht11"</span>, .data = <span class="literal">NULL</span> &#125;,</div><div class="line">    &#123; <span class="comment">/* sentinel */</span> &#125;</div><div class="line"></div><div class="line">&#125;;</div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> platform_driver dht11_drv = &#123;</div><div class="line">    .probe      = dht11_probe,</div><div class="line">    .remove     = dht11_remove,</div><div class="line">    .driver     = &#123;</div><div class="line">        .name   = <span class="string">"dht11_drv"</span>,</div><div class="line">        .owner  = THIS_MODULE,</div><div class="line">        .of_match_table = of_match_ptr(dht11_of_match),</div><div class="line">    &#125;,</div><div class="line">&#125;;</div><div class="line"></div><div class="line">module_platform_driver(dht11_drv);</div><div class="line"></div><div class="line">MODULE_LICENSE(<span class="string">"GPL"</span>);</div><div class="line">MODULE_AUTHOR(<span class="string">"hceng &lt;huangcheng.job@foxmail.com&gt;"</span>);</div><div class="line">MODULE_DESCRIPTION(<span class="string">"TI am335x board dht11 driver."</span>);</div><div class="line">MODULE_VERSION(<span class="string">"v1.0"</span>);</div></pre></td></tr></table></figure><p>因为DHT11的采样周期长达1S，如果应用层稍微读快一点，就会报错比较明显。<br>因此，这里采取的方案是，驱动设置个定时器每隔一定时间，不断读取传感器，保存数据。应用层读取的是不久前驱动才缓存下的数据。</p><p>因此在<code>probe()</code>函数里，先设置了一个定时器:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//Timer</span></div><div class="line">init_timer(&amp;dh.timer);</div><div class="line">dh.timer.function = dht11_timer_callback;</div><div class="line">dh.timer.expires = jiffies + (<span class="number">1200</span> * HZ/<span class="number">1000</span>); <span class="comment">//1.2s (must &gt; 1s)</span></div><div class="line">dh.timer.data = ((<span class="keyword">unsigned</span> <span class="keyword">long</span>)<span class="number">0</span>);</div><div class="line">add_timer(&amp;dh.timer);</div></pre></td></tr></table></figure><br>定时器每隔1.2s调用<code>dht11_timer_callback()</code>函数。</p><p>再设置了一个工作队列：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INIT_WORK(&amp;dh.work, dht11_work_callback);</div></pre></td></tr></table></figure><br>将<code>dht11_work_callback()</code>函数加入到工作队列里。</p><p><code>dht11_timer_callback()</code>里使用<code>schedule_work()</code>读取DHT11数据并重新设置定时器周期反复。</p><p><a href="https://www.jianshu.com/p/a3ad64ddbd89" target="_blank" rel="external">定时器、工作队列的补充知识参考博客</a>。</p><h3 id="2-3-2-设备树"><a href="#2-3-2-设备树" class="headerlink" title="2.3.2 设备树"></a>2.3.2 设备树</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">    <span class="class">dht11 </span>&#123;</div><div class="line">        compatible = <span class="string">"aosong,dht11"</span>;</div><div class="line">        da-gpio = <span class="params">&lt;<span class="variable">&amp;gpio0</span> <span class="number">12</span> <span class="number">0</span>&gt;</span>;</div><div class="line">        pinctrl<span class="number">-0</span> = <span class="params">&lt;<span class="variable">&amp;dht11_da_pin</span>&gt;</span>;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    ……</div><div class="line"></div><div class="line"><span class="variable">&amp;am33xx_pinmux</span> &#123;</div><div class="line"><span class="symbol">    dht11_da_pin:</span> <span class="class">dht11_da_pin0 </span>&#123;</div><div class="line">        pinctrl-single,pins = <span class="params">&lt;</span></div><div class="line">            <span class="number">0x178</span> (PIN_INPUT_PULLDOWN | MUX_MODE7)  /* conf_uart1_ctsn.gpio0_12 */</div><div class="line">        &gt;;</div><div class="line">    &#125;;</div><div class="line">&#125;;</div><div class="line"></div></pre></td></tr></table></figure><h3 id="2-3-3-应用测试"><a href="#2-3-3-应用测试" class="headerlink" title="2.3.3 应用测试"></a>2.3.3 应用测试</h3><div align="left"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190215/9.png"></div><h1 id="3-IrDA"><a href="#3-IrDA" class="headerlink" title="3. IrDA"></a>3. IrDA</h1><h2 id="3-1-基础知识"><a href="#3-1-基础知识" class="headerlink" title="3.1 基础知识"></a>3.1 基础知识</h2><h3 id="3-1-1-红外原理"><a href="#3-1-1-红外原理" class="headerlink" title="3.1.1 红外原理"></a>3.1.1 红外原理</h3><p>当遥控器按下不同的按键时，遥控器上的红外发射头，会发出人眼看不到(<strong>可通过手机摄像头看到</strong>)的光波给模块上的红外接收端。<br>红外接收端收到光波后，会在IRD引脚上产生相应的电平，通过对电平解析，就知道是按的遥控器哪一个键。</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190215/10.jpg"></div><h3 id="3-1-2-数据格式"><a href="#3-1-2-数据格式" class="headerlink" title="3.1.2 数据格式"></a>3.1.2 数据格式</h3><p>按键一次的接收到数据结构如下，可以分解成五部分：引导码/连发码、系统码1、系统码2、数据码、数据反码。</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190215/11.jpg"></div><h3 id="3-1-3-引导码-连发码"><a href="#3-1-3-引导码-连发码" class="headerlink" title="3.1.3 引导码/连发码"></a>3.1.3 引导码/连发码</h3><p>最开始的一部分是用来判断<strong>是否是连按操作</strong>和<strong>表示信号开始</strong>，分为引导码和连发码。<br>如果是第一按下或非连按，就是先9ms低电平，再4.5ms的高电平，后面接32Bits数据；<br>如果一直按着该键不放，下一个周期就发送的是连发码，先9ms低电平，再只有2.25ms的高电平，后面接32Bits数据；</p><div align="center"><img width="500" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190215/12.jpg"></div><h3 id="3-1-4-数据电平"><a href="#3-1-4-数据电平" class="headerlink" title="3.1.4 数据电平"></a>3.1.4 数据电平</h3><p>数据0和1前面都是0.56ms的低电平，那么就是后面的高电平持续时间不同，0为0.56ms，1为1.685ms</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190215/13.jpg"></div><h2 id="3-2-内核驱动"><a href="#3-2-内核驱动" class="headerlink" title="3.2 内核驱动"></a>3.2 内核驱动</h2><p>内核中自带红外遥控器的驱动，但没有我使用的遥控器布局文件。<br><code>drivers/medi/rc/gpio-ir-recv.c</code>是GPIO模拟红外遥控驱动。<br><code>drivers/media/rc/keymaps/</code>下是遥控器键盘布局文件。</p><h3 id="3-2-1-加入内核"><a href="#3-2-1-加入内核" class="headerlink" title="3.2.1 加入内核"></a>3.2.1 加入内核</h3><figure class="highlight makefile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Device Drivers  ---&gt; </div><div class="line">     &lt;*&gt; Multimedia support  ---&gt;</div><div class="line">        [*]   Remote Controller support</div><div class="line">        [*]   Remote controller decoders (NEW)  ---&gt;</div><div class="line">        [*]   Remote Controller devices  ---&gt;</div><div class="line">            &lt;*&gt;   GPIO IR remote control</div></pre></td></tr></table></figure><h3 id="3-2-2-添加键盘布局"><a href="#3-2-2-添加键盘布局" class="headerlink" title="3.2.2 添加键盘布局"></a>3.2.2 添加键盘布局</h3><figure class="highlight c"><figcaption><span>[rc-hceng-nec.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;media/rc-map.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> rc_map_table hceng_nec[] = &#123;</div><div class="line">    &#123; <span class="number">0x45</span>, KEY_CHANNELDOWN&#125;,</div><div class="line">    &#123; <span class="number">0x46</span>, KEY_CHANNEL&#125;,</div><div class="line">    &#123; <span class="number">0x47</span>, KEY_CHANNELUP&#125;,</div><div class="line">    &#123; <span class="number">0x44</span>, KEY_PREVIOUS&#125;,</div><div class="line">    &#123; <span class="number">0x40</span>, KEY_NEXT&#125;,</div><div class="line">    &#123; <span class="number">0x43</span>, KEY_PLAYPAUSE&#125;, <span class="comment">//</span></div><div class="line">    &#123; <span class="number">0x07</span>, KEY_VOLUMEDOWN&#125;,</div><div class="line">    &#123; <span class="number">0x15</span>, KEY_VOLUMEUP&#125;,</div><div class="line">    &#123; <span class="number">0x09</span>, KEY_EQUAL&#125;,</div><div class="line">    </div><div class="line">    &#123; <span class="number">0x16</span>, KEY_0&#125;,</div><div class="line">    &#123; <span class="number">0x19</span>, KEY_F1&#125;,</div><div class="line">    &#123; <span class="number">0x0d</span>, KEY_F2&#125;,</div><div class="line">    </div><div class="line">    &#123; <span class="number">0x0c</span>, KEY_1&#125;,</div><div class="line">    &#123; <span class="number">0x18</span>, KEY_2&#125;,</div><div class="line">    &#123; <span class="number">0x5e</span>, KEY_3&#125;,</div><div class="line">    &#123; <span class="number">0x08</span>, KEY_4&#125;,</div><div class="line">    &#123; <span class="number">0x1c</span>, KEY_5&#125;,</div><div class="line">    &#123; <span class="number">0x5a</span>, KEY_6&#125;,</div><div class="line">    &#123; <span class="number">0x42</span>, KEY_7&#125;,</div><div class="line">    &#123; <span class="number">0x52</span>, KEY_8&#125;, <span class="comment">//</span></div><div class="line">    &#123; <span class="number">0x4a</span>, KEY_9&#125;,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> rc_map_list hceng_nec_map = &#123;</div><div class="line">    .<span class="built_in">map</span> = &#123;</div><div class="line">        .scan    = hceng_nec,</div><div class="line">        .size    = ARRAY_SIZE(hceng_nec),</div><div class="line">        .rc_type = RC_TYPE_NEC, <span class="comment">//RC_TYPE_UNKNOWN //echo nec &gt; /sys/class/rc/rc0/protocols</span></div><div class="line">        .name    = <span class="string">"rc-hceng-nec"</span>,</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">int</span> __<span class="function">init <span class="title">init_rc_map_hceng_nec</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> rc_map_register(&amp;hceng_nec_map);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">void</span> __<span class="function"><span class="built_in">exit</span> <span class="title">exit_rc_map_hceng_nec</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    rc_map_unregister(&amp;hceng_nec_map);</div><div class="line">&#125;</div><div class="line"></div><div class="line">module_init(init_rc_map_hceng_nec)</div><div class="line">module_exit(exit_rc_map_hceng_nec)</div><div class="line"></div><div class="line">MODULE_LICENSE(<span class="string">"GPL"</span>);</div><div class="line">MODULE_AUTHOR(<span class="string">"hceng"</span>);</div></pre></td></tr></table></figure><p>将<code>rc-hceng-nec.c</code>放在<code>drivers/media/rc/keymaps/</code>下，并修改Makefile，加入<code>rc-hceng-nec.o</code>。</p><h3 id="3-2-3-修改设备树"><a href="#3-2-3-修改设备树" class="headerlink" title="3.2.3 修改设备树"></a>3.2.3 修改设备树</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">ir:</span> ir-<span class="class">receiver </span>&#123;</div><div class="line">    compatible = <span class="string">"gpio-ir-receiver"</span>;</div><div class="line">    gpios = <span class="params">&lt;<span class="variable">&amp;gpio0</span> <span class="number">12</span> <span class="number">1</span>&gt;</span>;</div><div class="line">    linux,rc-map-name = <span class="string">"rc-hceng-nec"</span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h3 id="3-2-4-应用测试"><a href="#3-2-4-应用测试" class="headerlink" title="3.2.4 应用测试"></a>3.2.4 应用测试</h3><p>测试程序：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span>  </span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span>  </span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span>  </span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span>  </span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span>  </span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/input.h&gt;</span>  </span></div><div class="line">  </div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span>  </span></div><div class="line">&#123;  </div><div class="line">    <span class="keyword">int</span> fd;  </div><div class="line">    <span class="keyword">int</span> version;  </div><div class="line">    <span class="keyword">int</span> ret;  </div><div class="line">    <span class="keyword">struct</span> input_event ev;  </div><div class="line">      </div><div class="line">    fd = open(<span class="string">"/dev/input/event0"</span>, O_RDONLY);  </div><div class="line">    <span class="keyword">if</span> (fd &lt; <span class="number">0</span>) &#123;  </div><div class="line">        <span class="built_in">printf</span>(<span class="string">"open file failed\n"</span>);  </div><div class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);  </div><div class="line">    &#125;  </div><div class="line">  </div><div class="line">    ioctl(fd, EVIOCGVERSION, &amp;version);  </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"evdev driver version is 0x%x: %d.%d.%d\n"</span>,  </div><div class="line">                    version, version&gt;&gt;<span class="number">16</span>, (version&gt;&gt;<span class="number">8</span>) &amp; <span class="number">0xff</span>, version &amp; <span class="number">0xff</span>);  </div><div class="line">  </div><div class="line">    <span class="keyword">while</span> (<span class="number">1</span>) &#123;  </div><div class="line">        ret = read(fd, &amp;ev, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> input_event));  </div><div class="line">        <span class="keyword">if</span> (ret &lt; <span class="number">0</span>) &#123;  </div><div class="line">            <span class="built_in">printf</span>(<span class="string">"read event error!\n"</span>);  </div><div class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);  </div><div class="line">        &#125;  </div><div class="line">          </div><div class="line">        <span class="keyword">if</span> (ev.type == EV_KEY)  </div><div class="line">            <span class="built_in">printf</span>(<span class="string">"type %d,code %d, value %d\n"</span>, ev.type, ev.code, ev.value);  </div><div class="line">    &#125;  </div><div class="line">      </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;  </div><div class="line">&#125; </div></pre></td></tr></table></figure></p><div align="left"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190215/14.png"></div><h3 id="3-2-5-其它"><a href="#3-2-5-其它" class="headerlink" title="3.2.5 其它"></a>3.2.5 其它</h3><ul><li><p>码值关系<br>遥控器产生一个原始数据码，<br><code>rc-hceng-nec</code>里，将原始数据码和输入子系统中的按键编号进行对应，<br>最后用户态读到的code是输入子系统中的按键编号值。<br>比如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">原始数据码  -------&gt; 按键编号 --------&gt;用户层读取</div><div class="line">0x16                KEY_0/11         11</div></pre></td></tr></table></figure></li><li><p>打印原始数据<br>修改<code>drivers/media/rc/ir-nec-decoder.c</code>，添加打印:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="number">183</span>                 &#125; <span class="keyword">else</span> &#123;</div><div class="line"><span class="number">184</span>                         <span class="comment">/* Normal NEC */</span></div><div class="line"><span class="number">185</span>                         scancode = address &lt;&lt; <span class="number">8</span> | command;</div><div class="line"><span class="number">186</span>                         <span class="comment">//IR_dprintk(1, "NEC scancode 0x%04x\n", scancode);</span></div><div class="line"><span class="number">187</span>                         printk(<span class="string">"NEC scancode 0x%04x\n"</span>, scancode);</div><div class="line"><span class="number">188</span>                 &#125;</div></pre></td></tr></table></figure></li></ul><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录DS18B20温度传感器、DHT11温湿度传感器、红外遥控驱动。&lt;br&gt;
    
    </summary>
    
    
      <category term="AM335X" scheme="http://yoursite.com/tags/AM335X/"/>
    
      <category term="Linux驱动" scheme="http://yoursite.com/tags/Linux%E9%A9%B1%E5%8A%A8/"/>
    
      <category term="hwmon子系统" scheme="http://yoursite.com/tags/hwmon%E5%AD%90%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="input子系统" scheme="http://yoursite.com/tags/input%E5%AD%90%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>AM335X——hwmon和input子系统</title>
    <link href="http://yoursite.com/2019/01/18/AM335X%E2%80%94%E2%80%94hwmon%E5%92%8Cinput%E5%AD%90%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2019/01/18/AM335X——hwmon和input子系统/</id>
    <published>2019-01-18T13:23:41.000Z</published>
    <updated>2019-04-08T09:58:16.234Z</updated>
    
    <content type="html"><![CDATA[<p>记录两个SPI设备分别采用hwmon子系统和input子系统。<br><a id="more"></a><br>刚开始学Linux驱动的时候，就看了input子系统，现在都忘得差不多了，不过回忆起来也还快，这里再记录一下。</p><p>为什么要用各种子系统框架，就目前的理解，<strong>一是为了向应用层提供统一的接口，二是简化了编写驱动的流程</strong>。<br>各种子系统它们是通过一层一层的函数传递与封装，实现了设备驱动的注册，定义了<code>file_operations</code>结构体里面的各种函数操作，不需要在单独的设备驱动代码中进行注册、定义，直接调用相应的的子系统即可。</p><h1 id="1-hwmon子系统简介"><a href="#1-hwmon子系统简介" class="headerlink" title="1. hwmon子系统简介"></a>1. hwmon子系统简介</h1><p><code>hwmon</code>即硬件监控(<code>Hardware monitor</code>)，它是用于检测设备状态的一类传感器设备接口，比如CPU温度、风扇转速、模数转换等。</p><p><code>Hwmon</code>子系统的核心代码是<code>drivers/hwmon/hwmon.c</code>。<br>通过同路径下的<code>Kconfig</code>文件，可以得知它在<code>make menuconfig</code>中的配置名字为<code>Hardware Monitoring support</code>。<br>通过<code>hwmon.c</code>中的<code>EXPORT_SYMBOL_GPL()</code>符号，可知对外提供如下几组接口函数：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">hwmon_device_register_with_groups() / hwmon_device_register()</div><div class="line">hwmon_device_unregister()</div><div class="line"></div><div class="line">devm_hwmon_device_register_with_groups()</div><div class="line">devm_hwmon_device_unregister()</div></pre></td></tr></table></figure></p><h2 id="1-1-AD7705简介"><a href="#1-1-AD7705简介" class="headerlink" title="1.1 AD7705简介"></a>1.1 AD7705简介</h2><p><a href="https://www.analog.com/media/en/technical-documentation/data-sheets/ad7705_7706.pdf" target="_blank" rel="external">AD7705</a>是十六位分辨率的A/D转换器,2个通道全差分模拟输入。<br>内部有8个寄存器，常用的就<code>Communication Register</code>、<code>Setup register</code>、<code>Clock register</code>、<code>Data register</code>。<br>在每次做任何操作前，都要写<code>Communication Register</code>来设置即将操作的是哪一个寄存器、是读还是写操作、操作哪一个通道。<br>其操作流程如下：</p><blockquote><ol><li>拉低复位引脚，硬件复位；</li><li>在至少32个时钟周期里连续发送高脉冲，以同步时钟；</li><li>配置AD7705时钟(时钟源、分频系数等)；</li><li>自校准，并等待就绪引脚拉低；</li><li>从数据寄存器里读取数据；</li></ol></blockquote><h2 id="1-2-完整代码及效果"><a href="#1-2-完整代码及效果" class="headerlink" title="1.2 完整代码及效果"></a>1.2 完整代码及效果</h2><ul><li><p>设备树：</p><figure class="highlight dts"><figcaption><span>[am335x-evm.dts]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="class">spidev@0 </span>&#123;</div><div class="line">compatible = <span class="string">"titan,ad7705"</span>;</div><div class="line">spi-max-frequency = <span class="params">&lt;<span class="number">2500000</span>&gt;</span>;</div><div class="line">reg = <span class="params">&lt;<span class="number">2</span>&gt;</span>;</div><div class="line">   &#125;;</div></pre></td></tr></table></figure></li><li><p>驱动代码：</p><figure class="highlight c"><figcaption><span>[ad7705_drv.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/kernel.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/delay.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/gpio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/spi/spi.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/hwmon.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/hwmon-sysfs.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span>  CHANNEL_NUM  (2)  <span class="comment">//AD7705 channel number</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span>  DRDY_PIN     (12) <span class="comment">//AD7705 DRDY Pin(GPIO0_12)</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span>  RESET_PIN    (13) <span class="comment">//AD7705 RESET Pin(GPIO0_13)</span></span></div><div class="line"></div><div class="line"><span class="comment">//Communication Register</span></div><div class="line"><span class="keyword">enum</span> </div><div class="line">&#123;</div><div class="line">    REG_COMM         = (<span class="number">0</span> &lt;&lt; <span class="number">4</span>), <span class="comment">//Communication Register RS2:RS1:RS0 = [0:0:0]</span></div><div class="line">    REG_SETUP        = (<span class="number">1</span> &lt;&lt; <span class="number">4</span>), <span class="comment">//Setup register         RS2:RS1:RS0 = [0:0:1]</span></div><div class="line">    REG_CLOCK        = (<span class="number">2</span> &lt;&lt; <span class="number">4</span>), <span class="comment">//Clock register         RS2:RS1:RS0 = [0:1:0]</span></div><div class="line">    REG_DATA         = (<span class="number">3</span> &lt;&lt; <span class="number">4</span>), <span class="comment">//Data register          RS2:RS1:RS0 = [0:1:1]</span></div><div class="line">    REG_TEST         = (<span class="number">4</span> &lt;&lt; <span class="number">4</span>), <span class="comment">//Test register          RS2:RS1:RS0 = [1:0:0]</span></div><div class="line">    REG_RESE         = (<span class="number">5</span> &lt;&lt; <span class="number">4</span>), <span class="comment">//No operation           RS2:RS1:RS0 = [1:0:1]</span></div><div class="line">    REG_OFFSET       = (<span class="number">6</span> &lt;&lt; <span class="number">4</span>), <span class="comment">//Offset register        RS2:RS1:RS0 = [1:1:0]</span></div><div class="line">    REG_GAIN         = (<span class="number">7</span> &lt;&lt; <span class="number">4</span>), <span class="comment">//Gain register          RS2:RS1:RS0 = [1:1:1]</span></div><div class="line"> </div><div class="line">    CMD_WRITE        = (<span class="number">0</span> &lt;&lt; <span class="number">3</span>), <span class="comment">//write operation</span></div><div class="line">    CMD_READ         = (<span class="number">1</span> &lt;&lt; <span class="number">3</span>), <span class="comment">//read  operation</span></div><div class="line"></div><div class="line">    CH_1             = <span class="number">0</span>,        <span class="comment">//Register Pair 0 (AIN1+  AIN1-)</span></div><div class="line">    CH_2             = <span class="number">1</span>,        <span class="comment">//Register Pair 1 (AIN2+  AIN2-)</span></div><div class="line">    CH_3             = <span class="number">2</span>,        <span class="comment">//Register Pair 0 (AIN1-  AIN1-)</span></div><div class="line">    CH_4             = <span class="number">3</span>         <span class="comment">//Register Pair 2 (AIN1-  AIN2-)</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">//Setup register</span></div><div class="line"><span class="keyword">enum</span></div><div class="line">&#123;</div><div class="line">    MD_NORMAL        = (<span class="number">0</span> &lt;&lt; <span class="number">6</span>), <span class="comment">//Normal Mode. </span></div><div class="line">    MD_CAL_SELF      = (<span class="number">1</span> &lt;&lt; <span class="number">6</span>), <span class="comment">//Self-Calibration </span></div><div class="line">    MD_CAL_ZERO      = (<span class="number">2</span> &lt;&lt; <span class="number">6</span>), <span class="comment">//Zero-Scale System Calibration </span></div><div class="line">    MD_CAL_FULL      = (<span class="number">3</span> &lt;&lt; <span class="number">6</span>), <span class="comment">//Full-Scale System Calibration </span></div><div class="line">                                       </div><div class="line">    GAIN_1           = (<span class="number">0</span> &lt;&lt; <span class="number">3</span>), <span class="comment">//Gain 1  </span></div><div class="line">    GAIN_2           = (<span class="number">1</span> &lt;&lt; <span class="number">3</span>), <span class="comment">//Gain 2  </span></div><div class="line">    GAIN_4           = (<span class="number">2</span> &lt;&lt; <span class="number">3</span>), <span class="comment">//Gain 4  </span></div><div class="line">    GAIN_8           = (<span class="number">3</span> &lt;&lt; <span class="number">3</span>), <span class="comment">//Gain 8  </span></div><div class="line">    GAIN_16          = (<span class="number">4</span> &lt;&lt; <span class="number">3</span>), <span class="comment">//Gain 16 </span></div><div class="line">    GAIN_32          = (<span class="number">5</span> &lt;&lt; <span class="number">3</span>), <span class="comment">//Gain 32 </span></div><div class="line">    GAIN_64          = (<span class="number">6</span> &lt;&lt; <span class="number">3</span>), <span class="comment">//Gain 64 </span></div><div class="line">    GAIN_128         = (<span class="number">7</span> &lt;&lt; <span class="number">3</span>), <span class="comment">//Gain 128</span></div><div class="line"> </div><div class="line">    BIPOLAR          = (<span class="number">0</span> &lt;&lt; <span class="number">2</span>), <span class="comment">//Bipolar Operation  </span></div><div class="line">    UNIPOLAR         = (<span class="number">1</span> &lt;&lt; <span class="number">2</span>), <span class="comment">//Unipolar Operation</span></div><div class="line"> </div><div class="line">    BUF_NO           = (<span class="number">0</span> &lt;&lt; <span class="number">1</span>), <span class="comment">//Buffer Control Off</span></div><div class="line">    BUF_EN           = (<span class="number">1</span> &lt;&lt; <span class="number">1</span>), <span class="comment">//Buffer Control On</span></div><div class="line"> </div><div class="line">    FSYNC_0          = (<span class="number">0</span> &lt;&lt; <span class="number">0</span>), <span class="comment">//Filter Synchronization Normal</span></div><div class="line">    FSYNC_1          = (<span class="number">1</span> &lt;&lt; <span class="number">0</span>)  <span class="comment">//Filter Synchronization Disable</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">//Clock register</span></div><div class="line"><span class="keyword">enum</span></div><div class="line">&#123;</div><div class="line">    CLKDIS_0         = (<span class="number">0</span> &lt;&lt; <span class="number">4</span>), <span class="comment">//Master Clock Enable (Use crystal clock source)</span></div><div class="line">    CLKDIS_1         = (<span class="number">1</span> &lt;&lt; <span class="number">4</span>), <span class="comment">//Master Clock Disable(Use an external clock source) </span></div><div class="line"> </div><div class="line">    CLKDIV_0         = (<span class="number">0</span> &lt;&lt; <span class="number">3</span>), <span class="comment">//Clock Divider 0</span></div><div class="line">    CLKDIV_1         = (<span class="number">1</span> &lt;&lt; <span class="number">3</span>), <span class="comment">//Clock Divider 2 (4.9152Mhz/2=2.4576Mhz)</span></div><div class="line"> </div><div class="line">    CLK_0            = (<span class="number">0</span> &lt;&lt; <span class="number">2</span>), <span class="comment">//Clock Bit(If master clock 1MHz(CLKDIV = 0) or 2MHz(CLKDIV = 1)) </span></div><div class="line">    CLK_1            = (<span class="number">1</span> &lt;&lt; <span class="number">2</span>), <span class="comment">//Clock Bit(If master clock 2.4576MHz(CLKDIV = 0) or 4.9152MHz(CLKDIV = 1)) </span></div><div class="line">    <span class="comment">//If Clock Bit = 0</span></div><div class="line">    UPDATE_20        = (<span class="number">0</span> &lt;&lt; <span class="number">0</span>), <span class="comment">//Filter Selection Bits</span></div><div class="line">    UPDATE_25        = (<span class="number">1</span> &lt;&lt; <span class="number">0</span>),</div><div class="line">    UPDATE_100       = (<span class="number">2</span> &lt;&lt; <span class="number">0</span>),</div><div class="line">    UPDATE_200       = (<span class="number">3</span> &lt;&lt; <span class="number">0</span>),</div><div class="line">    <span class="comment">//If Clock Bit = 1      </span></div><div class="line">    UPDATE_50        = (<span class="number">0</span> &lt;&lt; <span class="number">0</span>), <span class="comment">//Filter Selection Bits</span></div><div class="line">    UPDATE_60        = (<span class="number">1</span> &lt;&lt; <span class="number">0</span>),</div><div class="line">    UPDATE_250       = (<span class="number">2</span> &lt;&lt; <span class="number">0</span>),</div><div class="line">    UPDATE_500       = (<span class="number">3</span> &lt;&lt; <span class="number">0</span>)</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">struct</span> ad7705 &#123;</div><div class="line">    <span class="keyword">struct</span> device *hwmon_dev;</div><div class="line">    <span class="keyword">struct</span> mutex lock;  </div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">//Reset</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ad7705_reset</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    gpio_direction_output(RESET_PIN, <span class="number">1</span>);</div><div class="line">    msleep(<span class="number">1</span>);</div><div class="line">    gpio_direction_output(RESET_PIN, <span class="number">0</span>);</div><div class="line">    msleep(<span class="number">2</span>);</div><div class="line">    gpio_direction_output(RESET_PIN, <span class="number">1</span>);</div><div class="line">    msleep(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//Synchronous SPI timing</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ad7705_sync_spi</span><span class="params">(<span class="keyword">struct</span> spi_device *spi)</span></span></div><div class="line">&#123;</div><div class="line">    u8 tx_buf[<span class="number">6</span>]; <span class="comment">//Write logic "1" to DIN for at least 32 clocks</span></div><div class="line">    <span class="built_in">memset</span>(tx_buf, <span class="number">0xFF</span>, <span class="keyword">sizeof</span>(tx_buf));</div><div class="line">    spi_write(spi, tx_buf, <span class="keyword">sizeof</span>(tx_buf));</div><div class="line"></div><div class="line">    msleep(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//Waiting for DRDY pin signal</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">ad7705_wait_DRDY</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> time_cnt = <span class="number">500</span>*<span class="number">1000</span>;</div><div class="line"> </div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;time_cnt; i++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (<span class="number">0</span> == gpio_get_value(DRDY_PIN))</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        udelay(<span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    <span class="keyword">if</span> (i &gt;= time_cnt)</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>; </div><div class="line">    <span class="keyword">else</span></div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//Self-Calibration</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ad7705_calib_self</span><span class="params">(<span class="keyword">struct</span> spi_device *spi, u8 channel)</span></span></div><div class="line">&#123;</div><div class="line">    u8 tx_buf[<span class="number">2</span>] = &#123;<span class="number">0</span>&#125;;</div><div class="line"> </div><div class="line">    tx_buf[<span class="number">0</span>] = REG_SETUP | CMD_WRITE | channel;</div><div class="line">    tx_buf[<span class="number">1</span>] = MD_CAL_SELF | GAIN_1 | UNIPOLAR | BUF_EN | FSYNC_0;</div><div class="line">    spi_write(spi, tx_buf, <span class="keyword">sizeof</span>(tx_buf));</div><div class="line"> </div><div class="line">    ad7705_wait_DRDY(); <span class="comment">//Waiting for the internal operation to complete, the time is long, about 180ms</span></div><div class="line"> </div><div class="line">    msleep(<span class="number">50</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//Initialize the specified channel</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ad7705_config_channel</span><span class="params">(<span class="keyword">struct</span> spi_device *spi, u8 channel)</span></span></div><div class="line">&#123;</div><div class="line">    u8 tx_buf[<span class="number">2</span>] = &#123;<span class="number">0</span>&#125;;</div><div class="line"> </div><div class="line">    tx_buf[<span class="number">0</span>] = REG_CLOCK | CMD_WRITE | channel;</div><div class="line">    tx_buf[<span class="number">1</span>] = CLKDIS_0 | CLKDIV_1 | CLK_1 | UPDATE_50;</div><div class="line">    spi_write(spi, tx_buf, <span class="keyword">sizeof</span>(tx_buf));</div><div class="line"> </div><div class="line">    ad7705_calib_self(spi, channel); </div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="comment">//Reset and initialize the specified channel</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ad7705_reset_and_reconfig</span><span class="params">(<span class="keyword">struct</span> spi_device *spi)</span></span></div><div class="line">&#123;</div><div class="line">    ad7705_reset();</div><div class="line">    </div><div class="line">    msleep(<span class="number">5</span>);</div><div class="line">    ad7705_sync_spi(spi);</div><div class="line">    msleep(<span class="number">5</span>);</div><div class="line"> </div><div class="line">    ad7705_config_channel(spi, CH_1);</div><div class="line">    ad7705_config_channel(spi, CH_2);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//Read the specified channel value</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">ad7705_read_channel</span><span class="params">(<span class="keyword">struct</span> device *dev, u8 channel, u16 *data)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">struct</span> spi_device *spi = to_spi_device(dev);</div><div class="line">    <span class="keyword">struct</span> ad7705 *adc = spi_get_drvdata(spi);</div><div class="line">    <span class="keyword">int</span> ret = <span class="number">-1</span>; </div><div class="line">    u16 value = <span class="number">0</span>;</div><div class="line">    u8 tx_buf[<span class="number">1</span>] = &#123;<span class="number">0</span>&#125;;</div><div class="line">    u8 rx_buf[<span class="number">2</span>] = &#123;<span class="number">0</span>&#125;;</div><div class="line"> </div><div class="line">    <span class="keyword">if</span> (mutex_lock_interruptible(&amp;adc-&gt;lock))</div><div class="line">        <span class="keyword">return</span> -ERESTARTSYS;</div><div class="line"> </div><div class="line">    <span class="keyword">if</span> (ad7705_wait_DRDY() &lt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        printk(KERN_ERR <span class="string">"[%s] ad7705_wait_DRDY() time out.\n"</span>, __FUNCTION__);</div><div class="line">        <span class="keyword">goto</span> fail;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    tx_buf[<span class="number">0</span>] = REG_DATA | CMD_READ | channel;</div><div class="line">    ret = spi_write_then_read(spi, tx_buf, <span class="keyword">sizeof</span>(tx_buf), rx_buf, <span class="keyword">sizeof</span>(rx_buf));</div><div class="line">    <span class="comment">//printk("channel:%d rx_buf[0]=%d  rx_buf[1]=%d \n", channel, rx_buf[0], rx_buf[1]);</span></div><div class="line">    <span class="keyword">if</span> (<span class="number">0</span> &gt; ret)</div><div class="line">    &#123;</div><div class="line">        printk(KERN_ERR <span class="string">"[%s] ad7705_read_channel() fail. ret=%d\n"</span>, __FUNCTION__, ret);</div><div class="line">        <span class="keyword">goto</span> fail;</div><div class="line">    &#125;</div><div class="line">    value = (rx_buf[<span class="number">0</span>] &lt;&lt; <span class="number">8</span>) + rx_buf[<span class="number">1</span>];</div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line">    <span class="keyword">if</span> (<span class="number">0xFFFF</span> == value)</div><div class="line">    &#123;</div><div class="line">        ret = <span class="number">-1</span>;</div><div class="line">        <span class="keyword">goto</span> fail;</div><div class="line">    &#125;</div><div class="line"> <span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line">    *data = value;</div><div class="line">    </div><div class="line">fail:</div><div class="line">    mutex_unlock(&amp;adc-&gt;lock);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//sysfs hook function </span></div><div class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">ad7705_get_sensor_value</span><span class="params">(<span class="keyword">struct</span> device *dev, <span class="keyword">struct</span> device_attribute *devattr, <span class="keyword">char</span> *buf)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">struct</span> spi_device *spi = to_spi_device(dev);</div><div class="line">    <span class="keyword">struct</span> sensor_device_attribute *attr = to_sensor_dev_attr(devattr);</div><div class="line">    u16 ad = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> i, ret = <span class="number">-1</span>;</div><div class="line">    <span class="keyword">int</span> vol1, vol2;</div><div class="line"></div><div class="line">    <span class="comment">//After switching channels, the value of the other channel is read for the first time.</span></div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">2</span>; i++) </div><div class="line">    &#123;</div><div class="line">        ret = ad7705_read_channel(dev, attr-&gt;index, &amp;ad);</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        <span class="keyword">if</span> (<span class="number">0</span> &gt; ret)</div><div class="line">        &#123;</div><div class="line">            ad7705_reset_and_reconfig(spi);</div><div class="line">            <span class="keyword">return</span> ret;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"> </div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line">    ret = <span class="built_in">sprintf</span>(buf, <span class="string">"%u\n"</span>, ad);</div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line">    vol1 = ad*<span class="number">5</span>/<span class="number">65535</span>; <span class="comment">//Voltage integral part</span></div><div class="line">    vol2 = (ad*<span class="number">5</span>*<span class="number">1000</span>/<span class="number">65535</span>) - (vol1*<span class="number">1000</span>);<span class="comment">//Voltage fraction part</span></div><div class="line">    ret = <span class="built_in">sprintf</span>(buf, <span class="string">"vol = %d.%dV\n"</span>,vol1, vol2);</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span>    </span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> sensor_device_attribute ad_input[] = &#123;</div><div class="line">    SENSOR_ATTR(ad7705_ch1, S_IRUGO, ad7705_get_sensor_value, <span class="literal">NULL</span>, CH_1),</div><div class="line">    SENSOR_ATTR(ad7705_ch2, S_IRUGO, ad7705_get_sensor_value, <span class="literal">NULL</span>, CH_2),</div><div class="line">&#125;;</div><div class="line"> </div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span>  <span class="title">ad7705_probe</span><span class="params">(<span class="keyword">struct</span> spi_device *spi)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">struct</span> ad7705 *adc = <span class="literal">NULL</span>;</div><div class="line">    <span class="keyword">int</span> i, status;</div><div class="line">    </div><div class="line">    adc = kzalloc(<span class="keyword">sizeof</span> *adc, GFP_KERNEL);</div><div class="line">    <span class="keyword">if</span> (!adc)</div><div class="line">        <span class="keyword">return</span> -ENOMEM;</div><div class="line"> </div><div class="line">    mutex_init(&amp;adc-&gt;lock);</div><div class="line">    mutex_lock(&amp;adc-&gt;lock);</div><div class="line">    </div><div class="line">    spi_set_drvdata(spi, adc);</div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;CHANNEL_NUM; i++)</div><div class="line">    &#123;</div><div class="line">        status = device_create_file(&amp;spi-&gt;dev, &amp;ad_input[i].dev_attr);</div><div class="line">        <span class="keyword">if</span> (status)</div><div class="line">        &#123;</div><div class="line">            dev_err(&amp;spi-&gt;dev, <span class="string">"device_create_file() failed.\n"</span>);</div><div class="line">            <span class="keyword">goto</span> fail_crete_file;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    adc-&gt;hwmon_dev = hwmon_device_register(&amp;spi-&gt;dev);</div><div class="line">    <span class="keyword">if</span> (IS_ERR(adc-&gt;hwmon_dev))</div><div class="line">    &#123;</div><div class="line">        dev_err(&amp;spi-&gt;dev, <span class="string">"hwmon_device_register() fail.\n"</span>);</div><div class="line">        status = PTR_ERR(adc-&gt;hwmon_dev);</div><div class="line">        <span class="keyword">goto</span> fail_crete_file;</div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    status = gpio_request(DRDY_PIN, <span class="string">"ad7705_drdy"</span>);   <span class="comment">//ad7705 DRDY Pin</span></div><div class="line">    <span class="keyword">if</span> (status)</div><div class="line">    &#123;</div><div class="line">        dev_err(&amp;spi-&gt;dev, <span class="string">"gpio_request(AD705_DRDY_PIN) fail.\n"</span>);</div><div class="line">        <span class="keyword">goto</span> fail_device_register;</div><div class="line">    &#125;</div><div class="line">    gpio_direction_input(DRDY_PIN);</div><div class="line">    </div><div class="line">    status = gpio_request(RESET_PIN, <span class="string">"ad7705_reset"</span>);  <span class="comment">//ad7705 RESET Pin</span></div><div class="line">    <span class="keyword">if</span> (status)</div><div class="line">    &#123;</div><div class="line">        dev_err(&amp;spi-&gt;dev, <span class="string">"gpio_request(RESET_PIN) fail.\n"</span>);</div><div class="line">        <span class="keyword">goto</span> fail_request_drdy_pin;</div><div class="line">    &#125;</div><div class="line">    gpio_direction_output(RESET_PIN, <span class="number">1</span>);</div><div class="line"></div><div class="line">    ad7705_reset_and_reconfig(spi);</div><div class="line"> </div><div class="line">    mutex_unlock(&amp;adc-&gt;lock);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"> </div><div class="line">fail_request_drdy_pin:</div><div class="line">    gpio_free(DRDY_PIN);</div><div class="line">fail_device_register:</div><div class="line">    hwmon_device_unregister(adc-&gt;hwmon_dev);</div><div class="line">fail_crete_file:</div><div class="line">    <span class="keyword">for</span> (i--; i&gt;=<span class="number">0</span>; i--)</div><div class="line">        device_remove_file(&amp;spi-&gt;dev, &amp;ad_input[i].dev_attr);</div><div class="line">    </div><div class="line">    spi_set_drvdata(spi, <span class="literal">NULL</span>);</div><div class="line">    mutex_unlock(&amp;adc-&gt;lock);</div><div class="line">    kfree(adc);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> status;</div><div class="line">&#125;</div><div class="line"> </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span>  <span class="title">ad7705_remove</span><span class="params">(<span class="keyword">struct</span> spi_device *spi)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">struct</span> ad7705 *adc = spi_get_drvdata(spi);</div><div class="line"> </div><div class="line">    mutex_lock(&amp;adc-&gt;lock);</div><div class="line"> </div><div class="line">    gpio_free(DRDY_PIN);</div><div class="line">    gpio_free(RESET_PIN);</div><div class="line">    hwmon_device_unregister(adc-&gt;hwmon_dev);</div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;CHANNEL_NUM; i++)</div><div class="line">        device_remove_file(&amp;spi-&gt;dev, &amp;ad_input[i].dev_attr);</div><div class="line">    spi_set_drvdata(spi, <span class="literal">NULL</span>);</div><div class="line"> </div><div class="line">    mutex_unlock(&amp;adc-&gt;lock);</div><div class="line">    </div><div class="line">    kfree(adc);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">struct</span> of_device_id of_match_spi[] = &#123;</div><div class="line">    &#123; .compatible = <span class="string">"titan,ad7705"</span>, .data = <span class="literal">NULL</span> &#125;,</div><div class="line">    &#123; <span class="comment">/* sentinel */</span> &#125;</div><div class="line">&#125;;</div><div class="line">    </div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> spi_driver ad7705_driver = &#123;</div><div class="line">    .driver = &#123;</div><div class="line">        .name = <span class="string">"ad7705"</span>,</div><div class="line">        .owner = THIS_MODULE,</div><div class="line">        .of_match_table = of_match_spi,</div><div class="line">    &#125;,</div><div class="line">    .probe = ad7705_probe,</div><div class="line">    .remove = ad7705_remove,</div><div class="line">&#125;;</div><div class="line"> </div><div class="line">module_spi_driver(ad7705_driver);</div><div class="line"></div><div class="line">MODULE_LICENSE(<span class="string">"GPL"</span>);</div><div class="line">MODULE_AUTHOR(<span class="string">"hceng &lt;huangcheng.job@foxmail.com&gt;"</span>);</div><div class="line">MODULE_DESCRIPTION(<span class="string">"TI am335x board spi device: ad7705 driver."</span>);</div><div class="line">MODULE_VERSION(<span class="string">"v1.0"</span>);</div></pre></td></tr></table></figure></li><li><p>测试代码：<br>因为是子系统的关系，可以在应用层使用<code>cat /sys/class/hwmon/hwmon0/device/ad7705_ch1</code>直接得到结果。<br>这里再使用该节点，写了个应用程序，以便进行连续访问：</p><figure class="highlight c"><figcaption><span>[ad7705_app.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></div><div class="line"> </div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">read_channel</span><span class="params">(<span class="keyword">char</span> *dev_file_path)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> fd = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> buff[<span class="number">128</span>] = &#123;<span class="number">0</span>&#125;;</div><div class="line">    </div><div class="line">    fd = open(dev_file_path, O_RDONLY);</div><div class="line">    <span class="keyword">if</span> (<span class="number">-1</span> == fd)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"Can't open device file fail\n"</span>);</div><div class="line">        <span class="keyword">return</span> ;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="built_in">memset</span>(buff, <span class="number">0</span>, <span class="number">128</span>);</div><div class="line">    ret = read(fd, buff, <span class="number">128</span>);</div><div class="line">    <span class="keyword">if</span> (<span class="number">0</span> &gt; ret)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"Can't read data\n"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s"</span>, buff);</div><div class="line"> </div><div class="line">    close(fd);</div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">char</span> ch1_path[] = &#123;<span class="string">"/sys/class/hwmon/hwmon0/device/ad7705_ch1"</span>&#125;;</div><div class="line">    <span class="keyword">char</span> ch2_path[] = &#123;<span class="string">"/sys/class/hwmon/hwmon0/device/ad7705_ch2"</span>&#125;;</div><div class="line">    <span class="comment">//char ch1_path[] = &#123;"/sys/bus/spi/drivers/ad7705/spi1.2/ad7705_ch1"&#125;;</span></div><div class="line">    <span class="comment">//char ch2_path[] = &#123;"/sys/bus/spi/drivers/ad7705/spi1.2/ad7705_ch2"&#125;;</span></div><div class="line"></div><div class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</div><div class="line">    &#123;</div><div class="line">        read_channel(ch1_path);</div><div class="line">        usleep(<span class="number">1000</span>*<span class="number">1000</span>);</div><div class="line"></div><div class="line">        read_channel(ch2_path);</div><div class="line">        usleep(<span class="number">1000</span>*<span class="number">1000</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><p>值得注意的是，通过<code>read()</code>返回的数据不再是整型数据，而是字符串，且返回的字符串样式，在驱动里定义。</p><ul><li>效果：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">cat /sys/class/hwmon/hwmon0/device/ad7705_ch1</div><div class="line">vol = 2.1V</div><div class="line"></div><div class="line">cat /sys/class/hwmon/hwmon0/device/ad7705_ch2</div><div class="line">vol = 0.0V</div><div class="line"></div><div class="line"></div><div class="line">./ad7705_app</div><div class="line">vol = 2.1V</div><div class="line">vol = 0.0V</div></pre></td></tr></table></figure></li></ul><h2 id="1-3-详细分析"><a href="#1-3-详细分析" class="headerlink" title="1.3 详细分析"></a>1.3 详细分析</h2><h3 id="1-3-1-驱动与设备树匹配"><a href="#1-3-1-驱动与设备树匹配" class="headerlink" title="1.3.1 驱动与设备树匹配"></a>1.3.1 驱动与设备树匹配</h3><p><code>ad7705_drv.c</code>和<code>am335x-evm.dts</code>各自中的<code>compatible</code>属性名字相同时，即调用<code>probe()</code>函数，进入一切的开端。</p><h3 id="1-3-2-设置结构体"><a href="#1-3-2-设置结构体" class="headerlink" title="1.3.2 设置结构体"></a>1.3.2 设置结构体</h3><p>这里定义了一个<code>ad7705</code>的结构体，包含设备指针和互斥锁。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">struct</span> ad7705 &#123;</div><div class="line">    <span class="keyword">struct</span> device *hwmon_dev;</div><div class="line">    <span class="keyword">struct</span> mutex lock;  </div><div class="line">&#125;;</div></pre></td></tr></table></figure><br>在<code>probe()</code>里定义和分配该结构体：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">struct</span> ad7705 *adc = <span class="literal">NULL</span>;</div><div class="line"></div><div class="line">adc = kzalloc(<span class="keyword">sizeof</span> *adc, GFP_KERNEL);</div><div class="line"><span class="keyword">if</span> (!adc)</div><div class="line">    <span class="keyword">return</span> -ENOMEM;</div></pre></td></tr></table></figure><br>补充下内核中内存申请的相关知识：<br>内核中常用的内存申请函数有：<code>kmalloc()</code>、<code>kzalloc()</code>、<code>vmalloc()</code>：</p><blockquote><ul><li><code>void *kmalloc(size_t size, gfp_t flags)；</code> <code>void kfree(const void *objp);</code></li><li><code>kmalloc()</code>申请的内存位于物理内存映射区域，而且在物理上也是连续的，它们与真实的物理地址只有一个固定的偏移，因为存在较简单的转换关系，所以对申请的内存大小有限制，不能超过128KB。 </li><li>常用的flags：<br>　　<code>GFP_ATOMIC</code> —— 分配内存的过程是一个原子过程，分配内存的过程不会被（高优先级进程或中断）打断；<br>　　<code>GFP_KERNEL</code> —— 正常分配内存；<br>　　<code>GFP_DMA</code>    —— 给 DMA 控制器分配内存，需要使用该标志（DMA要求分配虚拟地址和物理地址连续；</li></ul></blockquote><p>　</p><blockquote><ul><li><code>void *kzalloc(size_t size, gfp_t flags);</code> <code>void kfree(const void *objp);</code></li><li><code>kzalloc()</code>就是调用的<code>kmalloc()</code>，多加了个<code>__GFP_ZERO</code>标志，即分配内存的时候还会将其清零； </li><li>常用的flags：<br>　　同<code>kmalloc()</code>。</li></ul></blockquote><p>　</p><blockquote><ul><li><code>void *vmalloc(unsigned long size);</code> <code>void vfree(const void *addr);</code>　</li><li><code>vmalloc()</code>会在虚拟内存空间给出一块连续的内存区，但这片连续的虚拟内存在物理内存中并不一定连续。由于<code>vmalloc()</code>没有保证申请到的是连续的物理内存，因此对申请的内存大小没有限制，如果需要申请较大的内存空间就可以用此函数了。<code>vmalloc()</code>和<code>vfree()</code>可以睡眠，因此不能从中断上下文调用。 </li></ul></blockquote><h3 id="1-3-3-设置互斥锁"><a href="#1-3-3-设置互斥锁" class="headerlink" title="1.3.3 设置互斥锁"></a>1.3.3 设置互斥锁</h3><p>为了并发控制，加入互斥锁独占资源。<br>我好像写驱动都没加锁的习惯，以后改正。<br>互斥锁的使用比较简单，先初始化，再加锁，执行要做的内容，最后解锁。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">    mutex_init(&amp;adc-&gt;lock);</div><div class="line">    mutex_lock(&amp;adc-&gt;lock); </div><div class="line">……</div><div class="line">    mutex_unlock(&amp;adc-&gt;lock);</div></pre></td></tr></table></figure></p><h3 id="1-3-4-设置私有变量"><a href="#1-3-4-设置私有变量" class="headerlink" title="1.3.4 设置私有变量"></a>1.3.4 设置私有变量</h3><p>将定义的<code>ad7705</code>结构体<code>adc</code>，保存到<code>spi_device</code>:<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">spi_set_drvdata(spi, adc);</div></pre></td></tr></table></figure><br>后面其它函数就可以通过<code>device</code>得到<code>spi_device</code>，再提取到私有数据：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">struct</span> spi_device *spi = to_spi_device(dev);</div><div class="line"><span class="keyword">struct</span> ad7705 *adc = spi_get_drvdata(spi);</div></pre></td></tr></table></figure></p><h3 id="1-3-5-创建sysfs属性文件"><a href="#1-3-5-创建sysfs属性文件" class="headerlink" title="1.3.5 创建sysfs属性文件"></a>1.3.5 创建sysfs属性文件</h3><p>首先解释一下<code>sysfs</code>：<br><code>sysfs</code>是Linux所提供的一种虚拟档案系统；<br>在设备模型中，<code>sysfs</code>文件系统用来表示设备的结构，将设备的层次结构形象的反应到用户空间中，从而可以通过修改<code>sysfs</code>中的文件属性来修改设备的属性值；<br><code>sysfs</code>被挂载到根目录下的<code>/sys</code>文件夹下。</p><p>使用函数<code>device_create_file()</code>将会调用到<code>sysfs_create_file()</code>，将在<code>/sys/class/hwmon/</code>下创建文件夹，并按照<code>hwmon0</code>、<code>hwmon1</code>、<code>hwmon2</code>等顺序编号</p><p>第二个参数是<code>struct device_attribute</code>结构体，通过定义的<code>sensor_device_attribute</code>结构体成员传给它。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> sensor_device_attribute ad_input[] = &#123;</div><div class="line">    SENSOR_ATTR(ad7705_ch1, S_IRUGO, ad7705_get_sensor_value, <span class="literal">NULL</span>, CH_1),</div><div class="line">    SENSOR_ATTR(ad7705_ch2, S_IRUGO, ad7705_get_sensor_value, <span class="literal">NULL</span>, CH_2),</div><div class="line">&#125;;</div></pre></td></tr></table></figure><br>参数含义分别是节点名字、节点访问权限(<code>S_IRUGO</code>:用户、组、其它成员都可读)、读函数(<code>cat</code>命令时将调用)、写函数(<code>echo</code>命令时将调用)、索引。</p><h3 id="1-3-6-实现device-attribute的函数"><a href="#1-3-6-实现device-attribute的函数" class="headerlink" title="1.3.6 实现device_attribute的函数"></a>1.3.6 实现<code>device_attribute</code>的函数</h3><p>前面的<code>sensor_device_attribute</code>只提供了读函数<code>ad7705_get_sensor_value</code>，并未提供写函数<code>NULL</code>，这里就只实现读函数即可。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">ad7705_get_sensor_value</span><span class="params">(<span class="keyword">struct</span> device *dev, <span class="keyword">struct</span> device_attribute *devattr, <span class="keyword">char</span> *buf)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">struct</span> spi_device *spi = to_spi_device(dev);</div><div class="line">    <span class="keyword">struct</span> sensor_device_attribute *attr = to_sensor_dev_attr(devattr);</div><div class="line">    u16 ad = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> i, ret = <span class="number">-1</span>;</div><div class="line">    <span class="keyword">int</span> vol1, vol2;</div><div class="line"></div><div class="line">    <span class="comment">//After switching channels, the value of the other channel is read for the first time.</span></div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">2</span>; i++) </div><div class="line">    &#123;</div><div class="line">        ret = ad7705_read_channel(dev, attr-&gt;index, &amp;ad);</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        <span class="keyword">if</span> (<span class="number">0</span> &gt; ret)</div><div class="line">        &#123;</div><div class="line">            ad7705_reset_and_reconfig(spi);</div><div class="line">            <span class="keyword">return</span> ret;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"> </div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line">    ret = <span class="built_in">sprintf</span>(buf, <span class="string">"%u\n"</span>, ad);</div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line">    vol1 = ad*<span class="number">5</span>/<span class="number">65535</span>; <span class="comment">//Voltage integral part</span></div><div class="line">    vol2 = (ad*<span class="number">5</span>*<span class="number">1000</span>/<span class="number">65535</span>) - (vol1*<span class="number">1000</span>);<span class="comment">//Voltage fraction part</span></div><div class="line">    ret = <span class="built_in">sprintf</span>(buf, <span class="string">"vol = %d.%dV\n"</span>,vol1, vol2);</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span>    </span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br>AD7705有两个ADC通道，它们都调用<code>ad7705_get_sensor_value()</code>，但通过<code>sensor_device_attribute</code>结构体中的<code>index</code>成员，将会读指定通道值。<br><code>sprintf()</code>将指定格式的数据传给用户层。</p><h3 id="1-3-7-注册hwmon子系统"><a href="#1-3-7-注册hwmon子系统" class="headerlink" title="1.3.7 注册hwmon子系统"></a>1.3.7 注册hwmon子系统</h3><p>使用<code>hwmon_device_register</code>注册<code>hwmon</code>设备。</p><h3 id="1-3-8-引脚GPIO初始化"><a href="#1-3-8-引脚GPIO初始化" class="headerlink" title="1.3.8 引脚GPIO初始化"></a>1.3.8 引脚GPIO初始化</h3><p>AD7705除了SPI引脚，还用到了一个就绪引脚和复位引脚。<br>这两个脚的信息可以从设备树中指定，再获取，这里直接写死在驱动里面了。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">status = gpio_request(DRDY_PIN, <span class="string">"ad7705_drdy"</span>);   <span class="comment">//ad7705 DRDY Pin</span></div><div class="line"><span class="keyword">if</span> (status)</div><div class="line">&#123;</div><div class="line">    dev_err(&amp;spi-&gt;dev, <span class="string">"gpio_request(AD705_DRDY_PIN) fail.\n"</span>);</div><div class="line">    <span class="keyword">goto</span> fail_device_register;</div><div class="line">&#125;</div><div class="line">gpio_direction_input(DRDY_PIN);</div><div class="line"></div><div class="line">status = gpio_request(RESET_PIN, <span class="string">"ad7705_reset"</span>);  <span class="comment">//ad7705 RESET Pin</span></div><div class="line"><span class="keyword">if</span> (status)</div><div class="line">&#123;</div><div class="line">    dev_err(&amp;spi-&gt;dev, <span class="string">"gpio_request(RESET_PIN) fail.\n"</span>);</div><div class="line">    <span class="keyword">goto</span> fail_request_drdy_pin;</div><div class="line">&#125;</div><div class="line">gpio_direction_output(RESET_PIN, <span class="number">1</span>);</div></pre></td></tr></table></figure><br>GPIO常见的操作:</p><blockquote><p>1.判断引脚是否合法<br>　<code>int gpio_is_valid(int number);</code><br>2.申请该引脚<br>　<code>int gpio_request(unsigned gpio, const char *label);</code><br>3.设置为输入还是输出<br>　<code>int gpio_direction_input(unsigned gpio);</code><br>　<code>int gpio_direction_output(unsigned gpio, int value);</code><br>4.获取/设置引脚电平<br>　<code>int gpio_get_value(unsigned gpio);</code><br>　<code>void gpio_set_value(unsigned gpio, int value);</code><br>5.申请作为中断引脚/释放中断<br>　<code>int gpio_to_irq(unsigned gpio);</code><br>　<code>void free_irq(unsigned int irq, void *dev_id);</code><br>6.导出到用户态(/sys/class/gpio/gpioN)<br>　<code>int gpio_export(unsigned gpio, bool direction_may_change);</code><br>　<code>void gpio_unexport(unsigned gpio);</code> </p></blockquote><h3 id="1-3-9-复位和配置AD7705"><a href="#1-3-9-复位和配置AD7705" class="headerlink" title="1.3.9 复位和配置AD7705"></a>1.3.9 复位和配置AD7705</h3><p>调用<code>ad7705_reset()</code>硬件复位，调用<code>ad7705_sync_spi()</code>同步下时钟，调用<code>ad7705_config_channel()</code>配置时钟和自校准。</p><h1 id="2-input子系统简介"><a href="#2-input子系统简介" class="headerlink" title="2. input子系统简介"></a>2. input子系统简介</h1><p>输入子系统是对不同类型的输入设备进行统一处理的驱动程序。<br>一个输入事件，如按键，是通过设备驱动层-&gt;系统核心层-&gt;事件处理层-&gt;用户空间的顺序到达用户空间并传给应用程序使用。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190118/1.jpg"></div><p>Input子系统由<strong>设备驱动层</strong>、<strong>系统核心层</strong>、<strong>事件处理层</strong>三部分组成。<br>事件处理层的驱动程序叫<strong>事件驱动程序</strong>，它负责和应用程序的接口，其内容是标准的，对所有输入设备都可用，就不需要我们编写了。<br>设备驱动层的驱动程序叫<strong>设备驱动程序</strong>，它负责和底层输入设备的通信，需要我们自己编写。</p><h2 id="2-1-ADXL345简介"><a href="#2-1-ADXL345简介" class="headerlink" title="2.1 ADXL345简介"></a>2.1 ADXL345简介</h2><p><a href="https://www.analog.com/media/en/technical-documentation/data-sheets/adxl345.pdf" target="_blank" rel="external">ADXL345</a>是一款小而薄的超低功耗3轴加速度计，分辨率为13位，测量范围达±16g。<br>数字输出数据为16位二进制补码格式，可通过SPI(3线或4线)或I2C数字接口访问。<br>芯片默认是SPI四线模式，且<code>CPHA=1 CPOL=1</code>，也就是一般SPI的模式3。<br>但我使用的ADXL345模块默认是I2C接口，即把12脚<code>SDO</code>接地了，如果使用SPI接口，需要去掉R4这个0欧电阻。</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190118/2.png"></div><p>关于ADXL345的使用目的，目前能想到这几个：<br>1、读取加速度(加速度是矢量，既有大小又有方向)，估计某些场合需要这个参数；<br>2、让ADXL345处于睡眠状态，当被摇动时候，触发最大阈值，从睡眠模式唤醒并从中断引脚输出高电平唤醒主控；<br>3、根据加速度计算得到角度值，进行屏幕翻转判定等；</p><p>Linux内核中自带ADXL345驱动，路径为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">drivers/input/misc/adxl34x-i2c.c</div><div class="line">drivers/input/misc/adxl34x-spi.c</div><div class="line"></div><div class="line">drivers/input/misc/adxl34x.c</div></pre></td></tr></table></figure></p><p>ADI的官网有对该驱动使用、测试方法有<a href="https://wiki.analog.com/resources/tools-software/linux-drivers/input-misc/adxl345" target="_blank" rel="external">详细介绍</a>。</p><h2 id="2-2-代码框架介绍"><a href="#2-2-代码框架介绍" class="headerlink" title="2.2 代码框架介绍"></a>2.2 代码框架介绍</h2><p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190118/3.jpg"></div><br>以SPI接口为例，先理一下代码的框架，图中最左边有是设备驱动模型中的设备，可以由设备树或者C文件提供。<br>它们目的都是向<code>adxl34x-spi.c</code>提供时钟速度、片选引脚、中断引脚、SPI模式等信息。</p><p>如果是设备树，就得修改下<code>adxl34x-spi.c</code>和<code>am335x-evm.dts</code>，使各自中的<code>compatible</code>属性匹配，从而调用<code>adxl34x-spi.c</code>中的<code>probe()</code>函数。<br>如果是C文件，就需要自己创建个<code>board_info.c</code>文件，填充<code>spi_board_info</code>内容，并注册。这里注意目前的内核已经没有将注册函数<code>spi_register_board_info()</code>导出，不能使用，可以通过<code>spi_busnum_to_master()</code>、<code>spi_new_device()</code>的方式注册。最后<code>spi_board_info</code>中的<code>.modalias</code>和<code>spi_driver</code>中的<code>.name</code>名字匹配，则调用<code>adxl34x-spi.c</code>中的<code>probe()</code>函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">spi_info_init</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line"><span class="keyword">struct</span> spi_master *master = <span class="literal">NULL</span>;</div><div class="line"><span class="keyword">struct</span> spi_device *device = <span class="literal">NULL</span>;</div><div class="line"></div><div class="line">master = spi_busnum_to_master(am335x_spi1_slave_info-&gt;bus_num);</div><div class="line"><span class="keyword">if</span> (!master) </div><div class="line"><span class="keyword">return</span> -EINVAL;</div><div class="line"></div><div class="line">device = spi_new_device(master, am335x_spi1_slave_info);</div><div class="line"><span class="keyword">if</span> (!device)</div><div class="line"><span class="keyword">return</span> -EINVAL;</div><div class="line"></div><div class="line"><span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    <span class="comment">//return spi_register_board_info(am335x_spi1_slave_info, ARRAY_SIZE(am335x_spi1_slave_info));</span></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>然后中间的是设备驱动模型中的驱动，它可以看成三部分：<br>1、在<code>probe()</code>中调用<code>adxl34x.c</code>中的<code>adxl34x_probe()</code>；<br>2、提供<code>read()</code>、<code>write()</code>函数；<br>3、调用<code>adxl34x.c</code>的电源管理相关函数，支持电源管理模型；<br>如果使用I2C接口，其目的还是一样的。</p><p>最右边的就是ADXL345的具体操作内容，也是后面详细分析的重点。</p><h2 id="2-3-完整代码及效果"><a href="#2-3-完整代码及效果" class="headerlink" title="2.3 完整代码及效果"></a>2.3 完整代码及效果</h2><ul><li>驱动部分：<br><code>adxl34x-spi.c</code>和<code>adxl34x.c</code>的完整代码就没必要贴了。<br>这里使用的设备树提供设备信息，只稍微的修改了点<code>adxl34x-spi.c</code>的内容：<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">struct</span> of_device_id of_match_spi[] = &#123;</div><div class="line">    &#123; .compatible = <span class="string">"adi,adxl34x"</span>, .data = <span class="literal">NULL</span> &#125;,</div><div class="line">    &#123; <span class="comment">/* sentinel */</span> &#125;</div><div class="line">&#125;;</div><div class="line">    </div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> spi_driver adxl34x_driver = &#123;</div><div class="line">    .driver = &#123;</div><div class="line">        .name = <span class="string">"adxl34x"</span>,</div><div class="line">        .owner = THIS_MODULE,</div><div class="line">        .pm = &amp;adxl34x_spi_pm,</div><div class="line">        .of_match_table = of_match_spi,</div><div class="line">    &#125;,</div><div class="line">    .probe   = adxl34x_spi_probe,</div><div class="line">    .remove  = adxl34x_spi_remove,</div><div class="line">&#125;;</div></pre></td></tr></table></figure></li></ul><ul><li><p>设备树部分：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="class">spidev@0 </span>&#123;</div><div class="line">    compatible = <span class="string">"adi,adxl34x"</span>;</div><div class="line">    spi-max-frequency = <span class="params">&lt;<span class="number">2500000</span>&gt;</span>;</div><div class="line">    reg = <span class="params">&lt;<span class="number">0</span>&gt;</span>;</div><div class="line"></div><div class="line">    interrupt-parent = <span class="params">&lt;<span class="variable">&amp;gpio0</span>&gt;</span>;</div><div class="line">    interrupts = <span class="params">&lt;<span class="number">12</span> IRQ_TYPE_LEVEL_HIGH&gt;</span>;</div><div class="line">    spi-cpha = <span class="params">&lt;<span class="number">1</span>&gt;</span>;</div><div class="line">    spi-cpol  = <span class="params">&lt;<span class="number">1</span>&gt;</span>;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><p>AM335X设备树中断的写法有两种，可以参考<code>Documentation/devicetree/bindings/interrupt-controller/interrupts.txt</code>。<br>这里<code>interrupt-parent</code>指定使用那个GPIO中断控制器，<code>interrupts</code>属性第一个值为该组引脚中的引脚号，第二个为中断触发电平。</p></li><li><p>测试程序：<br>有两个开源的程序可用来读取<code>input event</code>事件的值，<code>evtest</code>与<code>getevent</code>(这个是从android中提取的)。<br>如下是<code>evtest</code>源码，前面的ADI官网链接也使用了该测试程序。</p><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> * $Id: evtest.c,v 1.23 2005/02/06 13:51:42 vojtech Exp $</div><div class="line"> *</div><div class="line"> * Copyright (c) 1999-2000 Vojtech Pavlik</div><div class="line"> *</div><div class="line"> * Event device test program</div><div class="line"> */</div><div class="line"></div><div class="line">/*</div><div class="line"> * This program is free software; you can redistribute it and/or modify</div><div class="line"> * it under the terms of the GNU General Public License as published by</div><div class="line"> * the Free Software Foundation; either version 2 of the License, or</div><div class="line"> * (at your option) any later version.</div><div class="line"> *</div><div class="line"> * This program is distributed in the hope that it will be useful,</div><div class="line"> * but WITHOUT ANY WARRANTY; without even the implied warranty of</div><div class="line"> * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the</div><div class="line"> * GNU General Public License for more details.</div><div class="line"> *</div><div class="line"> * You should have received a copy of the GNU General Public License</div><div class="line"> * along with this program; if not, write to the Free Software</div><div class="line"> * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA</div><div class="line"> *</div><div class="line"> * Should you need to contact me, the author, you can do so either by</div><div class="line"> * e-mail - mail your message to &lt;vojtech@ucw.cz&gt;, or by paper mail:</div><div class="line"> * Vojtech Pavlik, Simunkova 1594, Prague 8, 182 00 Czech Republic</div><div class="line"> */</div><div class="line"></div><div class="line">#include &lt;stdint.h&gt;</div><div class="line"></div><div class="line">#include &lt;linux/input.h&gt;</div><div class="line"></div><div class="line">#include &lt;string.h&gt;</div><div class="line">#include &lt;fcntl.h&gt;</div><div class="line">#include &lt;unistd.h&gt;</div><div class="line">#include &lt;stdio.h&gt;</div><div class="line"></div><div class="line">#ifndef EV_SYN</div><div class="line">#define EV_SYN 0</div><div class="line">#endif</div><div class="line"></div><div class="line">char *events[EV_MAX + 1] =</div><div class="line">&#123;</div><div class="line">    [0 ... EV_MAX] = NULL,</div><div class="line">    [EV_SYN] = "Sync",            [EV_KEY] = "Key",</div><div class="line">    [EV_REL] = "Relative",            [EV_ABS] = "Absolute",</div><div class="line">    [EV_MSC] = "Misc",            [EV_LED] = "LED",</div><div class="line">    [EV_SND] = "Sound",            [EV_REP] = "Repeat",</div><div class="line">    [EV_FF] = "ForceFeedback",        [EV_PWR] = "Power",</div><div class="line">    [EV_FF_STATUS] = "ForceFeedbackStatus",</div><div class="line">&#125;;</div><div class="line"></div><div class="line">char *keys[KEY_MAX + 1] =</div><div class="line">&#123;</div><div class="line">    [0 ... KEY_MAX] = NULL,</div><div class="line">    [KEY_RESERVED] = "Reserved",        [KEY_ESC] = "Esc",</div><div class="line">    [KEY_1] = "1",                [KEY_2] = "2",</div><div class="line">    [KEY_3] = "3",                [KEY_4] = "4",</div><div class="line">    [KEY_5] = "5",                [KEY_6] = "6",</div><div class="line">    [KEY_7] = "7",                [KEY_8] = "8",</div><div class="line">    [KEY_9] = "9",                [KEY_0] = "0",</div><div class="line">    [KEY_MINUS] = "Minus",            [KEY_EQUAL] = "Equal",</div><div class="line">    [KEY_BACKSPACE] = "Backspace",        [KEY_TAB] = "Tab",</div><div class="line">    [KEY_Q] = "Q",                [KEY_W] = "W",</div><div class="line">    [KEY_E] = "E",                [KEY_R] = "R",</div><div class="line">    [KEY_T] = "T",                [KEY_Y] = "Y",</div><div class="line">    [KEY_U] = "U",                [KEY_I] = "I",</div><div class="line">    [KEY_O] = "O",                [KEY_P] = "P",</div><div class="line">    [KEY_LEFTBRACE] = "LeftBrace",        [KEY_RIGHTBRACE] = "RightBrace",</div><div class="line">    [KEY_ENTER] = "Enter",            [KEY_LEFTCTRL] = "LeftControl",</div><div class="line">    [KEY_A] = "A",                [KEY_S] = "S",</div><div class="line">    [KEY_D] = "D",                [KEY_F] = "F",</div><div class="line">    [KEY_G] = "G",                [KEY_H] = "H",</div><div class="line">    [KEY_J] = "J",                [KEY_K] = "K",</div><div class="line">    [KEY_L] = "L",                [KEY_SEMICOLON] = "Semicolon",</div><div class="line">    [KEY_APOSTROPHE] = "Apostrophe",    [KEY_GRAVE] = "Grave",</div><div class="line">    [KEY_LEFTSHIFT] = "LeftShift",        [KEY_BACKSLASH] = "BackSlash",</div><div class="line">    [KEY_Z] = "Z",                [KEY_X] = "X",</div><div class="line">    [KEY_C] = "C",                [KEY_V] = "V",</div><div class="line">    [KEY_B] = "B",                [KEY_N] = "N",</div><div class="line">    [KEY_M] = "M",                [KEY_COMMA] = "Comma",</div><div class="line">    [KEY_DOT] = "Dot",            [KEY_SLASH] = "Slash",</div><div class="line">    [KEY_RIGHTSHIFT] = "RightShift",    [KEY_KPASTERISK] = "KPAsterisk",</div><div class="line">    [KEY_LEFTALT] = "LeftAlt",        [KEY_SPACE] = "Space",</div><div class="line">    [KEY_CAPSLOCK] = "CapsLock",        [KEY_F1] = "F1",</div><div class="line">    [KEY_F2] = "F2",            [KEY_F3] = "F3",</div><div class="line">    [KEY_F4] = "F4",            [KEY_F5] = "F5",</div><div class="line">    [KEY_F6] = "F6",            [KEY_F7] = "F7",</div><div class="line">    [KEY_F8] = "F8",            [KEY_F9] = "F9",</div><div class="line">    [KEY_F10] = "F10",            [KEY_NUMLOCK] = "NumLock",</div><div class="line">    [KEY_SCROLLLOCK] = "ScrollLock",    [KEY_KP7] = "KP7",</div><div class="line">    [KEY_KP8] = "KP8",            [KEY_KP9] = "KP9",</div><div class="line">    [KEY_KPMINUS] = "KPMinus",        [KEY_KP4] = "KP4",</div><div class="line">    [KEY_KP5] = "KP5",            [KEY_KP6] = "KP6",</div><div class="line">    [KEY_KPPLUS] = "KPPlus",        [KEY_KP1] = "KP1",</div><div class="line">    [KEY_KP2] = "KP2",            [KEY_KP3] = "KP3",</div><div class="line">    [KEY_KP0] = "KP0",            [KEY_KPDOT] = "KPDot",</div><div class="line">    [KEY_ZENKAKUHANKAKU] = "Zenkaku/Hankaku", [KEY_102ND] = "102nd",</div><div class="line">    [KEY_F11] = "F11",            [KEY_F12] = "F12",</div><div class="line">    [KEY_RO] = "RO",            [KEY_KATAKANA] = "Katakana",</div><div class="line">    [KEY_HIRAGANA] = "HIRAGANA",        [KEY_HENKAN] = "Henkan",</div><div class="line">    [KEY_KATAKANAHIRAGANA] = "Katakana/Hiragana", [KEY_MUHENKAN] = "Muhenkan",</div><div class="line">    [KEY_KPJPCOMMA] = "KPJpComma",        [KEY_KPENTER] = "KPEnter",</div><div class="line">    [KEY_RIGHTCTRL] = "RightCtrl",        [KEY_KPSLASH] = "KPSlash",</div><div class="line">    [KEY_SYSRQ] = "SysRq",            [KEY_RIGHTALT] = "RightAlt",</div><div class="line">    [KEY_LINEFEED] = "LineFeed",        [KEY_HOME] = "Home",</div><div class="line">    [KEY_UP] = "Up",            [KEY_PAGEUP] = "PageUp",</div><div class="line">    [KEY_LEFT] = "Left",            [KEY_RIGHT] = "Right",</div><div class="line">    [KEY_END] = "End",            [KEY_DOWN] = "Down",</div><div class="line">    [KEY_PAGEDOWN] = "PageDown",        [KEY_INSERT] = "Insert",</div><div class="line">    [KEY_DELETE] = "Delete",        [KEY_MACRO] = "Macro",</div><div class="line">    [KEY_MUTE] = "Mute",            [KEY_VOLUMEDOWN] = "VolumeDown",</div><div class="line">    [KEY_VOLUMEUP] = "VolumeUp",        [KEY_POWER] = "Power",</div><div class="line">    [KEY_KPEQUAL] = "KPEqual",        [KEY_KPPLUSMINUS] = "KPPlusMinus",</div><div class="line">    [KEY_PAUSE] = "Pause",            [KEY_KPCOMMA] = "KPComma",</div><div class="line">    [KEY_HANGUEL] = "Hanguel",        [KEY_HANJA] = "Hanja",</div><div class="line">    [KEY_YEN] = "Yen",            [KEY_LEFTMETA] = "LeftMeta",</div><div class="line">    [KEY_RIGHTMETA] = "RightMeta",        [KEY_COMPOSE] = "Compose",</div><div class="line">    [KEY_STOP] = "Stop",            [KEY_AGAIN] = "Again",</div><div class="line">    [KEY_PROPS] = "Props",            [KEY_UNDO] = "Undo",</div><div class="line">    [KEY_FRONT] = "Front",            [KEY_COPY] = "Copy",</div><div class="line">    [KEY_OPEN] = "Open",            [KEY_PASTE] = "Paste",</div><div class="line">    [KEY_FIND] = "Find",            [KEY_CUT] = "Cut",</div><div class="line">    [KEY_HELP] = "Help",            [KEY_MENU] = "Menu",</div><div class="line">    [KEY_CALC] = "Calc",            [KEY_SETUP] = "Setup",</div><div class="line">    [KEY_SLEEP] = "Sleep",            [KEY_WAKEUP] = "WakeUp",</div><div class="line">    [KEY_FILE] = "File",            [KEY_SENDFILE] = "SendFile",</div><div class="line">    [KEY_DELETEFILE] = "DeleteFile",    [KEY_XFER] = "X-fer",</div><div class="line">    [KEY_PROG1] = "Prog1",            [KEY_PROG2] = "Prog2",</div><div class="line">    [KEY_WWW] = "WWW",            [KEY_MSDOS] = "MSDOS",</div><div class="line">    [KEY_COFFEE] = "Coffee",        [KEY_DIRECTION] = "Direction",</div><div class="line">    [KEY_CYCLEWINDOWS] = "CycleWindows",    [KEY_MAIL] = "Mail",</div><div class="line">    [KEY_BOOKMARKS] = "Bookmarks",        [KEY_COMPUTER] = "Computer",</div><div class="line">    [KEY_BACK] = "Back",            [KEY_FORWARD] = "Forward",</div><div class="line">    [KEY_CLOSECD] = "CloseCD",        [KEY_EJECTCD] = "EjectCD",</div><div class="line">    [KEY_EJECTCLOSECD] = "EjectCloseCD",    [KEY_NEXTSONG] = "NextSong",</div><div class="line">    [KEY_PLAYPAUSE] = "PlayPause",        [KEY_PREVIOUSSONG] = "PreviousSong",</div><div class="line">    [KEY_STOPCD] = "StopCD",        [KEY_RECORD] = "Record",</div><div class="line">    [KEY_REWIND] = "Rewind",        [KEY_PHONE] = "Phone",</div><div class="line">    [KEY_ISO] = "ISOKey",            [KEY_CONFIG] = "Config",</div><div class="line">    [KEY_HOMEPAGE] = "HomePage",        [KEY_REFRESH] = "Refresh",</div><div class="line">    [KEY_EXIT] = "Exit",            [KEY_MOVE] = "Move",</div><div class="line">    [KEY_EDIT] = "Edit",            [KEY_SCROLLUP] = "ScrollUp",</div><div class="line">    [KEY_SCROLLDOWN] = "ScrollDown",    [KEY_KPLEFTPAREN] = "KPLeftParenthesis",</div><div class="line">    [KEY_KPRIGHTPAREN] = "KPRightParenthesis", [KEY_F13] = "F13",</div><div class="line">    [KEY_F14] = "F14",            [KEY_F15] = "F15",</div><div class="line">    [KEY_F16] = "F16",            [KEY_F17] = "F17",</div><div class="line">    [KEY_F18] = "F18",            [KEY_F19] = "F19",</div><div class="line">    [KEY_F20] = "F20",            [KEY_F21] = "F21",</div><div class="line">    [KEY_F22] = "F22",            [KEY_F23] = "F23",</div><div class="line">    [KEY_F24] = "F24",            [KEY_PLAYCD] = "PlayCD",</div><div class="line">    [KEY_PAUSECD] = "PauseCD",        [KEY_PROG3] = "Prog3",</div><div class="line">    [KEY_PROG4] = "Prog4",            [KEY_SUSPEND] = "Suspend",</div><div class="line">    [KEY_CLOSE] = "Close",            [KEY_PLAY] = "Play",</div><div class="line">    [KEY_FASTFORWARD] = "Fast Forward",    [KEY_BASSBOOST] = "Bass Boost",</div><div class="line">    [KEY_PRINT] = "Print",            [KEY_HP] = "HP",</div><div class="line">    [KEY_CAMERA] = "Camera",        [KEY_SOUND] = "Sound",</div><div class="line">    [KEY_QUESTION] = "Question",        [KEY_EMAIL] = "Email",</div><div class="line">    [KEY_CHAT] = "Chat",            [KEY_SEARCH] = "Search",</div><div class="line">    [KEY_CONNECT] = "Connect",        [KEY_FINANCE] = "Finance",</div><div class="line">    [KEY_SPORT] = "Sport",            [KEY_SHOP] = "Shop",</div><div class="line">    [KEY_ALTERASE] = "Alternate Erase",    [KEY_CANCEL] = "Cancel",</div><div class="line">    [KEY_BRIGHTNESSDOWN] = "Brightness down", [KEY_BRIGHTNESSUP] = "Brightness up",</div><div class="line">    [KEY_MEDIA] = "Media",            [KEY_UNKNOWN] = "Unknown",</div><div class="line">    [BTN_0] = "Btn0",            [BTN_1] = "Btn1",</div><div class="line">    [BTN_2] = "Btn2",            [BTN_3] = "Btn3",</div><div class="line">    [BTN_4] = "Btn4",            [BTN_5] = "Btn5",</div><div class="line">    [BTN_6] = "Btn6",            [BTN_7] = "Btn7",</div><div class="line">    [BTN_8] = "Btn8",            [BTN_9] = "Btn9",</div><div class="line">    [BTN_LEFT] = "LeftBtn",            [BTN_RIGHT] = "RightBtn",</div><div class="line">    [BTN_MIDDLE] = "MiddleBtn",        [BTN_SIDE] = "SideBtn",</div><div class="line">    [BTN_EXTRA] = "ExtraBtn",        [BTN_FORWARD] = "ForwardBtn",</div><div class="line">    [BTN_BACK] = "BackBtn",            [BTN_TASK] = "TaskBtn",</div><div class="line">    [BTN_TRIGGER] = "Trigger",        [BTN_THUMB] = "ThumbBtn",</div><div class="line">    [BTN_THUMB2] = "ThumbBtn2",        [BTN_TOP] = "TopBtn",</div><div class="line">    [BTN_TOP2] = "TopBtn2",            [BTN_PINKIE] = "PinkieBtn",</div><div class="line">    [BTN_BASE] = "BaseBtn",            [BTN_BASE2] = "BaseBtn2",</div><div class="line">    [BTN_BASE3] = "BaseBtn3",        [BTN_BASE4] = "BaseBtn4",</div><div class="line">    [BTN_BASE5] = "BaseBtn5",        [BTN_BASE6] = "BaseBtn6",</div><div class="line">    [BTN_DEAD] = "BtnDead",            [BTN_A] = "BtnA",</div><div class="line">    [BTN_B] = "BtnB",            [BTN_C] = "BtnC",</div><div class="line">    [BTN_X] = "BtnX",            [BTN_Y] = "BtnY",</div><div class="line">    [BTN_Z] = "BtnZ",            [BTN_TL] = "BtnTL",</div><div class="line">    [BTN_TR] = "BtnTR",            [BTN_TL2] = "BtnTL2",</div><div class="line">    [BTN_TR2] = "BtnTR2",            [BTN_SELECT] = "BtnSelect",</div><div class="line">    [BTN_START] = "BtnStart",        [BTN_MODE] = "BtnMode",</div><div class="line">    [BTN_THUMBL] = "BtnThumbL",        [BTN_THUMBR] = "BtnThumbR",</div><div class="line">    [BTN_TOOL_PEN] = "ToolPen",        [BTN_TOOL_RUBBER] = "ToolRubber",</div><div class="line">    [BTN_TOOL_BRUSH] = "ToolBrush",        [BTN_TOOL_PENCIL] = "ToolPencil",</div><div class="line">    [BTN_TOOL_AIRBRUSH] = "ToolAirbrush",    [BTN_TOOL_FINGER] = "ToolFinger",</div><div class="line">    [BTN_TOOL_MOUSE] = "ToolMouse",        [BTN_TOOL_LENS] = "ToolLens",</div><div class="line">    [BTN_TOUCH] = "Touch",            [BTN_STYLUS] = "Stylus",</div><div class="line">    [BTN_STYLUS2] = "Stylus2",        [BTN_TOOL_DOUBLETAP] = "Tool Doubletap",</div><div class="line">    [BTN_TOOL_TRIPLETAP] = "Tool Tripletap", [BTN_GEAR_DOWN] = "WheelBtn",</div><div class="line">    [BTN_GEAR_UP] = "Gear up",        [KEY_OK] = "Ok",</div><div class="line">    [KEY_SELECT] = "Select",        [KEY_GOTO] = "Goto",</div><div class="line">    [KEY_CLEAR] = "Clear",            [KEY_POWER2] = "Power2",</div><div class="line">    [KEY_OPTION] = "Option",        [KEY_INFO] = "Info",</div><div class="line">    [KEY_TIME] = "Time",            [KEY_VENDOR] = "Vendor",</div><div class="line">    [KEY_ARCHIVE] = "Archive",        [KEY_PROGRAM] = "Program",</div><div class="line">    [KEY_CHANNEL] = "Channel",        [KEY_FAVORITES] = "Favorites",</div><div class="line">    [KEY_EPG] = "EPG",            [KEY_PVR] = "PVR",</div><div class="line">    [KEY_MHP] = "MHP",            [KEY_LANGUAGE] = "Language",</div><div class="line">    [KEY_TITLE] = "Title",            [KEY_SUBTITLE] = "Subtitle",</div><div class="line">    [KEY_ANGLE] = "Angle",            [KEY_ZOOM] = "Zoom",</div><div class="line">    [KEY_MODE] = "Mode",            [KEY_KEYBOARD] = "Keyboard",</div><div class="line">    [KEY_SCREEN] = "Screen",        [KEY_PC] = "PC",</div><div class="line">    [KEY_TV] = "TV",            [KEY_TV2] = "TV2",</div><div class="line">    [KEY_VCR] = "VCR",            [KEY_VCR2] = "VCR2",</div><div class="line">    [KEY_SAT] = "Sat",            [KEY_SAT2] = "Sat2",</div><div class="line">    [KEY_CD] = "CD",            [KEY_TAPE] = "Tape",</div><div class="line">    [KEY_RADIO] = "Radio",            [KEY_TUNER] = "Tuner",</div><div class="line">    [KEY_PLAYER] = "Player",        [KEY_TEXT] = "Text",</div><div class="line">    [KEY_DVD] = "DVD",            [KEY_AUX] = "Aux",</div><div class="line">    [KEY_MP3] = "MP3",            [KEY_AUDIO] = "Audio",</div><div class="line">    [KEY_VIDEO] = "Video",            [KEY_DIRECTORY] = "Directory",</div><div class="line">    [KEY_LIST] = "List",            [KEY_MEMO] = "Memo",</div><div class="line">    [KEY_CALENDAR] = "Calendar",        [KEY_RED] = "Red",</div><div class="line">    [KEY_GREEN] = "Green",            [KEY_YELLOW] = "Yellow",</div><div class="line">    [KEY_BLUE] = "Blue",            [KEY_CHANNELUP] = "ChannelUp",</div><div class="line">    [KEY_CHANNELDOWN] = "ChannelDown",    [KEY_FIRST] = "First",</div><div class="line">    [KEY_LAST] = "Last",            [KEY_AB] = "AB",</div><div class="line">    [KEY_NEXT] = "Next",            [KEY_RESTART] = "Restart",</div><div class="line">    [KEY_SLOW] = "Slow",            [KEY_SHUFFLE] = "Shuffle",</div><div class="line">    [KEY_BREAK] = "Break",            [KEY_PREVIOUS] = "Previous",</div><div class="line">    [KEY_DIGITS] = "Digits",        [KEY_TEEN] = "TEEN",</div><div class="line">    [KEY_TWEN] = "TWEN",            [KEY_DEL_EOL] = "Delete EOL",</div><div class="line">    [KEY_DEL_EOS] = "Delete EOS",        [KEY_INS_LINE] = "Insert line",</div><div class="line">    [KEY_DEL_LINE] = "Delete line",</div><div class="line">&#125;;</div><div class="line"></div><div class="line">char *absval[5] = &#123; "Value", "Min ", "Max ", "Fuzz ", "Flat " &#125;;</div><div class="line"></div><div class="line">char *relatives[REL_MAX + 1] =</div><div class="line">&#123;</div><div class="line">    [0 ... REL_MAX] = NULL,</div><div class="line">    [REL_X] = "X",            [REL_Y] = "Y",</div><div class="line">    [REL_Z] = "Z",            [REL_HWHEEL] = "HWheel",</div><div class="line">    [REL_DIAL] = "Dial",        [REL_WHEEL] = "Wheel",</div><div class="line">    [REL_MISC] = "Misc",</div><div class="line">&#125;;</div><div class="line"></div><div class="line">char *absolutes[ABS_MAX + 1] =</div><div class="line">&#123;</div><div class="line">    [0 ... ABS_MAX] = NULL,</div><div class="line">    [ABS_X] = "X",            [ABS_Y] = "Y",</div><div class="line">    [ABS_Z] = "Z",            [ABS_RX] = "Rx",</div><div class="line">    [ABS_RY] = "Ry",        [ABS_RZ] = "Rz",</div><div class="line">    [ABS_THROTTLE] = "Throttle",    [ABS_RUDDER] = "Rudder",</div><div class="line">    [ABS_WHEEL] = "Wheel",        [ABS_GAS] = "Gas",</div><div class="line">    [ABS_BRAKE] = "Brake",        [ABS_HAT0X] = "Hat0X",</div><div class="line">    [ABS_HAT0Y] = "Hat0Y",        [ABS_HAT1X] = "Hat1X",</div><div class="line">    [ABS_HAT1Y] = "Hat1Y",        [ABS_HAT2X] = "Hat2X",</div><div class="line">    [ABS_HAT2Y] = "Hat2Y",        [ABS_HAT3X] = "Hat3X",</div><div class="line">    [ABS_HAT3Y] = "Hat 3Y",        [ABS_PRESSURE] = "Pressure",</div><div class="line">    [ABS_DISTANCE] = "Distance",    [ABS_TILT_X] = "XTilt",</div><div class="line">    [ABS_TILT_Y] = "YTilt",        [ABS_TOOL_WIDTH] = "Tool Width",</div><div class="line">    [ABS_VOLUME] = "Volume",    [ABS_MISC] = "Misc",</div><div class="line">&#125;;</div><div class="line"></div><div class="line">char *misc[MSC_MAX + 1] =</div><div class="line">&#123;</div><div class="line">    [ 0 ... MSC_MAX] = NULL,</div><div class="line">    [MSC_SERIAL] = "Serial",    [MSC_PULSELED] = "Pulseled",</div><div class="line">    [MSC_GESTURE] = "Gesture",    [MSC_RAW] = "RawData",</div><div class="line">    [MSC_SCAN] = "ScanCode",</div><div class="line">&#125;;</div><div class="line"></div><div class="line">char *leds[LED_MAX + 1] =</div><div class="line">&#123;</div><div class="line">    [0 ... LED_MAX] = NULL,</div><div class="line">    [LED_NUML] = "NumLock",        [LED_CAPSL] = "CapsLock",</div><div class="line">    [LED_SCROLLL] = "ScrollLock",    [LED_COMPOSE] = "Compose",</div><div class="line">    [LED_KANA] = "Kana",        [LED_SLEEP] = "Sleep",</div><div class="line">    [LED_SUSPEND] = "Suspend",    [LED_MUTE] = "Mute",</div><div class="line">    [LED_MISC] = "Misc",</div><div class="line">&#125;;</div><div class="line"></div><div class="line">char *repeats[REP_MAX + 1] =</div><div class="line">&#123;</div><div class="line">    [0 ... REP_MAX] = NULL,</div><div class="line">    [REP_DELAY] = "Delay",        [REP_PERIOD] = "Period"</div><div class="line">&#125;;</div><div class="line"></div><div class="line">char *sounds[SND_MAX + 1] =</div><div class="line">&#123;</div><div class="line">    [0 ... SND_MAX] = NULL,</div><div class="line">    [SND_CLICK] = "Click",        [SND_BELL] = "Bell",</div><div class="line">    [SND_TONE] = "Tone"</div><div class="line">&#125;;</div><div class="line"></div><div class="line">char **names[EV_MAX + 1] =</div><div class="line">&#123;</div><div class="line">    [0 ... EV_MAX] = NULL,</div><div class="line">    [EV_SYN] = events,            [EV_KEY] = keys,</div><div class="line">    [EV_REL] = relatives,            [EV_ABS] = absolutes,</div><div class="line">    [EV_MSC] = misc,            [EV_LED] = leds,</div><div class="line">    [EV_SND] = sounds,            [EV_REP] = repeats,</div><div class="line">&#125;;</div><div class="line"></div><div class="line">#define BITS_PER_LONG (sizeof(long) * 8)</div><div class="line">#define NBITS(x) ((((x)-1)/BITS_PER_LONG)+1)</div><div class="line">#define OFF(x) ((x)%BITS_PER_LONG)</div><div class="line">#define BIT(x) (1UL&lt;&lt;OFF(x))</div><div class="line">#define LONG(x) ((x)/BITS_PER_LONG)</div><div class="line">#define test_bit(bit, array)    ((array[LONG(bit)] &gt;&gt; OFF(bit)) &amp; 1)</div><div class="line"></div><div class="line">int main (int argc, char **argv)</div><div class="line">&#123;</div><div class="line">    int fd, rd, i, j, k;</div><div class="line">    struct input_event ev[64];</div><div class="line">    int version;</div><div class="line">    unsigned short id[4];</div><div class="line">    unsigned long bit[EV_MAX][NBITS(KEY_MAX)];</div><div class="line">    char name[256] = "Unknown";</div><div class="line">    int abs[5];</div><div class="line"></div><div class="line">    if (argc &lt; 2)</div><div class="line">    &#123;</div><div class="line">        printf("Usage: evtest /dev/input/eventX\n");</div><div class="line">        printf("Where X = input device number\n");</div><div class="line">        return 1;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    if ((fd = open(argv[argc - 1], O_RDONLY)) &lt; 0)</div><div class="line">    &#123;</div><div class="line">        perror("evtest");</div><div class="line">        return 1;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    if (ioctl(fd, EVIOCGVERSION, &amp;version))</div><div class="line">    &#123;</div><div class="line">        perror("evtest: can't get version");</div><div class="line">        return 1;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    printf("Input driver version is %d.%d.%d\n",</div><div class="line">           version &gt;&gt; 16, (version &gt;&gt; 8) &amp; 0xff, version &amp; 0xff);</div><div class="line"></div><div class="line">    ioctl(fd, EVIOCGID, id);</div><div class="line">    printf("Input device ID: bus 0x%x vendor 0x%x product 0x%x version 0x%x\n",</div><div class="line">           id[ID_BUS], id[ID_VENDOR], id[ID_PRODUCT], id[ID_VERSION]);</div><div class="line"></div><div class="line">    ioctl(fd, EVIOCGNAME(sizeof(name)), name);</div><div class="line">    printf("Input device name: \"%s\"\n", name);</div><div class="line"></div><div class="line">    memset(bit, 0, sizeof(bit));</div><div class="line">    ioctl(fd, EVIOCGBIT(0, EV_MAX), bit[0]);</div><div class="line">    printf("Supported events:\n");</div><div class="line"></div><div class="line">    for (i = 0; i &lt; EV_MAX; i++)</div><div class="line">        if (test_bit(i, bit[0]))</div><div class="line">        &#123;</div><div class="line">            printf(" Event type %d (%s)\n", i, events[i] ? events[i] : "?");</div><div class="line">            if (!i) continue;</div><div class="line">            ioctl(fd, EVIOCGBIT(i, KEY_MAX), bit[i]);</div><div class="line">            for (j = 0; j &lt; KEY_MAX; j++)</div><div class="line">                if (test_bit(j, bit[i]))</div><div class="line">                &#123;</div><div class="line">                    printf(" Event code %d (%s)\n", j, names[i] ? (names[i][j] ? names[i][j] : "?") : "?");</div><div class="line">                    if (i == EV_ABS)</div><div class="line">                    &#123;</div><div class="line">                        ioctl(fd, EVIOCGABS(j), abs);</div><div class="line">                        for (k = 0; k &lt; 5; k++)</div><div class="line">                            if ((k &lt; 3) || abs[k])</div><div class="line">                                printf(" %s %6d\n", absval[k], abs[k]);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">    printf("Testing ... (interrupt to exit)\n");</div><div class="line"></div><div class="line">    while (1)</div><div class="line">    &#123;</div><div class="line">        rd = read(fd, ev, sizeof(struct input_event) * 64);</div><div class="line"></div><div class="line">        if (rd &lt; (int) sizeof(struct input_event))</div><div class="line">        &#123;</div><div class="line">            printf("yyy\n");</div><div class="line">            perror("\nevtest: error reading");</div><div class="line">            return 1;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        for (i = 0; i &lt; rd / sizeof(struct input_event); i++)</div><div class="line"></div><div class="line">            if (ev[i].type == EV_SYN)</div><div class="line">            &#123;</div><div class="line">                printf("Event: time %ld.%06ld, -------------- %s ------------\n",</div><div class="line">                       ev[i].time.tv_sec, ev[i].time.tv_usec, ev[i].code ? "Config Sync" : "Report Sync" );</div><div class="line">            &#125;</div><div class="line">            else if (ev[i].type == EV_MSC &amp;&amp; (ev[i].code == MSC_RAW || ev[i].code == MSC_SCAN))</div><div class="line">            &#123;</div><div class="line">                printf("Event: time %ld.%06ld, type %d (%s), code %d (%s), value %02x\n",</div><div class="line">                       ev[i].time.tv_sec, ev[i].time.tv_usec, ev[i].type,</div><div class="line">                       events[ev[i].type] ? events[ev[i].type] : "?",</div><div class="line">                       ev[i].code,</div><div class="line">                       names[ev[i].type] ? (names[ev[i].type][ev[i].code] ? names[ev[i].type][ev[i].code] : "?") : "?",</div><div class="line">                       ev[i].value);</div><div class="line">            &#125;</div><div class="line">            else</div><div class="line">            &#123;</div><div class="line">                printf("Event: time %ld.%06ld, type %d (%s), code %d (%s), value %d\n",</div><div class="line">                       ev[i].time.tv_sec, ev[i].time.tv_usec, ev[i].type,</div><div class="line">                       events[ev[i].type] ? events[ev[i].type] : "?",</div><div class="line">                       ev[i].code,</div><div class="line">                       names[ev[i].type] ? (names[ev[i].type][ev[i].code] ? names[ev[i].type][ev[i].code] : "?") : "?",</div><div class="line">                       ev[i].value);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>测试效果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"># ./evtest /dev/input/event2</div><div class="line">Input driver version is 1.0.1</div><div class="line">Input device ID: bus 0x1c vendor 0x0 product 0x159 version 0x0</div><div class="line">Input device name: &quot;ADXL34x accelerometer&quot;</div><div class="line">Supported events:</div><div class="line"> Event type 0 (Sync)</div><div class="line"> Event type 1 (Key)</div><div class="line"> Event code 330 (Touch)</div><div class="line"> Event type 3 (Absolute)</div><div class="line"> Event code 0 (X)</div><div class="line"> Value      0</div><div class="line"> Min   -4096</div><div class="line"> Max    4096</div><div class="line"> Fuzz       3</div><div class="line"> Flat       3</div><div class="line"> Event code 1 (Y)</div><div class="line"> Value      0</div><div class="line"> Min   -4096</div><div class="line"> Max    4096</div><div class="line"> Fuzz       3</div><div class="line"> Flat       3</div><div class="line"> Event code 2 (Z)</div><div class="line"> Value      0</div><div class="line"> Min   -4096</div><div class="line"> Max    4096</div><div class="line"> Fuzz       3</div><div class="line"> Flat       3</div><div class="line">Testing ... (interrupt to exit)</div><div class="line">Event: time 3949236.075868, type 3 (Absolute), code 0 (X), value -223</div><div class="line">Event: time 3949236.075868, type 3 (Absolute), code 1 (Y), value -10</div><div class="line">Event: time 3949236.075868, type 3 (Absolute), code 2 (Z), value -13</div><div class="line">Event: time 3949236.075868, -------------- Report Sync ------------</div><div class="line">Event: time 3949236.115188, type 3 (Absolute), code 0 (X), value -235</div><div class="line">Event: time 3949236.115188, -------------- Report Sync ------------</div><div class="line">Event: time 3949236.154590, type 3 (Absolute), code 0 (X), value -234</div><div class="line">Event: time 3949236.154590, -------------- Report Sync ------------</div><div class="line">Event: time 3949236.824446, type 3 (Absolute), code 2 (Z), value -14</div><div class="line">Event: time 3949236.824446, -------------- Report Sync ------------</div><div class="line">Event: time 3949236.863862, type 3 (Absolute), code 2 (Z), value -13</div><div class="line">Event: time 3949236.863862, -------------- Report Sync ------------</div><div class="line">Event: time 3949236.903264, type 3 (Absolute), code 2 (Z), value -12</div><div class="line">Event: time 3949236.903264, -------------- Report Sync ------------</div><div class="line">Event: time 3949236.942659, type 3 (Absolute), code 2 (Z), value -13</div><div class="line">Event: time 3949236.942659, -------------- Report Sync ------------</div><div class="line">Event: time 3949237.021471, type 3 (Absolute), code 2 (Z), value -12</div><div class="line">Event: time 3949237.021471, -------------- Report Sync ------------</div><div class="line">Event: time 3949237.257883, type 3 (Absolute), code 2 (Z), value -13</div><div class="line">Event: time 3949237.257883, -------------- Report Sync ------------</div><div class="line">Event: time 3949238.006540, type 3 (Absolute), code 0 (X), value -233</div><div class="line">Event: time 3949238.006540, type 3 (Absolute), code 1 (Y), value -11</div><div class="line">Event: time 3949238.006540, -------------- Report Sync ------------</div><div class="line">Event: time 3949238.045949, type 3 (Absolute), code 2 (Z), value -14</div><div class="line">Event: time 3949238.045949, -------------- Report Sync ------------</div><div class="line">Event: time 3949238.085346, type 3 (Absolute), code 2 (Z), value -13</div><div class="line">Event: time 3949238.085346, -------------- Report Sync ------------</div><div class="line">Event: time 3949238.164144, type 3 (Absolute), code 1 (Y), value -10</div><div class="line">Event: time 3949238.164144, -------------- Report Sync ------------</div><div class="line">Event: time 3949238.361159, type 3 (Absolute), code 2 (Z), value -12</div><div class="line">Event: time 3949238.361159, -------------- Report Sync ------------</div><div class="line">Event: time 3949238.400569, type 3 (Absolute), code 0 (X), value -234</div><div class="line">Event: time 3949238.400569, -------------- Report Sync ------------</div><div class="line">Event: time 3949238.676384, type 3 (Absolute), code 2 (Z), value -13</div><div class="line">Event: time 3949238.676384, -------------- Report Sync ------------</div><div class="line">Event: time 3949238.755194, type 3 (Absolute), code 0 (X), value -241</div><div class="line">Event: time 3949238.755194, type 3 (Absolute), code 1 (Y), value -1</div><div class="line">Event: time 3949238.755194, type 3 (Absolute), code 2 (Z), value 19</div><div class="line">Event: time 3949238.755194, -------------- Report Sync ------------</div><div class="line">Event: time 3949238.794592, type 3 (Absolute), code 0 (X), value -298</div><div class="line">Event: time 3949238.794592, type 3 (Absolute), code 1 (Y), value 42</div><div class="line">Event: time 3949238.794592, type 3 (Absolute), code 2 (Z), value -33</div></pre></td></tr></table></figure></li></ul><h2 id="2-4-详细分析"><a href="#2-4-详细分析" class="headerlink" title="2.4 详细分析"></a>2.4 详细分析</h2><h3 id="2-4-1-几个重要结构体"><a href="#2-4-1-几个重要结构体" class="headerlink" title="2.4.1 几个重要结构体"></a>2.4.1 几个重要结构体</h3><p><code>adxl34x.c</code>的<code>probe()</code>一进来就定义了三个结构体：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">struct adxl34x *ac;</div><div class="line">struct input_dev *input_dev;</div><div class="line">const struct adxl34x_platform_data *pdata;</div></pre></td></tr></table></figure></p><p><code>adxl34x</code>就是针对设备量身定制的，包含所有信息，在对其进行一系列的设置后，在<code>adxl34x-spi.c</code>的<code>probe()</code>里，使用<code>spi_set_drvdata()</code>将其保存到<code>spi_device</code>的私有数据里，以后其它函数可以通过<code>spi_get_drvdata()</code>得到该结构体，从而获取设备的所有信息。<br><code>input_dev</code>表示一个输入设备，里面有一个输入设备的属性定义。<br><code>adxl34x_platform_data</code>包含adxl34x设备的属性定义。</p><p>定义完后，进行初始化：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">ac = kzalloc(<span class="keyword">sizeof</span>(*ac), GFP_KERNEL);</div><div class="line">input_dev = input_allocate_device();</div><div class="line"><span class="keyword">if</span> (!ac || !input_dev) &#123;</div><div class="line">err = -ENOMEM;</div><div class="line"><span class="keyword">goto</span> err_free_mem;</div><div class="line">&#125;</div><div class="line"></div><div class="line">ac-&gt;fifo_delay = fifo_delay_default;</div><div class="line"></div><div class="line">pdata = dev_get_platdata(dev);</div><div class="line"><span class="keyword">if</span> (!pdata) &#123;</div><div class="line">dev_dbg(dev,</div><div class="line"><span class="string">"No platform data: Using default initialization\n"</span>);</div><div class="line">pdata = &amp;adxl34x_default_init;</div><div class="line">&#125;</div></pre></td></tr></table></figure><br><code>adxl34x</code>使用<code>kzalloc()</code>分配空间并清零。<br><code>input_dev</code>使用输入子系统提供的<code>input_allocate_device()</code>分配空间。<br><code>adxl34x_platform_data</code>先尝试从<code>device</code>获取，没有的话使用默认的配置，也就是<code>adxl34x_default_init</code>的内容，里面有ADXL34X支持何种输入事件、电源模式等。</p><h3 id="2-4-2-判断中断"><a href="#2-4-2-判断中断" class="headerlink" title="2.4.2 判断中断"></a>2.4.2 判断中断</h3><p>ADXL34X工作时，通过中断引脚通知主机发生了某中断事件，因此中断是必不可少的，这里检测如果没有中断则返回错误。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (!irq) &#123;</div><div class="line">dev_err(dev, <span class="string">"no IRQ?\n"</span>);</div><div class="line">err = -ENODEV;</div><div class="line"><span class="keyword">goto</span> err_out;</div><div class="line">&#125;</div><div class="line"></div></pre></td></tr></table></figure></p><h3 id="2-4-3-设置adxl34x"><a href="#2-4-3-设置adxl34x" class="headerlink" title="2.4.3 设置adxl34x"></a>2.4.3 设置<code>adxl34x</code></h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">ac-&gt;fifo_delay = fifo_delay_default;</div><div class="line"></div><div class="line">ac-&gt;pdata = *pdata;</div><div class="line">pdata = &amp;ac-&gt;pdata;</div><div class="line"></div><div class="line">ac-&gt;input = input_dev;</div><div class="line">ac-&gt;dev = dev;</div><div class="line">ac-&gt;irq = irq;</div><div class="line">ac-&gt;bops = bops;</div><div class="line"></div><div class="line">mutex_init(&amp;ac-&gt;mutex);</div><div class="line"></div><div class="line">input_dev-&gt;name = <span class="string">"ADXL34x accelerometer"</span>;</div><div class="line">revid = AC_READ(ac, DEVID);</div><div class="line"></div><div class="line"><span class="keyword">switch</span> (revid) &#123;</div><div class="line"><span class="keyword">case</span> ID_ADXL345:</div><div class="line">ac-&gt;model = <span class="number">345</span>;</div><div class="line"><span class="keyword">break</span>;</div><div class="line"><span class="keyword">case</span> ID_ADXL346:</div><div class="line">ac-&gt;model = <span class="number">346</span>;</div><div class="line"><span class="keyword">break</span>;</div><div class="line"><span class="keyword">default</span>:</div><div class="line">dev_err(dev, <span class="string">"Failed to probe %s\n"</span>, input_dev-&gt;name);</div><div class="line">err = -ENODEV;</div><div class="line"><span class="keyword">goto</span> err_free_mem;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="built_in">snprintf</span>(ac-&gt;phys, <span class="keyword">sizeof</span>(ac-&gt;phys), <span class="string">"%s/input0"</span>, dev_name(dev));</div></pre></td></tr></table></figure><p>将<code>input_dev</code>、<code>adxl34x_platform_data</code>指向<code>adxl34x</code>；<br>将传入的参数赋值给<code>adxl34x</code>，初始化部分<code>adxl34x</code>参数；<br>还读取设备ID判断是ADXL345，还是ADXL346。</p><h3 id="2-4-4-设置input-dev"><a href="#2-4-4-设置input-dev" class="headerlink" title="2.4.4 设置input_dev"></a>2.4.4 设置<code>input_dev</code></h3><p>先使用<code>__set_bit(ac-&gt;pdata.ev_type, input_dev-&gt;evbit);</code>设置支持哪一类事件，由前面的<code>adxl34x_default_init</code>可知为<code>EV_ABS</code>。<br>如果为<code>EV_ABS</code>类型，再使用<code>_set_bit()</code>和<code>input_set_abs_params()</code>设置能产生该类的哪些事件。其中<code>input_set_abs_params()</code>也是调用的<code>__set_bit()</code>，参数依次为input设备指针、坐标轴、最小范围、最大范围、过滤值、丢弃范围值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">__set_bit(ac-&gt;pdata.ev_type, input_dev-&gt;evbit);</div><div class="line">……</div><div class="line">__set_bit(ABS_X, input_dev-&gt;absbit);</div><div class="line">__set_bit(ABS_Y, input_dev-&gt;absbit);</div><div class="line">__set_bit(ABS_Z, input_dev-&gt;absbit);</div><div class="line">……</div><div class="line">input_set_abs_params(input_dev, ABS_X, -range, range, 3, 3);</div><div class="line">input_set_abs_params(input_dev, ABS_Y, -range, range, 3, 3);</div><div class="line">input_set_abs_params(input_dev, ABS_Z, -range, range, 3, 3);</div></pre></td></tr></table></figure></p><p>接下来设置支持<code>EV_KEY</code>类事件，再具体设置支持类中的哪些事件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">__set_bit(EV_KEY, input_dev-&gt;evbit);</div><div class="line">__set_bit(pdata-&gt;ev_code_tap[ADXL_X_AXIS], input_dev-&gt;keybit);</div><div class="line">__set_bit(pdata-&gt;ev_code_tap[ADXL_Y_AXIS], input_dev-&gt;keybit);</div><div class="line">__set_bit(pdata-&gt;ev_code_tap[ADXL_Z_AXIS], input_dev-&gt;keybit);</div></pre></td></tr></table></figure></p><p>可以看出，设置<code>input_dev</code>的思路就是<strong>先设置支持哪一类事件，再设置类中的具体事件</strong>。</p><p><code>input</code>子系统中支持的类型含义：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">EV_SYN 同步事件 </div><div class="line">EV_KEY 键盘事件 </div><div class="line">EV_REL 相对坐标事件，用于鼠标 </div><div class="line">EV_ABS 绝对坐标事件，用于摇杆 </div><div class="line">EV_MSC 其他事件 </div><div class="line">EV_LED LED灯事件 </div><div class="line">EV_SND 声音事件 </div><div class="line">EV_REP 重复按键事件 </div><div class="line">EV_FF  受力事件 </div><div class="line">EV_PWR 电源事件 </div><div class="line">EV_FF_STATUS 受力状态事件</div></pre></td></tr></table></figure></p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">input_dev-&gt;phys = ac-&gt;phys;</div><div class="line">input_dev-&gt;dev.parent = dev;</div><div class="line">input_dev-&gt;id.product = ac-&gt;model;</div><div class="line">input_dev-&gt;id.bustype = bops-&gt;bustype;</div><div class="line">input_dev-&gt;open = adxl34x_input_open;</div><div class="line">input_dev-&gt;close = adxl34x_input_close;</div><div class="line"></div><div class="line">input_set_drvdata(input_dev, ac);</div><div class="line"></div><div class="line">__set_bit(ac-&gt;pdata.ev_type, input_dev-&gt;evbit);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (ac-&gt;pdata.ev_type == EV_REL) &#123;</div><div class="line">__set_bit(REL_X, input_dev-&gt;relbit);</div><div class="line">__set_bit(REL_Y, input_dev-&gt;relbit);</div><div class="line">__set_bit(REL_Z, input_dev-&gt;relbit);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line"><span class="comment">/* EV_ABS */</span></div><div class="line">__set_bit(ABS_X, input_dev-&gt;absbit);</div><div class="line">__set_bit(ABS_Y, input_dev-&gt;absbit);</div><div class="line">__set_bit(ABS_Z, input_dev-&gt;absbit);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (pdata-&gt;data_range &amp; FULL_RES)</div><div class="line">range = ADXL_FULLRES_MAX_VAL;<span class="comment">/* Signed 13-bit */</span></div><div class="line"><span class="keyword">else</span></div><div class="line">range = ADXL_FIXEDRES_MAX_VAL;<span class="comment">/* Signed 10-bit */</span></div><div class="line"></div><div class="line">input_set_abs_params(input_dev, ABS_X, -range, range, <span class="number">3</span>, <span class="number">3</span>);</div><div class="line">input_set_abs_params(input_dev, ABS_Y, -range, range, <span class="number">3</span>, <span class="number">3</span>);</div><div class="line">input_set_abs_params(input_dev, ABS_Z, -range, range, <span class="number">3</span>, <span class="number">3</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line">__set_bit(EV_KEY, input_dev-&gt;evbit);</div><div class="line">__set_bit(pdata-&gt;ev_code_tap[ADXL_X_AXIS], input_dev-&gt;keybit);</div><div class="line">__set_bit(pdata-&gt;ev_code_tap[ADXL_Y_AXIS], input_dev-&gt;keybit);</div><div class="line">__set_bit(pdata-&gt;ev_code_tap[ADXL_Z_AXIS], input_dev-&gt;keybit);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (pdata-&gt;ev_code_ff) &#123;</div><div class="line">ac-&gt;int_mask = FREE_FALL;</div><div class="line">__set_bit(pdata-&gt;ev_code_ff, input_dev-&gt;keybit);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (pdata-&gt;ev_code_act_inactivity)</div><div class="line">__set_bit(pdata-&gt;ev_code_act_inactivity, input_dev-&gt;keybit);</div></pre></td></tr></table></figure><h3 id="2-4-5-设置中断"><a href="#2-4-5-设置中断" class="headerlink" title="2.4.5 设置中断"></a>2.4.5 设置中断</h3><p>ADXL345的中断引脚默认为高电平有效，也可自行修改寄存器改为低电平有效。<br>所有功能都可以同时使用，但是，一些功能可能需要共享中断引脚。<br>中断功能的详细介绍参考手册，内容有点多，有产生新数据就产生中断，加速度超过某个值产生中断，两次加速度超过某个值产生中断等。</p><p>这里根据<code>adxl34x_platform_data</code>的内容，设置<code>adxl34x</code>的<code>int_mask</code>。<br>再通过<code>request_threaded_irq()</code>申请线程中断，绑定中断处理函数，并把<code>adxl34x</code>传给中断处理函数。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">ac-&gt;int_mask |= ACTIVITY | INACTIVITY;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (pdata-&gt;watermark) &#123;</div><div class="line">ac-&gt;int_mask |= WATERMARK;</div><div class="line"><span class="keyword">if</span> (!FIFO_MODE(pdata-&gt;fifo_mode))</div><div class="line">ac-&gt;pdata.fifo_mode |= FIFO_STREAM;</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">ac-&gt;int_mask |= DATA_READY;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (pdata-&gt;tap_axis_control &amp; (TAP_X_EN | TAP_Y_EN | TAP_Z_EN))</div><div class="line">ac-&gt;int_mask |= SINGLE_TAP | DOUBLE_TAP;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (FIFO_MODE(pdata-&gt;fifo_mode) == FIFO_BYPASS)</div><div class="line">ac-&gt;fifo_delay = <span class="literal">false</span>;</div><div class="line"></div><div class="line">AC_WRITE(ac, POWER_CTL, <span class="number">0</span>);</div><div class="line"></div><div class="line">err = request_threaded_irq(ac-&gt;irq, <span class="literal">NULL</span>, adxl34x_irq,</div><div class="line">   IRQF_TRIGGER_HIGH | IRQF_ONESHOT,</div><div class="line">   dev_name(dev), ac);</div><div class="line"><span class="keyword">if</span> (err) &#123;</div><div class="line">dev_err(dev, <span class="string">"irq %d busy?\n"</span>, ac-&gt;irq);</div><div class="line"><span class="keyword">goto</span> err_free_mem;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>在产生中断时，进入中断处理函数<code>adxl34x_irq()</code>，读取中断源寄存器，判断产生的何种中断，调用相应的处理函数。<br>调用<code>input_event()</code>设置要上报的数据值，再调用<code>input_sync()</code>上报。</p><h3 id="2-4-6-创建sysfs属性文件"><a href="#2-4-6-创建sysfs属性文件" class="headerlink" title="2.4.6 创建sysfs属性文件"></a>2.4.6 创建sysfs属性文件</h3><p>同前面的AD7705一样，这里也在<code>/sys/class/input/</code>下创建节点，直接可以访问。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">err = sysfs_create_group(&amp;dev-&gt;kobj, &amp;adxl34x_attr_group);</div><div class="line"><span class="keyword">if</span> (err)</div><div class="line"><span class="keyword">goto</span> err_free_irq;</div></pre></td></tr></table></figure></p><p>根据传入的<code>attribute_group</code>结构体可以找到具体实现了哪些功能：<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> attribute *adxl34x_attributes[] = &#123;</div><div class="line">&amp;dev_attr_disable.attr,</div><div class="line">&amp;dev_attr_calibrate.attr,</div><div class="line">&amp;dev_attr_rate.attr,</div><div class="line">&amp;dev_attr_autosleep.attr,</div><div class="line">&amp;dev_attr_position.attr,</div><div class="line">#ifdef ADXL_DEBUG</div><div class="line">&amp;dev_attr_write.attr,</div><div class="line">#endif</div><div class="line"><span class="literal">NULL</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">struct</span> attribute_group adxl34x_attr_group = &#123;</div><div class="line">.attrs = adxl34x_attributes,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="title">DEVICE_ATTR</span><span class="params">(position, S_IRUGO, adxl34x_position_show, <span class="literal">NULL</span>)</span></span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="title">DEVICE_ATTR</span><span class="params">(autosleep, <span class="number">0664</span>,</span></span></div><div class="line">   adxl34x_autosleep_show, adxl34x_autosleep_store);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="title">DEVICE_ATTR</span><span class="params">(rate, <span class="number">0664</span>, adxl34x_rate_show, adxl34x_rate_store)</span></span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="title">DEVICE_ATTR</span><span class="params">(calibrate, <span class="number">0664</span>,</span></span></div><div class="line">   adxl34x_calibrate_show, adxl34x_calibrate_store);</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="title">DEVICE_ATTR</span><span class="params">(disable, <span class="number">0664</span>, adxl34x_disable_show, adxl34x_disable_store)</span></span>;</div></pre></td></tr></table></figure></p><p>可以看出提供了<code>position</code>，获取当前三轴状态；<code>autosleep</code>，设置自动休眠；<code>rate</code>，设置输出数据速率；<code>calibrate</code>，设备校准；<code>disable</code>，启用/禁用设备。</p><p>与实测内容吻合。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># ls /sys/class/input/input2</div><div class="line">capabilities  id            name          properties    uniq</div><div class="line">device        modalias      phys          subsystem</div><div class="line">event2        mouse1        power         uevent</div></pre></td></tr></table></figure></p><h3 id="2-4-7-注册输入子系统"><a href="#2-4-7-注册输入子系统" class="headerlink" title="2.4.7 注册输入子系统"></a>2.4.7 注册输入子系统</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">err = input_register_device(input_dev);</div><div class="line"><span class="keyword">if</span> (err)</div><div class="line"><span class="keyword">goto</span> err_remove_attr;</div></pre></td></tr></table></figure><h3 id="2-4-8-硬件操作"><a href="#2-4-8-硬件操作" class="headerlink" title="2.4.8 硬件操作"></a>2.4.8 硬件操作</h3><p>最后，使用<code>adxl34x-spi.c</code>提供的传输函数，根据<code>adxl34x</code>的内容操作ADXL345。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">AC_WRITE(ac, OFSX, pdata-&gt;x_axis_offset);</div><div class="line">ac-&gt;hwcal.x = pdata-&gt;x_axis_offset;</div><div class="line">AC_WRITE(ac, OFSY, pdata-&gt;y_axis_offset);</div><div class="line">ac-&gt;hwcal.y = pdata-&gt;y_axis_offset;</div><div class="line">AC_WRITE(ac, OFSZ, pdata-&gt;z_axis_offset);</div><div class="line">ac-&gt;hwcal.z = pdata-&gt;z_axis_offset;</div><div class="line">AC_WRITE(ac, THRESH_TAP, pdata-&gt;tap_threshold);</div><div class="line">AC_WRITE(ac, DUR, pdata-&gt;tap_duration);</div><div class="line">AC_WRITE(ac, LATENT, pdata-&gt;tap_latency);</div><div class="line">AC_WRITE(ac, WINDOW, pdata-&gt;tap_window);</div><div class="line">AC_WRITE(ac, THRESH_ACT, pdata-&gt;activity_threshold);</div><div class="line">AC_WRITE(ac, THRESH_INACT, pdata-&gt;inactivity_threshold);</div><div class="line">AC_WRITE(ac, TIME_INACT, pdata-&gt;inactivity_time);</div><div class="line">AC_WRITE(ac, THRESH_FF, pdata-&gt;free_fall_threshold);</div><div class="line">AC_WRITE(ac, TIME_FF, pdata-&gt;free_fall_time);</div><div class="line">AC_WRITE(ac, TAP_AXES, pdata-&gt;tap_axis_control);</div><div class="line">AC_WRITE(ac, ACT_INACT_CTL, pdata-&gt;act_axis_control);</div><div class="line">AC_WRITE(ac, BW_RATE, RATE(ac-&gt;pdata.data_rate) |</div><div class="line"> (pdata-&gt;low_power_mode ? LOW_POWER : <span class="number">0</span>));</div><div class="line">AC_WRITE(ac, DATA_FORMAT, pdata-&gt;data_range);</div><div class="line">AC_WRITE(ac, FIFO_CTL, FIFO_MODE(pdata-&gt;fifo_mode) |</div><div class="line">SAMPLES(pdata-&gt;watermark));</div><div class="line"></div><div class="line"><span class="keyword">if</span> (pdata-&gt;use_int2) &#123;</div><div class="line"><span class="comment">/* Map all INTs to INT2 */</span></div><div class="line">AC_WRITE(ac, INT_MAP, ac-&gt;int_mask | OVERRUN);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line"><span class="comment">/* Map all INTs to INT1 */</span></div><div class="line">AC_WRITE(ac, INT_MAP, <span class="number">0</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (ac-&gt;model == <span class="number">346</span> &amp;&amp; ac-&gt;pdata.orientation_enable) &#123;</div><div class="line">AC_WRITE(ac, ORIENT_CONF,</div><div class="line">ORIENT_DEADZONE(ac-&gt;pdata.deadzone_angle) |</div><div class="line">ORIENT_DIVISOR(ac-&gt;pdata.divisor_length));</div><div class="line"></div><div class="line">ac-&gt;orient2d_saved = <span class="number">1234</span>;</div><div class="line">ac-&gt;orient3d_saved = <span class="number">1234</span>;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (pdata-&gt;orientation_enable &amp; ADXL_EN_ORIENTATION_3D)</div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; ARRAY_SIZE(pdata-&gt;ev_codes_orient_3d); i++)</div><div class="line">__set_bit(pdata-&gt;ev_codes_orient_3d[i],</div><div class="line">  input_dev-&gt;keybit);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (pdata-&gt;orientation_enable &amp; ADXL_EN_ORIENTATION_2D)</div><div class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; ARRAY_SIZE(pdata-&gt;ev_codes_orient_2d); i++)</div><div class="line">__set_bit(pdata-&gt;ev_codes_orient_2d[i],</div><div class="line">  input_dev-&gt;keybit);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">ac-&gt;pdata.orientation_enable = <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">AC_WRITE(ac, INT_ENABLE, ac-&gt;int_mask | OVERRUN);</div><div class="line"></div><div class="line">ac-&gt;pdata.power_mode &amp;= (PCTL_AUTO_SLEEP | PCTL_LINK);</div></pre></td></tr></table></figure><h1 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h1><p>通过这两个子系统的驱动代码，总结几个之前写驱动没有意识。<br>1、自定义一个结构体，包含<code>device</code>和设备私有属性，其它函数可通过它获取到所有数据；<br>2、使用互斥锁的意识；<br>3、创建sysfs内容，方便应用层直接访问；</p><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录两个SPI设备分别采用hwmon子系统和input子系统。&lt;br&gt;
    
    </summary>
    
    
      <category term="AM335X" scheme="http://yoursite.com/tags/AM335X/"/>
    
      <category term="Linux驱动" scheme="http://yoursite.com/tags/Linux%E9%A9%B1%E5%8A%A8/"/>
    
      <category term="hwmon子系统" scheme="http://yoursite.com/tags/hwmon%E5%AD%90%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="input子系统" scheme="http://yoursite.com/tags/input%E5%AD%90%E7%B3%BB%E7%BB%9F/"/>
    
      <category term="SPI" scheme="http://yoursite.com/tags/SPI/"/>
    
  </entry>
  
  <entry>
    <title>AM335X——SPI设备驱动</title>
    <link href="http://yoursite.com/2019/01/01/AM335X%E2%80%94%E2%80%94SPI%E8%AE%BE%E5%A4%87%E9%A9%B1%E5%8A%A8/"/>
    <id>http://yoursite.com/2019/01/01/AM335X——SPI设备驱动/</id>
    <published>2019-01-01T07:54:49.000Z</published>
    <updated>2019-01-22T02:55:29.204Z</updated>
    
    <content type="html"><![CDATA[<p>最近在AM335X上写了几个SPI设备驱动，记录一下心得。<br><a id="more"></a></p><h1 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1. 准备工作"></a>1. 准备工作</h1><p>与前面写过的I2C驱动一样，SPI驱动也涉及<strong>SPI控制器(适配器)驱动</strong>和<strong>SPI设备驱动</strong>。<br>SPI控制器驱动这里不就写了，直接使用SDK自带的，只写SPI设备的驱动。<br>在写SPI设备驱动之前，需要先验证下SDK提供的SPI驱动是否能用，相关的设置是否正确，因此使用内核自带的一个SPI设备驱动进行测试。</p><h2 id="1-1-驱动"><a href="#1-1-驱动" class="headerlink" title="1.1 驱动"></a>1.1 驱动</h2><p>首先配置内核，执行<code>make menuconfig</code>，勾选上<code>McSPI driver for OMAP</code>和<code>User mode SPI device driver support</code>。</p><div align="center"><img width="500" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190101/1.png"></div><h2 id="1-2-设备树"><a href="#1-2-设备树" class="headerlink" title="1.2 设备树"></a>1.2 设备树</h2><p>然后还要向设备树添加如下内容：<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* SPI Busses */</span></div><div class="line"><span class="variable">&amp;spi1</span> &#123;</div><div class="line">    status = <span class="string">"okay"</span>;</div><div class="line">    pinctrl-names = <span class="string">"default"</span>;</div><div class="line">    pinctrl<span class="number">-0</span> = <span class="params">&lt;<span class="variable">&amp;spi1_pins</span>&gt;</span>;</div><div class="line">    ti,pindir-d0-out-d1-in;</div><div class="line">    </div><div class="line">    <span class="class">spidev@0 </span>&#123;</div><div class="line">        spi-max-frequency = <span class="params">&lt;<span class="number">25000000</span>&gt;</span>;</div><div class="line">        reg = <span class="params">&lt;<span class="number">0</span>&gt;</span>;</div><div class="line">        compatible = <span class="string">"rohm,dh2228fv"</span>;</div><div class="line"></div><div class="line">        <span class="comment">/* spi-cpha; sets CPHA=1, default is CPHA=0 */</span></div><div class="line">        <span class="comment">/* spi-cpol; sets CPOL=1, default is CPOL=0 */</span></div><div class="line">        <span class="comment">/* spi-cs-high; default is spi cs low */</span></div><div class="line">    &#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="variable">&amp;am33xx_pinmux</span> &#123;</div><div class="line"><span class="symbol">    spi1_pins:</span> <span class="class">pinmux_spi1 </span>&#123;</div><div class="line">        pinctrl-single,pins = <span class="params">&lt;</span></div><div class="line">            <span class="number">0x190</span> (PIN_INPUT_PULLUP | MUX_MODE3) /* spi1_sclk */</div><div class="line">            <span class="number">0x194</span> (PIN_INPUT_PULLUP | MUX_MODE3) /* spi1_d0   */</div><div class="line">            <span class="number">0x198</span> (PIN_INPUT_PULLUP | MUX_MODE3) /* spi1_d1   */</div><div class="line">            <span class="number">0x19c</span> (PIN_INPUT_PULLUP | MUX_MODE3) /* spi1_cs0  */</div><div class="line">        &gt;;</div><div class="line">    &#125;;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><br>这里有几个细节，简单说一下：<br>1.<code>pinctrl-0</code>属性引用的<code>spi1_pins</code>，指定了SPI的几个复用引脚，里面的<code>0x190</code>是真实地址<code>0x990</code>-<code>0x800</code>，也就是说设备树中的地址是相对<code>0x800</code>的偏移；<br>2.注意SPI复用引脚不要在设备树其它节点中使用，不然SPI驱动可能用不了；<br>3.AM335x的MOSI和MISO可以互换，需要加上<code>ti,pindir-d0-out-d1-in;</code>来指定D0是MOSI，D1是MISO；<br>4.<code>reg = &lt;0&gt;;</code>表示硬件片选，这里为硬件片选0；<br>5.内核自带的测试驱动程序的<code>compatible</code>为<code>rohm,dh2228fv</code>；</p><h2 id="1-3-测试程序"><a href="#1-3-测试程序" class="headerlink" title="1.3 测试程序"></a>1.3 测试程序</h2><p>使用内核提供的测试程序，编译，测试。<br>测试文件路径：<code>Documentation/spi/spidev_test.c</code>；<br>交叉编译后执行<code>./spidev_test -D /dev/spidev1.0  -v</code><br>结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">spi mode: 0x0</div><div class="line">bits per word: 8</div><div class="line">max speed: 500000 Hz (500 KHz)</div><div class="line">TX | FF FF FF FF FF FF 40 00 00 00 00 95 FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF F0 0D  | ......@....▒..................▒.</div><div class="line">RX | FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF FF  | ................................</div></pre></td></tr></table></figure></p><p>此时可以通过逻辑分析仪或者短接MOSI和MISO，判断发出和接收的数据是否正常，从而验证SPI控制器驱动是否正常。</p><h2 id="1-4-编译脚本"><a href="#1-4-编译脚本" class="headerlink" title="1.4 编译脚本"></a>1.4 编译脚本</h2><p>为了方便后续的编译，写了一个脚本进行操作，这个脚本也相当于操作流程，以供参考：<br><figure class="highlight sh"><figcaption><span>[compiler_kernel.sh]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment">#step 0:set env</span></div><div class="line"><span class="built_in">export</span> CPUS=`grep -c processor /proc/cpuinfo`</div><div class="line"><span class="built_in">export</span> ARCH=arm</div><div class="line"><span class="built_in">export</span> CROSS_COMPILE=/home/hceng/gcc-linaro-5.3-2016.02-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf-</div><div class="line"><span class="built_in">export</span> PATH=/home/hceng/gcc-linaro-5.3-2016.02-x86_64_arm-linux-gnueabihf/bin:<span class="variable">$PATH</span></div><div class="line"></div><div class="line"><span class="comment">#step 1:clean kernel</span></div><div class="line"><span class="comment">#make distclean</span></div><div class="line"></div><div class="line"><span class="comment">#step 2:copy kernel config file </span></div><div class="line"><span class="comment">#make tisdk_am335x-evm_defconfig</span></div><div class="line"></div><div class="line"><span class="comment">#step 3:compiler kernel</span></div><div class="line"><span class="comment">#make uImage LOADADDR=0x10008000 -j$&#123;CPUS&#125;</span></div><div class="line">make zImage -j<span class="variable">$&#123;CPUS&#125;</span></div><div class="line"></div><div class="line"><span class="comment">#step 4:compiler device tree</span></div><div class="line"><span class="comment">#make dtbs</span></div><div class="line">make am335x-evm.dtb</div><div class="line"></div><div class="line"><span class="comment">#step 5:compiler driver module file(dynamic loading)</span></div><div class="line"><span class="comment">#make modules</span></div><div class="line"><span class="comment">#make modules_install INSTALL_MOD_PATH=~/rootfs/lib/modules/4.1.18-gbbe8cfc </span></div><div class="line"></div><div class="line"><span class="comment">#step 6:copy zImage and dtb to tftp download</span></div><div class="line">rm /home/hceng/tftp/zImage</div><div class="line">rm /home/hceng/tftp/am335x-evm.dtb</div><div class="line"></div><div class="line">cp  ./arch/arm/boot/zImage  /home/hceng/tftp/</div><div class="line">cp  ./arch/arm/boot/dts/am335x-evm.dtb   /home/hceng/tftp/</div></pre></td></tr></table></figure></p><p>其中第六步，拷贝倒<code>tftp</code>目录下，是为了方便板子启动的时候，通过U-Boot直接tftp下载编译过的内核和设备树，相关命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">setenv ipaddr 192.168.1.14; setenv serverip 192.168.1.11; setenv gatewayip 192.168.1.1; setenv netmask 255.255.255.0; setenv fdtfile &apos;am335x-evm.dtb&apos;; setenv rootpath &apos;/home/hceng/rootfs&apos;;</div><div class="line"></div><div class="line">setenv netargs &quot;setenv bootargs console=$&#123;console&#125; $&#123;optargs&#125;  root=/dev/nfs  rootfstype=nfsroot  nfsroot=$&#123;serverip&#125;:$&#123;rootpath&#125;  ip=$&#123;ipaddr&#125;:$&#123;serverip&#125;:$&#123;gatewayip&#125;:$&#123;netmask&#125;::eth0:off&quot;</div><div class="line"></div><div class="line">setenv netboot &quot;echo Booting from network ...; setenv autoload no; tftp $&#123;fdtaddr&#125; $&#123;fdtfile&#125;; tftp $&#123;loadaddr&#125; $&#123;bootfile&#125;; run netargs; bootz $&#123;loadaddr&#125; - $&#123;fdtaddr&#125;&quot;</div><div class="line"></div><div class="line">saveenv</div><div class="line"></div><div class="line">run netboot</div></pre></td></tr></table></figure></p><h1 id="2-SPI设备——tlc5615"><a href="#2-SPI设备——tlc5615" class="headerlink" title="2. SPI设备——tlc5615"></a>2. SPI设备——tlc5615</h1><p><a href="http://www.ti.com/lit/ds/symlink/tlc5615.pdf" target="_blank" rel="external">TLC5615</a>是一个10位的DAC，最大输出电压位基准电压的两倍。<br>这个驱动比较简单，没什么特别的难点，<br>唯一特殊的是TLC5615每次传输是12位数据(10位data+2位extra)，因此在<code>probe()</code>函数里，需要<code>spi-&gt;bits_per_word = 12;</code>；<br>另外，因为每次传输的数据位12位，<code>spi_write()</code>的第三个参数不再是1，而是<code>spi_write(spi_tlc5615_dev, &amp;ker_buf, 2);</code>；</p><h2 id="2-1-设备树"><a href="#2-1-设备树" class="headerlink" title="2.1 设备树"></a>2.1 设备树</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* SPI Busses */</span></div><div class="line"><span class="variable">&amp;spi1</span> &#123;</div><div class="line">    status = <span class="string">"okay"</span>;</div><div class="line">    pinctrl-names = <span class="string">"default"</span>;</div><div class="line">    pinctrl<span class="number">-0</span> = <span class="params">&lt;<span class="variable">&amp;spi1_pins</span>&gt;</span>;</div><div class="line"></div><div class="line">    <span class="class">spidev@0 </span>&#123;</div><div class="line">        spi-max-frequency = <span class="params">&lt;<span class="number">25000000</span>&gt;</span>;</div><div class="line">        reg = <span class="params">&lt;<span class="number">0</span>&gt;</span>;</div><div class="line">        compatible = <span class="string">"rohm,dh2228fv"</span>;</div><div class="line"></div><div class="line">        <span class="comment">/* spi-cpha; sets CPHA=1, default is CPHA=0 */</span></div><div class="line">        <span class="comment">/* spi-cpol; sets CPOL=1, default is CPOL=0 */</span></div><div class="line">        <span class="comment">/* spi-cs-high; default is spi cs low       */</span></div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="class">spidev@1 </span>&#123;</div><div class="line">        spi-max-frequency = <span class="params">&lt;<span class="number">25000000</span>&gt;</span>;</div><div class="line">        reg = <span class="params">&lt;<span class="number">1</span>&gt;</span>;</div><div class="line">        compatible = <span class="string">"ti,tlc5615"</span>;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="variable">&amp;am33xx_pinmux</span> &#123;</div><div class="line"><span class="symbol">    spi1_pins:</span> <span class="class">pinmux_spi1 </span>&#123;</div><div class="line">        pinctrl-single,pins = <span class="params">&lt;</span></div><div class="line">            <span class="number">0x190</span> (PIN_INPUT_PULLUP  | MUX_MODE3) /* spi1_sclk */</div><div class="line">            <span class="number">0x194</span> (PIN_INPUT_PULLUP  | MUX_MODE3) /* spi1_d0   */</div><div class="line">            <span class="number">0x198</span> (PIN_INPUT_PULLUP  | MUX_MODE3) /* spi1_d1   */</div><div class="line">            <span class="number">0x19c</span> (PIN_INPUT_PULLUP  | MUX_MODE3) /* spi1_cs0  */</div><div class="line">        &gt;;</div><div class="line">    &#125;;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h2 id="2-2-驱动程序"><a href="#2-2-驱动程序" class="headerlink" title="2.2 驱动程序"></a>2.2 驱动程序</h2><figure class="highlight c"><figcaption><span>[tl5615.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/kernel.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/fs.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/init.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/delay.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/uaccess.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;asm/io.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of_device.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of_platform.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/platform_device.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/slab.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/cdev.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/spi/spi.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">int</span> major;</div><div class="line"><span class="keyword">static</span> <span class="keyword">dev_t</span> devid;</div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> <span class="keyword">class</span> *tlc5615_class;</div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> cdev tlc5615_cdev;</div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> spi_device *spi_tlc5615_dev;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">tlc5615_open</span> <span class="params">(<span class="keyword">struct</span> inode *node, <span class="keyword">struct</span> file *filp)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">tlc5615_release</span> <span class="params">(<span class="keyword">struct</span> inode *node, <span class="keyword">struct</span> file *filp)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">tlc5615_write</span> <span class="params">(<span class="keyword">struct</span> file *filp, <span class="keyword">const</span> <span class="keyword">char</span> __user *buf, <span class="keyword">size_t</span> size, <span class="keyword">loff_t</span> *off)</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> ret;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> ker_buf;</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(copy_from_user(&amp;ker_buf, buf, <span class="number">4</span>))</div><div class="line">       <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (ker_buf &gt; <span class="number">1023</span>)</div><div class="line">        ker_buf = <span class="number">1023</span>;</div><div class="line">    </div><div class="line">    ker_buf = (ker_buf &lt;&lt; <span class="number">2</span>) &amp; (<span class="number">0xFFC</span>);</div><div class="line">   </div><div class="line">    <span class="comment">//printk("ker_buf=%d\n", ker_buf);</span></div><div class="line">    ret = spi_write(spi_tlc5615_dev, &amp;ker_buf, <span class="number">2</span>);</div><div class="line">    <span class="keyword">if</span>(ret != <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        printk(<span class="string">"spi write error\n"</span>);</div><div class="line">        <span class="keyword">return</span> -EINVAL;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">4</span>; </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> file_operations tlc5615_ops = &#123;</div><div class="line">    .owner = THIS_MODULE,</div><div class="line">    .open  = tlc5615_open,</div><div class="line">    .write = tlc5615_write,</div><div class="line">    .release = tlc5615_release,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">tlc5615_probe</span><span class="params">(<span class="keyword">struct</span> spi_device *spi)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> ret;</div><div class="line"></div><div class="line">    spi-&gt;bits_per_word = <span class="number">12</span>; <span class="comment">//tl5615 transmits 12bits(10bits data + 2bit extra)each time.</span></div><div class="line">    <span class="keyword">if</span> (spi_setup(spi) &lt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        printk(<span class="string">"spi master doesn't support 12 bits/word \n"</span>);</div><div class="line">        <span class="keyword">return</span> -EINVAL;</div><div class="line">    &#125;   </div><div class="line">        </div><div class="line">    spi_tlc5615_dev = spi;</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(alloc_chrdev_region(&amp;devid, <span class="number">0</span>, <span class="number">1</span>, <span class="string">"tlc5615"</span>) &lt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        printk(KERN_INFO<span class="string">"Unable to alloc_chrdev_region.\n"</span>);</div><div class="line">        <span class="keyword">return</span> -EINVAL;</div><div class="line">    &#125;   </div><div class="line">        </div><div class="line">    major = MAJOR(devid);</div><div class="line">    cdev_init(&amp;tlc5615_cdev, &amp;tlc5615_ops);        </div><div class="line">    ret = cdev_add(&amp;tlc5615_cdev, devid, <span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span> (ret &lt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        printk(KERN_ERR <span class="string">"Unable to cdev_add.\n"</span>);</div><div class="line">        <span class="keyword">goto</span> error;</div><div class="line">    &#125;</div><div class="line">        </div><div class="line">    tlc5615_class = class_create(THIS_MODULE, <span class="string">"tlc5615"</span>); </div><div class="line"></div><div class="line">    device_create(tlc5615_class, <span class="literal">NULL</span>, MKDEV(major, <span class="number">0</span>), <span class="literal">NULL</span>, <span class="string">"tlc5615"</span>); <span class="comment">// /dev/tlc5615</span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">error:</div><div class="line">    unregister_chrdev_region(devid, <span class="number">1</span>);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> -EINVAL;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">tlc5615_remove</span><span class="params">(<span class="keyword">struct</span> spi_device *spi)</span></span></div><div class="line">&#123;</div><div class="line">    device_destroy(tlc5615_class,  MKDEV(major, <span class="number">0</span>));</div><div class="line"></div><div class="line">    class_destroy(tlc5615_class);</div><div class="line"> </div><div class="line">    unregister_chrdev_region(devid, <span class="number">1</span>);</div><div class="line">    cdev_del(&amp;tlc5615_cdev);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">struct</span> of_device_id of_match_spi[] = &#123;</div><div class="line">    &#123; .compatible = <span class="string">"ti,tlc5615"</span>, .data = <span class="literal">NULL</span> &#125;,</div><div class="line">    &#123; <span class="comment">/* sentinel */</span> &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> spi_driver tlc5615_driver = &#123;</div><div class="line">    .probe = tlc5615_probe,</div><div class="line">    .remove = tlc5615_remove,</div><div class="line">    .driver = &#123;</div><div class="line">        .name = <span class="string">"tlc5615"</span>,</div><div class="line">        .owner = THIS_MODULE,</div><div class="line">        .of_match_table = of_match_spi,  </div><div class="line">    &#125;,</div><div class="line">&#125;;</div><div class="line"></div><div class="line">module_spi_driver(tlc5615_driver);</div><div class="line"></div><div class="line">MODULE_LICENSE(<span class="string">"GPL"</span>);</div><div class="line">MODULE_AUTHOR(<span class="string">"hceng &lt;huangcheng.job@foxmail.com&gt;"</span>);</div><div class="line">MODULE_DESCRIPTION(<span class="string">"TI am335x board spi device: tl5615 driver."</span>);</div><div class="line">MODULE_VERSION(<span class="string">"v1.0"</span>);</div></pre></td></tr></table></figure><h2 id="2-3-测试程序"><a href="#2-3-测试程序" class="headerlink" title="2.3 测试程序"></a>2.3 测试程序</h2><figure class="highlight c"><figcaption><span>[tl5615_app.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="comment">// ./tl5615_app val  </span></div><div class="line"><span class="comment">// val = 0~4.096v (0~1023)</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> fd;</div><div class="line">    <span class="keyword">float</span> f_val = atof(argv[<span class="number">1</span>]);</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> i_val = f_val * <span class="number">1000</span> / <span class="number">4</span>;</div><div class="line">    <span class="keyword">if</span>(i_val &gt; <span class="number">1023</span>)</div><div class="line">        i_val = <span class="number">1023</span>;</div><div class="line"></div><div class="line">    fd = open(<span class="string">"/dev/tlc5615"</span>, O_RDWR);   </div><div class="line">    <span class="keyword">if</span> (fd &lt; <span class="number">0</span>)</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"Can't open!\n"</span>);</div><div class="line">   </div><div class="line">    write(fd, &amp;i_val, <span class="number">4</span>);</div><div class="line">    </div><div class="line">    close(fd);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>输出电压计算公式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">output=2*(Vref)*(val/1024)  //其中val为SPI传输的前10位数据。</div></pre></td></tr></table></figure></p><h1 id="3-SPI设备——ssd1306"><a href="#3-SPI设备——ssd1306" class="headerlink" title="3. SPI设备——ssd1306"></a>3. SPI设备——ssd1306</h1><p><a href="https://cdn-shop.adafruit.com/datasheets/SSD1306.pdf" target="_blank" rel="external">SSD1306</a>是一个分辨率为128*64的OLED显示屏。<br>OLED的驱动稍微麻烦一点，除了对SSD1306的基本操作，还要解决以下两个问题。</p><ul><li><p><strong>1.需要设备树提供DC引脚</strong><br>采用SPI接口的OLED，除了时钟引脚(CLK)、使能引脚(EN)、数据发送引脚(MOSI)外，还需要数据/命令切换引脚(DC)。<br>因为OLED只接收数据的缘故，AM335X的数据接收引脚(MISO)就不需要了。<br>因此需要在设备树中加入DC引脚信息，并在驱动中解析使用。</p></li><li><p><strong>2.需要支持软件片选</strong><br>AM335X的SPI只有两个硬件片选CS0和CS1，现在有了三个设备，两个片选自然是不够的，因此需要添加软件片选，即使用GPIO作为片选引脚。<br>而AM335X的SDK目前是<a href="https://e2e.ti.com/support/processors/f/791/t/425326?AM335x-SPI-with-gpio-as-cs-pins" target="_blank" rel="external">不支持软件片选</a>的，因此需要修改SPI控制器驱动(<code>spi-omap2-mcspi.c</code>)来实现。</p></li></ul><p>修改的思路也比较简单，关注两个变量<strong><code>spi-&gt;chip_select</code></strong>和<strong><code>spi-&gt;cs_gpio</code></strong>。<br><code>spi-&gt;chip_select</code>是设备树中<code>reg</code>的值，为0、1分别表示CS0和CS1，从2开始，就意味着该设备使用GPIO作为片选了；<br><code>spi-&gt;cs_gpio</code>是设备树中<code>cs-gpios</code>的值，如果在设备树中值为<code>&lt;0&gt;</code>，这里将为<code>-2</code>，说明使用的是硬件片选，如果在设备树中值为<code>&lt;&amp;gpio0 13 0&gt;</code>，这里将为<code>13</code>，说明使用的是软件片选。</p><p>因此只需要在<code>omap2_mcspi_setup()</code>函数里，根据<code>spi-&gt;chip_select</code>的值来判断是否使用的是GPIO片选，如果不是，使用原来的函数，如果是，则对GPIO片选引脚进行初始化。<br>然后在<code>omap2_mcspi_force_cs()</code>函数里，根据<code>spi-&gt;chip_select</code>的值来判断是否使用的是GPIO片选，如果不是，使用原来的函数，如果是，则控制GPIO输出电平实现片选。</p><p>修改内容如下：<br><figure class="highlight diff"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div></pre></td><td class="code"><pre><div class="line"><span class="comment">--- spi-omap2-mcspi_bak.c2018-12-27 16:06:05.159509054 +0800</span></div><div class="line"><span class="comment">+++ spi-omap2-mcspi.c2018-12-28 11:25:42.242154915 +0800</span></div><div class="line"><span class="meta">@@ -35,7 +35,7 @@</span></div><div class="line"> #include &lt;linux/gcd.h&gt;</div><div class="line"> </div><div class="line"> #include &lt;linux/spi/spi.h&gt;</div><div class="line"><span class="deletion">-</span></div><div class="line"><span class="addition">+#include &lt;linux/gpio.h&gt;</span></div><div class="line"> #include &lt;linux/platform_data/spi-omap2-mcspi.h&gt;</div><div class="line"> </div><div class="line"> #define OMAP2_MCSPI_MAX_FREQ        48000000</div><div class="line"><span class="meta">@@ -245,14 +245,31 @@</span></div><div class="line"> static void omap2_mcspi_force_cs(struct spi_device *spi, int cs_active)</div><div class="line"> &#123; </div><div class="line">     l = mcspi_cached_chconf0(spi);</div><div class="line"><span class="addition">+    if (spi-&gt;cs_gpio &gt;= 0)</span></div><div class="line"><span class="addition">+    &#123;</span></div><div class="line"><span class="addition">+        if (cs_active)</span></div><div class="line"><span class="addition">+        &#123;</span></div><div class="line"><span class="addition">+            l |= OMAP2_MCSPI_CHCONF_FORCE;</span></div><div class="line"><span class="addition">+            mcspi_write_chconf0(spi, l);</span></div><div class="line"><span class="addition">+            gpio_direction_output(spi-&gt;cs_gpio, 0);</span></div><div class="line"><span class="addition">+        &#125;</span></div><div class="line"><span class="addition">+        else</span></div><div class="line"><span class="addition">+        &#123;</span></div><div class="line"><span class="addition">+            l &amp;= ~OMAP2_MCSPI_CHCONF_FORCE;</span></div><div class="line"><span class="addition">+            mcspi_write_chconf0(spi, l);</span></div><div class="line"><span class="addition">+            gpio_direction_output(spi-&gt;cs_gpio, 1);</span></div><div class="line"><span class="addition">+        &#125;</span></div><div class="line"><span class="addition">+    &#125;</span></div><div class="line"><span class="deletion">-</span></div><div class="line"><span class="deletion">-    mcspi_write_chconf0(spi, l);</span></div><div class="line"><span class="addition">+    &#123;</span></div><div class="line"><span class="addition">+        l = mcspi_cached_chconf0(spi);</span></div><div class="line"><span class="addition">+        if (cs_active)</span></div><div class="line"><span class="addition">+            l |= OMAP2_MCSPI_CHCONF_FORCE;</span></div><div class="line"><span class="addition">+        else</span></div><div class="line"><span class="addition">+            l &amp;= ~OMAP2_MCSPI_CHCONF_FORCE;</span></div><div class="line"><span class="addition">+        </span></div><div class="line"><span class="addition">+        mcspi_write_chconf0(spi, l);</span></div><div class="line"><span class="addition">+    &#125;</span></div><div class="line"> &#125;</div><div class="line"> </div><div class="line"> static void omap2_mcspi_set_master_mode(struct spi_master *master)</div><div class="line"><span class="meta">@@ -995,6 +1012,23 @@</span></div><div class="line">     struct omap2_mcspi_dma  *mcspi_dma;</div><div class="line">     struct omap2_mcspi_cs   *cs = spi-&gt;controller_state;</div><div class="line"> </div><div class="line"><span class="addition">+    if (spi-&gt;chip_select &gt; 1)    //using GPIO as a chip select, reg value &gt;1 in the devicetree</span></div><div class="line"><span class="addition">+    &#123; </span></div><div class="line"><span class="addition">+        if (spi-&gt;cs_gpio &lt; 0)</span></div><div class="line"><span class="addition">+            return -EIO;</span></div><div class="line"><span class="addition">+            </span></div><div class="line"><span class="addition">+        if (gpio_is_valid(spi-&gt;cs_gpio)) </span></div><div class="line"><span class="addition">+        &#123;</span></div><div class="line"><span class="addition">+            if ((gpio_request(spi-&gt;cs_gpio, "cs_gpio")) &lt; 0)  </span></div><div class="line"><span class="addition">+            &#123;</span></div><div class="line"><span class="addition">+                printk("Error requesting gpio %d for spi cs pin\n", spi-&gt;cs_gpio);</span></div><div class="line"><span class="addition">+                return -EBUSY;</span></div><div class="line"><span class="addition">+            &#125;</span></div><div class="line"><span class="addition">+            gpio_direction_output(spi-&gt;cs_gpio, 1);</span></div><div class="line"><span class="addition">+        &#125;</span></div><div class="line"><span class="addition">+        spi-&gt;chip_select = 0;   //using GPIO as a chip select, only use DAM0/channel 0 or 1</span></div><div class="line"><span class="addition">+    &#125;</span></div><div class="line"><span class="addition">+    </span></div><div class="line">     mcspi_dma = &amp;mcspi-&gt;dma_channels[spi-&gt;chip_select];</div><div class="line"> </div><div class="line">     if (!cs) &#123;</div><div class="line"><span class="meta">@@ -1056,6 +1090,9 @@</span></div><div class="line">             mcspi_dma-&gt;dma_tx = NULL;</div><div class="line">         &#125;</div><div class="line">     &#125;</div><div class="line"><span class="addition">+    </span></div><div class="line"><span class="addition">+    if (spi-&gt;cs_gpio &gt;= 0)</span></div><div class="line"><span class="addition">+        gpio_free(spi-&gt;cs_gpio);</span></div><div class="line"> &#125;</div></pre></td></tr></table></figure></p><h2 id="3-1-设备树"><a href="#3-1-设备树" class="headerlink" title="3.1 设备树"></a>3.1 设备树</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* SPI Busses */</span></div><div class="line"><span class="variable">&amp;spi1</span> &#123;</div><div class="line">    status = <span class="string">"okay"</span>;</div><div class="line">    pinctrl-names = <span class="string">"default"</span>;</div><div class="line">    pinctrl<span class="number">-0</span> = <span class="params">&lt;<span class="variable">&amp;spi1_pins</span>&gt;</span>;</div><div class="line">    </div><div class="line">    ti,pindir-d0-out-d1-in;</div><div class="line">    ti,spi-num-cs = <span class="params">&lt;<span class="number">3</span>&gt;</span>; </div><div class="line">    cs-gpios = <span class="params">&lt;<span class="number">0</span>&gt;</span>, <span class="params">&lt;<span class="number">0</span>&gt;</span>, <span class="params">&lt;<span class="variable">&amp;gpio0</span> <span class="number">13</span> <span class="number">0</span>&gt;</span>;</div><div class="line">    </div><div class="line">    <span class="class">spidev@0 </span>&#123;</div><div class="line">        compatible = <span class="string">"rohm,dh2228fv"</span>;</div><div class="line">        spi-max-frequency = <span class="params">&lt;<span class="number">25000000</span>&gt;</span>;</div><div class="line">        reg = <span class="params">&lt;<span class="number">0</span>&gt;</span>;</div><div class="line">        </div><div class="line">        <span class="comment">/* spi-cpha; sets CPHA=1, default is CPHA=0 */</span></div><div class="line">        <span class="comment">/* spi-cpol; sets CPOL=1, default is CPOL=0 */</span></div><div class="line">        <span class="comment">/* spi-cs-high; default is spi cs low */</span></div><div class="line">    &#125;;</div><div class="line">    </div><div class="line">    <span class="class">spidev@1 </span>&#123;</div><div class="line">        compatible = <span class="string">"ti,tlc5615"</span>; </div><div class="line">        spi-max-frequency = <span class="params">&lt;<span class="number">25000000</span>&gt;</span>;</div><div class="line">        reg = <span class="params">&lt;<span class="number">1</span>&gt;</span>;</div><div class="line">    &#125;;</div><div class="line">    </div><div class="line">    <span class="class">spidev@2 </span>&#123;</div><div class="line">        compatible = <span class="string">"solomon,ssd1306fb-spi"</span>; <span class="comment">//OLED</span></div><div class="line">        spi-max-frequency = <span class="params">&lt;<span class="number">25000000</span>&gt;</span>;</div><div class="line">        reg = <span class="params">&lt;<span class="number">2</span>&gt;</span>;</div><div class="line">        dc-gpio = <span class="params">&lt;<span class="variable">&amp;gpio0</span> <span class="number">12</span> <span class="number">0</span>&gt;</span>;</div><div class="line">        pinctrl<span class="number">-0</span> = <span class="params">&lt;<span class="variable">&amp;oled_dc_pin</span>&gt;</span>;</div><div class="line">    &#125;;</div><div class="line">    </div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="variable">&amp;am33xx_pinmux</span> &#123;</div><div class="line"><span class="symbol">    spi1_pins:</span> <span class="class">pinmux_spi1 </span>&#123;</div><div class="line">        pinctrl-single,pins = <span class="params">&lt;</span></div><div class="line">            <span class="number">0x190</span> (PIN_INPUT_PULLUP | MUX_MODE3) /* spi1_sclk */</div><div class="line">            <span class="number">0x194</span> (PIN_INPUT_PULLUP | MUX_MODE3) /* spi1_d0   */</div><div class="line">            <span class="number">0x198</span> (PIN_INPUT_PULLUP | MUX_MODE3) /* spi1_d1   */</div><div class="line">            <span class="number">0x19c</span> (PIN_INPUT_PULLUP | MUX_MODE3) /* spi1_cs0  */</div><div class="line">        &gt;;</div><div class="line">    &#125;;</div><div class="line"><span class="symbol">    </span></div><div class="line">    oled_dc_pin: <span class="class">oled_dc_pin0 </span>&#123;</div><div class="line">        pinctrl-single,pins = <span class="params">&lt;</span></div><div class="line">            <span class="number">0x178</span> (PIN_INPUT_PULLDOWN | MUX_MODE7)  /* conf_uart1_ctsn.gpio0_12 */</div><div class="line">        &gt;;</div><div class="line">    &#125;;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><p>其中<br><code>ti,spi-num-cs</code>指定片选数量；<br><code>cs-gpios</code>列出所有的片选引脚，硬件片选填入0代替，软件片选填入对应的GPIO引脚；<br><code>spidev@2</code>使用软件片选，<code>reg</code>因此要设置为2；<br><code>dc-gpio</code>设置OLED的DC引脚；<br><code>pinctrl-0</code>引用<code>oled_dc_pin</code>，将其设置为GPIO功能；</p><h2 id="3-2-驱动程序"><a href="#3-2-驱动程序" class="headerlink" title="3.2 驱动程序"></a>3.2 驱动程序</h2><figure class="highlight c"><figcaption><span>[fb_ssd1306_drv.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;asm/io.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/fs.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/cdev.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/init.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/delay.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/kernel.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/uaccess.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of_gpio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of_device.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of_platform.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/spi/spi.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_CMD_INIT       0x100001</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_CMD_CLEAR_ALL  0x100002</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_CMD_CLEAR_PAGE 0x100003</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_CMD_SET_POS    0x100004</span></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">int</span> major;</div><div class="line"><span class="keyword">static</span> <span class="keyword">dev_t</span> devid;</div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> <span class="keyword">class</span> *ssd1306_class;</div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> cdev ssd1306_cdev;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *ker_buf;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">int</span> spi_oled_dc_pin;</div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> spi_device *spi_ssd1306_dev;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ssd1306_set_dc</span><span class="params">(<span class="keyword">char</span> val)</span></span></div><div class="line">&#123;</div><div class="line">   gpio_direction_output(spi_oled_dc_pin, val);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ssd1306_write_cmd</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> cmd)</span></span></div><div class="line">&#123;</div><div class="line">    ssd1306_set_dc(<span class="number">0</span>);  </div><div class="line">    spi_write(spi_ssd1306_dev, &amp;cmd, <span class="number">1</span>);</div><div class="line">    ssd1306_set_dc(<span class="number">1</span>); </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ssd1306_write_data</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> data)</span></span></div><div class="line">&#123;</div><div class="line">    ssd1306_set_dc(<span class="number">1</span>);  </div><div class="line">    spi_write(spi_ssd1306_dev, &amp;data, <span class="number">1</span>);</div><div class="line">    ssd1306_set_dc(<span class="number">1</span>);  </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ssd1306_set_page_addr_mode</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    ssd1306_write_cmd(<span class="number">0x20</span>);</div><div class="line">    ssd1306_write_cmd(<span class="number">0x02</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ssd1306_set_pos</span><span class="params">(<span class="keyword">int</span> page, <span class="keyword">int</span> col)</span></span></div><div class="line">&#123;</div><div class="line">    ssd1306_write_cmd(<span class="number">0xB0</span> + page);        <span class="comment">//page address</span></div><div class="line"></div><div class="line">    ssd1306_write_cmd(col &amp; <span class="number">0xF</span>);          <span class="comment">//Lower Column Start Address </span></div><div class="line">    ssd1306_write_cmd(<span class="number">0x10</span> + (col &gt;&gt; <span class="number">4</span>));  <span class="comment">//Lower Higher Start Address </span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ssd1306_clear</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> page, i;</div><div class="line">    <span class="keyword">for</span> (page = <span class="number">0</span>; page &lt; <span class="number">8</span>; page ++)</div><div class="line">    &#123;</div><div class="line">        ssd1306_set_pos(page, <span class="number">0</span>);</div><div class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">128</span>; i++)</div><div class="line">            ssd1306_write_data(<span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">ssd1306_clear_page</span><span class="params">(<span class="keyword">int</span> page)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    ssd1306_set_pos(page, <span class="number">0</span>);</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">128</span>; i++)</div><div class="line">        ssd1306_write_data(<span class="number">0</span>);    </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">ssd1306_init</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123; </div><div class="line">    ssd1306_write_cmd(<span class="number">0xAE</span>); <span class="comment">/*display off*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0x00</span>); <span class="comment">/*set lower column address*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0x10</span>); <span class="comment">/*set higher column address*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0x40</span>); <span class="comment">/*set display start line*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0xB0</span>); <span class="comment">/*set page address*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0x81</span>); <span class="comment">/*contract control*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0x66</span>); <span class="comment">/*128*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0xA1</span>); <span class="comment">/*set segment remap*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0xA6</span>); <span class="comment">/*normal / reverse*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0xA8</span>); <span class="comment">/*multiplex ratio*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0x3F</span>); <span class="comment">/*duty = 1/64*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0xC8</span>); <span class="comment">/*Com scan direction*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0xD3</span>); <span class="comment">/*set display offset*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0x00</span>); </div><div class="line">    ssd1306_write_cmd(<span class="number">0xD5</span>); <span class="comment">/*set osc division*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0x80</span>); </div><div class="line">    ssd1306_write_cmd(<span class="number">0xD9</span>); <span class="comment">/*set pre-charge period*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0x1f</span>); </div><div class="line">    ssd1306_write_cmd(<span class="number">0xDA</span>); <span class="comment">/*set COM pins*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0x12</span>); </div><div class="line">    ssd1306_write_cmd(<span class="number">0xdb</span>); <span class="comment">/*set vcomh*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0x30</span>); </div><div class="line">    ssd1306_write_cmd(<span class="number">0x8d</span>); <span class="comment">/*set charge pump enable*/</span> </div><div class="line">    ssd1306_write_cmd(<span class="number">0x14</span>); </div><div class="line"></div><div class="line">    ssd1306_set_page_addr_mode();</div><div class="line"></div><div class="line">    ssd1306_clear();</div><div class="line">    </div><div class="line">    ssd1306_write_cmd(<span class="number">0xAF</span>); <span class="comment">/*display ON*/</span>    </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">long</span> <span class="title">ssd1306_ioctl</span><span class="params">(<span class="keyword">struct</span> file *file, <span class="keyword">unsigned</span> <span class="keyword">int</span> cmd, <span class="keyword">unsigned</span> <span class="keyword">long</span> arg)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> page;</div><div class="line">    <span class="keyword">int</span> col;</div><div class="line">    </div><div class="line">    <span class="keyword">switch</span> (cmd)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">case</span> OLED_CMD_INIT:</div><div class="line">        &#123;</div><div class="line">            ssd1306_init();</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">case</span> OLED_CMD_CLEAR_ALL:</div><div class="line">        &#123;</div><div class="line">           ssd1306_clear();</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">case</span> OLED_CMD_CLEAR_PAGE:</div><div class="line">        &#123;</div><div class="line">            page = arg;</div><div class="line">            ssd1306_clear_page(page);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">case</span> OLED_CMD_SET_POS:</div><div class="line">        &#123;</div><div class="line">            page = arg &amp; <span class="number">0xff</span>;</div><div class="line">            col  = (arg &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xff</span>;</div><div class="line">            ssd1306_set_pos(page, col);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> ssize_t <span class="title">ssd1306_write</span><span class="params">(<span class="keyword">struct</span> file *file, <span class="keyword">const</span> <span class="keyword">char</span> __user *buf, <span class="keyword">size_t</span> count, <span class="keyword">loff_t</span> *ppos)</span></span></div><div class="line"></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> ret;</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (count &gt; <span class="number">4096</span>)</div><div class="line">        <span class="keyword">return</span> -EINVAL;</div><div class="line">    ret = copy_from_user(ker_buf, buf, count);</div><div class="line">    ssd1306_set_dc(<span class="number">1</span>); <span class="comment">/* data */</span></div><div class="line">    spi_write(spi_ssd1306_dev, ker_buf, count);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> file_operations ssd1306_ops = &#123;</div><div class="line">    .owner            = THIS_MODULE,</div><div class="line">    .unlocked_ioctl   = ssd1306_ioctl,</div><div class="line">    .write            = ssd1306_write,</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">ssd1306_probe</span><span class="params">(<span class="keyword">struct</span> spi_device *spi)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> ret;</div><div class="line"></div><div class="line">    spi_ssd1306_dev = spi;</div><div class="line">    </div><div class="line">    spi_oled_dc_pin = of_get_named_gpio(spi_ssd1306_dev-&gt;dev.of_node, <span class="string">"dc-gpio"</span>, <span class="number">0</span>); <span class="comment">//dc and uart1 is same pin.</span></div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (gpio_is_valid(spi_oled_dc_pin)) </div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> ((gpio_request(spi_oled_dc_pin, <span class="string">"dc_pin"</span>)) &lt; <span class="number">0</span>)  </div><div class="line">        &#123;</div><div class="line">            printk(KERN_ERR <span class="string">"Error requesting gpio %d for spi oled dc pin\n"</span>, spi_oled_dc_pin);</div><div class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        gpio_direction_output(spi_oled_dc_pin, <span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ker_buf = kmalloc(<span class="number">4096</span>, GFP_KERNEL);</div><div class="line">    <span class="keyword">if</span> (!ker_buf)</div><div class="line">    &#123;</div><div class="line">        printk(KERN_ERR <span class="string">"kmalloc error\n"</span>);</div><div class="line">        <span class="keyword">goto</span> err1;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(alloc_chrdev_region(&amp;devid, <span class="number">0</span>, <span class="number">1</span>, <span class="string">"ssd1306_dev"</span>) &lt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        printk(KERN_INFO<span class="string">"Unable to alloc_chrdev_region.\n"</span>);</div><div class="line">        <span class="keyword">goto</span> err2;</div><div class="line">    &#125;   </div><div class="line"></div><div class="line">    major = MAJOR(devid);</div><div class="line">    cdev_init(&amp;ssd1306_cdev, &amp;ssd1306_ops);        </div><div class="line">    ret = cdev_add(&amp;ssd1306_cdev, devid, <span class="number">1</span>);</div><div class="line">    <span class="keyword">if</span> (ret &lt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        printk(KERN_ERR <span class="string">"Unable to cdev_add.\n"</span>);</div><div class="line">        <span class="keyword">goto</span> err3;</div><div class="line">    &#125;</div><div class="line">        </div><div class="line">    ssd1306_class = class_create(THIS_MODULE, <span class="string">"ssd1306_class"</span>); </div><div class="line"></div><div class="line">    device_create(ssd1306_class, <span class="literal">NULL</span>, MKDEV(major, <span class="number">0</span>), <span class="literal">NULL</span>, <span class="string">"ssd1306"</span>); <span class="comment">// /dev/ssd1306</span></div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"> </div><div class="line">err3:</div><div class="line">    unregister_chrdev_region(devid, <span class="number">1</span>);</div><div class="line">    cdev_del(&amp;ssd1306_cdev);</div><div class="line">    </div><div class="line">err2:</div><div class="line">    kfree(ker_buf);</div><div class="line"></div><div class="line">err1:</div><div class="line">    gpio_free(spi_oled_dc_pin);</div><div class="line">        </div><div class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">ssd1306_remove</span><span class="params">(<span class="keyword">struct</span> spi_device *spi)</span></span></div><div class="line">&#123;</div><div class="line">    device_destroy(ssd1306_class,  MKDEV(major, <span class="number">0</span>));</div><div class="line"></div><div class="line">    class_destroy(ssd1306_class);</div><div class="line"> </div><div class="line">    unregister_chrdev_region(devid, <span class="number">1</span>);</div><div class="line">    cdev_del(&amp;ssd1306_cdev);</div><div class="line"></div><div class="line">    kfree(ker_buf);</div><div class="line">    </div><div class="line">    gpio_free(spi_oled_dc_pin);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">struct</span> of_device_id of_match_spi[] = &#123;</div><div class="line">    &#123; .compatible = <span class="string">"solomon,ssd1306fb-spi"</span>, .data = <span class="literal">NULL</span> &#125;,</div><div class="line">    &#123; <span class="comment">/* sentinel */</span> &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> spi_driver ssd1306_driver = &#123;</div><div class="line">    .probe = ssd1306_probe,</div><div class="line">    .remove = ssd1306_remove,</div><div class="line">    .driver = &#123;</div><div class="line">        .name = <span class="string">"ssd1306_drv"</span>,</div><div class="line">        .owner = THIS_MODULE,</div><div class="line">        .of_match_table = of_match_spi,  </div><div class="line">    &#125;,</div><div class="line">&#125;;</div><div class="line"></div><div class="line">module_spi_driver(ssd1306_driver);</div><div class="line"></div><div class="line">MODULE_LICENSE(<span class="string">"GPL"</span>);</div><div class="line">MODULE_AUTHOR(<span class="string">"hceng &lt;huangcheng.job@foxmail.com&gt;"</span>);</div><div class="line">MODULE_DESCRIPTION(<span class="string">"TI am335x board spi device: ssd1306 driver."</span>);</div><div class="line">MODULE_VERSION(<span class="string">"v1.0"</span>);</div></pre></td></tr></table></figure><p>SPI设备驱动程序没什么特别的。</p><h2 id="3-3-测试程序"><a href="#3-3-测试程序" class="headerlink" title="3.3 测试程序"></a>3.3 测试程序</h2><figure class="highlight c"><figcaption><span>[oled_app.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/stat.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/ioctl.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="comment">/* oled_test init</span></div><div class="line"> * oled_test clear</div><div class="line"> * oled_test clear &lt;page&gt;</div><div class="line"> * oled_test &lt;page&gt; &lt;col&gt; &lt;string&gt;</div><div class="line"> */</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_CMD_INIT       0x100001</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_CMD_CLEAR_ALL  0x100002</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_CMD_CLEAR_PAGE 0x100003</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> OLED_CMD_SET_POS    0x100004</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> oled_asc2_8x16[<span class="number">95</span>][<span class="number">16</span>]=</div><div class="line">&#123;</div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">// 0</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x33</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//!1</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x0C</span>,<span class="number">0x06</span>,<span class="number">0x10</span>,<span class="number">0x0C</span>,<span class="number">0x06</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//"2</span></div><div class="line">    &#123;<span class="number">0x40</span>,<span class="number">0xC0</span>,<span class="number">0x78</span>,<span class="number">0x40</span>,<span class="number">0xC0</span>,<span class="number">0x78</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x3F</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x3F</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x00</span>&#125;,<span class="comment">//#3</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x88</span>,<span class="number">0xFC</span>,<span class="number">0x08</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x20</span>,<span class="number">0xFF</span>,<span class="number">0x21</span>,<span class="number">0x1E</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//$4</span></div><div class="line">    &#123;<span class="number">0xF0</span>,<span class="number">0x08</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x1C</span>,<span class="number">0x03</span>,<span class="number">0x1E</span>,<span class="number">0x21</span>,<span class="number">0x1E</span>,<span class="number">0x00</span>&#125;,<span class="comment">//%5</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0xF0</span>,<span class="number">0x08</span>,<span class="number">0x88</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1E</span>,<span class="number">0x21</span>,<span class="number">0x23</span>,<span class="number">0x24</span>,<span class="number">0x19</span>,<span class="number">0x27</span>,<span class="number">0x21</span>,<span class="number">0x10</span>&#125;,<span class="comment">//&amp;6</span></div><div class="line">    &#123;<span class="number">0x10</span>,<span class="number">0x16</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//'7</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x18</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x18</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x00</span>&#125;,<span class="comment">//(8</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x18</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x18</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//)9</span></div><div class="line">    &#123;<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x80</span>,<span class="number">0xF0</span>,<span class="number">0x80</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x01</span>,<span class="number">0x0F</span>,<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x00</span>&#125;,<span class="comment">//*10</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x1F</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>&#125;,<span class="comment">//+11</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xB0</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//,12</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>&#125;,<span class="comment">//-13</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//.14</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x60</span>,<span class="number">0x18</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x60</span>,<span class="number">0x18</span>,<span class="number">0x06</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">///15</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x10</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x0F</span>,<span class="number">0x00</span>&#125;,<span class="comment">//016</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x10</span>,<span class="number">0x10</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//117</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x88</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x28</span>,<span class="number">0x24</span>,<span class="number">0x22</span>,<span class="number">0x21</span>,<span class="number">0x30</span>,<span class="number">0x00</span>&#125;,<span class="comment">//218</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x08</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x48</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x18</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x11</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>&#125;,<span class="comment">//319</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x04</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x3F</span>,<span class="number">0x24</span>,<span class="number">0x00</span>&#125;,<span class="comment">//420</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x19</span>,<span class="number">0x21</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x11</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>&#125;,<span class="comment">//521</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x10</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x11</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x11</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>&#125;,<span class="comment">//622</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xC8</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//723</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x88</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x88</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1C</span>,<span class="number">0x22</span>,<span class="number">0x21</span>,<span class="number">0x21</span>,<span class="number">0x22</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>&#125;,<span class="comment">//824</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0xE0</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x31</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x11</span>,<span class="number">0x0F</span>,<span class="number">0x00</span>&#125;,<span class="comment">//925</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x30</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//:26</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x60</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//;27</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x40</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">//&lt;28</span></div><div class="line">    &#123;<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x00</span>&#125;,<span class="comment">//=29</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x20</span>,<span class="number">0x40</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x01</span>,<span class="number">0x00</span>&#125;,<span class="comment">//&gt;30</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x48</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x30</span>,<span class="number">0x36</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//?31</span></div><div class="line">    &#123;<span class="number">0xC0</span>,<span class="number">0x30</span>,<span class="number">0xC8</span>,<span class="number">0x28</span>,<span class="number">0xE8</span>,<span class="number">0x10</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x18</span>,<span class="number">0x27</span>,<span class="number">0x24</span>,<span class="number">0x23</span>,<span class="number">0x14</span>,<span class="number">0x0B</span>,<span class="number">0x00</span>&#125;,<span class="comment">//@32</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0x38</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3C</span>,<span class="number">0x23</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x27</span>,<span class="number">0x38</span>,<span class="number">0x20</span>&#125;,<span class="comment">//A33</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x11</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>&#125;,<span class="comment">//B34</span></div><div class="line">    &#123;<span class="number">0xC0</span>,<span class="number">0x30</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x18</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x00</span>&#125;,<span class="comment">//C35</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x0F</span>,<span class="number">0x00</span>&#125;,<span class="comment">//D36</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0xE8</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x23</span>,<span class="number">0x20</span>,<span class="number">0x18</span>,<span class="number">0x00</span>&#125;,<span class="comment">//E37</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0xE8</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//F38</span></div><div class="line">    &#123;<span class="number">0xC0</span>,<span class="number">0x30</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x18</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x22</span>,<span class="number">0x1E</span>,<span class="number">0x02</span>,<span class="number">0x00</span>&#125;,<span class="comment">//G39</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x21</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x21</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>&#125;,<span class="comment">//H40</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//I41</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//J42</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x88</span>,<span class="number">0xC0</span>,<span class="number">0x28</span>,<span class="number">0x18</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x01</span>,<span class="number">0x26</span>,<span class="number">0x38</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">//K43</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x30</span>,<span class="number">0x00</span>&#125;,<span class="comment">//L44</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">//M45</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x30</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x18</span>,<span class="number">0x3F</span>,<span class="number">0x00</span>&#125;,<span class="comment">//N46</span></div><div class="line">    &#123;<span class="number">0xE0</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x10</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x0F</span>,<span class="number">0x00</span>&#125;,<span class="comment">//O47</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF0</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x21</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//P48</span></div><div class="line">    &#123;<span class="number">0xE0</span>,<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x10</span>,<span class="number">0xE0</span>,<span class="number">0x00</span>,<span class="number">0x0F</span>,<span class="number">0x18</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x38</span>,<span class="number">0x50</span>,<span class="number">0x4F</span>,<span class="number">0x00</span>&#125;,<span class="comment">//Q49</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x70</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x0C</span>,<span class="number">0x30</span>,<span class="number">0x20</span>&#125;,<span class="comment">//R50</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x70</span>,<span class="number">0x88</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x38</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x38</span>,<span class="number">0x20</span>,<span class="number">0x21</span>,<span class="number">0x21</span>,<span class="number">0x22</span>,<span class="number">0x1C</span>,<span class="number">0x00</span>&#125;,<span class="comment">//S51</span></div><div class="line">    &#123;<span class="number">0x18</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//T52</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x1F</span>,<span class="number">0x00</span>&#125;,<span class="comment">//U53</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0x78</span>,<span class="number">0x88</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xC8</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x38</span>,<span class="number">0x0E</span>,<span class="number">0x01</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//V54</span></div><div class="line">    &#123;<span class="number">0xF8</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x03</span>,<span class="number">0x3C</span>,<span class="number">0x07</span>,<span class="number">0x00</span>,<span class="number">0x07</span>,<span class="number">0x3C</span>,<span class="number">0x03</span>,<span class="number">0x00</span>&#125;,<span class="comment">//W55</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0x18</span>,<span class="number">0x68</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x68</span>,<span class="number">0x18</span>,<span class="number">0x08</span>,<span class="number">0x20</span>,<span class="number">0x30</span>,<span class="number">0x2C</span>,<span class="number">0x03</span>,<span class="number">0x03</span>,<span class="number">0x2C</span>,<span class="number">0x30</span>,<span class="number">0x20</span>&#125;,<span class="comment">//X56</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0x38</span>,<span class="number">0xC8</span>,<span class="number">0x00</span>,<span class="number">0xC8</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//Y57</span></div><div class="line">    &#123;<span class="number">0x10</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xC8</span>,<span class="number">0x38</span>,<span class="number">0x08</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x38</span>,<span class="number">0x26</span>,<span class="number">0x21</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x18</span>,<span class="number">0x00</span>&#125;,<span class="comment">//Z58</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFE</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x7F</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x00</span>&#125;,<span class="comment">//[59</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x0C</span>,<span class="number">0x30</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x06</span>,<span class="number">0x38</span>,<span class="number">0xC0</span>,<span class="number">0x00</span>&#125;,<span class="comment">//\60</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0xFE</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//]61</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x04</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//^62</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>&#125;,<span class="comment">//_63</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//`64</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x19</span>,<span class="number">0x24</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>&#125;,<span class="comment">//a65</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x11</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x11</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>&#125;,<span class="comment">//b66</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x11</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x11</span>,<span class="number">0x00</span>&#125;,<span class="comment">//c67</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x88</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x11</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>&#125;,<span class="comment">//d68</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x22</span>,<span class="number">0x13</span>,<span class="number">0x00</span>&#125;,<span class="comment">//e69</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xF0</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x88</span>,<span class="number">0x18</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//f70</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x6B</span>,<span class="number">0x94</span>,<span class="number">0x94</span>,<span class="number">0x94</span>,<span class="number">0x93</span>,<span class="number">0x60</span>,<span class="number">0x00</span>&#125;,<span class="comment">//g71</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x21</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>&#125;,<span class="comment">//h72</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x98</span>,<span class="number">0x98</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//i73</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x98</span>,<span class="number">0x98</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xC0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x7F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//j74</span></div><div class="line">    &#123;<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x24</span>,<span class="number">0x02</span>,<span class="number">0x2D</span>,<span class="number">0x30</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">//k75</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x08</span>,<span class="number">0x08</span>,<span class="number">0xF8</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//l76</span></div><div class="line">    &#123;<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>&#125;,<span class="comment">//m77</span></div><div class="line">    &#123;<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x21</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>&#125;,<span class="comment">//n78</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x1F</span>,<span class="number">0x00</span>&#125;,<span class="comment">//o79</span></div><div class="line">    &#123;<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0xFF</span>,<span class="number">0xA1</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x11</span>,<span class="number">0x0E</span>,<span class="number">0x00</span>&#125;,<span class="comment">//p80</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x0E</span>,<span class="number">0x11</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0xA0</span>,<span class="number">0xFF</span>,<span class="number">0x80</span>&#125;,<span class="comment">//q81</span></div><div class="line">    &#123;<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x3F</span>,<span class="number">0x21</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x00</span>&#125;,<span class="comment">//r82</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x33</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x24</span>,<span class="number">0x19</span>,<span class="number">0x00</span>&#125;,<span class="comment">//s83</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0xE0</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//t84</span></div><div class="line">    &#123;<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x1F</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x20</span>,<span class="number">0x10</span>,<span class="number">0x3F</span>,<span class="number">0x20</span>&#125;,<span class="comment">//u85</span></div><div class="line">    &#123;<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x01</span>,<span class="number">0x0E</span>,<span class="number">0x30</span>,<span class="number">0x08</span>,<span class="number">0x06</span>,<span class="number">0x01</span>,<span class="number">0x00</span>&#125;,<span class="comment">//v86</span></div><div class="line">    &#123;<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x0F</span>,<span class="number">0x30</span>,<span class="number">0x0C</span>,<span class="number">0x03</span>,<span class="number">0x0C</span>,<span class="number">0x30</span>,<span class="number">0x0F</span>,<span class="number">0x00</span>&#125;,<span class="comment">//w87</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x20</span>,<span class="number">0x31</span>,<span class="number">0x2E</span>,<span class="number">0x0E</span>,<span class="number">0x31</span>,<span class="number">0x20</span>,<span class="number">0x00</span>&#125;,<span class="comment">//x88</span></div><div class="line">    &#123;<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x81</span>,<span class="number">0x8E</span>,<span class="number">0x70</span>,<span class="number">0x18</span>,<span class="number">0x06</span>,<span class="number">0x01</span>,<span class="number">0x00</span>&#125;,<span class="comment">//y89</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x21</span>,<span class="number">0x30</span>,<span class="number">0x2C</span>,<span class="number">0x22</span>,<span class="number">0x21</span>,<span class="number">0x30</span>,<span class="number">0x00</span>&#125;,<span class="comment">//z90</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x80</span>,<span class="number">0x7C</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x3F</span>,<span class="number">0x40</span>,<span class="number">0x40</span>&#125;,<span class="comment">//&#123;91</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//|92</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x7C</span>,<span class="number">0x80</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x40</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//&#125;93</span></div><div class="line">    &#123;<span class="number">0x00</span>,<span class="number">0x06</span>,<span class="number">0x01</span>,<span class="number">0x01</span>,<span class="number">0x02</span>,<span class="number">0x02</span>,<span class="number">0x04</span>,<span class="number">0x04</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>,<span class="number">0x00</span>&#125;,<span class="comment">//~94</span></div><div class="line">&#125;; </div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/* page: 0-7</span></div><div class="line"> * col : 0-127</div><div class="line"> * 字符: 8x16象素</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLEDPutChar</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">int</span> page, <span class="keyword">int</span> col, <span class="keyword">char</span> c)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line">    <span class="comment">/* 得到字模 */</span></div><div class="line">    <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *dots = oled_asc2_8x16[c - <span class="string">' '</span>];</div><div class="line"></div><div class="line">    <span class="comment">/* 发给OLED */</span></div><div class="line">    <span class="comment">//OLEDSetPos(page, col);</span></div><div class="line">    <span class="comment">//ioctl(fd, OLED_CMD_CLEAR_PAGE, page);</span></div><div class="line">    ioctl(fd, OLED_CMD_SET_POS, page | (col &lt;&lt; <span class="number">8</span>));</div><div class="line">    <span class="comment">/* 发出8字节数据 */</span></div><div class="line">    <span class="comment">//for (i = 0; i &lt; 8; i++)</span></div><div class="line">    <span class="comment">//    OLEDWriteDat(dots[i]);</span></div><div class="line">    write(fd, &amp;dots[<span class="number">0</span>], <span class="number">8</span>);</div><div class="line"></div><div class="line">    <span class="comment">//OLEDSetPos(page+1, col);</span></div><div class="line">    <span class="comment">//ioctl(fd, OLED_CMD_CLEAR_PAGE, page+1);</span></div><div class="line">    ioctl(fd, OLED_CMD_SET_POS, (page+<span class="number">1</span>) | (col &lt;&lt; <span class="number">8</span>));</div><div class="line">    <span class="comment">/* 发出8字节数据 */</span></div><div class="line">    <span class="comment">//for (i = 0; i &lt; 8; i++)</span></div><div class="line">    <span class="comment">//    OLEDWriteDat(dots[i+8]);</span></div><div class="line">    write(fd, &amp;dots[<span class="number">8</span>], <span class="number">8</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/* page: 0-7</span></div><div class="line"> * col : 0-127</div><div class="line"> * 字符: 8x16象素</div><div class="line"> */</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">OLEDPrint</span><span class="params">(<span class="keyword">int</span> fd, <span class="keyword">int</span> page, <span class="keyword">int</span> col, <span class="keyword">char</span> *str)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</div><div class="line"></div><div class="line">    ioctl(fd, OLED_CMD_CLEAR_PAGE, page);</div><div class="line">    ioctl(fd, OLED_CMD_CLEAR_PAGE, page+<span class="number">1</span>);</div><div class="line">    <span class="keyword">while</span> (str[i])</div><div class="line">    &#123;</div><div class="line">        OLEDPutChar(fd, page, col, str[i]);</div><div class="line">        col += <span class="number">8</span>;</div><div class="line">        <span class="keyword">if</span> (col &gt; <span class="number">127</span>)</div><div class="line">        &#123;</div><div class="line">            col = <span class="number">0</span>;</div><div class="line">            page += <span class="number">2</span>;</div><div class="line">            ioctl(fd, OLED_CMD_CLEAR_PAGE, page);</div><div class="line">            ioctl(fd, OLED_CMD_CLEAR_PAGE, page+<span class="number">1</span>);</div><div class="line">        &#125;</div><div class="line">        i++;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_usage</span><span class="params">(<span class="keyword">char</span> *cmd)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"Usage:\n"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s init\n"</span>, cmd);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s clear\n"</span>, cmd);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s clear &lt;page&gt;\n"</span>, cmd);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s &lt;page&gt; &lt;col&gt; &lt;string&gt;\n"</span>, cmd);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"eg:\n"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%s 2 0 100ask.taobao.com\n"</span>, cmd);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"page is 0,1,...,7\n"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"col is 0,1,...,127\n"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> do_init  = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> do_clear = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> do_show  = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> page = <span class="number">-1</span>;</div><div class="line">    <span class="keyword">int</span> col;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> fd;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (argc == <span class="number">2</span> &amp;&amp; !<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">"init"</span>))</div><div class="line">        do_init = <span class="number">1</span>;</div><div class="line">    <span class="keyword">if</span> ((argc == <span class="number">2</span>) &amp;&amp; !<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">"clear"</span>))</div><div class="line">    &#123;</div><div class="line">        do_clear = <span class="number">1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> ((argc == <span class="number">3</span>) &amp;&amp; !<span class="built_in">strcmp</span>(argv[<span class="number">1</span>], <span class="string">"clear"</span>))</div><div class="line">    &#123;</div><div class="line">        do_clear = <span class="number">1</span>;</div><div class="line">        page = strtoul(argv[<span class="number">2</span>], <span class="literal">NULL</span>, <span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (argc == <span class="number">4</span>)</div><div class="line">    &#123;</div><div class="line">        do_show = <span class="number">1</span>;</div><div class="line">        page = strtoul(argv[<span class="number">1</span>], <span class="literal">NULL</span>, <span class="number">0</span>);</div><div class="line">        col = strtoul(argv[<span class="number">2</span>], <span class="literal">NULL</span>, <span class="number">0</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (!do_init &amp;&amp; !do_clear &amp;&amp; !do_show)</div><div class="line">    &#123;</div><div class="line">        print_usage(argv[<span class="number">0</span>]);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    fd = open(<span class="string">"/dev/ssd1306"</span>, O_RDWR);</div><div class="line">    <span class="keyword">if</span> (fd &lt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"can't open /dev/ssd1306\n"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (do_init)</div><div class="line">        ioctl(fd, OLED_CMD_INIT);</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (do_clear)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (page == <span class="number">-1</span>)</div><div class="line">            ioctl(fd, OLED_CMD_CLEAR_ALL);</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span> (page &lt; <span class="number">0</span> || page &gt; <span class="number">7</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"page is 0,1,...,7\n"</span>);</div><div class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">            &#125;</div><div class="line">            ioctl(fd, OLED_CMD_CLEAR_PAGE, page);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (do_show)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (page &lt; <span class="number">0</span> || page &gt; <span class="number">7</span>)</div><div class="line">        &#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"page is 0,1,...,7\n"</span>);</div><div class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">if</span> (col &lt; <span class="number">0</span> || col &gt; <span class="number">127</span>)</div><div class="line">        &#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"col is 0,1,...,127\n"</span>);</div><div class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        OLEDPrint(fd, page, col, argv[<span class="number">3</span>]);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h1 id="4-SPI设备——w25q16dv"><a href="#4-SPI设备——w25q16dv" class="headerlink" title="4. SPI设备——w25q16dv"></a>4. SPI设备——w25q16dv</h1><p><a href="https://www.winbond.com/resource-files/w25q16dv_revi_nov1714_web.pdf" target="_blank" rel="external">w25q16dv</a>是一个2M大小的Flash。</p><p>在写驱动之前，需要了解下这几个知识点：</p><ul><li><p><strong>1.<code>w25q16dv</code>的<code>Byte</code>、<code>Page</code>、<code>Sector</code>、<code>Block</code>之间的关系</strong><br><code>Byte</code>(字节)由8个<code>bits</code>(位)组成，是数据的最小存储单位，1024个<code>Byte</code>就是我们常见的1KB；<br><code>Page</code>(页)由256个<code>Byte</code>组成，<code>w25q16dv</code>每次SPI写操作只能是1~256个字节，因此遇到大数据传输时，需要分页写；<br><code>Sector</code>(扇区)由16个<code>Byte</code>组成，也是4K大小，<code>w25q16dv</code>每次SPI擦除操作就是以<code>Sector</code>为最小单位；<br><code>Block</code>(块)由16个<code>Sector</code>组成，为64K大小；<br>它们之间大小关系如下：<br><div align="center"><img width="400" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190101/2.jpg"></div><br>另外，Flash的硬件决定了，每个<code>bits</code>只能从1变为0，不能0变成1，因此每次写之前需要先擦除为<code>0xFF</code>，再写入数据。</p></li><li><p><strong>2.DMA与SPI的关系</strong><br>AM335X的SPI控制器的源码里，会根据SPI一次传输的数据长短来决定是否启用DMA传输。<br>当一次传输的数据长度小于<code>DMA_MIN_BYTES</code>，则不会启用DMA，CPU会先读取RAM中的数据，再写到SPI控制器的<code>TX_BUF</code>寄存器里面，如下图路线①；<br>当一次传输的数据长度大于<code>DMA_MIN_BYTES</code>，则会启用DMA，CPU设置好DMA后，DMA自动从RAM搬运数据到SPI控制器的<code>TX_BUF</code>寄存器里面，如下图路线②；</p><div align="center"><img width="500" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/190101/3.jpg"></div></li><li><p><strong>3.函数调用关系分析</strong><br>在应用层写操作<code>w25q16dv</code>时，会调用到<code>w25q16dv_drv.c</code>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">w25q16dv_write();</div><div class="line">    spi_flash_program();</div><div class="line">        spi_sync();</div></pre></td></tr></table></figure></li></ul><p>再调用到<code>drivers/spi/spi.c</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">__spi_sync();</div><div class="line">    __spi_pump_messages();</div><div class="line">        master-&gt;transfer_one_message(master, master-&gt;cur_msg);</div></pre></td></tr></table></figure></p><p>再调用到<code>drivers/spi/spi-omap2-mcspi.c</code>:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">omap2_mcspi_transfer_one_message();</div><div class="line">    dma_map_single(); //根据长度是否映射DMA</div><div class="line">    omap2_mcspi_work();</div><div class="line">        omap2_mcspi_txrx_dma(); //使用DMA传输</div><div class="line">        或</div><div class="line">        omap2_mcspi_txrx_pio(); //使用PIO传输</div></pre></td></tr></table></figure></p><h2 id="4-1-设备树"><a href="#4-1-设备树" class="headerlink" title="4.1 设备树"></a>4.1 设备树</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* SPI Busses */</span></div><div class="line"><span class="variable">&amp;spi1</span> &#123;</div><div class="line">    status = <span class="string">"okay"</span>;</div><div class="line">    pinctrl-names = <span class="string">"default"</span>;</div><div class="line">    pinctrl<span class="number">-0</span> = <span class="params">&lt;<span class="variable">&amp;spi1_pins</span>&gt;</span>;</div><div class="line">    </div><div class="line">    ti,pindir-d0-out-d1-in;</div><div class="line">    ti,spi-num-cs = <span class="params">&lt;<span class="number">4</span>&gt;</span>; </div><div class="line">    cs-gpios = <span class="params">&lt;<span class="number">0</span>&gt;</span>, <span class="params">&lt;<span class="number">0</span>&gt;</span>, <span class="params">&lt;<span class="variable">&amp;gpio0</span> <span class="number">13</span> <span class="number">0</span>&gt;</span>, <span class="params">&lt;<span class="variable">&amp;gpio0</span> <span class="number">14</span> <span class="number">0</span>&gt;</span>;</div><div class="line">    </div><div class="line">    <span class="class">spidev@0 </span>&#123;</div><div class="line">        compatible = <span class="string">"rohm,dh2228fv"</span>;</div><div class="line">        spi-max-frequency = <span class="params">&lt;<span class="number">25000000</span>&gt;</span>;</div><div class="line">        reg = <span class="params">&lt;<span class="number">0</span>&gt;</span>;</div><div class="line">        </div><div class="line">        <span class="comment">/* spi-cpha; sets CPHA=1, default is CPHA=0 */</span></div><div class="line">        <span class="comment">/* spi-cpol; sets CPOL=1, default is CPOL=0 */</span></div><div class="line">        <span class="comment">/* spi-cs-high; default is spi cs low */</span></div><div class="line">    &#125;;</div><div class="line">    </div><div class="line">    <span class="class">spidev@1 </span>&#123;</div><div class="line">        compatible = <span class="string">"ti,tlc5615"</span>; </div><div class="line">        spi-max-frequency = <span class="params">&lt;<span class="number">25000000</span>&gt;</span>;</div><div class="line">        reg = <span class="params">&lt;<span class="number">1</span>&gt;</span>;</div><div class="line">    &#125;;</div><div class="line">    </div><div class="line">    <span class="class">spidev@2 </span>&#123;</div><div class="line">        compatible = <span class="string">"solomon,ssd1306fb-spi"</span>; <span class="comment">//OLED</span></div><div class="line">        spi-max-frequency = <span class="params">&lt;<span class="number">25000000</span>&gt;</span>;</div><div class="line">        reg = <span class="params">&lt;<span class="number">2</span>&gt;</span>;</div><div class="line">        dc-gpio = <span class="params">&lt;<span class="variable">&amp;gpio0</span> <span class="number">12</span> <span class="number">0</span>&gt;</span>;</div><div class="line">        pinctrl<span class="number">-0</span> = <span class="params">&lt;<span class="variable">&amp;oled_dc_pin</span>&gt;</span>;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    <span class="class">spidev@3 </span>&#123;               </div><div class="line">        spi-max-frequency = <span class="params">&lt;<span class="number">20000000</span>&gt;</span>;</div><div class="line">        reg = <span class="params">&lt;<span class="number">3</span>&gt;</span>;</div><div class="line">        compatible = <span class="string">"winbond,w25q16dv"</span>;</div><div class="line">    &#125;;</div><div class="line">    </div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="variable">&amp;am33xx_pinmux</span> &#123;</div><div class="line"><span class="symbol">    spi1_pins:</span> <span class="class">pinmux_spi1 </span>&#123;</div><div class="line">        pinctrl-single,pins = <span class="params">&lt;</span></div><div class="line">            <span class="number">0x190</span> (PIN_INPUT_PULLUP | MUX_MODE3) /* spi1_sclk */</div><div class="line">            <span class="number">0x194</span> (PIN_INPUT_PULLUP | MUX_MODE3) /* spi1_d0   */</div><div class="line">            <span class="number">0x198</span> (PIN_INPUT_PULLUP | MUX_MODE3) /* spi1_d1   */</div><div class="line">            <span class="number">0x19c</span> (PIN_INPUT_PULLUP | MUX_MODE3) /* spi1_cs0  */</div><div class="line">        &gt;;</div><div class="line">    &#125;;</div><div class="line"><span class="symbol">    </span></div><div class="line">    oled_dc_pin: <span class="class">oled_dc_pin0 </span>&#123;</div><div class="line">        pinctrl-single,pins = <span class="params">&lt;</span></div><div class="line">            <span class="number">0x178</span> (PIN_INPUT_PULLDOWN | MUX_MODE7)  /* conf_uart1_ctsn.gpio0_12 */</div><div class="line">        &gt;;</div><div class="line">    &#125;;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><h2 id="4-2-程序驱动"><a href="#4-2-程序驱动" class="headerlink" title="4.2 程序驱动"></a>4.2 程序驱动</h2><figure class="highlight c"><figcaption><span>[w25q16dv_drv.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/kernel.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/fs.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/init.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/delay.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/uaccess.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;asm/io.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of_device.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/of_platform.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/platform_device.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/slab.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/cdev.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/spi/spi.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/mtd/cfi.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/mtd/mtd.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/mtd/partitions.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> spi_device *spi_w25q16dv_dev;</div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> mtd_info flash_w25q16dv_dev;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">spi_flash_read_ID</span><span class="params">(<span class="keyword">int</span> *pMID, <span class="keyword">int</span> *pDID)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> tx_buf[<span class="number">4</span>];</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> rx_buf[<span class="number">2</span>];</div><div class="line">    </div><div class="line">    tx_buf[<span class="number">0</span>] = <span class="number">0x90</span>;</div><div class="line">    tx_buf[<span class="number">1</span>] = <span class="number">0</span>;</div><div class="line">    tx_buf[<span class="number">2</span>] = <span class="number">0</span>;</div><div class="line">    tx_buf[<span class="number">3</span>] = <span class="number">0</span>;</div><div class="line"></div><div class="line">    spi_write_then_read(spi_w25q16dv_dev, tx_buf, <span class="number">4</span>, rx_buf, <span class="number">2</span>);</div><div class="line"></div><div class="line">    *pMID = rx_buf[<span class="number">0</span>];</div><div class="line">    *pDID = rx_buf[<span class="number">1</span>];</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">spi_flash_write_eable</span><span class="params">(<span class="keyword">int</span> enable)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> val = enable ? <span class="number">0x06</span> : <span class="number">0x04</span>;</div><div class="line">    spi_write(spi_w25q16dv_dev, &amp;val, <span class="number">1</span>);    </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">spi_flash_read_status_reg1</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> val;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> cmd = <span class="number">0x05</span>;</div><div class="line"></div><div class="line">    spi_write_then_read(spi_w25q16dv_dev, &amp;cmd, <span class="number">1</span>, &amp;val, <span class="number">1</span>);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> val;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">spi_flash_read_status_reg2</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> val;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> cmd = <span class="number">0x35</span>;</div><div class="line"></div><div class="line">    spi_write_then_read(spi_w25q16dv_dev, &amp;cmd, <span class="number">1</span>, &amp;val, <span class="number">1</span>);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> val;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">spi_flash_wait_when_busy</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">while</span> (spi_flash_read_status_reg1() &amp; <span class="number">1</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="comment">/* Sector erase time : 60ms</span></div><div class="line">         * Page program time : 0.7ms</div><div class="line">         * Write status reg time : 10ms</div><div class="line">         */</div><div class="line">        set_current_state(TASK_INTERRUPTIBLE); <span class="comment">//Sleep for a while </span></div><div class="line">        schedule_timeout(HZ/<span class="number">100</span>); <span class="comment">//Judging again after sleeping 10MS(1s=1HZ)</span></div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">spi_flash_write_status_reg</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> reg1, <span class="keyword">unsigned</span> <span class="keyword">char</span> reg2)</span></span></div><div class="line">&#123;    </div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> tx_buf[<span class="number">3</span>];</div><div class="line"></div><div class="line">    spi_flash_write_eable(<span class="number">1</span>);  </div><div class="line">    </div><div class="line">    tx_buf[<span class="number">0</span>] = <span class="number">0x01</span>;</div><div class="line">    tx_buf[<span class="number">1</span>] = reg1;</div><div class="line">    tx_buf[<span class="number">2</span>] = reg2;</div><div class="line"></div><div class="line">    spi_write(spi_w25q16dv_dev, tx_buf, <span class="number">3</span>);   </div><div class="line"></div><div class="line">    spi_flash_wait_when_busy();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">spi_flash_clear_protect_for_status_reg</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> reg1, reg2;</div><div class="line"></div><div class="line">    reg1 = spi_flash_read_status_reg1();</div><div class="line">    reg2 = spi_flash_read_status_reg2();</div><div class="line"></div><div class="line">    reg1 &amp;= ~(<span class="number">1</span>&lt;&lt;<span class="number">7</span>);</div><div class="line">    reg2 &amp;= ~(<span class="number">1</span>&lt;&lt;<span class="number">0</span>);</div><div class="line"></div><div class="line">    spi_flash_write_status_reg(reg1, reg2);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">spi_flash_clear_protect_for_data</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">/* cmp=0,bp2,1,0=0b000 */</span></div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> reg1, reg2;</div><div class="line"></div><div class="line">    reg1 = spi_flash_read_status_reg1();</div><div class="line">    reg2 = spi_flash_read_status_reg2();</div><div class="line"></div><div class="line">    reg1 &amp;= ~(<span class="number">7</span>&lt;&lt;<span class="number">2</span>);</div><div class="line">    reg2 &amp;= ~(<span class="number">1</span>&lt;&lt;<span class="number">6</span>);</div><div class="line"></div><div class="line">    spi_flash_write_status_reg(reg1, reg2);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* erase 4K */</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">spi_flash_erase_sector</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> addr)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> tx_buf[<span class="number">4</span>];</div><div class="line">    tx_buf[<span class="number">0</span>] = <span class="number">0x20</span>;</div><div class="line">    tx_buf[<span class="number">1</span>] = addr &gt;&gt; <span class="number">16</span>;</div><div class="line">    tx_buf[<span class="number">2</span>] = addr &gt;&gt; <span class="number">8</span>;</div><div class="line">    tx_buf[<span class="number">3</span>] = addr &amp; <span class="number">0xff</span>;</div><div class="line"></div><div class="line">    spi_flash_write_eable(<span class="number">1</span>);  </div><div class="line"></div><div class="line">    spi_write(spi_w25q16dv_dev, tx_buf, <span class="number">4</span>);</div><div class="line"></div><div class="line">    spi_flash_wait_when_busy();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* program */</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">spi_flash_program</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> addr, <span class="keyword">unsigned</span> <span class="keyword">char</span> *buf, <span class="keyword">int</span> len)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> ret;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> tx_buf[<span class="number">4</span>];   </div><div class="line">    <span class="keyword">struct</span> spi_transfer t[] = &#123;</div><div class="line">            &#123;</div><div class="line">                .tx_buf     = tx_buf,</div><div class="line">                .len        = <span class="number">4</span>,</div><div class="line">            &#125;,</div><div class="line">            &#123;</div><div class="line">                .tx_buf     = buf,</div><div class="line">                .len        = len,</div><div class="line">            &#125;,</div><div class="line">        &#125;;</div><div class="line">    <span class="keyword">struct</span> spi_message  m;</div><div class="line"></div><div class="line">    tx_buf[<span class="number">0</span>] = <span class="number">0x02</span>;</div><div class="line">    tx_buf[<span class="number">1</span>] = addr &gt;&gt; <span class="number">16</span>;</div><div class="line">    tx_buf[<span class="number">2</span>] = addr &gt;&gt; <span class="number">8</span>;</div><div class="line">    tx_buf[<span class="number">3</span>] = addr &amp; <span class="number">0xff</span>;</div><div class="line"></div><div class="line"></div><div class="line">    spi_flash_write_eable(<span class="number">1</span>);  </div><div class="line"></div><div class="line">    spi_message_init(&amp;m);</div><div class="line">    spi_message_add_tail(&amp;t[<span class="number">0</span>], &amp;m);</div><div class="line">    spi_message_add_tail(&amp;t[<span class="number">1</span>], &amp;m);</div><div class="line">    ret = spi_sync(spi_w25q16dv_dev, &amp;m);</div><div class="line">    <span class="keyword">if</span> (ret)</div><div class="line">    &#123;</div><div class="line">        printk(<span class="string">"spi_flash_program spi_syn err : %d\n"</span>, ret);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    spi_flash_wait_when_busy();    </div><div class="line">    </div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">spi_flash_read</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> addr, <span class="keyword">unsigned</span> <span class="keyword">char</span> *buf, <span class="keyword">int</span> len)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> tx_buf[<span class="number">4</span>];   </div><div class="line">    <span class="keyword">struct</span> spi_transfer t[] = &#123;</div><div class="line">            &#123;</div><div class="line">                .tx_buf     = tx_buf,</div><div class="line">                .len        = <span class="number">4</span>,</div><div class="line">            &#125;,</div><div class="line">            &#123;</div><div class="line">                .rx_buf     = buf,</div><div class="line">                .len        = len,</div><div class="line">            &#125;,</div><div class="line">        &#125;;</div><div class="line">    <span class="keyword">struct</span> spi_message  m;</div><div class="line"></div><div class="line">    tx_buf[<span class="number">0</span>] = <span class="number">0x03</span>;</div><div class="line">    tx_buf[<span class="number">1</span>] = addr &gt;&gt; <span class="number">16</span>;</div><div class="line">    tx_buf[<span class="number">2</span>] = addr &gt;&gt; <span class="number">8</span>;</div><div class="line">    tx_buf[<span class="number">3</span>] = addr &amp; <span class="number">0xff</span>;</div><div class="line"></div><div class="line">    spi_message_init(&amp;m);</div><div class="line">    spi_message_add_tail(&amp;t[<span class="number">0</span>], &amp;m);</div><div class="line">    spi_message_add_tail(&amp;t[<span class="number">1</span>], &amp;m);</div><div class="line">    spi_sync(spi_w25q16dv_dev, &amp;m); </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">spi_flash_init</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    spi_flash_clear_protect_for_status_reg();</div><div class="line">    spi_flash_clear_protect_for_data();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">w25q16dv_erase</span><span class="params">(<span class="keyword">struct</span> mtd_info *mtd, <span class="keyword">struct</span> erase_info *instr)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> addr = instr-&gt;addr;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> len  = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="comment">//Judgment parameter</span></div><div class="line">    <span class="keyword">if</span> ((addr &amp; (flash_w25q16dv_dev.erasesize - <span class="number">1</span>)) || (instr-&gt;len &amp; (flash_w25q16dv_dev.erasesize - <span class="number">1</span>)))</div><div class="line">    &#123;</div><div class="line">        printk(<span class="string">"w25q16dv_erase:addr/len is not aligned\n"</span>);</div><div class="line">        <span class="keyword">return</span> -EINVAL;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (len = <span class="number">0</span>; len &lt; instr-&gt;len; len += <span class="number">4096</span>)</div><div class="line">    &#123;</div><div class="line">        spi_flash_erase_sector(addr);</div><div class="line">        addr += <span class="number">4096</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    instr-&gt;state = MTD_ERASE_DONE;</div><div class="line">    mtd_erase_callback(instr);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> NUM  256</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span>  <span class="title">w25q16dv_read</span><span class="params">(<span class="keyword">struct</span> mtd_info *mtd, <span class="keyword">loff_t</span> from, <span class="keyword">size_t</span> len, <span class="keyword">size_t</span> *retlen, u_char *buf)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">int</span> left = len;</div><div class="line">    <span class="keyword">int</span> rlen;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line">    spi_flash_read(from, buf, len);</div><div class="line"><span class="meta">#<span class="meta-keyword">else</span>   </span></div><div class="line">    <span class="keyword">while</span> (left &gt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (left &lt;= NUM)</div><div class="line">            rlen = left;</div><div class="line">        <span class="keyword">else</span></div><div class="line">            rlen = NUM;</div><div class="line">        spi_flash_read(from, buf, rlen);</div><div class="line">        from += rlen;</div><div class="line">        buf += rlen;</div><div class="line">        left -= rlen;</div><div class="line">    &#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line">    *retlen = len;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">w25q16dv_write</span><span class="params">(<span class="keyword">struct</span> mtd_info *mtd, <span class="keyword">loff_t</span> to, <span class="keyword">size_t</span> len, <span class="keyword">size_t</span> *retlen, <span class="keyword">const</span> u_char *buf)</span></span></div><div class="line">&#123;</div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line">    <span class="keyword">int</span> data_addr = to;</div><div class="line">    <span class="keyword">int</span> data_len = len;</div><div class="line">    <span class="keyword">int</span> i=<span class="number">0</span>, left_len=<span class="number">0</span>, right_len=<span class="number">0</span>, page_num=<span class="number">0</span>;</div><div class="line">    </div><div class="line"></div><div class="line"></div><div class="line">    printk(<span class="string">"data_addr=0x%02x, data_len=0x%x\n"</span>, data_addr, data_len);</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">16</span> &amp;&amp; i &lt; data_len; i++)</div><div class="line">    &#123;</div><div class="line">        printk(<span class="string">"%02x "</span>, buf[i]);</div><div class="line">    &#125;</div><div class="line">    printk(<span class="string">"\n"</span>);</div><div class="line">           </div><div class="line">    <span class="keyword">if</span> (data_addr%NUM + data_len &lt;= NUM)</div><div class="line">    &#123;</div><div class="line">        spi_flash_program(data_addr, (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)buf, data_len); </div><div class="line">    &#125;</div><div class="line">        </div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        left_len = NUM - (data_addr%NUM);</div><div class="line">        page_num = (data_len - left_len) / NUM;</div><div class="line">        right_len = len - page_num*NUM - left_len;</div><div class="line"></div><div class="line">        spi_flash_program(data_addr, (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)buf, left_len); </div><div class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;page_num; i++)</div><div class="line">            spi_flash_program(data_addr+NUM*i+left_len, (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)(buf+NUM*i+left_len), NUM);    </div><div class="line">        spi_flash_program(data_addr+NUM*i+left_len, (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)(buf+NUM*i+left_len), right_len);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    *retlen = data_len;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line"></div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> addr = to;</div><div class="line">    <span class="keyword">int</span> unalign = addr &amp; (NUM - <span class="number">1</span>);</div><div class="line">    <span class="keyword">int</span> wlen;</div><div class="line">    <span class="keyword">int</span> left = len;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (unalign)</div><div class="line">    &#123;</div><div class="line">        wlen = NUM - unalign;</div><div class="line">        <span class="keyword">if</span> (wlen &gt;= len) </div><div class="line">            wlen = len;</div><div class="line">        spi_flash_program(addr, (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)buf, wlen); </div><div class="line">        addr += wlen;</div><div class="line">        buf += wlen;</div><div class="line">        left -= wlen;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">while</span> (left &gt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (left &gt;= NUM)</div><div class="line">            wlen = NUM;</div><div class="line">        <span class="keyword">else</span></div><div class="line">            wlen = left;</div><div class="line">        </div><div class="line">        spi_flash_program(addr, (<span class="keyword">unsigned</span> <span class="keyword">char</span> *)buf, wlen);</div><div class="line"></div><div class="line">        addr += wlen;</div><div class="line">        buf += wlen;</div><div class="line">        left -= wlen;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    *retlen = len;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line">   </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">w25q16dv_probe</span><span class="params">(<span class="keyword">struct</span> spi_device *spi)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> mid, did;</div><div class="line">    </div><div class="line">    printk(KERN_INFO <span class="string">"run w25q16dv_probe\n"</span>);</div><div class="line"></div><div class="line">    spi_w25q16dv_dev = spi;</div><div class="line"></div><div class="line">    spi_flash_init();</div><div class="line">    spi_flash_read_ID(&amp;mid, &amp;did);</div><div class="line">    printk(<span class="string">"SPI Flash ID: %02x %02x\n"</span>, mid, did);</div><div class="line">    <span class="built_in">memset</span>(&amp;flash_w25q16dv_dev, <span class="number">0</span>, <span class="keyword">sizeof</span>(flash_w25q16dv_dev)); </div><div class="line"></div><div class="line">    <span class="comment">/* Setup the MTD structure */</span></div><div class="line">    flash_w25q16dv_dev.name = <span class="string">"w25q16dv_spi_flash"</span>;</div><div class="line">    flash_w25q16dv_dev.type = MTD_NORFLASH;</div><div class="line">    flash_w25q16dv_dev.flags = MTD_CAP_NORFLASH;</div><div class="line">    flash_w25q16dv_dev.size = <span class="number">0x200000</span>;  <span class="comment">/* 2M */</span></div><div class="line">    flash_w25q16dv_dev.writesize = <span class="number">1</span>; </div><div class="line">    flash_w25q16dv_dev.writebufsize = <span class="number">4096</span>; <span class="comment">/* no use */</span></div><div class="line">    flash_w25q16dv_dev.erasesize = <span class="number">4096</span>;    <span class="comment">/* Minimum unit of erasure */</span></div><div class="line"></div><div class="line">    flash_w25q16dv_dev.owner = THIS_MODULE;</div><div class="line">    flash_w25q16dv_dev._erase = w25q16dv_erase;</div><div class="line">    flash_w25q16dv_dev._read  = w25q16dv_read;</div><div class="line">    flash_w25q16dv_dev._write = w25q16dv_write;</div><div class="line"></div><div class="line">    mtd_device_register(&amp;flash_w25q16dv_dev, <span class="literal">NULL</span>, <span class="number">0</span>);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">w25q16dv_remove</span><span class="params">(<span class="keyword">struct</span> spi_device *spi)</span></span></div><div class="line">&#123;</div><div class="line">    printk(KERN_INFO <span class="string">"run w25q16dv_remove\n"</span>);</div><div class="line"></div><div class="line">    mtd_device_unregister(&amp;flash_w25q16dv_dev);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">struct</span> of_device_id of_match_spi[] = &#123;</div><div class="line">    &#123; .compatible = <span class="string">"winbond,w25q16dv"</span>, .data = <span class="literal">NULL</span> &#125;,</div><div class="line">    &#123; <span class="comment">/* sentinel */</span> &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> spi_driver w25q16dv_driver = &#123;</div><div class="line">    .probe = w25q16dv_probe,</div><div class="line">    .remove = w25q16dv_remove,</div><div class="line">    .driver = &#123;</div><div class="line">        .name = <span class="string">"w25q16dv_drv"</span>,</div><div class="line">        .owner = THIS_MODULE,</div><div class="line">        .of_match_table = of_match_spi,  </div><div class="line">    &#125;,</div><div class="line">&#125;;</div><div class="line"></div><div class="line">module_spi_driver(w25q16dv_driver);</div><div class="line"></div><div class="line">MODULE_LICENSE(<span class="string">"GPL"</span>);</div><div class="line">MODULE_AUTHOR(<span class="string">"hceng &lt;huangcheng.job@foxmail.com&gt;"</span>);</div><div class="line">MODULE_DESCRIPTION(<span class="string">"TI am335x board spi device: w25q16dv driver."</span>);</div><div class="line">MODULE_VERSION(<span class="string">"v1.0"</span>);</div></pre></td></tr></table></figure><p>这是遇到过数不多的块设备驱动，块设备驱动的写法都要忘了，以后块设备驱动可以参考这个。</p><h2 id="4-3-测试程序"><a href="#4-3-测试程序" class="headerlink" title="4.3 测试程序"></a>4.3 测试程序</h2><p>在加载<code>w25q16dv.ko</code>驱动后，将会生成两个设备节点：<code>/dev/mtdx</code>和<code>/dev/mtdblockx</code>。<br><code>/dev/mtdx</code>是字符设备的节点，可以像字符设备那样读写；<br><code>/dev/mtdblockx</code>是块设备的节点，可以进行块设备类似的操作；<br>两个节点都是操作的同一设备，而且最后调用的读写函数也是驱动中的同一个；<br>两者差异体现在进行字符设备读写时，可以直接写到某个地址，而对块设备而言，需要先读块的内容，再擦除一个块，再写一个块。</p><p>测试方法有两种，<br>一种是自己写应用程序，通过<code>open()</code>、<code>read()</code>、<code>write()</code>等进行操作；<br>另一种是把整个Flash格式化成各种文件系统格式，然后挂载，拷贝文件，卸载，再次挂载检查之前拷贝的文件是否正常。</p><ul><li>应用程序读写测试：<figure class="highlight c"><figcaption><span>[spi_flash_app.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div><div class="line">353</div><div class="line">354</div><div class="line">355</div><div class="line">356</div><div class="line">357</div><div class="line">358</div><div class="line">359</div><div class="line">360</div><div class="line">361</div><div class="line">362</div><div class="line">363</div><div class="line">364</div><div class="line">365</div><div class="line">366</div><div class="line">367</div><div class="line">368</div><div class="line">369</div><div class="line">370</div><div class="line">371</div><div class="line">372</div><div class="line">373</div><div class="line">374</div><div class="line">375</div><div class="line">376</div><div class="line">377</div><div class="line">378</div><div class="line">379</div><div class="line">380</div><div class="line">381</div><div class="line">382</div><div class="line">383</div><div class="line">384</div><div class="line">385</div><div class="line">386</div><div class="line">387</div><div class="line">388</div><div class="line">389</div><div class="line">390</div><div class="line">391</div><div class="line">392</div><div class="line">393</div><div class="line">394</div><div class="line">395</div><div class="line">396</div><div class="line">397</div><div class="line">398</div><div class="line">399</div><div class="line">400</div><div class="line">401</div><div class="line">402</div><div class="line">403</div><div class="line">404</div><div class="line">405</div><div class="line">406</div><div class="line">407</div><div class="line">408</div><div class="line">409</div><div class="line">410</div><div class="line">411</div><div class="line">412</div><div class="line">413</div><div class="line">414</div><div class="line">415</div><div class="line">416</div><div class="line">417</div><div class="line">418</div><div class="line">419</div><div class="line">420</div><div class="line">421</div><div class="line">422</div><div class="line">423</div><div class="line">424</div><div class="line">425</div><div class="line">426</div><div class="line">427</div><div class="line">428</div><div class="line">429</div><div class="line">430</div><div class="line">431</div><div class="line">432</div><div class="line">433</div><div class="line">434</div><div class="line">435</div><div class="line">436</div><div class="line">437</div><div class="line">438</div><div class="line">439</div><div class="line">440</div><div class="line">441</div><div class="line">442</div><div class="line">443</div><div class="line">444</div><div class="line">445</div><div class="line">446</div><div class="line">447</div><div class="line">448</div><div class="line">449</div><div class="line">450</div><div class="line">451</div><div class="line">452</div><div class="line">453</div><div class="line">454</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/ioctl.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;mtd/mtd-user.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;errno.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;getopt.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="comment">// Data types</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> u8      unsigned char</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> u16     unsigned short</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> u32     unsigned long</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> u64     unsigned long long int</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> s8      char</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> s16     int</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> s32     long int</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> s64     long long int</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> boolean unsigned char</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> BUFFER_SIZE     1024</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> OTP_NUM_WORDS   0x40</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> SUCCESS     0</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FAIL        -1</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> TRUE        1</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> FALSE       0</span></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">char</span> *<span class="keyword">const</span> short_options = <span class="string">"ho:d:r:w::e"</span>;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> <span class="keyword">struct</span> option long_options[] =</div><div class="line">&#123;</div><div class="line"></div><div class="line">    &#123;<span class="string">"help"</span>,   no_argument,       <span class="literal">NULL</span>, <span class="string">'h'</span>&#125;,</div><div class="line">    &#123;<span class="string">"device"</span>, required_argument, <span class="literal">NULL</span>, <span class="string">'d'</span>&#125;,</div><div class="line">    &#123;<span class="string">"read"</span>,   required_argument, <span class="literal">NULL</span>, <span class="string">'r'</span>&#125;,</div><div class="line">    &#123;<span class="string">"offset"</span>, required_argument, <span class="literal">NULL</span>, <span class="string">'o'</span>&#125;,</div><div class="line">    &#123;<span class="string">"write"</span>,  optional_argument, <span class="literal">NULL</span>, <span class="string">'w'</span>&#125;,</div><div class="line">    &#123;<span class="string">"erase"</span>,  no_argument,       <span class="literal">NULL</span>, <span class="string">'e'</span>&#125;,</div><div class="line">    &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">enum</span></div><div class="line">&#123;</div><div class="line">    RUN_READ,</div><div class="line">    RUN_WRITE,</div><div class="line">    RUN_ERASE,</div><div class="line">    RUN_END</div><div class="line">&#125; run_type;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">struct</span> mtd_info_user info;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">show_usage</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"\nUsage: ./spi_flash_app -d &lt;device&gt; &lt;operation&gt;\n"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"\nOperation:\n"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"\t-e\n"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"\t-r\n"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"\t-w\n"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"\t-o &lt;offset&gt;\n"</span>);</div><div class="line"></div><div class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">mtd_read</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *device, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> offset, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> size)</span></span></div><div class="line">&#123;</div><div class="line">    assert(device);</div><div class="line">    assert(size &gt; <span class="number">0</span>);</div><div class="line"></div><div class="line">    <span class="keyword">int</span> fd, ret = <span class="number">-1</span>;</div><div class="line">    fd = open(device, O_RDONLY);</div><div class="line">    <span class="keyword">if</span>(fd &lt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"(E) Open device %s failed.\n"</span>, device);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (<span class="number">-1</span> == lseek(fd, offset, SEEK_SET))</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"lseek 0x%x error\n"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">char</span> buf[size];</div><div class="line">    <span class="built_in">memset</span>(buf, <span class="number">0</span>, size);</div><div class="line">    ret = read(fd, buf, size);</div><div class="line">    <span class="keyword">if</span>(ret != <span class="number">-1</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"buffer_read: \n"</span>);</div><div class="line">        <span class="keyword">int</span> i;</div><div class="line">        <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; ret; i++)</div><div class="line">        &#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"%02x "</span>, buf[i]);</div><div class="line">            <span class="keyword">if</span>(!((i + <span class="number">1</span>) % <span class="number">10</span>)) <span class="built_in">printf</span>(<span class="string">"\n"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"\n Read ok!\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"(E) Read error!\n"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    close(fd);</div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">mtd_write</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *device, <span class="keyword">const</span> <span class="keyword">void</span> *data, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> offset, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> size)</span></span></div><div class="line">&#123;</div><div class="line">    assert(device);</div><div class="line">    assert(data);</div><div class="line">    assert(size &gt; <span class="number">0</span>);</div><div class="line"></div><div class="line">    <span class="keyword">int</span> fd, ret = <span class="number">-1</span>;</div><div class="line">    fd = open(device, O_RDWR);</div><div class="line">    <span class="keyword">if</span>(fd &lt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"(E) Open device %s failed.\n"</span>, device);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (<span class="number">-1</span> == lseek(fd, offset, SEEK_SET))</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"lseek 0x%x error\n"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ret = write(fd, data, size);</div><div class="line">    <span class="keyword">if</span>(ret != <span class="number">-1</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>( ret == <span class="number">0</span>)</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"\n Nothing to write!\n"</span>);</div><div class="line">        <span class="keyword">else</span></div><div class="line">            <span class="built_in">printf</span>(<span class="string">"\n Write ok!\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"(E) Write error!\n"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    close(fd);</div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">non_region_erase</span><span class="params">(<span class="keyword">const</span> <span class="keyword">int</span> fd, <span class="keyword">const</span> <span class="keyword">int</span> start, <span class="keyword">int</span> count, <span class="keyword">const</span> <span class="keyword">int</span> unlock)</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="keyword">mtd_info_t</span> meminfo;</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(ioctl(fd, MEMGETINFO, &amp;meminfo) == <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">erase_info_t</span> erase;</div><div class="line">        erase.start = start;</div><div class="line">        erase.length = meminfo.erasesize;</div><div class="line"></div><div class="line">        <span class="keyword">for</span>(; count &gt; <span class="number">0</span>; count--)</div><div class="line">        &#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"Performing Flash Erase of length %u at offset 0x%x\n"</span>, erase.length, erase.start);</div><div class="line">            fflush(<span class="built_in">stdout</span>);</div><div class="line">            <span class="keyword">if</span>(unlock != <span class="number">0</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="built_in">printf</span>(<span class="string">"Performing Flash unlock at offset 0x%x\n"</span>, erase.start);</div><div class="line">                <span class="keyword">if</span>(ioctl(fd, MEMUNLOCK, &amp;erase) != <span class="number">0</span>)</div><div class="line">                &#123;</div><div class="line">                    perror(<span class="string">"MTD unlock failure"</span>);</div><div class="line">                    close(fd);</div><div class="line">                    <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">if</span>(ioctl(fd, MEMERASE, &amp;erase) != <span class="number">0</span>)</div><div class="line">            &#123;</div><div class="line">                perror(<span class="string">"MTD erase failure"</span>);</div><div class="line">                close(fd);</div><div class="line">                <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">            &#125;</div><div class="line">            erase.start += meminfo.erasesize;</div><div class="line">        &#125;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"  done\n"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">mtd_erase</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *device, <span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">int</span> regcount)</span></span></div><div class="line">&#123;</div><div class="line">    assert(device);</div><div class="line"></div><div class="line">    <span class="keyword">int</span> fd, ret = <span class="number">-1</span>;</div><div class="line">    fd = open(device, O_RDWR);</div><div class="line">    <span class="keyword">if</span>(fd &lt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"(E) Open device %s failed.\n"</span>, device);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(regcount == <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        ret = non_region_erase(fd, <span class="number">0</span>, (info.size / info.erasesize), <span class="number">0</span>);</div><div class="line">        <span class="keyword">if</span>(ret == <span class="number">0</span>)</div><div class="line">        &#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"\n Erase ok!\n"</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"(E) Erase error!\n"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    close(fd);</div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">EeReadLineFromEepFile</span><span class="params">(FILE *DataFile, s8 *Buffer, <span class="keyword">const</span> u32 BufferSize)</span></span></div><div class="line">&#123;</div><div class="line">    u32         Sign            = <span class="number">0</span>;</div><div class="line">    u16         StringIndex     = <span class="number">0</span>;</div><div class="line">    s16       EeStatus        = SUCCESS;</div><div class="line">    boolean     EndOfLine       = FALSE;</div><div class="line">    boolean     Comment         = FALSE;</div><div class="line"></div><div class="line">    <span class="keyword">do</span></div><div class="line">    &#123;</div><div class="line">        <span class="comment">/* Read line from the file. If the line is longer</span></div><div class="line">         * it will be serviced below */</div><div class="line">        <span class="keyword">if</span>(fgets(Buffer, BufferSize, DataFile) == <span class="literal">NULL</span>)</div><div class="line">        &#123;</div><div class="line">            EeStatus = FAIL;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/* Look for:</span></div><div class="line">         * a semicolon in the string indicating a comment</div><div class="line">         * a EOL just for detection if this is a full line</div><div class="line">         * read to the buffer */</div><div class="line">        <span class="keyword">for</span>(StringIndex = <span class="number">0</span>; StringIndex &lt; BufferSize; StringIndex++)</div><div class="line">        &#123;</div><div class="line">            <span class="comment">/* Break the loop if string has ended */</span></div><div class="line">            <span class="keyword">if</span>(Buffer[StringIndex] == <span class="string">'\0'</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="comment">/* Detect end of line and comments */</span></div><div class="line">            <span class="keyword">if</span>(Buffer[StringIndex] == <span class="string">'\n'</span> ||</div><div class="line">                    Buffer[StringIndex] == <span class="string">'\r'</span> ||</div><div class="line">                    Buffer[StringIndex] == <span class="string">';'</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="comment">/* Determine which we encountered...EOL or</span></div><div class="line">                * comment...add terminating NULL as needed */</div><div class="line">                <span class="keyword">if</span>(Buffer[StringIndex] == <span class="string">';'</span>)</div><div class="line">                &#123;</div><div class="line">                    Comment = TRUE;</div><div class="line">                    Buffer[StringIndex] = <span class="string">'\0'</span>;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span></div><div class="line">                &#123;</div><div class="line">                    EndOfLine = TRUE;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/* If the end of line was not detected - read the rest of</span></div><div class="line">         * line and omit it if it's a comment */</div><div class="line">        <span class="keyword">if</span>(EndOfLine == FALSE)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">if</span>(Comment == TRUE)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">while</span>((Sign = getc(DataFile)) != EOF)</div><div class="line">                &#123;</div><div class="line">                    <span class="keyword">if</span>(Sign == (u32)<span class="string">'\n'</span> || Sign == (u32)<span class="string">'\r'</span>)</div><div class="line">                    &#123;</div><div class="line">                        <span class="keyword">break</span>;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            <span class="comment">/* If data in buffer does not contain the whole line</span></div><div class="line">             * (it does not contain comment)</div><div class="line">             * then it will be read in next step */</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">/* If this line is empty, clear local flags */</span></div><div class="line">        <span class="keyword">if</span>(*Buffer == <span class="string">'\0'</span>)</div><div class="line">        &#123;</div><div class="line">            EndOfLine =  FALSE;</div><div class="line">            Comment = FALSE;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">while</span>(*Buffer == <span class="string">'\0'</span>);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> EeStatus;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">mtd_write_file</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *device, <span class="keyword">const</span> <span class="keyword">char</span> *filename)</span></span></div><div class="line">&#123;</div><div class="line">    s8  retval = FAIL;</div><div class="line">    u16 i = <span class="number">0</span>;</div><div class="line">    s16 maxlen = <span class="number">8</span> * <span class="number">64</span>;</div><div class="line">    FILE *file = <span class="literal">NULL</span>;</div><div class="line">    u32 b[<span class="number">8</span>];</div><div class="line">    s8 temp[<span class="number">200</span>];</div><div class="line">    u16 buffer[OTP_NUM_WORDS * <span class="number">8</span>];</div><div class="line"></div><div class="line">    file = fopen(filename, <span class="string">"r"</span>);</div><div class="line">    <span class="keyword">if</span>(<span class="literal">NULL</span> == file)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"Unable to open specified file: %s\n"</span>, filename);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        <span class="comment">//FILE *file_ro = file; // WTF! (FILE *)0x12008 --&gt; (FILE *)0x10000 by sscanf</span></div><div class="line">        <span class="built_in">memset</span>(b, <span class="number">0x0</span>, <span class="keyword">sizeof</span>(b));</div><div class="line">        <span class="built_in">memset</span>(buffer, <span class="number">0x0</span>, <span class="keyword">sizeof</span>(buffer));</div><div class="line"></div><div class="line">        retval = EeReadLineFromEepFile(file, temp, <span class="number">200</span>);</div><div class="line"></div><div class="line">        <span class="keyword">while</span> ((SUCCESS == retval) &amp;&amp; (i &lt; maxlen))</div><div class="line">        &#123;</div><div class="line">            <span class="comment">// place the hex numbers from the line read in to the temp buffer</span></div><div class="line">            <span class="built_in">sscanf</span>(temp, <span class="string">"%08lx %08lx %08lx %08lx %08lx %08lx %08lx %08lx"</span>, \</div><div class="line">                   &amp; (b[<span class="number">0</span>]), &amp;(b[<span class="number">1</span>]), &amp;(b[<span class="number">2</span>]), &amp;(b[<span class="number">3</span>]), \</div><div class="line">                   &amp; (b[<span class="number">4</span>]), &amp;(b[<span class="number">5</span>]), &amp;(b[<span class="number">6</span>]), &amp;(b[<span class="number">7</span>]));</div><div class="line"></div><div class="line">            <span class="comment">// copy the words to the permanent buffer</span></div><div class="line">            buffer[i + <span class="number">0</span>] = b[<span class="number">0</span>];</div><div class="line">            buffer[i + <span class="number">1</span>] = b[<span class="number">1</span>];</div><div class="line">            buffer[i + <span class="number">2</span>] = b[<span class="number">2</span>];</div><div class="line">            buffer[i + <span class="number">3</span>] = b[<span class="number">3</span>];</div><div class="line">            buffer[i + <span class="number">4</span>] = b[<span class="number">4</span>];</div><div class="line">            buffer[i + <span class="number">5</span>] = b[<span class="number">5</span>];</div><div class="line">            buffer[i + <span class="number">6</span>] = b[<span class="number">6</span>];</div><div class="line">            buffer[i + <span class="number">7</span>] = b[<span class="number">7</span>];</div><div class="line"></div><div class="line">            <span class="comment">// increment i by 8 so we can get the next 8 words</span></div><div class="line">            i += <span class="number">8</span>;</div><div class="line"></div><div class="line">            <span class="comment">// read the next line</span></div><div class="line">            retval = EeReadLineFromEepFile(file, temp, <span class="number">200</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    fclose(file);</div><div class="line">    mtd_write(device, buffer, <span class="number">0</span>, <span class="keyword">sizeof</span>(buffer));</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> fd;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">char</span> *device = <span class="literal">NULL</span>;</div><div class="line">    <span class="keyword">int</span> regcount;</div><div class="line">    run_type mode = <span class="number">-1</span>;</div><div class="line">    <span class="keyword">int</span> read_size = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> write_size = <span class="number">0</span>;</div><div class="line">    <span class="keyword">char</span> *opt_file = <span class="literal">NULL</span>;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> offset = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">int</span> c;</div><div class="line">    <span class="keyword">while</span>((c = getopt_long(argc, argv, short_options, long_options, <span class="literal">NULL</span>)) != <span class="number">-1</span>)</div><div class="line">    &#123;</div><div class="line"></div><div class="line">        <span class="keyword">switch</span>(c)</div><div class="line">        &#123;</div><div class="line"></div><div class="line">        <span class="keyword">case</span> <span class="string">'h'</span>:</div><div class="line">            show_usage();</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'d'</span>:</div><div class="line">            device = optarg;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'r'</span>:</div><div class="line">        &#123;</div><div class="line">            mode = RUN_READ;</div><div class="line">            read_size = atoi(optarg);</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"read_size=%d\n"</span>, read_size);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'o'</span>:</div><div class="line">        &#123;</div><div class="line">            offset = strtoul(optarg, <span class="literal">NULL</span>, <span class="number">0</span>);</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"offset= 0x%x\n"</span>, offset);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'w'</span>:</div><div class="line">        &#123;</div><div class="line">            mode = RUN_WRITE;</div><div class="line">            opt_file = optarg;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"opt_file : %s\n"</span>, opt_file);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'e'</span>:</div><div class="line">            mode = RUN_ERASE;</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">default</span>:</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(device == <span class="literal">NULL</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"(E) Device is required, please check it.\n"</span>);</div><div class="line">        show_usage();</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"device = %s\n"</span>, device);</div><div class="line"></div><div class="line">    fd = open(device, O_RDWR);</div><div class="line">    <span class="keyword">if</span>(fd &lt; <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"open device %s error\n"</span>, device);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(ioctl(fd, MEMGETINFO, &amp;info) == <span class="number">0</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"info.size=%d\n"</span>, info.size);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"info.erasesize=%d\n"</span>, info.erasesize);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"info.writesize=%d\n"</span>, info.writesize);</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"info.oobsize=%d\n"</span>, info.oobsize);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(ioctl(fd, MEMGETREGIONCOUNT, &amp;regcount) == <span class="number">0</span>)</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"regcount = %d\n"</span>, regcount);</div><div class="line"></div><div class="line">    close(fd);</div><div class="line"></div><div class="line">    <span class="keyword">if</span>(RUN_READ == mode)</div><div class="line">        mtd_read(device, offset, read_size);</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(RUN_WRITE == mode)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(opt_file)</div><div class="line">        &#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"Write opt_file to device %s\n"</span>, device);</div><div class="line">            mtd_write_file(device, opt_file);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span></div><div class="line">        &#123;</div><div class="line">            <span class="built_in">printf</span>(<span class="string">"Write buf[10] to device %s\n"</span>, device);</div><div class="line">            <span class="keyword">char</span> buf[<span class="number">10</span>] =</div><div class="line">            &#123;</div><div class="line">                <span class="number">0x01</span>, <span class="number">0x02</span>, <span class="number">0x03</span>, <span class="number">0x04</span>, <span class="number">0x05</span>, <span class="number">0x06</span>, <span class="number">0x07</span>, <span class="number">0x08</span>, <span class="number">0x09</span>, <span class="number">0x10</span>,</div><div class="line">            &#125;;</div><div class="line">            mtd_write(device, buf, offset, <span class="keyword">sizeof</span>(buf));</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(RUN_ERASE == mode)</div><div class="line">        mtd_erase(device, regcount);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><p>使用方法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">./flash_test -d /dev/mtd10 -e //擦除</div><div class="line">./flash_test -d /dev/mtd10 -r 10 -o 0  //从地址偏移0读出10字节</div><div class="line">./flash_test -d /dev/mtd10 -w -o 0     //从地址偏移0写10字节</div><div class="line">./flash_test -d /dev/mtd10 -r 10 -o 0</div><div class="line"></div><div class="line">./flash_test -d /dev/mtd10 -e  </div><div class="line">./flash_test -d /dev/mtdblock10 -r 10 -o 0   </div><div class="line">./flash_test -d /dev/mtdblock10 -w -o 0  </div><div class="line">./flash_test -d /dev/mtdblock10 -r 10 -o 0</div></pre></td></tr></table></figure></p><p>另外，部分根文件系统集成了flash测试工具，但只能擦除操作：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">flash_eraseall /dev/mtd10</div></pre></td></tr></table></figure></p><ul><li>当作文件系统测试：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">mkfs.vfat -I /dev/mtdblock10</div><div class="line">mount -t vfat /dev/mtdblock10 /hceng</div><div class="line"></div><div class="line">cp /etc/init.d/rcS /hceng</div><div class="line">sync</div><div class="line"></div><div class="line">umount /hceng</div><div class="line">mount -t vfat /dev/mtdblock10 /hceng</div><div class="line"></div><div class="line">cat /hceng/rcS</div><div class="line">diff /hceng/rcS /etc/init.d/rcS</div></pre></td></tr></table></figure></li></ul><h1 id="5-补充"><a href="#5-补充" class="headerlink" title="5. 补充"></a>5. 补充</h1><p>想到几个补充。</p><p>1.内核自带SPI设备驱动<br>在最开始的准备工作里，加入了<code>User mode SPI device driver support</code>。<br>起初想的是一个SPI设备驱动用于测试，后来发现并不是简单的用于测试SPI，它还有更重要的作用，就如它的名字一样，”用户模式SPI设备驱动支持”，可以通过它，<br>在Linux应用层直接操作SPI设备。<br>参考自带的应用测试文件<code>Documentation/spi/spidev_test.c</code>，可以通过访问<code>/dev/spidev1.0</code>来控制SPI控制器，例如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">ioctl(fd, SPI_IOC_WR_MODE, mode); //修改SPI模式</div><div class="line">ioctl(fd, SPI_IOC_RD_MODE, mode);</div><div class="line"></div><div class="line">ioctl(fd, SPI_IOC_WR_MAX_SPEED_HZ, speed); //修改SPI传输速度</div><div class="line">ioctl(fd, SPI_IOC_RD_MAX_SPEED_HZ, speed);</div><div class="line"></div><div class="line">ioctl(fd, SPI_IOC_WR_BITS_PER_WORD, bits); //修改SPI每次传输数据长度</div><div class="line">ioctl(fd, SPI_IOC_RD_BITS_PER_WORD, bits);</div><div class="line"></div><div class="line">ioctl(fd, SPI_IOC_MESSAGE(1), &amp;transfer); //控制SPI发送/接收数据</div><div class="line">ioctl(fd, SPI_IOC_MESSAGE(1), &amp;transfer);</div></pre></td></tr></table></figure></p><p>通过该驱动的<code>ioctl()</code>，可以实现对SPI控制器的控制，也就可以通过它在用户层控制SPI设备，而不再需要单独为SPI设备写对应的驱动。<br>当然，它也有一些限制，比如这里的片选默认就是设备树指定的CS0，如果要使用其它片选，只能是在应用层操作<code>/sys/class/gpio/x</code>来模拟片选。它适用前面的DAC和OLED等字符设备，不适用于Flash等块设备。</p><p>2.w25q16dv驱动的一个Bug<br>使用前面编写的驱动，在将其作为字符设备操作是没有问题的，但作为块设备，先格式化，挂载的时候就会报参数错误。<br>通过排查，发现挂载的时候是要向Flash写入指定数据的，然而并没有写成功，因此挂载失败。<br>把前面每次传输的数据长度<code>NUM</code>由256改为8，可以减缓问题，可以挂载，也可以拷贝小文件，读取正常，但拷贝大文件后，重新挂载读取文件失败。<br>然后发现是DMA传输导致的错误，再往里检查发现是DMA和Cache的数据不一致导致的，这就比较深了，搞不定。<br>初步解决思路是在<code>spi-omap2-mcspi.c</code>中，先使用<code>dma_alloc_coheren</code>t分配一个<code>DMA Buffer</code>，大小为4096，在SPI每次使用DMA方式的传输时：<br>①对于DMA写：<br>先把<code>spi_transfer.tx_buf</code>中的数据复制到事先分配的<code>DMA Buffe</code>r，并把<code>spi_transfer.tx_dma</code>设置为该<code>Buffer</code>的DMA地址，最后再启动DMA传输；<br>②对于DMA读：<br>把<code>spi_transfer.rx_dma</code>设置为事先分配的<code>DMA Buffer</code>的DMA地址，然后启动DMA传输；当传输完毕，把<code>DMA Buffer中</code>的数据复制到<code>spi_transfer.rx_buf</code>；</p><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在AM335X上写了几个SPI设备驱动，记录一下心得。&lt;br&gt;
    
    </summary>
    
    
      <category term="AM335X" scheme="http://yoursite.com/tags/AM335X/"/>
    
      <category term="Linux驱动" scheme="http://yoursite.com/tags/Linux%E9%A9%B1%E5%8A%A8/"/>
    
      <category term="SPI" scheme="http://yoursite.com/tags/SPI/"/>
    
  </entry>
  
  <entry>
    <title>C++学习笔记</title>
    <link href="http://yoursite.com/2018/09/24/C++%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/09/24/C++学习笔记/</id>
    <published>2018-09-24T12:46:52.000Z</published>
    <updated>2019-01-23T03:29:22.634Z</updated>
    
    <content type="html"><![CDATA[<p>学习完了Java，继续C++的学习，C++还有点印象，之前用Qt的时候还写过。<br><a id="more"></a></p><h1 id="1-C-基础知识"><a href="#1-C-基础知识" class="headerlink" title="1. C++基础知识"></a>1. C++基础知识</h1><h2 id="1-1-类的引入"><a href="#1-1-类的引入" class="headerlink" title="1.1 类的引入"></a>1.1 类的引入</h2><p>在C语言中，使用<code>struct</code>将多个数据组成一个新的数据结构，这一思维方式在C++里得到了扩展，变成了类<code>class</code>的概念，既包含多个数据，也可包含函数。</p><ul><li>示例：<figure class="highlight c"><figcaption><span>[person1.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">struct</span> person &#123;</div><div class="line">    <span class="keyword">char</span> *name;</div><div class="line">    <span class="keyword">int</span> age;</div><div class="line">    <span class="keyword">char</span> *work;</div><div class="line">    </div><div class="line">    <span class="keyword">void</span> (*printf_info)(<span class="keyword">struct</span> person *per); <span class="comment">//函数指针</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">printf_info</span><span class="params">(<span class="keyword">struct</span> person *per)</span> </span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"name = %6s, age = %2d, work = %s\n"</span>, per-&gt;name, per-&gt;age, per-&gt;work);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">struct</span> person person[] = &#123;</div><div class="line">        &#123;<span class="string">"hceng"</span>, <span class="number">23</span>, <span class="string">"Embedded engineer"</span>, printf_info&#125;,</div><div class="line">        &#123;<span class="string">"jack"</span>, <span class="number">21</span>, <span class="string">"Graphic Designer"</span>, printf_info&#125;</div><div class="line">    &#125;;</div><div class="line">    </div><div class="line">    person[<span class="number">0</span>].printf_info(&amp;person[<span class="number">0</span>]);</div><div class="line">    person[<span class="number">1</span>].printf_info(&amp;person[<span class="number">1</span>]);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><figure class="highlight cpp"><figcaption><span>[person2.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="comment">//struct person &#123;</span></div><div class="line"><span class="keyword">class</span> person &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="keyword">char</span> <span class="keyword">const</span> *name; <span class="comment">//warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]</span></div><div class="line">    <span class="keyword">int</span> age;</div><div class="line">    <span class="keyword">char</span> <span class="keyword">const</span> *work;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printf_info</span><span class="params">(<span class="keyword">void</span>)</span> </span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"name = %6s, age = %2d, work = %s\n"</span>, name, age, work); <span class="comment">//函数实现直接写在了里面,且可访问数据</span></div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">struct</span> person person[] = &#123;</div><div class="line">        &#123;<span class="string">"hceng"</span>, <span class="number">23</span>, <span class="string">"Embedded engineer"</span>&#125;,</div><div class="line">        &#123;<span class="string">"jack"</span>, <span class="number">21</span>, <span class="string">"Graphic Designer"</span>&#125;</div><div class="line">    &#125;;</div><div class="line">    </div><div class="line">    person[<span class="number">0</span>].printf_info();</div><div class="line">    person[<span class="number">1</span>].printf_info();</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>编译：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">gcc -o person1 person1.c</div><div class="line">g++ -o person2 person2.cpp</div></pre></td></tr></table></figure></p><ul><li>结果：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">name =  hceng, age = 23, work = Embedded engineer</div><div class="line">name =   jack, age = 21, work = Graphic Designer</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 C语言里，使用<code>struct</code>将多个变量组合在了一起，由于C语言的<code>struct</code>里不能有函数，因此使用函数指针来指向函数；<br>1.2 <code>main</code>里，使用<code>struct person</code>这一新数据类型，定义了数组变量<code>person[]</code>，并对每个成员初始化；<br>1.3 通过调用结构体里的函数指针，来调用函数，函数要访问结构体里的数据，因此还需要将结构体作为参数传入；<br>　<br>2.1 同样的功能，在C++里面，该示例做了如下改变：<br>2.2 因为扩充了<code>strcut</code>的功能，使用新的关键字<code>class</code>来表示集合；<br>2.3 加上了权限管理，比如这里的<code>public</code>；<br>2.4 集合可以包含函数，同时也可以访问该集合的变量，无需传入参数；<br>2.5 初始化和调用，也精简了一点；</p></blockquote><h2 id="1-2-访问控制"><a href="#1-2-访问控制" class="headerlink" title="1.2 访问控制"></a>1.2 访问控制</h2><p>C++通过<code>public</code>、<code>protected</code>、<code>private</code>三个关键字来控制成员变量和成员函数的访问权限，它们分别表示公有的、受保护的、私有的，被称为成员访问限定符。<br>与Java不同的是C++中的<code>public</code>、<code>private</code>、<code>protected</code>只能修饰类的成员，不能修饰类，C++中的类没有共有私有之分。</p><p>在类的内部(定义类的代码内部)，无论成员被声明为<code>public</code>、<code>protected</code>还是<code>private</code>，都是可以互相访问的，没有访问权限的限制。<br>在类的外部(定义类的代码之外)，只能通过对象访问成员，并且通过对象只能访问<code>public</code>属性的成员，不能访问<code>private</code>、<code>protected</code>属性的成员。</p><ul><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[person.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">class</span> Person &#123;</div><div class="line"><span class="keyword">private</span>: <span class="comment">//默认权限</span></div><div class="line">    <span class="keyword">char</span> <span class="keyword">const</span> *name; </div><div class="line">    <span class="keyword">int</span> age;</div><div class="line">    <span class="keyword">char</span> <span class="keyword">const</span> *work;</div><div class="line"></div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setName</span><span class="params">(<span class="keyword">char</span> <span class="keyword">const</span> *name)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">this</span>-&gt;name = name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(age &lt; <span class="number">0</span> || age &gt; <span class="number">150</span>)</div><div class="line">        &#123;</div><div class="line">            <span class="keyword">this</span>-&gt;age = <span class="number">0</span>;</div><div class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">this</span>-&gt;age = age;</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setWork</span><span class="params">(<span class="keyword">char</span> <span class="keyword">const</span> *work)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">this</span>-&gt;work = work;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printInfo</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"name = %6s, age = %2d, work = %s\n"</span>, name, age, work); <span class="comment">//函数实现直接写在了里面,且可访问数据</span></div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</div><div class="line">    Person per;</div><div class="line">    <span class="comment">//per.name = "hceng"; //因为是private属性,无法直接访问</span></div><div class="line">    </div><div class="line">    per.setName(<span class="string">"hceng"</span>); <span class="comment">//通过类里的函数间接访问</span></div><div class="line">    ret = per.setAge(<span class="number">-23</span>); <span class="comment">//间接访问,可以实现对传入参数的控制</span></div><div class="line">    per.setWork(<span class="string">"Embedded engineer"</span>); </div><div class="line">    per.printInfo();</div><div class="line"></div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">name =  hceng, age =  0, work = Embedded engineer</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><ol><li>定义了一个<code>class</code>类<code>Person</code>，有三个私有的成员变量，四个公共的成员函数；<br>　<br>2.1 <code>main</code>里，先创建了一个<code>Person</code>类的对象<code>per</code>；<br>2.2 通过对象<code>per</code>不能直接访问私有属性，可以通过公有属性的函数进行间接访问；<br>2.3 将成员变量设置为私有，有利于对传入参数的控制；</li></ol></blockquote><h2 id="1-3-程序结构"><a href="#1-3-程序结构" class="headerlink" title="1.3 程序结构"></a>1.3 程序结构</h2><p>为了让代码结构更有层次感，类似C语言那种使用<code>.h</code>头文件和<code>.c</code>文件分离的方式。<br>示例程序结构如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">.</div><div class="line">├── dog.cpp</div><div class="line">├── dog.h</div><div class="line">├── main.cpp</div><div class="line">├── Makefile</div><div class="line">├── person.cpp</div><div class="line">└── person.h</div></pre></td></tr></table></figure></p><p><code>person.h</code>和<code>dog.h</code>里面是类的定义；<br><code>person.cpp</code>和<code>dog.cpp</code>里面是类的实现；<br><code>main.cpp</code>里面是函数的调用，<code>Makefile</code>里面是整个工程代码的组织编译、清理；</p><p>文件比较多，就不贴代码了，示例代码见文末的Github链接。</p><p>在<code>person.cpp</code>和<code>dog.cpp</code>都定义了同名的<code>printVersion()</code>函数，为了区分这两个函数，加入了命名空间<code>namespace</code>这一关键词，将代码放在不同名字的命名空间里，调用的时候就有了区分。</p><p>调用也有三种方式：<br>1.直接使用，比如创建<code>Person</code>对象:<code>P::Person per;</code>；调用同名的函数:<code>P::printVersion();</code>；<br>2.使用<code>using</code>关键词声明，在主函数里或者外面，使用<code>using D::Dog</code>声明，后面可以使用<code>Dog</code>来表示<code>D:Dog</code>；<br>3.使用<code>using namespace D;</code>，将整个命名空间导入，后面可以使用<code>Dog</code>来表示<code>D:Dog</code>；</p><h2 id="1-4-重载"><a href="#1-4-重载" class="headerlink" title="1.4 重载"></a>1.4 重载</h2><p>与Java类似，如果函数名相同，函数的参数不同(类型、数量、顺序任一不同)，同名不同参数的函数之间，互相称之为重载函数。调用时，根据传入的参数，自动选择对应的函数。</p><ul><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[main.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"add int+int = "</span>&lt;&lt;a+b&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> a+b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">double</span> b)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"add int+double = "</span>&lt;&lt;a+b&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> (<span class="keyword">double</span>)a+b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">double</span> <span class="title">add</span><span class="params">(<span class="keyword">double</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"add double+int = "</span>&lt;&lt;a+b&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> (<span class="keyword">double</span>)a+b;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b, <span class="keyword">int</span> c)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"add int+int+int = "</span>&lt;&lt;a+b+c&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> a+b+c;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    add(<span class="number">1</span>, <span class="number">1</span>);</div><div class="line">    add(<span class="number">1</span>, <span class="number">1.5</span>);</div><div class="line">    add(<span class="number">1.5</span>, <span class="number">1</span>);</div><div class="line">    add(<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">add int+int = 2</div><div class="line">add int+double = 2.5</div><div class="line">add double+int = 2.5</div><div class="line">add int+int+int = 3</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><ol><li>四个同名函数，第一个和第二个参数类型不同，第二个和第三个参数类型位置不同，第一个和第三个参数数量不同，传入不同类型的参数，调用对应的函数；</li></ol></blockquote><h2 id="1-5-指针与引用"><a href="#1-5-指针与引用" class="headerlink" title="1.5 指针与引用"></a>1.5 指针与引用</h2><p>C++和C语言中的指针是一样，可以通过指针来实现修改传入函数的参数。<br>在C++里新引入了引用的概念，<strong>就是某一个变量或对象的别名，对引用的操作与对其所绑定的变量或对象的操作完全等价</strong>。<br>语法如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">类型 &amp;引用名=目标变量名</div><div class="line">int &amp;e = d; //使用e代替d</div></pre></td></tr></table></figure></p><p>C语言中<code>&amp;</code>是取址，C++中表示引用，C语言中没有引用。</p><ul><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[main.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add1</span><span class="params">(<span class="keyword">int</span> a)</span></span></div><div class="line">&#123;</div><div class="line">    a = a + <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add2</span><span class="params">(<span class="keyword">int</span> *b)</span> </span></div><div class="line">&#123;</div><div class="line">    *b = *b + <span class="number">1</span>; <span class="comment">//指针操作</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">add3</span><span class="params">(<span class="keyword">int</span> &amp;c)</span> <span class="comment">//引用</span></span></div><div class="line">&#123;</div><div class="line">    c = c + <span class="number">1</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> a = <span class="number">99</span>;</div><div class="line">    <span class="keyword">int</span> b = <span class="number">99</span>;</div><div class="line">    <span class="keyword">int</span> c = <span class="number">99</span>;</div><div class="line">    <span class="keyword">int</span> d = <span class="number">99</span>;</div><div class="line">    <span class="keyword">int</span> &amp;e = d; <span class="comment">//使用e代替d</span></div><div class="line">    </div><div class="line">    add1(a);</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"a = "</span>&lt;&lt;a&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    </div><div class="line">    add2(&amp;b);</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"b = "</span>&lt;&lt;b&lt;&lt;<span class="built_in">endl</span>; </div><div class="line"></div><div class="line">    add3(c);</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"c = "</span>&lt;&lt;c&lt;&lt;<span class="built_in">endl</span>;   </div><div class="line">    </div><div class="line">    e++;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"d = "</span>&lt;&lt;d&lt;&lt;<span class="built_in">endl</span>;  </div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a = 99</div><div class="line">b = 100</div><div class="line">c = 100</div><div class="line">d = 100</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 函数<code>add1()</code>传入形参，在函数里面修改值，并不改变实参；<br>1.2 函数<code>add2()</code>传入的是指针，在函数里修改该指针，改变了实参；<br>1.3 函数<code>add3()</code>传入的是引用，在函数里修改该引用，改变了实参；<br>1.4 <strong>使用指针作为函数的形参达到的效果虽然和使用引用一样，但当调用函数时仍需要为形参指针变量在内存中分配空间，而引用则不需要这样，故在C++中推荐使用引用而非指针作为函数的参数</strong>；<br>　<br>2.1 使用e引用d，对e进行操作，实际就是对d进行操作，修改了d；</p></blockquote><p>引用参考博客：<a href="https://www.cnblogs.com/duwenxing/p/7421100.html" target="_blank" rel="external">C++：引用的简单理解</a></p><h2 id="1-5-构造函数-析构函数-拷贝构造函数"><a href="#1-5-构造函数-析构函数-拷贝构造函数" class="headerlink" title="1.5 构造函数/析构函数/拷贝构造函数"></a>1.5 构造函数/析构函数/拷贝构造函数</h2><blockquote><p><strong>构造函数</strong>：与Java里面的构造函数类似，用于实例化对象时，对其初始化；<br><strong>析构函数</strong>：C++独有的，在对象销毁前瞬间，由系统自动调用析构函数；<br><strong>拷贝构造函数</strong>：C++独有的，只有一个形参，且该形参是对本类类型对象的引用；</p></blockquote><ul><li><p>示例：</p><figure class="highlight"><figcaption><span>[Person.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div></pre></td><td class="code"><pre><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;unistd.h&gt;</div><div class="line">#include &lt;string.h&gt;</div><div class="line"></div><div class="line">using namespace std;</div><div class="line"></div><div class="line">class Person &#123;</div><div class="line">private: </div><div class="line">    char *name; </div><div class="line">    int age;</div><div class="line">    char *work;</div><div class="line"></div><div class="line">public:</div><div class="line">    void setName(char *name)</div><div class="line">    &#123;</div><div class="line">        this-&gt;name = name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    int setAge(int age)</div><div class="line">    &#123;</div><div class="line">        if(age &lt; 0 || age &gt; 150)</div><div class="line">        &#123;</div><div class="line">            this-&gt;age = 0;</div><div class="line">            return -1;</div><div class="line">        &#125;</div><div class="line">        this-&gt;age = age;</div><div class="line">        return 0;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    void setWork(char *work)</div><div class="line">    &#123;</div><div class="line">        this-&gt;work = work;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    void printInfo(void)</div><div class="line">    &#123;</div><div class="line">        if (this-&gt;name &amp;&amp; this-&gt;work) </div><div class="line">            cout&lt;&lt;"name = "&lt;&lt;name&lt;&lt;", age = "&lt;&lt;age&lt;&lt;", work = "&lt;&lt;work&lt;&lt;endl;</div><div class="line">        else</div><div class="line">            cout&lt;&lt;"name = NULL"&lt;&lt;", age = "&lt;&lt;age&lt;&lt;", work = NULL"&lt;&lt;endl;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">    //构造函数:和类名相同,无返回值,可以设置默认值</div><div class="line">    Person()  //一但有了其它构造函数,默认的就必须写出来才能使用</div><div class="line">    &#123;</div><div class="line">        this-&gt;name = NULL;</div><div class="line">        this-&gt;age = 0;</div><div class="line">        this-&gt;work = NULL;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    Person(char *name, int age = 0, char *work = (char *)"none") //age和work设置有默认值</div><div class="line">    &#123;</div><div class="line">        //this-&gt;name = name;</div><div class="line">        this-&gt;name = new char[strlen(name) + 1]; //为了测试析构函数的自动调用,这里使用开辟堆空间存放数据</div><div class="line">        strcpy(this-&gt;name, name);</div><div class="line"></div><div class="line">        //this-&gt;work = work;</div><div class="line">        this-&gt;work = new char[strlen(work) + 1];</div><div class="line">        strcpy(this-&gt;work, work);</div><div class="line">        </div><div class="line">        if(age &lt; 0 || age &gt; 150)</div><div class="line">            this-&gt;age = 0;</div><div class="line">        else</div><div class="line">            this-&gt;age = age;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">    ~Person()</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; "~Person()"&lt;&lt;endl;</div><div class="line">        if (this-&gt;name) &#123;</div><div class="line">            cout&lt;&lt;"name = "&lt;&lt;name&lt;&lt;endl;</div><div class="line">            delete this-&gt;name;</div><div class="line">        &#125;</div><div class="line">        if (this-&gt;work) &#123;</div><div class="line">            cout&lt;&lt;"work = "&lt;&lt;work&lt;&lt;endl;</div><div class="line">            delete this-&gt;work;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">    //拷贝构造函数</div><div class="line">    Person(Person &amp;per)</div><div class="line">    &#123;       </div><div class="line">        cout &lt;&lt; "Person(Person &amp;per)"&lt;&lt;endl;</div><div class="line">        </div><div class="line">        this-&gt;name = new char[strlen(per.name) + 1]; </div><div class="line">        strcpy(this-&gt;name, per.name);</div><div class="line"></div><div class="line">        this-&gt;work = new char[strlen(per.work) + 1];</div><div class="line">        strcpy(this-&gt;work, per.work);</div><div class="line">        </div><div class="line">        if(age &lt; 0 || age &gt; 150)</div><div class="line">            this-&gt;age = 0;</div><div class="line">        else</div><div class="line">            this-&gt;age = per.age;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">void test_object()</div><div class="line">&#123;</div><div class="line">    Person per0; //调用无参构造函数(后面无括号,有括号相当于声明)</div><div class="line">    Person per1((char *)"jack"); //调用带参构造函数,未传入的未默认值</div><div class="line">    Person *per2 = new Person((char *)"hceng", 23, (char *)"Embedded engineer"); //这种方式需要使用delete手动清除</div><div class="line">    </div><div class="line">    per0.printInfo();</div><div class="line">    per1.printInfo();</div><div class="line">    per2-&gt;printInfo();</div><div class="line">    </div><div class="line">    delete per2; //如果不手动删除,在调用完test_object()后,分配的堆空间不会被释放</div><div class="line">    cout &lt;&lt; "delete per2 end"&lt;&lt;endl;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">int main(int argc, char **argv)</div><div class="line">&#123;</div><div class="line">    test_object();</div><div class="line">    cout &lt;&lt; "run test_object end"&lt;&lt;endl;</div><div class="line">    </div><div class="line">    </div><div class="line">    Person per1((char *)"hceng", 23, (char *)"Embedded engineer");</div><div class="line">    Person per2(per1); </div><div class="line">    per2.printInfo();</div><div class="line">    </div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">name = NULL, age = 0, work = NULL</div><div class="line">name = jack, age = 0, work = none</div><div class="line">name = hceng, age = 23, work = Embedded engineer</div><div class="line">~Person()</div><div class="line">name = hceng</div><div class="line">work = Embedded engineer</div><div class="line">delete per2 end</div><div class="line">~Person()</div><div class="line">name = jack</div><div class="line">work = none</div><div class="line">~Person()</div><div class="line">run test_object end</div><div class="line">Person(Person &amp;per)</div><div class="line">name = hceng, age = 23, work = Embedded engineer</div><div class="line">~Person()</div><div class="line">name = hceng</div><div class="line">work = Embedded engineer</div><div class="line">~Person()</div><div class="line">name = hceng</div><div class="line">work = Embedded engineer</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 定义了一个Person类，里面有三个私有的成员变量，四个公共的成员函数，两个构造函数，一个析构函数，一个拷贝构造函数；<br>1.2 外部两个函数，一个主函数，一个被主函数调用的<code>test_object()</code>；</p><p>2.1 主函数首先调用<code>test_object()</code>；<br>2.2 <code>test_object()</code>里使用三种方式实例化对象：调用无参构造函数，调用带参构造函数，<code>new</code>创建一个对象，调用带参的构造函数；<br>2.3 带参的构造函数，参数可以指定默认值；<br>2.4 一但有了带参的构造函数，就必须写出无参的构造函数才能调用无参的构造函数；<br>2.5 前两种实例化方式，在对象销毁前瞬间，由系统自动调用析构函数；而第三种方式必须手动使用<code>delete</code>删除；<br>　<br>3.1 将<code>Person</code>类的实例化对象<code>per1</code>作为参数传给<code>Person per2()</code>，就是拷贝构造函数，将调用<code>Person(Person &amp;per)</code>；<br>3.2 在拷贝构造函数里，将传入的<code>per</code>赋值给自己；<br>　<br>4.1 从打印结果分析，先调用<code>test_object()</code>，实例化了三个对象，然后对应的打印出他们信息；<br>4.2 接着<code>delete per2</code>，调用析构函数清理了<code>per2</code>；<br>4.3 结束<code>test_object()</code>的调用，释放<code>per0</code>和<code>per1</code>，自动调用析构函数清理；<br>4.4 接着实例化<code>per1</code>，再将其作为参数传给<code>per2</code>，此时调用拷贝构造函数，将<code>per1</code>的内容拷贝给<code>per2</code>；<br>4.5 结束时，自动调用析构函数，依次清理<code>per0</code>和<code>per2</code>；</p></blockquote><h2 id="1-6-静态成员"><a href="#1-6-静态成员" class="headerlink" title="1.6 静态成员"></a>1.6 静态成员</h2><p>静态成员的提出是为了解决数据共享的问题。<br>在类中，静态成员可以实现多个对象之间的数据共享，并且使用静态数据成员还不会破坏隐藏的原则，即保证了安全性。<br>因此，静态成员是类的所有对象中共享的成员，而不是某个对象的成员。</p><p>如下例子，需要统计总共生成了多少个类。</p><ul><li><p>示例：</p><figure class="highlight"><figcaption><span>[person.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;unistd.h&gt;</div><div class="line">#include &lt;string.h&gt;</div><div class="line"></div><div class="line">using namespace std;</div><div class="line"></div><div class="line">class Person &#123;</div><div class="line">private: </div><div class="line">    char *name; </div><div class="line">    int age;</div><div class="line">    char *work;</div><div class="line">    static int cnt;</div><div class="line"></div><div class="line">public:</div><div class="line">    static int getCount1(void)</div><div class="line">    &#123;</div><div class="line">        return cnt;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    static int getCount2(void); </div><div class="line">    </div><div class="line">    Person()  </div><div class="line">    &#123;</div><div class="line">        this-&gt;name = NULL;</div><div class="line">        this-&gt;age = 0;</div><div class="line">        this-&gt;work = NULL;</div><div class="line">        cnt++;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    Person(char *name, int age = 0, char *work = (char *)"none")  </div><div class="line">    &#123;</div><div class="line">        //this-&gt;name = name;</div><div class="line">        this-&gt;name = new char[strlen(name) + 1];  </div><div class="line">        strcpy(this-&gt;name, name);</div><div class="line"></div><div class="line">        //this-&gt;work = work;</div><div class="line">        this-&gt;work = new char[strlen(work) + 1];</div><div class="line">        strcpy(this-&gt;work, work);</div><div class="line">        </div><div class="line">        if(age &lt; 0 || age &gt; 150)</div><div class="line">            this-&gt;age = 0;</div><div class="line">        else</div><div class="line">            this-&gt;age = age;</div><div class="line">        </div><div class="line">        cnt++;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    //析构函数</div><div class="line">    ~Person()</div><div class="line">    &#123;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    //拷贝构造函数</div><div class="line">    Person(Person &amp;per)</div><div class="line">    &#123;       </div><div class="line">        cnt++;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">int Person::cnt = 0; //cnt定义和初始化</div><div class="line"></div><div class="line">int Person::getCount2(void) </div><div class="line">&#123; </div><div class="line">    return cnt; </div><div class="line">&#125;</div><div class="line"></div><div class="line">int main(int argc, char **argv)</div><div class="line">&#123;</div><div class="line">    Person per0;  </div><div class="line">    Person per1((char *)"jack");  </div><div class="line">    Person *per2 = new Person((char *)"hceng", 23, (char *)"Embedded engineer");  </div><div class="line">    Person per3(per1); </div><div class="line"></div><div class="line">    Person per4[10];</div><div class="line">    Person *per5 = new Person[10];</div><div class="line">    </div><div class="line">    cout &lt;&lt; "person number = "&lt;&lt;Person::getCount1()&lt;&lt;endl;</div><div class="line">    cout &lt;&lt; "person number = "&lt;&lt;per1.getCount1()&lt;&lt;endl;</div><div class="line">    cout &lt;&lt; "person number = "&lt;&lt;per5-&gt;getCount1()&lt;&lt;endl;</div><div class="line">    cout &lt;&lt; "person number = "&lt;&lt;per5-&gt;getCount2()&lt;&lt;endl;</div><div class="line">    </div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">person number = 24</div><div class="line">person number = 24</div><div class="line">person number = 24</div><div class="line">person number = 24</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 定义了一个<code>Person</code>类，包含四个成员变量，其中<code>cnt</code>是静态成员变量；<br>1.2 接下来是两个静态方法，只有静态方法才能访问静态成员变量。两个静态方法前者实现了具体的内容，后者只是声明；<br>1.3 再是两个构造函数，在每个构造函数里添加<code>cnt++</code>，实现每次实例化对象时调用计数；<br>1.4 最后是析构函数和拷贝构造函数，拷贝构造函数也会实例化对象，也要<code>cnt++</code>；<br>　<br>2.1 前面的<code>Person</code>类里，只是声明了<code>cnt</code>，还需要定义和初始化；<br>2.2 函数<code>getCount2()</code>也需要定义实现具体的内容；　</p><ol><li>之后就可通过<code>Person</code>或者任何其中一个对象访问<code>cnt</code>；</li></ol></blockquote><h2 id="1-7-友员函数"><a href="#1-7-友员函数" class="headerlink" title="1.7 友员函数"></a>1.7 友员函数</h2><p>友元函数是可以直接访问类的私有成员的非成员函数。<br>它是定义在类外的普通函数，它不属于任何类，但需要在类的定义中加以声明，声明时只需在友元的名称前加上关键字<code>friend</code>。</p><p>比如下面的例子，<code>add()</code>函数想访问<code>Friend</code>类的私有成员。</p><ul><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[point.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Point &#123;</div><div class="line"><span class="keyword">private</span>: </div><div class="line">    <span class="keyword">int</span> x;</div><div class="line">    <span class="keyword">int</span> y;</div><div class="line">    </div><div class="line"><span class="keyword">public</span>:</div><div class="line">    Point()</div><div class="line">    &#123;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    Point(<span class="keyword">int</span> a, <span class="keyword">int</span> b) : x(a+<span class="number">1</span>), y(b)</div><div class="line">    &#123;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getX</span><span class="params">()</span></span></div><div class="line">    &#123; </div><div class="line">        <span class="keyword">return</span> x; </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getY</span><span class="params">()</span></span></div><div class="line">    &#123; </div><div class="line">        <span class="keyword">return</span> y; </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printInfo</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"sum: ("</span>&lt;&lt;x&lt;&lt;<span class="string">", "</span>&lt;&lt;y&lt;&lt;<span class="string">")"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">friend</span> Point <span class="title">add</span><span class="params">(Point &amp;p1, Point &amp;p2)</span></span>;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function">Point <span class="title">add</span><span class="params">(Point &amp;p1, Point &amp;p2)</span></span></div><div class="line">&#123;</div><div class="line">    Point p;</div><div class="line">    </div><div class="line">    p.x = p1.x + p2.x;</div><div class="line">    p.y = p1.y + p2.y;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> p;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="function">Point <span class="title">p1</span><span class="params">(<span class="number">1</span>, <span class="number">2</span>)</span></span>;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"p1: ("</span>&lt;&lt;p1.getX()&lt;&lt;<span class="string">", "</span>&lt;&lt;p1.getY()&lt;&lt;<span class="string">")"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    </div><div class="line">    <span class="function">Point <span class="title">p2</span><span class="params">(<span class="number">2</span>, <span class="number">3</span>)</span></span>;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"p2: ("</span>&lt;&lt;p2.getX()&lt;&lt;<span class="string">", "</span>&lt;&lt;p2.getY()&lt;&lt;<span class="string">")"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line"></div><div class="line">    Point sum = add(p1, p2);</div><div class="line">    sum.printInfo();</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">p1: (2, 2)</div><div class="line">p2: (3, 3)</div><div class="line">sum: (5, 5)</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1 定义了类<code>Point</code>，包含两个私有成员变量，两个构造函数，三个成员函数，以及一个友员函数的声明；<br>　<br>2.1 第二个带参数的构造函数，有一个构造函数初始化列表；<br>2.2 它以一个冒号开始，接着是以逗号分隔的数据成员列表，每个数据成员后面跟一个放在括号中的初始化式；<br>2.3 在进行带参数的实例化对象时，成员<code>x</code>就等于传入的参数<code>a</code>加1；<br>　<br>3.1 在主函数里，先实例化<code>p1</code>和<code>p2</code>；<br>3.2 友员函数<code>add()</code>可以直接访问<code>f1</code>和<code>f2</code>的私有成员变量，不再通过调用其成员函数进行访问，提高了效率；</p></blockquote><h2 id="1-8-运算符的重载"><a href="#1-8-运算符的重载" class="headerlink" title="1.8 运算符的重载"></a>1.8 运算符的重载</h2><p>运算符的重载顾名思义就是对运算符进行重载，比如原来的加号<code>+</code>，只能实现基本数据类型的相加，现在对其扩展功能，实现对类的相加。<br>在使用运算符重载前，必须先定义一个运算符重载函数，其名字为<code>operator</code>，后随一个要重载的运算符。例如:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">operator+ 加法</div><div class="line">operator* 乘法</div></pre></td></tr></table></figure></p><p>下例实现了对加法<code>+0</code>，自增运算<code>++</code>、打印输出<code>&lt;&lt;</code>进行重载。</p><ul><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[point.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Point &#123;</div><div class="line"><span class="keyword">private</span>: </div><div class="line">    <span class="keyword">int</span> x;</div><div class="line">    <span class="keyword">int</span> y;</div><div class="line">    </div><div class="line"><span class="keyword">public</span>:</div><div class="line">    Point()</div><div class="line">    &#123;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    Point(<span class="keyword">int</span> a, <span class="keyword">int</span> b) : x(a), y(b)</div><div class="line">    &#123;</div><div class="line">        <span class="comment">//x = a;</span></div><div class="line">        <span class="comment">//y = b;</span></div><div class="line">    &#125;</div><div class="line">    </div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printInfo</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"printInfo: ("</span>&lt;&lt;x&lt;&lt;<span class="string">", "</span>&lt;&lt;y&lt;&lt;<span class="string">")"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    </div><div class="line">    <span class="keyword">friend</span> Point <span class="keyword">operator</span>+(Point &amp;p1, Point &amp;p2);</div><div class="line">    <span class="keyword">friend</span> Point&amp; <span class="keyword">operator</span>++(Point &amp;p);</div><div class="line">    <span class="keyword">friend</span> Point <span class="keyword">operator</span>++(Point &amp;p, <span class="keyword">int</span> a);</div><div class="line">    <span class="keyword">friend</span> ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream &amp;o, Point p);</div><div class="line">    </div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0   </span></div><div class="line">    <span class="comment">//a+b</span></div><div class="line">    Point <span class="keyword">operator</span>+(Point &amp;p)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"operator+(Point &amp;p)"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">        Point r;</div><div class="line">        r.x = <span class="keyword">this</span>-&gt;x + p.x;</div><div class="line">        r.y = <span class="keyword">this</span>-&gt;y + p.y;</div><div class="line">        <span class="keyword">return</span> r;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//++a</span></div><div class="line">    Point&amp; <span class="keyword">operator</span>++(<span class="keyword">void</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"operator++(void)"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">        <span class="keyword">this</span>-&gt;x += <span class="number">1</span>;</div><div class="line">        <span class="keyword">this</span>-&gt;y += <span class="number">1</span>;</div><div class="line">        <span class="keyword">return</span> *<span class="keyword">this</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//a++</span></div><div class="line">    Point <span class="keyword">operator</span>++(<span class="keyword">int</span> a)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"operator++(int a)"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">        Point r;</div><div class="line">        r = *<span class="keyword">this</span>;</div><div class="line">        <span class="keyword">this</span>-&gt;x += <span class="number">1</span>;</div><div class="line">        <span class="keyword">this</span>-&gt;y += <span class="number">1</span>;</div><div class="line">        <span class="keyword">return</span> r;   </div><div class="line">    &#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">//a+b</span></div><div class="line">Point <span class="keyword">operator</span>+(Point &amp;p1, Point &amp;p2)</div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"operator+(Point &amp;p1, Point &amp;p2)"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    </div><div class="line">    Point r;</div><div class="line">    </div><div class="line">    r.x = p1.x + p2.x;</div><div class="line">    r.y = p1.y + p2.y;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> r;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//++a</span></div><div class="line">Point&amp; <span class="keyword">operator</span>++(Point &amp;p)</div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"operator++(Point &amp;p)"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    </div><div class="line">    p.x += <span class="number">1</span>;</div><div class="line">    p.y += <span class="number">1</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> p;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//a++</span></div><div class="line">Point <span class="keyword">operator</span>++(Point &amp;p, <span class="keyword">int</span> a)</div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"operator++(Point &amp;p, int a)"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    </div><div class="line">    Point r;</div><div class="line">    r = p;</div><div class="line">    </div><div class="line">    p.x += <span class="number">1</span>;</div><div class="line">    p.y += <span class="number">1</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> r;</div><div class="line">&#125;</div><div class="line">    </div><div class="line"><span class="comment">//&lt;&lt;</span></div><div class="line">ostream&amp; <span class="keyword">operator</span>&lt;&lt;(ostream &amp;o, Point p) <span class="comment">//第一个参数不是Point类型,不能写到成员函数里</span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"("</span>&lt;&lt;p.x&lt;&lt;<span class="string">", "</span>&lt;&lt;p.y&lt;&lt;<span class="string">")"</span>;</div><div class="line">    <span class="keyword">return</span> o;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="function">Point <span class="title">p1</span><span class="params">(<span class="number">1</span>, <span class="number">2</span>)</span></span>;</div><div class="line">    <span class="function">Point <span class="title">p2</span><span class="params">(<span class="number">4</span>, <span class="number">5</span>)</span></span>;</div><div class="line">    Point p;</div><div class="line"></div><div class="line">    p = p1 + p2;</div><div class="line">    p.printInfo();</div><div class="line">    </div><div class="line">    p = ++p1;</div><div class="line">    p.printInfo();</div><div class="line">    p1.printInfo();</div><div class="line">    </div><div class="line">    p = p2++;</div><div class="line">    p.printInfo();</div><div class="line">    p2.printInfo();</div><div class="line">    </div><div class="line">    <span class="built_in">cout</span>&lt;&lt;p&lt;&lt;p1&lt;&lt;p2&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">operator+(Point &amp;p1, Point &amp;p2)</div><div class="line">printInfo: (5, 7)</div><div class="line">operator++(Point &amp;p)</div><div class="line">printInfo: (2, 3)</div><div class="line">printInfo: (2, 3)</div><div class="line">operator++(Point &amp;p, int a)</div><div class="line">printInfo: (4, 5)</div><div class="line">printInfo: (5, 6)</div><div class="line">(4, 5)(2, 3)(5, 6)</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 定义了类<code>Point</code>，包含两个私有变量，两个构造函数，一个成员函数，四个重载函数；<br>1.2 这四个重载函数，可以作为成员函数，在类里面实现，也可作为类外函数，在类外实现，只在类里面声明；<br>1.3 重载函数作为成员函数时，可以直接访问类的私有属性；重载函数作为类外函数时，通过友员的声明，访问类的私有属性；<br>1.4 同名的<code>operator++()</code>，不含参数<code>int a</code>表示前缀<code>++</code>，带参数<code>int a</code>的表示后缀<code>++</code>；<br>1.5 <code>operator&lt;&lt;</code>因为第一个参数不是<code>Point</code>类型，不能作为成员函数；<br>　<br>2.主函数里，使用重载后的<code>+</code>可以实现<code>Point</code>类的相加，以及<code>Point</code>类的<code>++</code>和<code>&lt;&lt;</code>；</p></blockquote><h1 id="2-C-面向对象编程"><a href="#2-C-面向对象编程" class="headerlink" title="2. C++面向对象编程"></a>2. C++面向对象编程</h1><p>如同Java面向对象编程一样，C++面向对象编程也有三大特性：封装性、继承性、多态性。</p><h2 id="2-1-访问扩展和继承"><a href="#2-1-访问扩展和继承" class="headerlink" title="2.1 访问扩展和继承"></a>2.1 访问扩展和继承</h2><p>这里定义一个基类<code>Father</code>，两个继承于<code>Father</code>的派生类<code>Son</code>和<code>Daughter</code>。</p><ul><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[person.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Father &#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="keyword">int</span> money;</div><div class="line">    </div><div class="line"><span class="keyword">protected</span>:</div><div class="line">    <span class="keyword">int</span> room_key;</div><div class="line">    <span class="keyword">int</span> room_car;</div><div class="line">    </div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="keyword">int</span> phone;</div><div class="line">    <span class="keyword">int</span> address;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">working</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"father working"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getMoney</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> money;</div><div class="line">    &#125;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setMoeny</span><span class="params">(<span class="keyword">int</span> money)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">this</span>-&gt;money = money;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Son : <span class="keyword">public</span> Father &#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="keyword">int</span> book;</div><div class="line">    <span class="keyword">using</span> Father::phone;</div><div class="line">    </div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="keyword">using</span> Father::room_car;</div><div class="line">    <span class="comment">//using Father::money; //无法改变父类private类型的属性</span></div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">learning</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"son learning"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">getKey</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="comment">//s.money = 10; //private属性,子类也无法访问</span></div><div class="line">        room_key = <span class="number">1</span>;   <span class="comment">//protected属性,子类可以访问</span></div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Daughter : <span class="keyword">protected</span> Father &#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line"></div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">dancing</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"daughter dancing"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">        room_key = <span class="number">1</span>; <span class="comment">//不管何种继承,在派生类内部使用父类时无差别</span></div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">working</span><span class="params">(<span class="keyword">void</span>)</span> <span class="comment">//覆写</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"daughter working"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    Son s;</div><div class="line">    Daughter d;</div><div class="line">    </div><div class="line">    <span class="comment">//s.money = 10; //private属性,外部无法访问</span></div><div class="line">    s.setMoeny(<span class="number">10</span>);</div><div class="line">    </div><div class="line">    <span class="comment">//s.room_key = 1; //protected属性,外部无法访问</span></div><div class="line">    s.getKey();</div><div class="line">    </div><div class="line">    s.working(); <span class="comment">//public,外部可以直接访问</span></div><div class="line">    s.learning();</div><div class="line">    </div><div class="line">    s.room_car = <span class="number">1</span>; <span class="comment">//子类将其变为了public,使得可以访问</span></div><div class="line">    <span class="comment">//s.phone = 1; //子类将其变为了private,使得不能访问</span></div><div class="line">    </div><div class="line">    d.dancing(); <span class="comment">//自己的属性没有</span></div><div class="line">    <span class="comment">//d.working(); //protected继承,父类方法变为protected,外部无法访问</span></div><div class="line">    d.working();</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">father working</div><div class="line">son learning</div><div class="line">daughter dancing</div><div class="line">daughter working</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 定义一个类<code>Father</code>，有一个私有属性<code>money</code>，两个保护属性<code>room_key</code>和<code>room_car</code>，两个公共属性<code>phone</code>和<code>address</code>，以及三个共有的方法<code>working()</code>、<code>getMoney()</code>，<code>setMoeny()</code>；<br>1.2 定义一个类<code>Son</code>，公共继承于<code>Father</code>。有一个私有属性<code>book</code>，以及将父类的<code>phone</code>属性变成了私有属性。将父类的保护属性<code>room_car</code>变成了公共属性，父类的私有属性无法改变。有两个公有方法<code>learning()</code>、<code>getKey()</code>。其中<code>getKey()</code>能访问了父类的保护属性，但不能访问私有属性；<br>1.3 定义一个类<code>Daughter</code>，保护继承于<code>Father</code>。有一个公共方法<code>dancing()</code>，访问了父类的保护属性。覆写了父类的<code>working()</code>方法；<br>　<br>2.1 主函数先实例化了<code>Son</code>和<code>Daughter</code>；<br>2.2 外部无法直接访问类中的私有属性<code>money</code>，只能通过父类提供的公共函数<code>setMoney()</code>进行访问；<br>2.3 外部无法直接访问父类的保护属性<code>room_key</code>，只能通过父类提供的公共函数<code>setKey()</code>进行访问；<br>2.4 函数<code>working()</code>来自基类<code>Father</code>，函数<code>learning()</code>来自派生类<code>Son</code>；<br>2.5 <code>room_car</code>在基类中原为保护属性，在派生类里被改为了公共属性，因此可被外界访问；<br>2.6 同理将原公共属性<code>phone</code>改为了私有属性，外部无法访问；另外，派生类无法修改基类的私有属性；<br>2.7 类<code>Daughter</code>，保护继承于<code>Father</code>，父类的所有属性、函数，外部都无法直接访问；<br>2.8 派生类<code>Daughter</code>覆写了基类的<code>working()</code>，且为公共的，因此外部可以直接访问；<br>　<br>3.基类成员在派生类中的访问控制属性如下：</p></blockquote><table><thead><tr><th style="text-align:center">继承类型 \ 基类访问属性</th><th style="text-align:center">public</th><th style="text-align:center">protected</th><th style="text-align:center">private</th></tr></thead><tbody><tr><td style="text-align:center">public</td><td style="text-align:center">public</td><td style="text-align:center">public</td><td style="text-align:center">隔离</td></tr><tr><td style="text-align:center">protected</td><td style="text-align:center">protected</td><td style="text-align:center">protected</td><td style="text-align:center">隔离</td></tr><tr><td style="text-align:center">private</td><td style="text-align:center">private</td><td style="text-align:center">private</td><td style="text-align:center">隔离</td></tr></tbody></table><h2 id="2-2-多重继承"><a href="#2-2-多重继承" class="headerlink" title="2.2 多重继承"></a>2.2 多重继承</h2><p>大多数程序使用单个基类的公用继承，但是在某些情况下，单继承是不够的，必须使用多继承。<br>比如，对于沙发床，既继承于沙发，也继承于床。</p><p>C++允许为一个派生类指定多个基类，这样的继承结构被称做<strong>多重继承</strong>。<br>因为不同的基类，可能有相同的属性，导致派生类出现<strong>二义性</strong>。<br>出现二义性，要么显示的指出要调用的是哪个类中的成员，要么就使用<strong>虚基类</strong>。<br>C++提供虚基类(virtual base class)的方法，使得在继承共同基类时只保留一份成员。</p><ul><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[person.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="comment">//method 1</span></div><div class="line"><span class="keyword">class</span> Sofa &#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="keyword">int</span> weight;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">watchTV</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"Sofa: watch TV"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setWeight</span><span class="params">(<span class="keyword">int</span> weight)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">this</span>-&gt;weight = weight;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getWeight</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> weight;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Bed &#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="keyword">int</span> weight;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sleep</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"Bed: sleep"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setWeight</span><span class="params">(<span class="keyword">int</span> weight)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">this</span>-&gt;weight = weight;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getWeight</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> weight;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Sofabed : <span class="keyword">public</span> Sofa , <span class="keyword">public</span> Bed &#123;</div><div class="line">    </div><div class="line">&#125;; </div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//method 2</span></div><div class="line"><span class="keyword">class</span> Furniture &#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="keyword">int</span> weight;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setWeight</span><span class="params">(<span class="keyword">int</span> weight)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">this</span>-&gt;weight = weight;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getWeight</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="keyword">return</span> weight;</div><div class="line">    &#125;   </div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Sofa1 : <span class="keyword">virtual</span> <span class="keyword">public</span> Furniture &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">watchTV</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"Sofa1: watch TV"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Bed1 : <span class="keyword">virtual</span> <span class="keyword">public</span> Furniture &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">sleep</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"Bed1: sleep"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Sofabed1 : <span class="keyword">public</span> Sofa1 , <span class="keyword">public</span> Bed1 &#123;</div><div class="line">    </div><div class="line">&#125;; </div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    Sofabed s;</div><div class="line">    Sofabed1 s1;</div><div class="line">    </div><div class="line">    s.watchTV();</div><div class="line">    s.sleep();</div><div class="line">    <span class="comment">//s.setWeight(100); //无法确定是哪一个基类的方法</span></div><div class="line">    s.Sofa::setWeight(<span class="number">100</span>);</div><div class="line">    </div><div class="line">    s1.watchTV();</div><div class="line">    s1.sleep();</div><div class="line">    s1.setWeight(<span class="number">100</span>);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Sofa: watch TV</div><div class="line">Bed: sleep</div><div class="line">Sofa1: watch TV</div><div class="line">Bed1: sleep</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 定义了一个类<code>Sofa</code>，包含一个私有属性<code>weight</code>，三个公共的方法<code>watchTV()</code>、<code>setWeight()</code>、<code>getWeight()</code>；<br>1.2 定义了一个类<code>Bed</code>，包含一个私有属性<code>weight</code>，三个公共的方法<code>sleep()</code>、<code>setWeight()</code>、<code>getWeight()</code>；<br>1.3 定义了一个类<code>Sofabed</code>，继承于<code>Sofa</code>和<code>Bed</code>；<br>　<br>2.1 定义了一个类<code>Furniture</code>，包含一个私有属性<code>weight</code>，两个公共的方法<code>setWeight()</code>、<code>getWeight()</code>；<br>2.2 定义了一个类<code>Sofa1</code>，虚拟继承于<code>Furniture</code>，有一个公共方法<code>watchTV()</code>；<br>2.3 定义了一个类<code>Bed1</code>，虚拟继承于<code>Furniture</code>，有一个公共方法<code>sleep()</code>；<br>2.4 定义了一个类<code>Sofabed1</code>，继承于<code>Sofa1</code>和<code>Bed1</code>；<br>　<br>3.1 实例化了<code>Sofabed</code>，可以直接访问各基类中的方法，但遇到了同名的方法，需要指定是哪一个类的方法；<br>3.2 实例化了<code>Sofabed1</code>，可以直接访问各基类中的方法，因为其基类都继承于虚基类<code>Furniture</code>，因此<code>setWeight()</code>方法只存在一份，不会出现二义性；</p></blockquote><h2 id="2-3-构造顺序"><a href="#2-3-构造顺序" class="headerlink" title="2.3 构造顺序"></a>2.3 构造顺序</h2><p>我们构造的类开始越来越复杂，一个类可能含有一个或多个基类，基类有可能是虚拟基类，另外类本身也可能有对象成员，这里就理一下它们的构造顺序。</p><p>这里构造的类比较多，它们的关系如下：</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180924/1.jpg"></div><p>其中虚线表示虚拟继承。</p><ul><li><p>示例：</p><figure class="highlight"><figcaption><span>[CompanySofabed.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div></pre></td><td class="code"><pre><div class="line">#include &lt;iostream&gt;</div><div class="line">#include &lt;string.h&gt;</div><div class="line">#include &lt;unistd.h&gt;</div><div class="line"></div><div class="line">using namespace std;</div><div class="line"></div><div class="line">class Furniture &#123;</div><div class="line">public:</div><div class="line">    Furniture(void)</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; "Furniture(void)" &lt;&lt; endl;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">class Verification &#123;</div><div class="line">public:</div><div class="line">    Verification(void)</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; "Verification(void)" &lt;&lt; endl;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">class Sofa : virtual public Furniture, virtual public Verification &#123;</div><div class="line">public:</div><div class="line">    Sofa(void)</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; "Sofa(void)" &lt;&lt; endl;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">class Bed : virtual public Furniture, virtual public Verification &#123;</div><div class="line">public:</div><div class="line">    Bed(void)</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; "Bed(void)" &lt;&lt; endl;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">class Sofabed : public Sofa , public Bed &#123;</div><div class="line">public:</div><div class="line">    Sofabed(void)</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; "Sofabed(void)" &lt;&lt; endl;</div><div class="line">    &#125;  </div><div class="line"></div><div class="line">    Sofabed(char *s)</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; "Sofabed(char *s)" &lt;&lt; endl;</div><div class="line">    &#125;       </div><div class="line">&#125;; </div><div class="line"></div><div class="line">class Company &#123;</div><div class="line">public:</div><div class="line">    Company(void)</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; "Company(void)" &lt;&lt; endl;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    Company(char *s)</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; "Company(char *s)" &lt;&lt; endl;</div><div class="line">    &#125;   </div><div class="line">&#125;;</div><div class="line"></div><div class="line">class Type &#123;</div><div class="line">public:</div><div class="line">    Type(void)</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; "Type(void)" &lt;&lt; endl;</div><div class="line">    &#125;   </div><div class="line">&#125;;</div><div class="line"></div><div class="line">class Date &#123;</div><div class="line">public:</div><div class="line">    Date(void)</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; "Date(void)" &lt;&lt; endl;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    Date(char *s)</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; "Date(char *s)" &lt;&lt; endl;</div><div class="line">    &#125;       </div><div class="line">&#125;;</div><div class="line"></div><div class="line">class CompanySofabed : public Sofabed, virtual public Company &#123;</div><div class="line">private:</div><div class="line">    Type type;</div><div class="line">    Date date;</div><div class="line">    </div><div class="line">public:</div><div class="line">    CompanySofabed(void)</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; "CompanySofabed(void)" &lt;&lt; endl;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    CompanySofabed(char *s1, char *s2, char *s3): Sofabed(s1), Company(s2), date(s3)</div><div class="line">    &#123;</div><div class="line">        cout &lt;&lt; "CompanySofabed(char *s)" &lt;&lt; endl;</div><div class="line">    &#125;   </div><div class="line">&#125;;</div><div class="line"></div><div class="line">int main(int argc, char **argv)</div><div class="line">&#123;</div><div class="line">    CompanySofabed c((char *)"good", (char *)"xxx", (char *)"2018");</div><div class="line">    </div><div class="line">    return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Furniture(void)</div><div class="line">Verification(void)</div><div class="line">Company(char *s)</div><div class="line">Sofa(void)</div><div class="line">Bed(void)</div><div class="line">Sofabed(char *s)</div><div class="line">Type(void)</div><div class="line">Date(char *s)</div><div class="line">CompanySofabed(char *s)</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 基类与衍生类的关系如前面的图，这里就不复述了；<br>1.2 为每个类创建个构造函数，以便打印观察构造顺序；<br>　<br>2.1 从结果可以看出，虚拟基类最先执行构造，且构造一次；<br>2.2 然后再是非虚拟基类，依次按顺序构造；<br>2.3 再是类自己的对象成员，按声明的顺序构造；<br>2.4 最后是类自己构造；<br>　<br>3.1 注意对类自己对象成员的赋值，是使用的对象的名字；<br>3.2 析构顺序，与构造顺序相反；</p></blockquote><h2 id="2-4-多态"><a href="#2-4-多态" class="headerlink" title="2.4 多态"></a>2.4 多态</h2><p>前面的封装可以使得代码模块化，继承可以扩展已存在的代码，他们的目的都是为了<strong>代码重用</strong>。<br>而多态的目的则是为了<strong>接口重用</strong>。<br>也就是说，不论传递过来的究竟是那个类的对象，函数都能够通过同一个接口调用到适应各自对象的实现方法。</p><p>C++支持两种多态性：编译时多态性，运行时多态性；<br>a、编译时多态性(静态多态)：通过<strong>重载</strong>函数实现；<br>b、运行时多态性(动态多态)：通过<strong>虚函数</strong>实现；</p><p>利用重载前面已经介绍过了，就是传入的参数不一样，从而调用对应的同名函数。<br>这里主要分析动态多态，即利用虚函数实现。</p><p>对于虚函数，采用动态联编，对象里有一个指针，指向虚函数表，调用虚函数时，会根据对象里的指针找到表，从表中取出函数来执行<br>对于非虚函数，采用静态联编，编译时就确定调用哪个函数；</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180924/2.jpg"></div><p>差别：静态联编效率高，动态联编支持多态；</p><ul><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[human.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Human &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">eating</span><span class="params">(<span class="keyword">void</span>)</span> </span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"use hand to eat"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">virtual</span> Human* <span class="title">test</span><span class="params">(<span class="keyword">void</span>)</span> </span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Human test"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">virtual</span> ~Human() </div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"~Human"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> American : <span class="keyword">public</span> Human &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eating</span><span class="params">(<span class="keyword">void</span>)</span> </span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"use knife to eat"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">virtual</span> American* <span class="title">test</span><span class="params">(<span class="keyword">void</span>)</span> </span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"American test"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">virtual</span> ~American() </div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"~American"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Chinese : <span class="keyword">public</span> Human &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eating</span><span class="params">(<span class="keyword">void</span>)</span> </span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"use chopsticks to eat"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">virtual</span> Chinese* <span class="title">test</span><span class="params">(<span class="keyword">void</span>)</span> </span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"Chinese test"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">virtual</span> ~Chinese() </div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"~Chinese"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_eating</span><span class="params">(Human&amp; h)</span></span></div><div class="line">&#123;</div><div class="line">    h.eating();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_return</span><span class="params">(Human&amp; h)</span></span></div><div class="line">&#123;</div><div class="line">    h.test();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    Human h;</div><div class="line">    American a;</div><div class="line">    Chinese c;</div><div class="line">    </div><div class="line">    test_eating(h);</div><div class="line">    test_eating(a);</div><div class="line">    test_eating(c);</div><div class="line">    </div><div class="line">    test_return(h);</div><div class="line">    test_return(a);</div><div class="line">    test_return(c);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">use hand to eat</div><div class="line">use knife to eat</div><div class="line">use chopsticks to eat</div><div class="line">Human test</div><div class="line">American test</div><div class="line">Chinese test</div><div class="line">~Chinese</div><div class="line">~Human</div><div class="line">~American</div><div class="line">~Human</div><div class="line">~Human</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 定义了三个类，<code>Human</code>是基类，<code>American</code>和<code>Chinese</code>是其派生类；<br>1.2 <code>Human</code>里有一个<code>virtual</code>修饰的<code>eating()</code>虚函数，两个派生类同名的函数也自动是虚函数；<br>1.3 一般只有函数名、参数和返回值都相同的才能设为虚函数，但当返回值为当前对象的指针或引用时，也可以设为虚函数，这里每个类都有一个<code>test()</code>函数，函数名、参数都一样，只是返回类型是对象的指针，因此可以被设置为虚函数；<br>1.4 析构函数一般都声明为虚函数，不然可能都释放的都是基类；<br>　<br>2.1 主函数里，分别实例化三个类，分别调用<code>test_eating()</code>，因为<code>eating()</code>是虚函数，编译时对象生成一个指针指向虚函数表，调用虚函数时，会根据对象里的指针找到表，从而找到对应的函数执行；<br>2.2 <code>test()</code>在每个类中的名字、参数相同，返回值为该对象的指针，因此可以设置为虚函数，从而实现调用各自类中对应函数；<br>　<br>3.1 只有类的成员函数才能声明为虚函数；<br>3.2 静态成员函数、内联函数、构造函数不能是虚函数；<br>3.3 对于重载(函数参数不同)，也不可设为虚函数；<br>3.4 对于覆盖(函数参数、返回值相同)，才可以设为虚函数；<br>3.5 函数参数相同，但是返回值是当前对象的指针或引用时，也可以设为虚函数；</p></blockquote><h2 id="2-5-类型转换"><a href="#2-5-类型转换" class="headerlink" title="2.5 类型转换"></a>2.5 类型转换</h2><p>对比C语言，C++的类型转换也分<strong>显式转换</strong>和<strong>隐式转换</strong>。</p><p>在C语言中，隐式转换，类似将<code>short</code>类型变量直接赋值给<code>int</code>类型变量，就会自动隐式转换；<br>在C语言中，显式转换，通过<code>(int)</code>修饰<code>short</code>，就是指定转换类型的显示转换；<br>在C++中，隐式转换和C语言差不多，这里重点记录下C++的显式转换。</p><p>C++有四种强制类型转换操作符：<code>static_cast</code>、<code>dynamic_cast</code>、<code>const_cast</code>、<code>reinterpret_cast</code>。<br>格式为：<code>强制类型转换操作符&lt;type&gt;(expression)</code></p><ul><li><p><strong>static_cast：</strong>最常用的类型转换符，比如基本数据类型之间的转换。<br>也可用于基类和子类之间指针或引用的转换，进行<strong>上行转换</strong>(把子类的指针或引用转换成基类表示)是安全的；进行<strong>下行转换</strong>(把基类指针或引用转换成子类指针或引用)时，由于没有动态类型检查，所以是不安全的。<br>注意：<code>static_cast</code>不能转换掉<code>const</code>、<code>volital</code>e、或者<code>__unaligned</code>属性。</p></li><li><p><strong>dynamic_cast：</strong>用于<strong>运行时检查</strong>该转换是否类型安全，但只在多态场合时合法，即该类至少具有一个<strong>虚函数</strong>。<br>主要用于类层次间的上行转换和下行转换，还可以用于类之间的交叉转换。在类层次间进行上行转换时，<code>dynamic_cas</code>t和<code>static_cast</code>的效果是一样的；在进行下行转换时，<code>dynamic_cast</code>具有类型检查的功能，比<code>static_cast</code>更安全。<br><code>Type</code>必须是类的指针、类的引用或者<code>void *</code>，且<code>type</code>类型要和<code>expression</code>一致。</p></li><li><p><strong>const_cast：</strong>该操作符用于去除原来类型的<code>const</code>或<code>volatile</code>属性，<code>type</code>和<code>expression</code>的类型是一样的。</p></li><li><p><strong>reinterpret_cast：</strong><code>reinterpret</code>的意思就是重新解释，此操作符的意思即为数据的二进制形式重新解释，但是不改变其值。<br><code>type</code>必须是一个指针、引用、算术类型、函数指针或者成员指针，它可以把一个指针转换成一个整数，也可以把一个整数转换成一个指针。<br>如果<code>type</code>是类指针类型，那么<code>expression</code>也必须是一个指针；如果<code>type</code>是一个引用，那么<code>expression</code>也必须是一个引用。<br>和C语言的强制转换类似，没有安全性检查。</p></li></ul><p>下面举个例子，对其具体分析。</p><ul><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[human.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Human &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">eating</span><span class="params">(<span class="keyword">void</span>)</span> </span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"use hand to eat"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> American : <span class="keyword">public</span> Human &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eating</span><span class="params">(<span class="keyword">void</span>)</span> </span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"use knife to eat"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Chinese : <span class="keyword">public</span> Human &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eating</span><span class="params">(<span class="keyword">void</span>)</span> </span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"use chopsticks to eat"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Chongqing : <span class="keyword">public</span> Chinese &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eating</span><span class="params">(<span class="keyword">void</span>)</span> </span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"use chopsticks to eat Chongqing"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">show_type</span><span class="params">(Human&amp; h)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">//Pointer </span></div><div class="line">    American *a;</div><div class="line">    Chinese *c;</div><div class="line">    Chongqing *cq;</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (a = <span class="keyword">dynamic_cast</span>&lt;American *&gt;(&amp;h))</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"this human is American"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    <span class="keyword">if</span> (c = <span class="keyword">dynamic_cast</span>&lt;Chinese *&gt;(&amp;h))</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"this human is Chinese"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    <span class="keyword">if</span> (cq = <span class="keyword">dynamic_cast</span>&lt;Chongqing *&gt;(&amp;h))</div><div class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"this human is Chongqing"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">    </div><div class="line">    <span class="comment">//Reference</span></div><div class="line">    <span class="keyword">if</span> (cq = <span class="keyword">dynamic_cast</span>&lt;Chongqing *&gt;(&amp;h))</div><div class="line">    &#123;</div><div class="line">        <span class="comment">//American&amp; am = dynamic_cast&lt;American&amp;&gt;(h); //unable convert, generate aborted</span></div><div class="line">        Chinese&amp; ch = <span class="keyword">dynamic_cast</span>&lt;Chinese&amp;&gt;(h);    </div><div class="line">        Chongqing&amp; cqr = <span class="keyword">dynamic_cast</span>&lt;Chongqing&amp;&gt;(h);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">double</span> a = <span class="number">4.44</span>;</div><div class="line">    <span class="keyword">int</span> b = a; <span class="comment">//double to int</span></div><div class="line"><span class="keyword">int</span> c = (<span class="keyword">int</span>)a;</div><div class="line">    <span class="keyword">int</span> d = <span class="keyword">static_cast</span>&lt;<span class="keyword">int</span>&gt;(a);</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"b = "</span>&lt;&lt;b&lt;&lt;<span class="string">"  "</span>&lt;&lt;<span class="string">"c = "</span>&lt;&lt;c&lt;&lt;<span class="string">"  "</span>&lt;&lt;<span class="string">"d = "</span>&lt;&lt;d&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *e = <span class="string">"www.hceng.cn"</span>;</div><div class="line">    <span class="keyword">char</span> *f = <span class="keyword">const_cast</span>&lt;<span class="keyword">char</span> *&gt;(e); <span class="comment">//clear const attribute</span></div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"e = "</span>&lt;&lt;e&lt;&lt;<span class="string">"  "</span>&lt;&lt;<span class="string">"f = "</span>&lt;&lt;f&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> *g =<span class="keyword">reinterpret_cast</span>&lt;<span class="keyword">unsigned</span> <span class="keyword">int</span> *&gt;(f); <span class="comment">//char * to unsigned int * </span></div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"g = "</span>&lt;&lt;g&lt;&lt;<span class="built_in">endl</span>; </div><div class="line">    </div><div class="line">    </div><div class="line">    Human hu;</div><div class="line">    American am;</div><div class="line">    Chinese ch;</div><div class="line">    Chongqing cq;</div><div class="line">    </div><div class="line">    show_type(hu);</div><div class="line">    show_type(am);</div><div class="line">    show_type(ch);</div><div class="line">    show_type(cq);</div><div class="line">    </div><div class="line">    American *h1 =<span class="keyword">static_cast</span>&lt;American *&gt;(&amp;hu);</div><div class="line">    <span class="comment">//American *h2 = static_cast&lt;American *&gt;(&amp;cq);</span></div><div class="line">    Chinese *h3 = <span class="keyword">static_cast</span>&lt;Chinese *&gt;(&amp;cq);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">b = 4  c = 4  d = 4</div><div class="line">e = www.hceng.cn  f = www.hceng.cn</div><div class="line">g = 0x55be4eac1347</div><div class="line">this human is American</div><div class="line">this human is Chinese</div><div class="line">this human is Chinese</div><div class="line">this human is Chongqing</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 定义了四个类，<code>Human</code>是<code>American</code>和<code>Chinese</code>的基类，<code>Chinese</code>是<code>Chongqing</code>的基类；<br>1.2 基类<code>Human</code>有个虚函数<code>eating()</code>，其它三个类都直接或间接从它继承过来，因此也各种有该虚函数；<br>　<br>2.1 主函数里，首先是将一个<code>double</code>转换成<code>int</code>，<code>b</code>是通过隐式转换得到，<code>c</code>是通过C语言风格的强制转换得到，<code>d</code>是通过C++的<code>static_cast</code>强制类型转换操作符得到；<br>2.2 字符串指针<code>e</code>，定义时被<code>const</code>修饰，通过<code>const_cast</code>强制类型转换操作符，可以去掉<code>const</code>得到<code>f</code>，注意两者的数据类型要一致；<br>2.3 接着通过<code>reinterpret_cast</code>强制类型转换操作符，将字符串指针<code>char *</code>转换成了<code>unsigned int *</code>类型的指针，从而直接打印<code>g</code>就是<code>f</code>的地址。另外因为前面去掉了<code>const</code>，这里才能对<code>f</code>操作；这里<code>f</code>是指针，因此<code>g</code>也必须是指针；<br>2.4 分别实例化四个类，调用<code>show_type()</code>。在<code>show_type()</code>里，先通过<code>dynamic_cast</code>尝试类的平行转换，如果转换成功，说明传入的参数就是该类，两个无关联的类是不能直接转换的。在传入的是<code>Chongqing</code>类时，即可向上转换成<code>Chinese</code>，也可平行转换成<code>Chongqing</code>，因此打印了两次。<code>dynamic_cast</code>必须用于多态场合，因此各个类里面需要有虚函数；<br>2.5 在<code>show_type()</code>里，前面<code>dynamic_cast</code>的<code>type</code>是指针，后面使用的<code>type</code>是引用。使用引用的缺点是转换失败是产生异常，中断程序，因此最好使用<code>type</code>是指针。<br>2.6 继续看主函数，使用<code>static_cast</code>进行类的转换，将<code>Human</code>向下转换成<code>American</code>，<code>static_cast</code>不会检查是否能转换，因此是不安全的；再将<code>Chongqing</code>转换成<code>American</code>，两个无关联的类之间转换，编译器检查到了就无法编译通过；最后尝试将<code>Chongqing</code>向上转换成<code>Chinese</code>，效果和<code>dynamic_cast</code>是一样的；</p></blockquote><h1 id="3-C-高级编程"><a href="#3-C-高级编程" class="headerlink" title="3. C++高级编程"></a>3. C++高级编程</h1><h2 id="3-1-抽象类"><a href="#3-1-抽象类" class="headerlink" title="3.1 抽象类"></a>3.1 抽象类</h2><p>前面介绍了虚函数，这里再衍生出纯虚函数，实现抽象类。</p><ul><li>纯虚函数：在声明虚函数时被“初始化”为0的函数，形式如：<code>virtual void eating(void) = 0;</code>；</li><li>抽象类：凡是有纯虚函数的类，都是抽象类，抽象类不能实例化，其派生的子类需覆写所有纯虚函数才能实例化，否则子类还是抽象类；</li></ul><p>引入抽象类的意义：<br>1.为了实现运行时多态性，需要在基类中定义虚函数；<br>2.在很多情况下，基类本身生成对象是不合情理的。<br>例如，动物作为基类可以派生出小猫、小狗等实例化，但对动物进行实例化就明显是不合理的。</p><p>将函数定义为虚函数，则编译器要求在派生类中必须予以重写以实现多态性。<br>同时含有纯虚拟函数的类称为抽象类，它不能生成对象，这样就很好地解决了上述两个问题。</p><p>本次示例将各个类的代码分离成独自的文件，更贴近实际工作。</p><ul><li>示例：<figure class="highlight makefile"><figcaption><span>[Makefile]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Human: main.o libHuman.so</div><div class="line">g++ -o $@ $&lt; -L. -lHuman</div><div class="line"></div><div class="line">%.o : %.cpp</div><div class="line">g++ -fPIC -c -o $@ $&lt;</div><div class="line"></div><div class="line">libHuman.so: Chinese.o American.o Human.o</div><div class="line">g++ -shared -o $@ $^</div><div class="line"></div><div class="line"><span class="section">clean:</span></div><div class="line">rm -f *.o *.so Human</div></pre></td></tr></table></figure></li></ul><p>分析：</p><blockquote><ol><li>这里使用了分层的思想，将<strong>提供类</strong>(各个类的声明和定义)和<strong>使用类</strong>(主函数里使用类)分开；</li><li><code>libHuman.so</code>包含了所有类，当对类做了修改时，只需要<code>make libHuman.so</code>即可；</li><li>之后<code>libHuman.so</code>和<code>main.o</code>合并，当在主函数对类的使用做了修改时，只需要<code>make</code>，不会重新编译各个类；</li><li>执行时候，需要先指定库的路径，即<code>LD_LIBRARY_PATH=. ./Human</code>；</li></ol></blockquote><figure class="highlight cpp"><figcaption><span>[human.h]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _HUMAN_H</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> _HUMAN_H</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Human &#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="keyword">char</span> *name;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setName</span><span class="params">(<span class="keyword">char</span> *name)</span></span>;</div><div class="line">    <span class="function"><span class="keyword">char</span> *<span class="title">getName</span><span class="params">(<span class="keyword">void</span>)</span></span>;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">eating</span><span class="params">(<span class="keyword">void</span>)</span> </span>= <span class="number">0</span>; <span class="comment">//纯虚函数,提供模板</span></div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">wearing</span><span class="params">(<span class="keyword">void</span>)</span> </span>= <span class="number">0</span>;</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">driving</span><span class="params">(<span class="keyword">void</span>)</span> </span>= <span class="number">0</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">virtual</span> ~Human();</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function">Human&amp; <span class="title">CreateAmerican</span><span class="params">(<span class="keyword">char</span> *name, <span class="keyword">int</span> age, <span class="keyword">char</span> *addr)</span></span>;</div><div class="line"><span class="function">Human&amp; <span class="title">CreateChinese</span><span class="params">(<span class="keyword">char</span> *name, <span class="keyword">int</span> age, <span class="keyword">char</span> *addr)</span></span>;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure><figure class="highlight cpp"><figcaption><span>[human.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Human.h"</span></span></div><div class="line"></div><div class="line"><span class="keyword">void</span> Human::setName(<span class="keyword">char</span> *name)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">this</span>-&gt;name = name;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">char</span> *Human::getName(<span class="keyword">void</span>)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">this</span>-&gt;name;</div><div class="line">&#125;</div><div class="line"></div><div class="line">Human::~Human()</div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"~Human()"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>分析：</p><blockquote><ol><li>定义类<code>Human</code>，其中有三个纯虚函数；　</li><li>在类外，声明了两个函数，用于创建两个类。</li><li>把两个函数声明放在这是因为，减少主函数包含类的头文件，这样主函数只包含<code>Human.h</code>，其它类做了修改时，不再编译主函数；</li></ol></blockquote><figure class="highlight cpp"><figcaption><span>[American.h]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _AMERICAN_H</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> _AMERICAN_H</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Human.h"</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">class</span> American : <span class="keyword">public</span> Human&#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="keyword">char</span> addr[<span class="number">100</span>];</div><div class="line">    <span class="keyword">int</span> age;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eating</span><span class="params">(<span class="keyword">void</span>)</span></span>;  </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">wearing</span><span class="params">(<span class="keyword">void</span>)</span></span>;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">driving</span><span class="params">(<span class="keyword">void</span>)</span></span>;</div><div class="line">    American();</div><div class="line">    American(<span class="keyword">char</span> *name, <span class="keyword">int</span> age, <span class="keyword">char</span> *addr);</div><div class="line">    <span class="keyword">virtual</span> ~American();</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure><figure class="highlight cpp"><figcaption><span>[American.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"American.h"</span></span></div><div class="line"></div><div class="line"><span class="keyword">void</span> American::eating(<span class="keyword">void</span>) </div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Eating American food"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> American::wearing(<span class="keyword">void</span>)</div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Wearing American clothes"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> American::driving(<span class="keyword">void</span>)</div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Driving American car"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">American::American()</div><div class="line">&#123;</div><div class="line">    </div><div class="line">&#125;</div><div class="line"></div><div class="line">American::American(<span class="keyword">char</span> *name, <span class="keyword">int</span> age, <span class="keyword">char</span> *addr)</div><div class="line">&#123;</div><div class="line">    setName(name);</div><div class="line">    <span class="keyword">this</span>-&gt;age = age;</div><div class="line">    <span class="built_in">memset</span>(<span class="keyword">this</span>-&gt;addr, <span class="number">0</span>, <span class="number">100</span>);</div><div class="line">    <span class="built_in">strcpy</span>(<span class="keyword">this</span>-&gt;addr, addr);</div><div class="line">&#125;</div><div class="line"></div><div class="line">American::~American()</div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"~American()"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">Human&amp; <span class="title">CreateAmerican</span><span class="params">(<span class="keyword">char</span> *name, <span class="keyword">int</span> age, <span class="keyword">char</span> *addr)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> *(<span class="keyword">new</span> American(name, age, addr));</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>分析：</p><blockquote><ol><li>类<code>American</code>继承于抽象类<code>Human</code>，必须实现抽象类的所有纯虚函数；</li><li>函数<code>CreateAmerican()</code>实现<code>American</code>类的创建；</li></ol></blockquote><figure class="highlight cpp"><figcaption><span>[Chinese.h]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _CHINESE_H</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> _CHINESE_H</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Human.h"</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Chinese : <span class="keyword">public</span> Human&#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">eating</span><span class="params">(<span class="keyword">void</span>)</span></span>;  </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">wearing</span><span class="params">(<span class="keyword">void</span>)</span></span>;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">driving</span><span class="params">(<span class="keyword">void</span>)</span></span>;</div><div class="line">    <span class="keyword">virtual</span> ~Chinese();</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure><figure class="highlight cpp"><figcaption><span>[Chinese.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Chinese.h"</span></span></div><div class="line"></div><div class="line"><span class="keyword">void</span> Chinese::eating(<span class="keyword">void</span>)  </div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Eating Chinese food"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> Chinese::wearing(<span class="keyword">void</span>)</div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Wearing Chinese clothes"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> Chinese::driving(<span class="keyword">void</span>)</div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"Driving Chinese car"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">Chinese::~Chinese()</div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span> &lt;&lt; <span class="string">"~Chinese()"</span> &lt;&lt; <span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"><span class="function">Human&amp; <span class="title">CreateChinese</span><span class="params">(<span class="keyword">char</span> *name, <span class="keyword">int</span> age, <span class="keyword">char</span> *addr)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">return</span> *(<span class="keyword">new</span> Chinese());</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>分析：</p><blockquote><ol><li>类<code>Chinese</code>继承于抽象类<code>Human</code>，必须实现抽象类的所有纯虚函数；</li><li>函数<code>CreateChinese()</code>实现<code>Chinese</code>类的创建；</li></ol></blockquote><figure class="highlight cpp"><figcaption><span>[main.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Human.h"</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_eating</span><span class="params">(Human *h)</span></span></div><div class="line">&#123;</div><div class="line">    h-&gt;eating();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    Human&amp; a = CreateAmerican((<span class="keyword">char</span> *)<span class="string">"jk"</span>, <span class="number">22</span>, (<span class="keyword">char</span> *)<span class="string">"America"</span>);</div><div class="line">    Human&amp; c = CreateChinese((<span class="keyword">char</span> *)<span class="string">"hceng"</span>, <span class="number">23</span>, (<span class="keyword">char</span> *)<span class="string">"Chine"</span>);</div><div class="line">    </div><div class="line">    Human* h[<span class="number">2</span>] = &#123;&amp;a, &amp;c&#125;;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">2</span>; i++)</div><div class="line">        test_eating(h[i]);</div><div class="line">    <span class="keyword">delete</span> &amp;a;</div><div class="line">    <span class="keyword">delete</span> &amp;c;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>分析：</p><blockquote><ol><li>通过函数间接创建两个子类，利用虚函数的特性调用各自的函数；</li><li>删除各自实例化的类，前提是类的析构函数是<code>virtual</code>修饰的；</li></ol></blockquote><ul><li>结果：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Eating American food</div><div class="line">Eating Chinese food</div><div class="line">~American()</div><div class="line">~Human()</div><div class="line">~Chinese()</div><div class="line">~Human()</div></pre></td></tr></table></figure></li></ul><h2 id="3-2-函数模板"><a href="#3-2-函数模板" class="headerlink" title="3.2 函数模板"></a>3.2 函数模板</h2><p>C++是一门强类型语言，所以无法做到像动态语言(python javascript)那样子，编写一段通用的逻辑，可以把任意类型的变量传进去处理。<br>泛型编程弥补了这个缺点，通过把通用逻辑设计为模板，摆脱了数据类型的限制，提供了继承机制以外的另一种抽象机制，极大地提升了代码的可重用性。</p><p>模板又分为<strong>函数模板</strong>和<strong>类模板</strong>，这里先分析函数模板。<br>函数模板只是编译指令，一般写在头文件中。编译程序时，编译器根据函数的参数来“推导”模板的参数，然后生成具体的模板函数。</p><p>函数模板只支持两种隐式转换：<strong>const转换</strong>和<strong>数组/函数指针转换</strong>。<br>const转换：函数参数为非const引用/指针, 它可以隐式转换为const引用/指针；<br>数组/函数指针转换：数组可以隐式转换为“指向第1个元素的指针”(a[0]);参数为“函数的名字”时，它隐式转换为“函数指针”；<br>其他隐式转换都不支持，比如：算术转换、派生类对象向上转换等；</p><p>函数模板支持<strong>重载</strong>，注意函数的选择规则：<br>1.先列出候选函数，包括普通函数、参数推导成功的模板函数；<br>2.这些候选函数，根据“类型转换”来排序(其中模板函数只支持前面介绍的两种隐式转换)；<br>3.如果某个候选函数的参数，和调用时传入的参数更匹配，则选择该候选函数；<br>4.如果这些候选函数参数匹配度相同，如果只要一个非模板函数，就选它；如果只有模板函数，就选“更特化”的模板函数；否则导致“二义性”；</p><p>举个例子，需要实现一个比较两个数大小的函数，<br>在原来C语言中，需要定义多个功能一样，但参数不一样，函数名也不一样的函数，然后根据不同的参数，调用对应的函数。<br>在现在的C++中，利用模板函数和模板函数的重载，可以极大的精简该过程。</p><ul><li>示例：<figure class="highlight cpp"><figcaption><span>[compare.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="comment">/*</span></div><div class="line">int&amp; compare_max1(int&amp; a, int&amp; b)</div><div class="line">&#123;</div><div class="line">    return (a &lt; b) ? b : a;</div><div class="line">&#125;</div><div class="line"></div><div class="line">double&amp; compare_max2(double&amp; a, double&amp; b)</div><div class="line">&#123;</div><div class="line">    return (a &lt; b) ? b : a;</div><div class="line">&#125;</div><div class="line">*/</div><div class="line"></div><div class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><span class="function">T&amp; <span class="title">compare_max1</span><span class="params">(T&amp; a, T&amp; b)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;__PRETTY_FUNCTION__&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    <span class="keyword">return</span> (a &lt; b) ? b : a;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><span class="function"><span class="keyword">const</span> T&amp; <span class="title">compare_max2</span><span class="params">(<span class="keyword">const</span> T&amp; a, <span class="keyword">const</span> T&amp; b)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;__PRETTY_FUNCTION__&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    <span class="keyword">return</span> (a &lt; b) ? b : a;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><span class="function">T* <span class="title">compare_max3</span><span class="params">(T* a, T* b)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;__PRETTY_FUNCTION__&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    <span class="keyword">return</span> (a &lt; b) ? b : a;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_func</span><span class="params">(T f)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;__PRETTY_FUNCTION__&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">float</span> <span class="title">f1</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></div><div class="line">&#123;</div><div class="line">    </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/*******************************/</span></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 1</span></div><div class="line"><span class="function"><span class="keyword">int</span>&amp; <span class="title">overload_template</span><span class="params">(<span class="keyword">int</span>&amp; a, <span class="keyword">int</span>&amp; b)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"1 "</span>&lt;&lt;__PRETTY_FUNCTION__&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 1</span></div><div class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><span class="function">T&amp; <span class="title">overload_template</span><span class="params">(T&amp; a, T&amp; b)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"2 "</span>&lt;&lt;__PRETTY_FUNCTION__&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><span class="function">T <span class="title">overload_template</span><span class="params">(T a, T b)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"3 "</span>&lt;&lt;__PRETTY_FUNCTION__&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 1</span></div><div class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><span class="function"><span class="keyword">const</span> T&amp; <span class="title">overload_template</span><span class="params">(<span class="keyword">const</span> T&amp; a, <span class="keyword">const</span> T&amp; b)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"4 "</span>&lt;&lt;__PRETTY_FUNCTION__&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> ia = <span class="number">2</span>, ib = <span class="number">3</span>;</div><div class="line">    <span class="keyword">float</span> fa = <span class="number">2</span>, fb = <span class="number">3</span>;</div><div class="line">    </div><div class="line">    compare_max1(ia,ib);</div><div class="line">    compare_max1(fa,fb);</div><div class="line"></div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"-------------------------"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    </div><div class="line">    compare_max2(ia,ib);</div><div class="line">    </div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"-------------------------"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">char</span> ca[] = <span class="string">"ca"</span>;</div><div class="line">    <span class="keyword">char</span> cb[] = <span class="string">"cb"</span>;</div><div class="line">    <span class="keyword">char</span> cc[]  = <span class="string">"cc123"</span>;</div><div class="line">    </div><div class="line">    compare_max1(ca, cb);</div><div class="line">    <span class="comment">//compare_max1(ca, cc);</span></div><div class="line">    compare_max3(ca, cc);</div><div class="line">    </div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"-------------------------"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    </div><div class="line">    test_func(f1);</div><div class="line">    test_func(*f1);</div><div class="line">    </div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"-------------------------"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    </div><div class="line">    overload_template(ia,ib);</div><div class="line">    </div><div class="line">    <span class="keyword">int</span> *pa = &amp;ia;</div><div class="line">    <span class="keyword">int</span> *pb = &amp;ib;</div><div class="line">    overload_template(pa, pb);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><ul><li>结果：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">T&amp; compare_max1(T&amp;, T&amp;) [with T = int]</div><div class="line">T&amp; compare_max1(T&amp;, T&amp;) [with T = float]</div><div class="line">-------------------------</div><div class="line">const T&amp; compare_max2(const T&amp;, const T&amp;) [with T = int]</div><div class="line">-------------------------</div><div class="line">T&amp; compare_max1(T&amp;, T&amp;) [with T = char [3]]</div><div class="line">T* compare_max3(T*, T*) [with T = char]</div><div class="line">-------------------------</div><div class="line">void test_func(T) [with T = float (*)(int, int)]</div><div class="line">void test_func(T) [with T = float (*)(int, int)]</div><div class="line">-------------------------</div><div class="line">1 int&amp; overload_template(int&amp;, int&amp;)</div><div class="line">2 T&amp; overload_template(T&amp;, T&amp;) [with T = int*]</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 首先定义了三个模板函数：<code>compare_max1()</code>(参数为引用)、<code>compare_max2()</code>(参数为const修饰的引用)、<code>compare_max3()</code>(参数为指针)；<br>1.2 再定义了一个模板函数<code>test_func()</code>，和一个普通函数<code>f1()</code>；<br>1.3 又定义四个名字一样的函数<code>overload_template()</code>，第一个是普通函数，第二个是参数为引用的模板函数，第三个是参数为普通的模板函数，第四个是参数为<code>const</code>修饰的引用模板函数；<br>1.4 宏<code>__PRETTY_FUNCTION__</code>可以打印带参数类型的函数，便于分析；<br>2.1 主函数里，首先定义了两组不同类型的数据，都可以调用<code>compare_max1()</code>，从打印结果可以看到，函数的参数类型都转换为传入的参数类型；<br>2.2 再调用<code>compare_max2()</code>，从打印结果可以看到参数类型自动转换成了<code>const</code>类型，该隐式转换是支持的；<br>2.3 再定义了三个数据，<code>cc</code>的长度和<code>ca</code>、<code>cb</code>不一样。使用<code>compare_max1()</code>传入<code>ca</code>和<code>cb</code>，可以看到数据类型都是<code>char [3]</code>.<br>2.4 而如果使用<code>compare_max1()</code>传入<code>ca</code>和<code>cc</code>，它们一个数据类型为<code>char [3]</code>，一个为<code>char [6]</code>，和模板函数的定义(两个参数类型一样)不一致，无法编译通过。<br>2.5 使用<code>compare_max3()</code>传入<code>ca</code>和<code>cc</code>却有可以，因为函数模板定义的是指针类型，传入数组可以隐式转换为“指向第1个元素的指针”(a[0])，它们的数据类型就是一致的了；<br>2.6 使用<code>test_func()</code>分别传入函数名字<code>f1</code>和函数指针<code>*f1</code>，其效果是一样的，因为传入参数为“函数的名字”时，它隐式转换为“函数指针”；<br>2.7 向函数<code>overload_template()</code>传入两个<code>int</code>类型数据，最优调用的是参数吻合的非模板函数；<br>2.8 向函数<code>overload_template()</code>传入两个指针类型数据，非模板函数的参数类型为<code>int</code>肯定不用调用了，就去看模板函数，模板函数的2、3都是最优吻合的，存在“二义性”，需要屏蔽一个。模板函数4因为有<code>const</code>修饰，优先级稍微靠后一点，除非前面的都屏蔽，才会调用他它；<br>　<br>3.模板函数重载后，注意函数的选择规则；</p></blockquote><h2 id="3-3-类模板"><a href="#3-3-类模板" class="headerlink" title="3.3 类模板"></a>3.3 类模板</h2><p>C++除了支持函数模板，还支持类模板(Class Template)。<br>函数模板中定义的参数类型可以用在函数声明和函数定义中，类模板中定义的参数类型可以用在类声明和类实现中。<br>类模板的目的同样是为了摆脱了数据类型的限制，提升了代码的可重用性</p><p>声明类模板的语法为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">template&lt;typename 参数类型1, typename 参数类型2, … &gt; </div><div class="line">class 类名&#123;</div><div class="line">    //TODO:</div><div class="line">&#125;;</div></pre></td></tr></table></figure></p><p>类型参数不能为空，多个类型参数用逗号隔开。<br>一但声明了类模板，就可以将参数类型用于类的成员函数和成员变量了。<br>换句话说，原来使用<code>int</code>、<code>float</code>、<code>char</code>等内置类型的地方，都可以用类型参数来代替。</p><ul><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[car.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><span class="keyword">class</span> Car &#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    T t;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">car_weight</span><span class="params">(<span class="keyword">const</span> T &amp;t)</span></span>;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printInfo</span><span class="params">(<span class="keyword">void</span>)</span></span>;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><span class="keyword">void</span> Car&lt;T&gt;::car_weight(<span class="keyword">const</span> T &amp;t)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">this</span>-&gt;t = t;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><span class="keyword">void</span> Car&lt;T&gt;::printInfo(<span class="keyword">void</span>)</div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Car weight is:"</span>&lt;&lt;t&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 1</span></div><div class="line"><span class="comment">//定做(重载)</span></div><div class="line"><span class="keyword">template</span>&lt;&gt;</div><div class="line"><span class="keyword">class</span> Car&lt;<span class="keyword">char</span> *&gt; &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">car_weight</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *t)</span></span>;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printInfo</span><span class="params">(<span class="keyword">void</span>)</span></span>;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">void</span> Car&lt;<span class="keyword">char</span> *&gt;::car_weight(<span class="keyword">const</span> <span class="keyword">char</span> *t)</div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Car weight is:"</span>&lt;&lt;t&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">void</span> Car&lt;<span class="keyword">char</span> *&gt;::printInfo(<span class="keyword">void</span>)</div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Car&lt;char *&gt;"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    Car&lt;<span class="keyword">int</span>&gt; ic;</div><div class="line">    ic.car_weight(<span class="number">1000</span>);</div><div class="line">    ic.printInfo();</div><div class="line">    </div><div class="line">    Car&lt;<span class="keyword">double</span>&gt; dc;</div><div class="line">    dc.car_weight(<span class="number">999.99</span>);</div><div class="line">    dc.printInfo();</div><div class="line">    </div><div class="line">    Car&lt;<span class="keyword">char</span> *&gt; cc;</div><div class="line">    cc.car_weight((<span class="keyword">char</span> *)<span class="string">"1000kg"</span>);</div><div class="line">    cc.printInfo();</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Car weight is:1000</div><div class="line">Car weight is:999.99</div><div class="line">Car weight is:1000kg</div><div class="line">Car&lt;char *&gt;</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 先定义了一个类模板<code>Car</code>，它的私有成员变量<code>t</code>和公共函数<code>car_weight()</code>的参数都用<code>T</code>代替，表示一个任意的数据类型；<br>1.2 然后实现成员函数<code>car_weight()</code>和<code>printInfo()</code>，注意格式；<br>1.3 然后定做了一个类，类似重载，它的类名和前面的类模板一样，但数据类型是确定了的，成员函数的内容也可以重新定义。<br>1.4 在实例化的时候，如果传入的数据类型刚好是<code>char *</code>就会优先调用这个类；<br>　<br>2.1 主函数分别示例化了三个不同数据类型的对象，<code>int</code>和<code>double</code>类型都会调用前面的类模板<code>Car</code>的成员函数；<br>2.2 <code>char *</code>类型的则会调用类<code>Car&lt;char *&gt;</code>的成员函数；</p></blockquote><h2 id="3-4-异常"><a href="#3-4-异常" class="headerlink" title="3.4 异常"></a>3.4 异常</h2><p>与Java类似，C++也有异常机制，关键字也差不多。</p><p>异常是程序在执行期间产生的问题。<br>C++异常是指在程序运行时发生的特殊情况，比如尝试除以零的操作。<br>异常提供了一种转移程序控制权的方式。</p><p>C++异常处理涉及到三个关键字：<code>try</code>、<code>catch</code>、<code>throw</code>。</p><ul><li><code>throw</code>: 当问题出现时，程序会抛出一个异常，这是通过使用<code>throw</code>关键字来完成；</li><li><code>try</code>: <code>try</code>块中的代码标识将被激活的特定异常，它后面通常跟着一个或多个<code>catch</code>块；</li><li><p><code>catch</code>: 在想要处理问题的地方，通过异常处理程序捕获异常，<code>catch</code>关键字用于捕获异常；</p></li><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[exception.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">class</span> MyException &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">printInfo</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"This is MyException"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> MySubException : <span class="keyword">public</span> MyException &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printInfo</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"This is MySubException"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//A-&gt;B-&gt;C</span></div><div class="line"><span class="comment">//void C(int in) throw(int, double) //C++11中丢弃</span></div><div class="line"><span class="comment">//noexcept(false)可能抛出异常;noexcept(true)/noexcept不会抛出异常;</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">C</span><span class="params">(<span class="keyword">int</span> in)</span> <span class="title">noexcept</span><span class="params">(<span class="literal">false</span>)</span> </span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i = <span class="number">1</span>;</div><div class="line">    <span class="keyword">double</span> d = <span class="number">1.1</span>;</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (<span class="number">0</span> == in)</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"No Exception"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">1</span> == in)</div><div class="line">        <span class="keyword">throw</span> i;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">2</span> == in)</div><div class="line">        <span class="keyword">throw</span> d;</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">3</span> == in)</div><div class="line">        <span class="keyword">throw</span> MyException();</div><div class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">4</span> == in)</div><div class="line">        <span class="keyword">throw</span> MySubException();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">B</span><span class="params">(<span class="keyword">int</span> i)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"run B start"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    C(i);</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"run B end"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">A</span><span class="params">(<span class="keyword">int</span> i)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">try</span>&#123;</div><div class="line">        B(i);</div><div class="line">    &#125; <span class="keyword">catch</span> (<span class="keyword">int</span> j) &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"catch int style exception"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125; <span class="keyword">catch</span> (MyException &amp;e) &#123;</div><div class="line">        e.printInfo();</div><div class="line">    &#125;<span class="comment">//catch (...) &#123;</span></div><div class="line">        <span class="comment">//cout&lt;&lt;"catch other style exception"&lt;&lt;endl;</span></div><div class="line">    <span class="comment">//&#125;</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">my_terminate_func</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"run my_terminate_func"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i ;</div><div class="line">    </div><div class="line">    set_terminate(my_terminate_func);</div><div class="line">    </div><div class="line">    <span class="keyword">if</span> (argc != <span class="number">2</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"Usage: "</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;argv[<span class="number">0</span>]&lt;&lt;<span class="string">" &lt;0|1|2|3|4&gt;"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    i = strtoul(argv[<span class="number">1</span>], <span class="literal">NULL</span>, <span class="number">0</span>);</div><div class="line">    </div><div class="line">    A(i);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">hceng@android:/work/c++_learn/18th_exception$ ./exception 0</div><div class="line">run B start</div><div class="line">No Exception</div><div class="line">run B end</div><div class="line">hceng@android:/work/c++_learn/18th_exception$ ./exception 1</div><div class="line">run B start</div><div class="line">catch int style exception</div><div class="line">hceng@android:/work/c++_learn/18th_exception$ ./exception 2</div><div class="line">run B start</div><div class="line">run my_terminate_func</div><div class="line">Aborted (core dumped)</div><div class="line">hceng@android:/work/c++_learn/18th_exception$ ./exception 3</div><div class="line">run B start</div><div class="line">This is MyException</div><div class="line">hceng@android:/work/c++_learn/18th_exception$ ./exception 4</div><div class="line">run B start</div><div class="line">This is MySubException</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 定义了一个基类<code>MyException</code>，再派生出它的一个子类<code>MySubException</code>；<br>1.2 基类<code>MyException</code>有一个被<code>virtual</code>修饰的虚函数<code>printInfo</code>，其子类的<code>printInfo</code>也自动为虚函数；<br>　<br>2.1 定义了三个函数，函数<code>A</code>调用<code>B</code>、函数<code>B</code>调用函数<code>C</code>；<br>2.2 函数<code>A</code>将调用函数<code>B</code>放在了<code>try</code>块中，后面使用多个<code>catch</code>捕获不同的异常；<br>2.3 <code>catch</code>后面指定想要捕捉的异常类型，这里为<code>int</code>数据类型和<code>MyException</code>类；<br>2.4 使用<code>catch (...)</code>可以表示捕获其它未指定的异常类型；<br>2.5 函数<code>B</code>调用函数<code>C</code>；<br>2.6 函数<code>C</code>有一个<code>noexcept</code>修饰符，它是C++11新提供的异常说明符，用于声明一个函数不会抛出异常。使用<code>noexcept</code>设置为不抛出异常，能阻止异常的传播；这里使用<code>noexcept(false)</code>表示可能抛出异常；<br>2.7 函数<code>C</code>抛出的异常有<code>int</code>、<code>double</code>、<code>MyException</code>和<code>MySubException</code>；<br>　<br>3.1 定义了函数<code>my_terminate_func()</code>；<br>3.2 使用<code>set_terminate()</code>将前面自己定义的函数作为异常处理函数；<br>　<br>4.1 主函数根据传入的不同参数，是函数<code>C</code>抛出对应的异常。<br>4.2 当参数为<code>0</code>时，函数<code>C</code>没有抛出异常；<br>4.3 当参数为<code>1</code>时，函数<code>C</code>抛出<code>int</code>异常，被函数<code>A</code>捕获处理；<br>4.4 当参数为<code>2</code>时，函数<code>C</code>抛出<code>double</code>异常，没有被任何函数捕获，最后调用<code>terminate()</code>处理；<br>4.5 当参数为<code>3</code>时，函数<code>C</code>抛出<code>MyException</code>异常，被函数<code>A</code>捕获处理；<br>4.6 当参数为<code>4</code>时，函数<code>C</code>抛出<code>MySubException</code>异常，因为是虚函数的缘故，这里调用子类的打印函数；</p></blockquote><h2 id="3-5-智能指针"><a href="#3-5-智能指针" class="headerlink" title="3.5 智能指针"></a>3.5 智能指针</h2><p>在C++中，可以直接操作内存，给编程增加了不少的灵活性。<br>但是灵活性是有代价的，程序员必须负责自己负责释放自己申请的内存，否则就会出现内存泄露。<br>智能指针就是为了解决这个问题而存在的。它和其他指针没有本质的区别，主要的目的就是为了<strong>解决悬挂指针、内存泄露的问题</strong>。<br>其原理就是使用智能指针类<code>SmartPointer</code>，将一个计数器<code>RefBase</code>与类指向的对象相关联，当对象还有引用的时候，就不执行释放内存的操作，当引用计数为0时，就执行内存释放操作，并且将指针重置为NULL。</p><p>这里先尝试自己实现一个智能指针，理解其实现原理，然后再使用Android自带的智能指针重新测试。</p><ul><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[smartpointer.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">class</span> RefBase &#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="keyword">int</span> count;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    RefBase() : count(<span class="number">0</span>) &#123;&#125;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">incStrong</span><span class="params">()</span> </span>&#123; count++; &#125;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">decStrong</span><span class="params">()</span> </span>&#123; count--; &#125;</div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">getStrongCount</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> count; &#125;  </div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Person : <span class="keyword">public</span> RefBase &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    Person() &#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"Person()"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;</div><div class="line">    ~Person() &#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"~Person()"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printInfo</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"This is Person"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><span class="keyword">class</span> SmartPointer &#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    T *sp;</div><div class="line">    </div><div class="line"><span class="keyword">public</span>:</div><div class="line">    SmartPointer() : sp(<span class="number">0</span>) &#123;&#125;</div><div class="line">    </div><div class="line">    SmartPointer(T *pt)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"SmartPointer(T *pt)"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">        sp = pt;</div><div class="line">        sp-&gt;incStrong();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    SmartPointer(<span class="keyword">const</span> SmartPointer &amp;pt)</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"SmartPointer(T &amp;pt)"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">        sp = pt.sp;</div><div class="line">        sp-&gt;incStrong();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    ~SmartPointer()</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"~SmartPointer()"</span>&lt;&lt;<span class="built_in">endl</span>;  </div><div class="line">        <span class="keyword">if</span> (sp)</div><div class="line">        &#123;</div><div class="line">            sp-&gt;decStrong();</div><div class="line">            <span class="keyword">if</span> (sp-&gt;getStrongCount() == <span class="number">0</span>)</div><div class="line">            &#123;</div><div class="line">                <span class="keyword">delete</span> sp;</div><div class="line">                sp = <span class="literal">NULL</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;   </div><div class="line">    &#125;</div><div class="line"></div><div class="line">    T *<span class="keyword">operator</span>-&gt;() &#123; <span class="keyword">return</span> sp; &#125;</div><div class="line">    T&amp; <span class="keyword">operator</span>*() &#123; <span class="keyword">return</span> *sp; &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_func</span><span class="params">(SmartPointer&lt;T&gt; &amp;pt)</span></span></div><div class="line">&#123;</div><div class="line">    SmartPointer&lt;T&gt; sp = pt;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"In test_func:"</span>&lt;&lt;sp-&gt;getStrongCount()&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    sp-&gt;printInfo(); <span class="comment">//(*sp).printInfo();</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    </div><div class="line">    SmartPointer&lt;Person&gt; sp = <span class="keyword">new</span> Person();</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Before call test_func:"</span>&lt;&lt;sp-&gt;getStrongCount()&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">2</span>; i++)</div><div class="line">    &#123;</div><div class="line">        test_func(sp);</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"After call test_func:"</span>&lt;&lt;sp-&gt;getStrongCount()&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">Person()</div><div class="line">SmartPointer(T *pt)</div><div class="line">Before call test_func:1</div><div class="line">SmartPointer(T &amp;pt)</div><div class="line">In test_func:2</div><div class="line">This is Person</div><div class="line">~SmartPointer()</div><div class="line">After call test_func:1</div><div class="line">SmartPointer(T &amp;pt)</div><div class="line">In test_func:2</div><div class="line">This is Person</div><div class="line">~SmartPointer()</div><div class="line">After call test_func:1</div><div class="line">~SmartPointer()</div><div class="line">~Person()</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 定义了类<code>RefBase</code>用于引用计数，在构造的时候就赋初值为0，提供三个函数进行加、减、查询计数；<br>1.2 定义了类<code>Person</code>用于测试，继承于<code>RefBase</code>；<br>1.3 定义了类模板<code>SmartPointer</code>用于指针管理，包含指针类成员、三个构造函数、一个析构函数、两个运算符重载函数；<br>1.4 创建了模板函数<code>test_func()</code>用于测试；<br>　<br>2.1 主函数里，首先<code>new Person()</code>，传给<code>sp</code>会调用到<code>SmartPointer(T *pt)</code>，此时<code>count</code>引用加1；<br>2.2 然后调用<code>test_func()</code>，会调用到<code>SmartPointer(const SmartPointer &amp;pt)</code>，传给<code>sp</code>，<code>count</code>引用再加1；<br>2.3 <code>sp</code>作为局部变量在使用完后，自动释放，调用析构函数<code>~SmartPointer()</code>，<code>count</code>减1；<br>2.4 主函数循环，再次调用<code>test_func()</code>，重复2.2、2.3的步骤；<br>2.5 主函数执行完，释放主函数的<code>sp</code>，再次调用<code>~SmartPointer()</code>，<code>count</code>变为0，将会执行<code>delete sp;</code>，最终调用<code>~Person()</code>；<br>　<br>3.以后创建指针类，不需要<code>Person *p = new Person();</code>，而使用<code>SmartPointer&lt;Person&gt; p = new Person();</code>，就不需要自己手动<code>delete p;</code>了。</p></blockquote><ul><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[androidsmartpointer.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"RefBase.h"</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> android::RSC;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Person : <span class="keyword">public</span> LightRefBase&lt;Person&gt; &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    Person() &#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"Person()"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;</div><div class="line">    ~Person() &#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"~Person()"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printInfo</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"This is Person"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt;</div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_func</span><span class="params">(sp&lt;T&gt; &amp;pt)</span></span></div><div class="line">&#123;</div><div class="line">    sp&lt;T&gt; sp = pt;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"In test_func:"</span>&lt;&lt;sp-&gt;getStrongCount()&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    sp-&gt;printInfo(); <span class="comment">//(*sp).printInfo();</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    </div><div class="line">    sp&lt;Person&gt; sp = <span class="keyword">new</span> Person();</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"Before call test_func:"</span>&lt;&lt;sp-&gt;getStrongCount()&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">2</span>; i++)</div><div class="line">    &#123;</div><div class="line">        test_func(sp);</div><div class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"After call test_func:"</span>&lt;&lt;sp-&gt;getStrongCount()&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Person()</div><div class="line">Before call test_func:1</div><div class="line">In test_func:2</div><div class="line">This is Person</div><div class="line">After call test_func:1</div><div class="line">In test_func:2</div><div class="line">This is Person</div><div class="line">After call test_func:1</div><div class="line">~Person()</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 使用Android源码中自带的引用计数类和智能指针类，也就是<strong>Android轻量级指针</strong>；<br>1.2 相比自己实现的智能指针，Android源码提供的轻量级指针对引用计数有了原子操作，计数时避免了被其它相关的线程打断；<br>1.3 效果和前面自己写的智能指针基本一致；</p></blockquote><h2 id="3-7-Android强-弱指针"><a href="#3-7-Android强-弱指针" class="headerlink" title="3.7 Android强/弱指针"></a>3.7 Android强/弱指针</h2><p>Android中定义了两种智能指针类型：<strong>强指针sp(strong pointer)</strong>、<strong>弱指针(weak pointer)</strong><br>强指针与一般意义的智能指针概念相同，通过引用计数来记录有多少使用者在使用一个对象，如果所有使用者都放弃了对该对象的引用，则该对象将被自动销毁。<br>弱指针也指向一个对象，但是弱指针仅仅记录该对象的地址，不能通过弱指针来访问该对象，也就是说不能通过弱指针来调用对象的成员函数或访问对象的成员变量。</p><p>要想访问弱指针所指向的对象，需首先将弱指针升级为强指针(通过wp类所提供的<code>promote()</code>方法)。<br>弱指针所指向的对象是有可能在其它地方被销毁的，如果对象已经被销毁，wp的<code>promote()</code>方法将返回空指针，这样就能避免出现地址访问错的情况。</p><p>为什么引入弱指针呢?<br>如下例中的这种情况，<code>father</code>和<code>son</code>相互引用，会导致释放时两者都没法释放，造成内存泄露。<br>因此引入弱指针来解决这种情况。</p><ul><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[pointer.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;utils/RefBase.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;LightPointeRefBase.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> LIGHTPOINT 1 </span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> LIGHTPOINT</span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> android::RSC;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Person : <span class="keyword">public</span> LightRefBase&lt;Person&gt; &#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    sp&lt;Person&gt; father;</div><div class="line">    sp&lt;Person&gt; son;</div><div class="line">    </div><div class="line"><span class="keyword">public</span>:</div><div class="line">    Person() &#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"Person()"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;</div><div class="line">    ~Person() &#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"~Person()"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printInfo</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"This is Person"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setFather</span><span class="params">(sp&lt;Person&gt; &amp;father)</span> </span>&#123; <span class="keyword">this</span>-&gt;father = father; &#125;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setSon</span><span class="params">(sp&lt;Person&gt; &amp;son)</span> </span>&#123; <span class="keyword">this</span>-&gt;son = son; &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> android;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Person : <span class="keyword">public</span> RefBase &#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    wp&lt;Person&gt; father;</div><div class="line">    wp&lt;Person&gt; son;</div><div class="line">    </div><div class="line"><span class="keyword">public</span>:</div><div class="line">    Person() &#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"Person()"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;</div><div class="line">    ~Person() &#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"~Person()"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printInfo</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"This is Person"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setFather</span><span class="params">(sp&lt;Person&gt; &amp;father)</span> </span>&#123; <span class="keyword">this</span>-&gt;father = father; &#125;</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setSon</span><span class="params">(sp&lt;Person&gt; &amp;son)</span> </span>&#123; <span class="keyword">this</span>-&gt;son = son; &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">test_func</span><span class="params">(<span class="keyword">int</span> mode)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(mode)</div><div class="line">    &#123;</div><div class="line">        sp&lt;Person&gt; father = <span class="keyword">new</span> Person();</div><div class="line">        sp&lt;Person&gt; son = <span class="keyword">new</span> Person();</div><div class="line">        father-&gt;setSon(son);    </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        sp&lt;Person&gt; father = <span class="keyword">new</span> Person();</div><div class="line">        sp&lt;Person&gt; son = <span class="keyword">new</span> Person();</div><div class="line">        father-&gt;setSon(son);</div><div class="line">        son-&gt;setFather(father);     </div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> mode = atoi(argv[<span class="number">1</span>]);</div><div class="line">    <span class="keyword">if</span> (mode &lt; <span class="number">2</span>)</div><div class="line">        test_func(mode);</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">#<span class="keyword">if</span> LIGHTPOINT  </div><div class="line">#<span class="keyword">else</span></div><div class="line">        wp&lt;Person&gt; s1 = <span class="keyword">new</span> Person();</div><div class="line">        <span class="comment">//s1-&gt;printInfo(); //ERROR, "wp" no override "-&gt;"</span></div><div class="line">        <span class="comment">//(*s1).printInfo(); //ERROR, "wp" no override "*"</span></div><div class="line"></div><div class="line">        sp&lt;Person&gt; s2 = s1.promote();</div><div class="line">        <span class="keyword">if</span> (s2 != <span class="number">0</span>)</div><div class="line">            s2-&gt;printInfo();</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">//#define LIGHTPOINT 1</div><div class="line">hceng@android:/work/c++_learn/20th_strongpointer_weekpointer$ ./pointer 0</div><div class="line">Person()</div><div class="line">Person()</div><div class="line">hceng@android:/work/c++_learn/20th_strongpointer_weekpointer$ ./pointer 1</div><div class="line">Person()</div><div class="line">Person()</div><div class="line">~Person()</div><div class="line">~Person()</div><div class="line"></div><div class="line">//#define LIGHTPOINT 0</div><div class="line">hceng@android:/work/c++_learn/20th_strongpointer_weekpointer$ ./pointer 0</div><div class="line">Person()</div><div class="line">Person()</div><div class="line">~Person()</div><div class="line">~Person()</div><div class="line">hceng@android:/work/c++_learn/20th_strongpointer_weekpointer$ ./pointer 1</div><div class="line">Person()</div><div class="line">Person()</div><div class="line">~Person()</div><div class="line">~Person()</div><div class="line">hceng@android:/work/c++_learn/20th_strongpointer_weekpointer$ ./pointer 2</div><div class="line">Person()</div><div class="line">This is Person</div><div class="line">~Person()</div></pre></td></tr></table></figure><p>对该示例进行分析：</p><blockquote><p>1.1 条件编译，假设<code>#define LIGHTPOINT 1</code>，此时使用强指针，主函数根据传入参数调用<code>test_func()</code>；<br>1.2 <code>mode = 0</code>时，<code>father</code>和<code>son</code>相互引用，使用完后，并没有调用析构函数释放；<br>1.3 <code>mode = 1</code>时，<code>father</code>和<code>son</code>没有相互引用，使用完后，调用析构函数进行了释放；<br>　<br>2.1 条件编译，假设<code>#define LIGHTPOINT 0</code>，此时使用弱指针，主函数根据传入参数调用<code>test_func()</code>；<br>2.2 可以看到无论<code>father</code>和<code>son</code>有无相互引用，结果都调用析构函数正常释放了；<br>　<br>3.1 在使用弱指针时，实例化<code>s1</code>，无法通过<code>s1</code>访问<code>Person</code>类成员函数，只能先通过<code>promote()</code>转化，才能访问<code>Person</code>类成员函数；</p></blockquote><h1 id="4-设计模式"><a href="#4-设计模式" class="headerlink" title="4. 设计模式"></a>4. 设计模式</h1><h2 id="4-1-单例模式"><a href="#4-1-单例模式" class="headerlink" title="4.1 单例模式"></a>4.1 单例模式</h2><p>在Android源码中有许多的设计模式，其中单例模式就是最常见的一个。</p><p>单例模式就是一个类只能被实例化一次，即<strong>只能有一个实例化的对象的类</strong>。</p><p>像Windows系统的任务管理器一样，你无论打开多少次，始终显示的一个窗口。<br>定义一个统一的全局变量可以确保对象随时可以被访问，但不能防止创建多个对象。<br>一个最好的办法就是让类自身负责创建和保存它的唯一实例，并保证不创建其他实例，它还提供了一个访问该实例的方法，这就是单例模式的应用场景。</p><ul><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[singleton.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pthread.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line"></div><div class="line"><span class="comment">//hungry mode</span></div><div class="line"><span class="keyword">class</span> Singleton &#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="keyword">static</span> Singleton *gInstance;</div><div class="line"></div><div class="line"><span class="keyword">private</span>:</div><div class="line">    Singleton() &#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"Singleton()"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;</div><div class="line">    </div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">static</span> Singleton *<span class="title">getInstance</span><span class="params">()</span> </span>&#123; <span class="keyword">return</span> gInstance; &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printInfo</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"This is Singleton"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">Singleton *Singleton::gInstance = <span class="keyword">new</span> Singleton;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line">    </div><div class="line"><span class="comment">//Lazy mode </span></div><div class="line"><span class="keyword">class</span> Singleton &#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    <span class="keyword">static</span> Singleton *gInstance;</div><div class="line">    <span class="keyword">static</span> <span class="keyword">pthread_mutex_t</span> g_tMutex;</div><div class="line"></div><div class="line"><span class="keyword">private</span>:</div><div class="line">    Singleton() &#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"Singleton()"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;</div><div class="line">    </div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">static</span> Singleton *<span class="title">getInstance</span><span class="params">()</span></span></div><div class="line">    &#123;</div><div class="line">    <span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line">        <span class="keyword">if</span> (<span class="literal">NULL</span> == gInstance)</div><div class="line">        &#123;</div><div class="line">            pthread_mutex_lock(&amp;g_tMutex);</div><div class="line">            <span class="keyword">if</span> (<span class="literal">NULL</span> == gInstance)</div><div class="line">                gInstance = <span class="keyword">new</span> Singleton;</div><div class="line">            pthread_mutex_unlock(&amp;g_tMutex);</div><div class="line">        &#125;</div><div class="line">    <span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line">        pthread_mutex_lock(&amp;g_tMutex);</div><div class="line">        <span class="keyword">static</span> Singleton *gInstance;</div><div class="line">        pthread_mutex_unlock(&amp;g_tMutex);</div><div class="line">    <span class="meta">#<span class="meta-keyword">endif</span>  </span></div><div class="line">        <span class="keyword">return</span> gInstance;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">printInfo</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"This is Singleton"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line">Singleton *Singleton::gInstance = <span class="literal">NULL</span>;</div><div class="line"><span class="keyword">pthread_mutex_t</span> Singleton::g_tMutex = PTHREAD_MUTEX_INITIALIZER;</div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> *<span class="title">start_routine_thread1</span><span class="params">(<span class="keyword">void</span> *arg)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"this is thread 1 ……"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    Singleton *s = Singleton::getInstance();</div><div class="line">    s-&gt;printInfo();</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> *<span class="title">start_routine_thread2</span><span class="params">(<span class="keyword">void</span> *arg)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">"this is thread 2 ……"</span>&lt;&lt;<span class="built_in">endl</span>;</div><div class="line">    Singleton *s = Singleton::getInstance();</div><div class="line">    s-&gt;printInfo();</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="literal">NULL</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    Singleton *s1 = Singleton::getInstance();</div><div class="line">    s1-&gt;printInfo();</div><div class="line">    </div><div class="line">    Singleton *s2 = Singleton::getInstance();</div><div class="line">    s2-&gt;printInfo();</div><div class="line">    </div><div class="line">    <span class="comment">//Singleton *s3 = new getInstance();</span></div><div class="line">    <span class="comment">//Singleton s4;</span></div><div class="line">    </div><div class="line">    <span class="keyword">pthread_t</span> threadID1;</div><div class="line">    <span class="keyword">pthread_t</span> threadID2;</div><div class="line">    </div><div class="line">    pthread_create(&amp;threadID1, <span class="literal">NULL</span>, start_routine_thread1, <span class="literal">NULL</span>);</div><div class="line">    pthread_create(&amp;threadID2, <span class="literal">NULL</span>, start_routine_thread2, <span class="literal">NULL</span>);</div><div class="line">    </div><div class="line">    sleep(<span class="number">2</span>);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">hceng@android:/work/c++_learn/21th_singleton$ g++ -o singleton singleton.cpp -lpthread</div><div class="line">hceng@android:/work/c++_learn/21th_singleton$ ./singleton </div><div class="line">This is Singleton</div><div class="line">This is Singleton</div><div class="line">this is thread 1 ……</div><div class="line">This is Singleton</div><div class="line">this is thread 2 ……</div><div class="line">This is Singleton</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 示例中有两种实现方法：饿汉模式(<code>hungry mode</code>)和懒汉模式(<code>Lazy mode</code>)；<br>1.2 饿汉就是第一时间需要食物，即类在定义的时候就进行实例化<code>Singleton *Singleton::gInstance = new Singleton;</code>；<br>1.3 懒汉就是不到万不得已，是不会要食物的，即类在第一次用到类实例的时候才会去实例化<code>Singleton *Singleton::gInstance = NULL; Singleton *s = Singleton::getInstance();</code>；<br>1.4 在访问量较小时，采用懒汉实现，以牺牲时间换空间；在访问量比较大，访问的线程比较多时，采用饿汉会有更好的性能，以空间换时间；<br>　<br>2.1 <code>Singleton</code>类里，有一个<code>private</code>、<code>static</code>的类指针<code>gInstance</code>，保存唯一的实例；<br>2.2 构造函数为<code>private</code>或<code>protect</code>防止被外部函数调用，进行实例化；<br>2.3 实例的动作由一个<code>public</code>的类方法<code>getInstance()</code>代劳，该方法返回类唯一的实例；<br>2.4 懒汉模式因为在使用<code>getInstance()</code>实例化时，可能发生冲突，因此需要加锁控制；<br>　<br>3.1 从示例结果可以看到，无论是主函数实例化类，还是在其它线程实例化类，结果都没有创建新的实例化对象，达到了目的；<br>3.2 构造函数变成了私有函数，只向外提供了<code>getInstance()</code>接口，防止了通过其它途径实例化对象；</p></blockquote><h2 id="4-2-桥接模式"><a href="#4-2-桥接模式" class="headerlink" title="4.2 桥接模式"></a>4.2 桥接模式</h2><p><code>Bridge</code>桥接模式将抽象(<code>Abstraction</code>)与实现(<code>Implementation</code>)分离，使得二者可以独立地变化。<br>软件设计中，如果只有一维在变化，那么用继承就可以圆满的解决问题，如果有超过一维的变化，就最好用桥接模式。</p><p>举例一个操作系统和电脑公司的例子。</p><ul><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[install1.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">class</span> OS &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Install</span><span class="params">()</span> </span>= <span class="number">0</span>;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> LinuxOS : <span class="keyword">public</span> OS &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Install</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"Install Linux OS"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> WindowsOS : <span class="keyword">public</span> OS &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Install</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"Install Windows OS"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">class</span> Company &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Use</span><span class="params">()</span> </span>= <span class="number">0</span>;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Msi : <span class="keyword">public</span> Company &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Use</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"Msi computer "</span>; &#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Dell : <span class="keyword">public</span> Company &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Use</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"Dell computer "</span>; &#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">class</span> MsiUseLinuxOS : <span class="keyword">public</span> LinuxOS, <span class="keyword">public</span> Msi &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">InstallOS</span><span class="params">()</span> </span>&#123; Use(); Install(); &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> DellUseWindowsOS : <span class="keyword">public</span> WindowsOS, <span class="keyword">public</span> Dell &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">InstallOS</span><span class="params">()</span> </span>&#123; Use(); Install(); &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> MsiUseWindowsOS : <span class="keyword">public</span> WindowsOS, <span class="keyword">public</span> Msi &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">InstallOS</span><span class="params">()</span> </span>&#123; Use(); Install(); &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> DellUseLinuxOS : <span class="keyword">public</span> LinuxOS, <span class="keyword">public</span> Dell &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">InstallOS</span><span class="params">()</span> </span>&#123; Use(); Install(); &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    MsiUseLinuxOS a;</div><div class="line">    a.InstallOS();</div><div class="line">    </div><div class="line">    DellUseWindowsOS b;</div><div class="line">    b.InstallOS();</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Msi computer Install Linux OS</div><div class="line">Dell computer Install Windows OS</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 定义了类<code>OS</code>，有一个方法<code>Install()</code>，生成两个派生类<code>LinuxOS</code>和<code>WindowsOS</code>；<br>1.2 定义了类<code>Company</code>，有一个方法<code>Use()</code>，生成两个派生类<code>Msi</code>和<code>Dell</code>；<br>1.3 不同的电脑公司可能装不同的操作系统，就可能生成四个新类<code>MsiUseLinuxOS</code>、<code>DellUseWindowsOS</code>、<code>MsiUseWindowsOS</code>、<code>DellUseLinuxOS</code>；<br>　<br>2.1 主函数实例化了安装操作系统的电脑；<br>2.2 可见生成的类数量很多，为两个维度的乘积，且某一方发生了增添，最后生成的类也要有很大的改动，关系如下图：</p></blockquote><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180924/3.jpg"></div><ul><li><p>示例：</p><figure class="highlight cpp"><figcaption><span>[install2.cpp]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></div><div class="line"></div><div class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</div><div class="line"></div><div class="line"><span class="keyword">class</span> OS &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Install</span><span class="params">()</span> </span>= <span class="number">0</span>;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> LinuxOS : <span class="keyword">public</span> OS &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Install</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"Install Linux OS"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> WindowsOS : <span class="keyword">public</span> OS &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Install</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"Install Windows OS"</span>&lt;&lt;<span class="built_in">endl</span>; &#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">class</span> Company &#123;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Use</span><span class="params">()</span> </span>= <span class="number">0</span>;</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">InstallOS</span><span class="params">()</span> </span>= <span class="number">0</span>;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Msi : <span class="keyword">public</span> Company &#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    OS *impl;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    Msi(OS *impl) &#123; <span class="keyword">this</span>-&gt;impl = impl; &#125;;</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Use</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"Msi computer "</span>; &#125;;</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">InstallOS</span><span class="params">()</span> </span>&#123; Use(); impl-&gt;Install(); &#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">class</span> Dell : <span class="keyword">public</span> Company &#123;</div><div class="line"><span class="keyword">private</span>:</div><div class="line">    OS *impl;</div><div class="line"><span class="keyword">public</span>:</div><div class="line">    Dell(OS *impl) &#123; <span class="keyword">this</span>-&gt;impl = impl; &#125;;</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">Use</span><span class="params">()</span> </span>&#123; <span class="built_in">cout</span>&lt;&lt;<span class="string">"Dell computer "</span>; &#125;;</div><div class="line">    <span class="function"><span class="keyword">virtual</span> <span class="keyword">void</span> <span class="title">InstallOS</span><span class="params">()</span> </span>&#123; Use(); impl-&gt;Install(); &#125;;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    OS *lin = <span class="keyword">new</span> LinuxOS();</div><div class="line">    OS *win = <span class="keyword">new</span> WindowsOS();</div><div class="line">    </div><div class="line">    Company *a = <span class="keyword">new</span> Msi(lin);</div><div class="line">    Company *b = <span class="keyword">new</span> Dell(win);</div><div class="line">    </div><div class="line">    a-&gt;InstallOS();</div><div class="line">    b-&gt;InstallOS();</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Msi computer Install Linux OS</div><div class="line">Dell computer Install Windows OS</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 定义了类<code>OS</code>，有一个方法<code>Install()</code>，生成两个派生类<code>LinuxOS</code>和<code>WindowsOS</code>；<br>1.2 定义了类<code>Company</code>，有一个方法<code>Use()</code>，生成两个派生类<code>Msi</code>和<code>Dell</code>；<br>1.3 <code>Msi</code>和<code>Dell</code>有一个<code>InstallOS()</code>方法，它并不是直接实现的，而是调用传入的<code>OS</code>类的<code>Install()</code>方法，即将抽象和实现分开；<br>　<br>2.1 主函数实例化了安装操作系统的电脑；<br>2.2 可见并没有生成各个厂家安装操作系统的类，且某一方发生了增添，都对对方没有任何影响，关系如下图：</p></blockquote><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180924/4.jpg"></div><h1 id="5-其它"><a href="#5-其它" class="headerlink" title="5. 其它"></a>5. 其它</h1><p>所有示例源码:<br><a href="https://github.com/hceng/learn/tree/master/c++_learn" target="_blank" rel="external">Github</a></p><p>参考资料:<br><a href="http://www.100ask.org/index.html" target="_blank" rel="external">韦东山第四期Android驱动_C++快速入门</a></p><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习完了Java，继续C++的学习，C++还有点印象，之前用Qt的时候还写过。&lt;br&gt;
    
    </summary>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="Android基础" scheme="http://yoursite.com/tags/Android%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>JAVA学习笔记</title>
    <link href="http://yoursite.com/2018/09/12/JAVA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/09/12/JAVA学习笔记/</id>
    <published>2018-09-12T14:48:34.000Z</published>
    <updated>2018-11-04T09:56:06.468Z</updated>
    
    <content type="html"><![CDATA[<p>毕业后就没怎么碰Java了，为了后面Android的学习，将Java的基础知识整理一下。<br><a id="more"></a></p><h1 id="0-开发环境的搭建"><a href="#0-开发环境的搭建" class="headerlink" title="0. 开发环境的搭建"></a>0. 开发环境的搭建</h1><p>在后面Java学习的过程中，要敲写示例代码在Linux上测试，因此需要先用虚拟机安装一个Linux发行版和Java。<br>准备使用的Linux发行版为<code>Ubuntu18.04.1</code>，考虑到后期Android学习也会在该虚拟机上，因此在安装过程就得先设置好硬盘大小和交换分区，感觉还是有必要记录一下。</p><h2 id="0-1-为Ubuntu设置两个分区"><a href="#0-1-为Ubuntu设置两个分区" class="headerlink" title="0.1 为Ubuntu设置两个分区"></a>0.1 为Ubuntu设置两个分区</h2><p>首先是安装虚拟机<code>VMware Workstation Pro</code>和下载<a href="https://www.ubuntu.com/download/desktop" target="_blank" rel="external"><code>Ubuntu 18.04.1 LTS</code></a>就不废话了。<br>然后新建虚拟机，选择“自定义(高级)”，再默认“下一步”，然后选择下载好的Ubuntu镜像文件<code>ubuntu-18.04.1-desktop-amd64.iso</code>，设置名字、密码等，再设置虚拟机文件放置位置(选择一个剩余空间大于100G的盘)，选择核心数，设置内存，设置为“使用桥接网络”，默认IO控制器类型，默认磁盘类型，再选择“创建新虚拟磁盘”，磁盘大小为20G(作为root分区，存放Ubuntu自身系统等)，磁盘文件名也改为“root.vmdk”，然后取消“创建后开启虚拟机”再点击“完成”，此时再选择“编辑虚拟机设置”，选中“CD/DVD (SATA) 正在使用文件autoinst.iso”，将其移除，再点击“添加”，选择“硬盘”，再一直点默认“下一步”，直到设置磁盘大小界面，设置为100G(作为work分区，存放后面的Android源码等)，名字也改为“work.vmdk”，完成后，即可“开启此虚拟机”。</p><ul><li>这里解释下为什么这样繁琐的设置两个分区。<br>假如只有一个分区，在以后的使用中，假如Ubuntu不小心被损坏，不能进入系统，那么系统里保存的数据就无法获取，资料也就没了。<br>假如分成了两个分区，一个作为系统分区，一个作为工作数据分区，即使Ubuntu系统崩溃，只需重新安装一个Ubuntu，挂接原来的工作数据分区即可，所有的文件仍然会保留。此外，扩展分区大小，也相对比较方便。</li></ul><h2 id="0-2-为Ubuntu设置交换分区"><a href="#0-2-为Ubuntu设置交换分区" class="headerlink" title="0.2 为Ubuntu设置交换分区"></a>0.2 为Ubuntu设置交换分区</h2><p>首次启动虚拟机后，进入系统配置界面，选择默认语言“English”，点击“Install Ubuntu”，选择默认键盘布局，选择最小安装“Minimal installation”，去掉“Download update while installing Ubuntu”，不然要安装很久，然后点击“Continue”，选择“Someting else”，选中“/dev/sda”(20G的root分区)，右键点击“New Partition Table……”，在弹出的窗口选择“Continue”，再选中新出现的“free space”，右键点击“Add……”，在“Use as:”选项卡里选择“swap area”，大小改为10240(Android编译要求16G的内存+交换分区，内存不够交换分区凑)，完成后再点击该“free space”，把剩下的大小作为“Ext4 journaling file system”，“Mount point:”设置为根目录“/”，然后以类似的方式设置“/dev/sdb”，全部空间作为“Ext4 journaling file system”，“Mount point:”设置为手动编辑的“/work”，分区完成效果如下：</p><div align="center"><img width="500" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180912/1.png"></div><p>最后点击“Install Now”，选择时区为“Shanghai”，设置主机名字、密码等，再根据提示重启。</p><h2 id="0-3-为Ubuntu安装基本软件"><a href="#0-3-为Ubuntu安装基本软件" class="headerlink" title="0.3 为Ubuntu安装基本软件"></a>0.3 为Ubuntu安装基本软件</h2><p>前面的博客<a href="http://localhost:4000/2017/08/05/Linux%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E5%8F%8Ashell-script/#more" target="_blank" rel="external">Linux开发环境配置及shell script</a>对嵌入式开发所需使用到的软件有过一次分析，另外博客<a href="http://localhost:4000/2017/03/23/%E6%90%AD%E5%BB%BA%E5%B5%8C%E5%85%A5%E5%BC%8FLinux%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/#2-3%E5%AE%89%E8%A3%85%E3%80%81-%E9%85%8D%E7%BD%AE%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1" target="_blank" rel="external">搭建嵌入式Linux开发环境</a>有如何安装和配置，参考博客，完成对ftp、ssh、nfs、smaba、vim的安装和配置，这些就不废话了，目前只是学习Java，至于其它的软件，后面需要再安装。</p><p>接下来就是安装本次的最主要的Java：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-get install openjdk-8-jdk</div></pre></td></tr></table></figure></p><blockquote><p>这里只安装了JDK，因为JDK包含了JRE:</p><ul><li>JDK (Java Development Kit)：JAVA开发环境，包含JRE；</li><li>JRE (Java Runtime Environment)：JAVA运行环境，包含虚拟机但不包含编译器；</li></ul></blockquote><p>以上就完成了Java学习环境的准备。</p><h1 id="1-Java基础"><a href="#1-Java基础" class="headerlink" title="1. Java基础"></a>1. Java基础</h1><h2 id="1-1-第一个Java程序"><a href="#1-1-第一个Java程序" class="headerlink" title="1.1 第一个Java程序"></a>1.1 第一个Java程序</h2><figure class="highlight java"><figcaption><span>[Hello.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"Hello world!"</span>);</div><div class="line">&#125; </div><div class="line">&#125;</div></pre></td></tr></table></figure><p>编译、执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">javac Hello.java  //编译</div><div class="line">java Hello        //执行</div></pre></td></tr></table></figure></p><blockquote><p>这里Java文件名首字母大写是因为:<br>在Java编程规范里，类的首字母要大写，而类的名字要和文件名一致；</p></blockquote><h2 id="1-2-数据类型"><a href="#1-2-数据类型" class="headerlink" title="1.2 数据类型"></a>1.2 数据类型</h2><p>Java的数据类型分为<strong>8个基本数据类型</strong>和<strong>3个引用数据类型</strong>。</p><h3 id="1-2-1-基本数据类型"><a href="#1-2-1-基本数据类型" class="headerlink" title="1.2.1 基本数据类型"></a>1.2.1 基本数据类型</h3><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">数据类型</th><th style="text-align:center">关键字</th><th style="text-align:center">占用比特数/字节数</th><th style="text-align:center">取值范围</th><th style="text-align:center">缺省数值</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">布尔型</td><td style="text-align:center">boolean</td><td style="text-align:center">8/1</td><td style="text-align:center">true,false</td><td style="text-align:center">false</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">字节型</td><td style="text-align:center">byte</td><td style="text-align:center">8/1</td><td style="text-align:center">-128~127</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">字符型</td><td style="text-align:center">char</td><td style="text-align:center">16/2</td><td style="text-align:center">0~65535</td><td style="text-align:center">‘\u0’</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">短整数</td><td style="text-align:center">short</td><td style="text-align:center">16/2</td><td style="text-align:center">-32768~32767</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">整型</td><td style="text-align:center">int</td><td style="text-align:center">32/4</td><td style="text-align:center">-2147483648~2147483647</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center">长整型</td><td style="text-align:center">long</td><td style="text-align:center">64/8</td><td style="text-align:center">-9.22E-45~9.22E+18</td><td style="text-align:center">0</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center">单精度浮点型</td><td style="text-align:center">float</td><td style="text-align:center">32/4</td><td style="text-align:center">1.4013E-45~3.4028E+38</td><td style="text-align:center">0.0F</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center">双精度浮点型</td><td style="text-align:center">double</td><td style="text-align:center">64/8</td><td style="text-align:center">2.22551E-208~1.7977E+308</td><td style="text-align:center">0.0D</td></tr></tbody></table><p>Java中所有的基本数据类型都有固定的存储范围和所占内存空间的大小，而不受具体操作系统的影响，来保证Java程序的可移植性。<br><strong>整形数据默认为int数据类型，浮点型默认为double数据类型</strong>，如果要表示long型数据或float型数据，要在相应的数值后面加上l、L或f、F，否则会出现编译问题。</p><h3 id="1-2-2-引用数据类型"><a href="#1-2-2-引用数据类型" class="headerlink" title="1.2.2 引用数据类型"></a>1.2.2 引用数据类型</h3><p>Java的引用数据类型包括：数组(array)、类(class)、接口(interface)，其缺省值都为null。<br><strong>基本数据类型的变量名指向具体的数值，而引用数据类型的变量名指向存数据对象的内存地址</strong>，有点类型C语言的指针。<br>当引用指向null时，Java会自动释放对应的空间。</p><h3 id="1-2-3-数据转换"><a href="#1-2-3-数据转换" class="headerlink" title="1.2.3 数据转换"></a>1.2.3 数据转换</h3><p>Java在不丢失数据的前提下，可以实现自动转换，比如int型转换为long型，即<strong>由小范围变大范围可以，大范围变小范围不行</strong>。</p><ul><li>示例：<figure class="highlight java"><figcaption><span>[Var.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Var</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">    <span class="comment">//基本数据类型:变量名指向具体的数值(数据在栈)</span></div><div class="line">        <span class="keyword">boolean</span> a = <span class="keyword">true</span>;  <span class="comment">//布尔型</span></div><div class="line">        <span class="keyword">byte</span>    b = <span class="number">1</span>;     <span class="comment">//字节型</span></div><div class="line">        <span class="keyword">char</span>    c = <span class="string">'h'</span>;   <span class="comment">//字符型</span></div><div class="line">        <span class="keyword">short</span>   d = <span class="number">2</span>;     <span class="comment">//短整数</span></div><div class="line">        <span class="keyword">int</span>     e = <span class="number">3</span>;     <span class="comment">//整型</span></div><div class="line">        <span class="keyword">long</span>    f = <span class="number">4L</span>;    <span class="comment">//长整型</span></div><div class="line">        <span class="keyword">float</span>   g = <span class="number">3.14F</span>; <span class="comment">//单精度浮点型</span></div><div class="line">        <span class="keyword">double</span>  h = <span class="number">3.14</span>D; <span class="comment">//双精度浮点型</span></div><div class="line">        </div><div class="line">    <span class="comment">//引用数据类型:变量名指向存数据对象的内存地址(引用在栈,数据在堆)</span></div><div class="line">        <span class="keyword">int</span> p1[] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>]; <span class="comment">//分配整数数组,类似C语言int p1[10];或int* p1 = malloc(10*sizeof(int));</span></div><div class="line">        <span class="keyword">int</span> p2[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;   <span class="comment">//分配并定义,类似C语言int p2[10] = &#123;1, 2, 3&#125;;</span></div><div class="line">                </div><div class="line">        String str = <span class="string">"hceng"</span>;  <span class="comment">//类引用,分配并定义,类似C语言char str[] = "hceng";</span></div><div class="line">        </div><div class="line">        p1  = <span class="keyword">null</span>; <span class="comment">//自动释放</span></div><div class="line">        p2  = <span class="keyword">null</span>;</div><div class="line">        str = <span class="keyword">null</span>;</div><div class="line">        </div><div class="line">    <span class="comment">//数据转换</span></div><div class="line">        <span class="keyword">int</span>  a1 = <span class="number">30</span>;</div><div class="line">        <span class="keyword">long</span> b1 = a1;       <span class="comment">//自动转换,因为long的表示范围比int大</span></div><div class="line">        <span class="keyword">float</span> c1 = <span class="number">3.1f</span>;</div><div class="line">        <span class="keyword">int</span>   d1 = (<span class="keyword">int</span>)c1; <span class="comment">//必须使用强制转换,因为数据会丢失</span></div><div class="line">        </div><div class="line">        <span class="keyword">short</span> s = <span class="number">1</span>;</div><div class="line">        <span class="comment">//s = s + 1;  //出错,因为s+1自动将s变成了int型与1相加,再赋值给short型的s,大范围变小范围不行</span></div><div class="line">        <span class="comment">//s = s + s;  //出错,因为s+s也会自动变成int型赋值给short型的s,大范围变小范围不行</span></div><div class="line">        s = (<span class="keyword">short</span>)(s + <span class="number">1</span>);</div><div class="line">        s = (<span class="keyword">short</span>)(s + s);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h2 id="1-3-运算符、表达式、语句"><a href="#1-3-运算符、表达式、语句" class="headerlink" title="1.3 运算符、表达式、语句"></a>1.3 运算符、表达式、语句</h2><p>Java的分支<code>if, if...else, if...else if...else, switch</code>和循环<code>while, do...while, for; break, continue</code>都和C语言是一样的。</p><h2 id="1-4-方法"><a href="#1-4-方法" class="headerlink" title="1.4 方法"></a>1.4 方法</h2><p>在C语言里函数的的叫法，在Java中没有了，类似的东西叫方法，所谓的方法就是用来解决一类问题的代码的有序组合，是一个功能模块。</p><h3 id="1-4-1-方法的格式"><a href="#1-4-1-方法的格式" class="headerlink" title="1.4.1 方法的格式"></a>1.4.1 方法的格式</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">public static 返回值类型 方法名称 (类型 参数1, 类型 参数2, ...) ｛</div><div class="line">程序语句;</div><div class="line">   [return 表达式];</div><div class="line">｝</div></pre></td></tr></table></figure><ul><li>示例：<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</div><div class="line">     <span class="keyword">int</span> sum;</div><div class="line">     sum = x + y;</div><div class="line">     <span class="keyword">return</span> sum;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><h3 id="1-4-2-方法的重载"><a href="#1-4-2-方法的重载" class="headerlink" title="1.4.2 方法的重载"></a>1.4.2 方法的重载</h3><p><strong>即方法名相同，参数类型或个数不同，返回值也可相同也可以不同，就会调用到不同的方法。</strong></p><ul><li><p>示例：</p><figure class="highlight java"><figcaption><span>[Method.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Method</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        System.out.println(add(<span class="number">1</span>, <span class="number">2</span>));</div><div class="line">        System.out.println(add(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>));</div><div class="line">        System.out.println(add(<span class="number">1.0f</span>, <span class="number">2.0f</span>));</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> x + y;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">add</span> <span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> x + y + z;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">float</span> <span class="title">add</span> <span class="params">(<span class="keyword">float</span> x, <span class="keyword">float</span> y)</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> x + y;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">3</div><div class="line">6</div><div class="line">3.0</div></pre></td></tr></table></figure></li></ul><p>三个方法名字都一样，第一个和第二个参数个数不同，第一个和第三个参数类型不同，在调用方法时，传入的参数和哪一个匹配，就会调用到哪一个方法。</p><h3 id="1-4-3-方法的参数"><a href="#1-4-3-方法的参数" class="headerlink" title="1.4.3 方法的参数"></a>1.4.3 方法的参数</h3><ul><li><p>示例：</p><figure class="highlight java"><figcaption><span>[Param.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Param</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> x = <span class="number">1</span>;</div><div class="line">        System.out.println(<span class="string">"Before x="</span> + x);</div><div class="line">        fun(x);</div><div class="line">        System.out.println(<span class="string">"After  x="</span> + x);</div><div class="line">        </div><div class="line">        <span class="keyword">int</span> p[] = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">1</span>];</div><div class="line">        p[<span class="number">0</span>] = <span class="number">2</span>;</div><div class="line">        System.out.println(<span class="string">"Before p="</span> + p[<span class="number">0</span>]);</div><div class="line">        fun(p);</div><div class="line">        System.out.println(<span class="string">"After  p="</span> + p[<span class="number">0</span>]);</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</div><div class="line">        x = <span class="number">100</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">(<span class="keyword">int</span>[] p)</span> </span>&#123;</div><div class="line">        p[<span class="number">0</span>] = <span class="number">200</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Before x=1</div><div class="line">After  x=1</div><div class="line">Before p=2</div><div class="line">After  p=200</div></pre></td></tr></table></figure></li></ul><p>与C语言类型，如果传入的为形参，在方法里修改变量值，外部的方法的参数不会被改变，可以通过引用数组(类型C语言的指针)的方式，实现对传入参数的修改。<br><strong>基本数据作为参数，方法内部对参数的修改不影响调用者；</strong><br><strong>引用数据作为参数，方法内部修改了堆，结果会保留下来；</strong></p><h1 id="2-Java面向对象编程"><a href="#2-Java面向对象编程" class="headerlink" title="2. Java面向对象编程"></a>2. Java面向对象编程</h1><p>在Java中，<strong>方法</strong>类似C语言中函数，<strong>类</strong>类似C语言中结构体。<br>Java面向对象编程有三大特性：<strong>封装性、继承性、多态性</strong>。</p><h2 id="2-1-类的引入"><a href="#2-1-类的引入" class="headerlink" title="2.1 类的引入"></a>2.1 类的引入</h2><p><strong>在Java面向对象的思维里，把拥有共同特征的事物抽象出来叫做类，把符合这个类特征的个体叫做对象。</strong>比如“人”就是类，具体的某个人“张三”就是对象，类的共同特征包含“人的名字”、“人的年龄”等。</p><p>如下面例子，定义了一个类<code>Person</code>，在<code>main</code>里，通过<code>new</code>创建具体的对象，再通过对象调用成员方法，或者直接访问类方法或类变量。</p><ul><li><p>示例：</p><figure class="highlight java"><figcaption><span>[Oop.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//类的定义(类是创建对象的模板,创建对象也叫类的实例化)</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</div><div class="line">    <span class="comment">//类变量(调用不需要实例化对象)</span></div><div class="line">    <span class="keyword">static</span> <span class="keyword">int</span> count; </div><div class="line">    </div><div class="line">    <span class="comment">//类方法(调用不需要实例化对象)</span></div><div class="line">    <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printPerson</span> <span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"This is a class of Person"</span>);</div><div class="line">    &#125; </div><div class="line">    </div><div class="line">    <span class="comment">//静态代码块(只会被调用一次,且先于构造代码块、构造方法执行)</span></div><div class="line">    <span class="keyword">static</span> &#123;</div><div class="line">        System.out.println(<span class="string">"Execute only once"</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//构造代码块(每次创建对象时都会被调用,且先于构造方法执行) </span></div><div class="line">    &#123;</div><div class="line">        System.out.println(<span class="string">"Every call is executed"</span>);</div><div class="line">        count ++;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//类的成员</span></div><div class="line">    String name; <span class="comment">//成员变量</span></div><div class="line">    <span class="keyword">int</span> age;     <span class="comment">//成员变量</span></div><div class="line">    <span class="comment">//成员方法</span></div><div class="line">    <span class="function">String <span class="title">getName</span><span class="params">()</span> </span>&#123; </div><div class="line">        <span class="keyword">return</span> name;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    </div><div class="line">    <span class="comment">//构造方法(没有返回值，方法名必须和类名一样)</span></div><div class="line">    <span class="comment">//实现new时传入参数,重载实现传入的参数多样化</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span> <span class="params">()</span> </span>&#123;</div><div class="line">        name = <span class="string">"null"</span>;</div><div class="line">        age  = <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span> <span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name; <span class="comment">//name是局部变量</span></div><div class="line">        age  = <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span> <span class="params">(String name, <span class="keyword">int</span> age)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">        <span class="keyword">this</span>.age  = age;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//一个源文件中只能有一个public类,且与文件名相同</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Oop</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        Person p0 = <span class="keyword">new</span> Person();         <span class="comment">//创建对象,即类的实例化</span></div><div class="line">        Person p1 = <span class="keyword">new</span> Person(<span class="string">"hceng"</span>);</div><div class="line">        Person p2 = <span class="keyword">new</span> Person(<span class="string">"hceng, 23"</span>);</div><div class="line">        </div><div class="line">        System.out.println(p0.getName()); <span class="comment">//调用成员方法</span></div><div class="line">        System.out.println(p1.getName());</div><div class="line">        System.out.println(p2.getName());</div><div class="line">        </div><div class="line">        Person.printPerson();             <span class="comment">//访问类方法</span></div><div class="line">        System.out.println(<span class="string">"Person number is "</span> + Person.count); <span class="comment">//访问类变量</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Execute only once</div><div class="line">Every call is executed</div><div class="line">Every call is executed</div><div class="line">Every call is executed</div><div class="line">null</div><div class="line">hceng</div><div class="line">hceng, 23</div><div class="line">This is a class of Person</div><div class="line">Person number is 3</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析，涉及了好几个知识点。</p><blockquote><ol><li><code>Person</code>通过<code>class</code>关键词定义为类；<br>　<br>2.1 通过<code>static</code>修饰的变量叫<strong>类变量</strong>，可以不通过<code>new</code>创建对象进行访问；<br>2.2 通过<code>static</code>修饰的方法叫<strong>类方法</strong>，可以不通过<code>new</code>创建对象进行访问；<br>　<br>3.1 通过<code>static { }</code>修饰的代码块叫<strong>静态代码块</strong>，在类被创建的时候调用，且<strong>只会被调用一次</strong>，先于构造代码块、构造方法执行；<br>3.2 通过<code>{ }</code>修饰的代码块叫<strong>构造代码块</strong>，在<strong>每次类被创建的时候</strong>调用，先于构造方法执行；<br>　<br>4.1 接下来是<strong>类的成员</strong>，包含<strong>成员变量</strong>和<strong>成员方法</strong>；<br>4.2 <strong>成员方法:</strong>实现对类中成员变量的操作，提供某些功能，成员方法通过对象调用；<br>　<br>5.1 接下来是<strong>构造方法</strong>，没有返回值，方法名必须和类名一样，如果没实现构造方法，编译器自动加上一个无参数的空构造方法；<br>5.2 <strong>构造方法:</strong>用于创建类的实例并对实例的成员变量进行初始化，构造方法通过new运算符调用；<br>5.3 这里利用重载实现了传入参数的多样化，<code>this</code>关键字表示当前类；<br>　<br>6.1 接下来是<code>public</code>修饰的类，也是唯一的一个，和文件名相同，里面有<code>main</code>成员方法；<br>6.2 在<code>main</code>里，首先创建了三个对象，每个对象传入的参数不同，调用的构造方法也会不同；<br>6.3 然后调用对象的成员方法；<br>6.4 最后直接对类变量、类方法进行访问；</li></ol></blockquote><h2 id="2-2-封装性"><a href="#2-2-封装性" class="headerlink" title="2.2 封装性"></a>2.2 封装性</h2><p>在Java中，将属性(变量)和方法封装成一个整体(也就是类)，就是封装性的体现。</p><p>对于这个整体，里面有些属性外部可以直接访问，有些可能期望按要求访问，对于特殊的属性，可以先设置为私有的权限，再通过属性的方法进行访问，就属性的方法里就是我们期望访问的方式。</p><p>就比如下例中的年龄，我们期望年龄为非负的值，假如外部直接修改年龄就有被设置为负的风险。现在将年龄私有化，使外部无法访问，只能通过公共的类的方法进行访问，这个方法里就对传入的参数进行判断纠正，从而满足年龄非负的要求。</p><ul><li><p>示例：</p><figure class="highlight java"><figcaption><span>[Enc.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</div><div class="line">    <span class="comment">/* 成员变量(属性) */</span></div><div class="line">    <span class="comment">//int age;       //default</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age; <span class="comment">//私有,只能供类内部访问</span></div><div class="line">    </div><div class="line">    <span class="comment">/* 成员方法 */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (age &lt; <span class="number">0</span> || age &gt; <span class="number">200</span>)</div><div class="line">            age = <span class="number">0</span>;</div><div class="line">        <span class="keyword">else</span> </div><div class="line">            <span class="keyword">this</span>.age = age;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> age;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Enc</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        Person per = <span class="keyword">new</span> Person();</div><div class="line">        <span class="comment">//per.age = -1; //外部直接访问,不好控制</span></div><div class="line">        per.setAge(-<span class="number">1</span>);</div><div class="line">        </div><div class="line">        System.out.println(per.getAge());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">0</div></pre></td></tr></table></figure></li></ul><blockquote><p>Java中四种权限：<br><strong>private:</strong> 被其修饰的属性以及方法只能被该类的对象访问，其子类不能访问，更不能允许跨包访问；<br><strong>default:</strong>默认访问权限，只允许在同一个包中进行访问；<br><strong>protected:</strong>被其修饰的属性以及方法只能被类本身的方法及子类访问，即使子类在不同的包中也可以访问；<br><strong>public:</strong> 被其修饰的类、属性以及方法不仅可以跨类访问，而且允许跨包访问；</p></blockquote><table><thead><tr><th style="text-align:center">权限</th><th style="text-align:center">类内</th><th style="text-align:center">同包</th><th style="text-align:center">不同包子类</th><th style="text-align:center">不同包非子类</th></tr></thead><tbody><tr><td style="text-align:center">private</td><td style="text-align:center">√</td><td style="text-align:center">×</td><td style="text-align:center">×</td><td style="text-align:center">×</td></tr><tr><td style="text-align:center">default</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">×</td><td style="text-align:center">×</td></tr><tr><td style="text-align:center">protected</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">×</td></tr><tr><td style="text-align:center">public</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td></tr></tbody></table><h2 id="2-3-继承性"><a href="#2-3-继承性" class="headerlink" title="2.3 继承性"></a>2.3 继承性</h2><h3 id="2-3-1-引入"><a href="#2-3-1-引入" class="headerlink" title="2.3.1 引入"></a>2.3.1 引入</h3><p>为了实现代码的复用，Java中引入了继承性。<br>如下例子，子类<code>Student</code>继承了父类<code>Person</code>，就可以访问父类的属性(非私有)和方法(非私有)。</p><ul><li><p>示例：</p><figure class="highlight java"><figcaption><span>[Ext.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</div><div class="line">    <span class="comment">//变量/属性</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age; </div><div class="line">    </div><div class="line">    <span class="comment">//方法</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (age &lt; <span class="number">0</span> || age &gt; <span class="number">200</span>)</div><div class="line">            age = <span class="number">0</span>;</div><div class="line">        <span class="keyword">else</span> </div><div class="line">            <span class="keyword">this</span>.age = age;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> age;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printfInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"age = "</span> + age);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">final</span> <span class="keyword">public</span> <span class="keyword">void</span> <span class="title">testFinal</span><span class="params">()</span> </span>&#123;</div><div class="line">        </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//构造方法</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123; <span class="comment">//系统默认的构造函数,如果没有,编译器会自动生成</span></div><div class="line">        System.out.println(<span class="string">"for test Person() call"</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.age = age;</div><div class="line">        System.out.println(<span class="string">"for test Person(int age) call"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//Student从父类(Person)继承</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String school; </div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSchool</span><span class="params">(String school)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.school = school; </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSchool</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.school;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//覆写(方法名在父类中有同名方法)</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printfInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"school = "</span> + school);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//父类方法用了final修饰,子类无法覆写</span></div><div class="line">    <span class="comment">//public void testFinal() &#123;</span></div><div class="line">    <span class="comment">//  </span></div><div class="line">    <span class="comment">//&#125;</span></div><div class="line">    </div><div class="line">    <span class="comment">//构造方法</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123; <span class="comment">//系统默认的构造函数,如果没有,编译器会自动生成</span></div><div class="line">        <span class="comment">//super(); //调用父类的构造函数(无参数),默认调用,可不写</span></div><div class="line">        <span class="keyword">super</span>(<span class="number">15</span>); <span class="comment">//调用父类的构造函数(有参数)</span></div><div class="line">        <span class="keyword">super</span>.printfInfo(); <span class="comment">//super就指代的父类</span></div><div class="line">        System.out.println(<span class="string">"for test Student() call"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Ext</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        Student per = <span class="keyword">new</span> Student();</div><div class="line">        </div><div class="line">        per.setAge(<span class="number">10</span>); <span class="comment">//方法来源于父类</span></div><div class="line">        System.out.println(per.getAge());</div><div class="line">        </div><div class="line">        per.setSchool(<span class="string">"ShenZhen"</span>); <span class="comment">//方法来源于自己扩展</span></div><div class="line">        System.out.println(per.getSchool());</div><div class="line">        </div><div class="line">        per.printfInfo(); <span class="comment">//覆写的父类方法</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">for test Person(int age) call</div><div class="line">age = 15</div><div class="line">for test Student() call</div><div class="line">10</div><div class="line">ShenZhen</div><div class="line">school = ShenZhen</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 定义了一个类<code>Person</code>，包含一个变量(私有)、四个方法、两个构造方法；<br>1.2 第四个构造方法使用了<code>final</code>修饰，后面子类将不能对其覆写；<br>1.3 两个构造方法，一个不带参数，一个带参数；<br>　<br>2.1 子类<code>Student</code>从父类<code>Person</code>通过关键词<code>extends</code>继承，包含一个新变量(私有)、三个方法、一个构造方法；；<br>2.2 方法<code>printfInfo</code>和父类的方法<code>printfInfo</code>名字一样，父类被覆写，调用<code>printfInfo</code>会调用子类的<code>printfInfo</code>；<br>2.3 方法<code>testFinal</code>被注释，因为父类使用<code>final</code>修饰了同名的方法，子类不能再覆写；<br>2.4 子类的构造方法被调用时，会先默认调用父类的构造方法，即用<code>super</code>表示，如果<code>super</code>带参数，表示调用父类带参数的构造方法，同时还可以通过<code>super</code>访问父类的属性(非私有)和方法(非私有)；<br>　<br>3.1 在<code>main</code>里，首先<code>new</code>实例化了一个<code>Student</code>类；<br>3.2 调用<code>Student</code>类的<code>setAge</code>方法，这个方法是从父类继承过来的；<br>3.3 调用<code>Student</code>类的<code>setSchool</code>方法，这个方法是子类自己扩展的；<br>3.4 调用<code>Student</code>类的<code>printfInfo</code>方法，这个方法父类和子类都有，子类覆写父类的方法；</p></blockquote><h3 id="2-3-2-继承的限制"><a href="#2-3-2-继承的限制" class="headerlink" title="2.3.2 继承的限制"></a>2.3.2 继承的限制</h3><p>前面引入了继承，子类从父类继承过来，也就拥有了父类的一些特性，但继承也是有限制的：</p><ul><li>父类的私有属性不能被子类访问；</li><li>父类的私有方法不能被子类访问；</li><li><p>子类覆写的方法不能缩小权限，即父类<code>public</code>，子类不能<code>private</code>；</p></li><li><p>示例：</p><figure class="highlight java"><figcaption><span>[Limit.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> money;</div><div class="line">        </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMoney</span><span class="params">(<span class="keyword">int</span> money)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.money = money;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printfInfo1</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"This is Father printfInfo1()"</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">printfInfo2</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"This is Father printfInfo2()"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span> </span>&#123;</div><div class="line">    <span class="comment">//private void printfInfo1() &#123;</span></div><div class="line">        <span class="comment">//System.out.println("This is Son printfInfo1()");</span></div><div class="line">    <span class="comment">//&#125;</span></div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printfInfo2</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"This is Son printfInfo2()"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Limit</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        Son son = <span class="keyword">new</span> Son();</div><div class="line">        </div><div class="line">        <span class="comment">//son.money = 100;</span></div><div class="line">        son.setMoney(<span class="number">100</span>);</div><div class="line">        </div><div class="line">        son.printfInfo1();</div><div class="line">        son.printfInfo2();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">This is Father printfInfo1()</div><div class="line">This is Son printfInfo2()</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1 定义了一个类<code>Father</code>，包含一个变量(私有)、三个方法(其中一个私有)；<br>　<br>2.1 子类<code>Son</code>从父类<code>Father</code>继承，只有一个方法；<br>2.2 方法<code>printfInfo1</code>被<code>private</code>修饰，表示私有，而父类同名方法是公共的，不能覆写，无法编译通过；<br>2.3 方法<code>printfInfo2</code>被<code>public</code>修饰，表示公共，父类也有个同名方法，但却是私有的，因此这里不是覆写，而是定义的新方法；<br>　<br>3.1 <code>main</code>里面实例化了一个类<code>Son</code>；<br>3.2 <code>Son</code>从父类<code>Father</code>继承过来，父类的私有变量不能直接访问，只能通过父类提供的公共方法来访问；<br>3.3 父类的<code>printfInfo1</code>是公共的，子类的<code>printfInfo1</code>也只能是公共的；<br>3.4 父类的<code>printfInfo2</code>是私有的，子类无法访问，子类的<code>printfInfo2</code>是新定义的；</p></blockquote><h3 id="2-3-3-抽象类"><a href="#2-3-3-抽象类" class="headerlink" title="2.3.3 抽象类"></a>2.3.3 抽象类</h3><p><strong>抽象类作用:</strong>规定子类必须实现的方法，起“模板”作用；</p><ul><li><p>示例：</p><figure class="highlight java"><figcaption><span>[Abstract.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//抽象类</span></div><div class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">study</span><span class="params">()</span></span>; <span class="comment">//规定了子类必须实现的方法</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//子类</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">study</span><span class="params">()</span> </span>&#123; <span class="comment">//实现抽象类定义的方法</span></div><div class="line">        System.out.println(<span class="string">"Son study"</span>); </div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Abstract</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        <span class="comment">//Father father = new Father(); //抽象类不能实例化对象</span></div><div class="line">        Son son = <span class="keyword">new</span> Son();</div><div class="line">        </div><div class="line">        son.study();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Son study</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1 通过<code>abstract</code>关键字定义了一个抽象类<code>Father</code>，里面有一个<code>abstract</code>修饰的方法，但没有具体的实现内容；<br>　<br>2 子类<code>Son</code>从父类<code>Father</code>继承，实现了父类的方法；<br>　<br>3 <code>main</code>里不能对抽象类进行实例化，只能对抽象类的子类进行实例化，访问其方法</p></blockquote><h3 id="2-3-4-接口"><a href="#2-3-4-接口" class="headerlink" title="2.3.4 接口"></a>2.3.4 接口</h3><p><strong>接口作用:</strong>跟抽象类相似，起“模板”作用；子类可以继承多个接口，突破“单继承”的限制；</p><ul><li><p>示例：</p><figure class="highlight java"><figcaption><span>[Interface.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//接口</span></div><div class="line"><span class="class"><span class="keyword">interface</span> <span class="title">A</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> i = <span class="number">10</span>; <span class="comment">//接口只能定义常量</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">printNum</span><span class="params">()</span></span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">interface</span> <span class="title">B</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String name = <span class="string">"hceng"</span>; </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">printString</span><span class="params">()</span></span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//子类</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">implements</span> <span class="title">A</span>,<span class="title">B</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printNum</span><span class="params">()</span> </span>&#123; <span class="comment">//实现接口定义的方法</span></div><div class="line">        System.out.println(<span class="string">"Num = "</span> + i); </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printString</span><span class="params">()</span> </span>&#123; </div><div class="line">        System.out.println(<span class="string">"String = "</span> + name); </div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Interface</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">       </div><div class="line">        Son son = <span class="keyword">new</span> Son();</div><div class="line">        </div><div class="line">        son.printNum();</div><div class="line">        son.printString();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Num = 10</div><div class="line">String = hceng</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 通过<code>interface</code>关键字定义两个接口<code>A</code>和<code>B</code>，里面定义了常量和抽象方法；<br>1.2 接口里面只能定义常量，抽象类可以定义常量和变量；<br>　<br>2.1 子类<code>Son</code>同时从接口<code>A</code>和<code>B</code>继承，突破了抽象类突破“单继承”的限制；<br>2.2 子类<code>Son</code>依旧得实现接口里面所有的抽象方法；<br>　<br>3 <code>main</code>实例化<code>Son</code>，访问实现的方法；</p></blockquote><h2 id="2-4-多态性"><a href="#2-4-多态性" class="headerlink" title="2.4 多态性"></a>2.4 多态性</h2><p><strong>多态性体现在方法和对象上。</strong></p><p>在前面的例子中，方法的多态性已经接触过了，体现在<strong>方法的重载与覆写</strong>。</p><ul><li><strong>方法的重载(overload):</strong>定义多个同名方法，其参数类型、个数不同；</li><li><strong>方法的覆写(override):</strong>子类里实现跟父类同样的方法，覆盖掉父类；</li></ul><hr><p>对象的多态性就是<strong>父对象和子对象之前的转换</strong>，转换分为向上转换和向下转换。</p><ul><li><strong>向上转型</strong>:子对象向父对象转型的过程，例如猫类转换为动物类(小范围转大范围自动)，子对象独有的成员将不可访问(只能识别父对象中的内容)；</li><li><strong>向下转型</strong>:父对象强制转换为子对象的过程，例如动物类强制转换为猫类(大范围转小范围强制)，；</li></ul><p>另外，可以通过<code>引用变量 instanceof 类名</code>的方式来判断引用变量所指向的对象是否属于某个类；</p><ul><li><p>示例：</p><figure class="highlight java"><figcaption><span>[Limit.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Father</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printfInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"This is Father"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"Father is working……"</span>);</div><div class="line">    &#125; </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Son</span> <span class="keyword">extends</span> <span class="title">Father</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printfInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"This is Son"</span>);</div><div class="line">    &#125; </div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">palyGame</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"Son is playing games……"</span>);</div><div class="line">    &#125; </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Daughter</span> <span class="keyword">extends</span> <span class="title">Father</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printfInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"This is Daughter"</span>);</div><div class="line">    &#125; </div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dance</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"Daughter is dancing……"</span>);</div><div class="line">    &#125; </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Cnv</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        Father father1 = <span class="keyword">new</span> Father();</div><div class="line">        Son son = <span class="keyword">new</span> Son();</div><div class="line">        father1 = son; <span class="comment">//向上转换</span></div><div class="line">        father1.printfInfo();</div><div class="line">        <span class="comment">//father1.palyGame(); //只能调用被子类覆写的方法，不能调用只在子类中定义的方法</span></div><div class="line">        </div><div class="line">        Father father2  = <span class="keyword">new</span> Daughter(); <span class="comment">//创建子类的实例化对象(先向上转换)</span></div><div class="line">        Daughter daughter = (Daughter)father2; <span class="comment">//向下转换 (Daughter daughter = new Daughter();)</span></div><div class="line">        daughter.printfInfo();  </div><div class="line">        </div><div class="line">        System.out.println(<span class="string">"--------------------"</span>);</div><div class="line">        </div><div class="line">        Father f = <span class="keyword">new</span> Father();</div><div class="line">        Son s = <span class="keyword">new</span> Son();</div><div class="line">        Daughter d = <span class="keyword">new</span> Daughter();</div><div class="line">        <span class="comment">//向上转换 示例</span></div><div class="line">        printf(f);</div><div class="line">        printf(s);</div><div class="line">        printf(d);      </div><div class="line">        <span class="comment">//向下转换 示例       </span></div><div class="line">        printAction(f);</div><div class="line">        printAction(s);</div><div class="line">        printAction(d); </div><div class="line">    &#125; </div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printf</span><span class="params">(Father f)</span> </span>&#123;</div><div class="line">        f.printfInfo();</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printAction</span><span class="params">(Father f)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (f <span class="keyword">instanceof</span> Son) &#123;</div><div class="line">            Son s = (Son)f;</div><div class="line">            s.palyGame();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (f <span class="keyword">instanceof</span> Daughter) &#123;</div><div class="line">            Daughter d = (Daughter)f;</div><div class="line">            d.dance();</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (f <span class="keyword">instanceof</span> Father) &#123; <span class="comment">//Father要在最后,每个对象都属于Father</span></div><div class="line">            f.work();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">This is Son</div><div class="line">This is Daughter</div><div class="line">--------------------</div><div class="line">This is Father</div><div class="line">This is Son</div><div class="line">This is Daughter</div><div class="line">Father is working……</div><div class="line">Son is playing games……</div><div class="line">Daughter is dancing……</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 首先定义了三个类，其中<code>Son</code>和<code>Daughter</code>继承于<code>Father</code>；<br>1.2 每个类里面都有一个同名的<code>printfInfo</code>方法和各自的独有的方法；<br>　<br>2.1 <code>main</code>方法里，首先创建了<code>father1</code>和<code>son</code>这两个对象，然后将子类赋值给父类，进行向上转换，父类只能调用被子类覆写的方法<code>printfInfo</code>，最后结果也是调用的子类覆写的方法；<br>2.2 首先创建子类的实例化对象<code>father2</code>(即先向上转换，不然后面无法向下转换)，此时<code>father2</code>的类型是<code>Father</code>，再用<code>Daughter</code>强制向下转换，得到<code>daughter</code>，此时可以调用子类的所有方法；<br>　<br>3.1 先分别实例化了三个类对应的对象；<br>3.2 调用方法<code>printf</code>，传入不同类的对象，自动向上转换，调用各自同名的方法；<br>3.3 调用方法<code>printAction</code>，传入不同类的对象，自动向上转换，再判断是对象是否属于对应类，再进行向下强制转换，从而调用其私有的方法(因为<code>s</code>和<code>d</code>都属于<code>f</code>，所以对<code>f</code>的判断要放在最后)；</p></blockquote><h2 id="2-5-异常"><a href="#2-5-异常" class="headerlink" title="2.5 异常"></a>2.5 异常</h2><p>程序运行时，发生的不被期望的事件，它阻止了程序按照程序员的预期正常执行，这就是异常。<br>异常发生时，是任程序自生自灭，立刻退出终止，还是输出错误给用户？或者用C语言风格：用函数返回值作为执行状态？。<br>Java提供了更加优秀的解决办法：<strong>异常处理机制</strong>。<br>异常处理机制能让程序在异常发生时，按照代码的预先设定的异常处理逻辑，针对性地处理异常，让程序尽最大可能恢复正常并继续执行，且保持代码的清晰。</p><p>Java标准库内建了一些通用的异常，这些类以<code>Throwable</code>为顶层父类，<code>Throwable</code>又派生出<code>Error</code>类和<code>Exception</code>类。</p><ul><li><strong>Error(错误)</strong>：<code>Error</code>类以及他的子类的实例，代表了JVM本身的错误，不能被程序员通过代码处理，所以不用管；</li><li><strong>Exception(异常)</strong>：<code>Exception</code>以及他的子类，代表程序运行时发送的各种不期望发生的事件，可以被Java异常处理机制使用；</li></ul><div align="center"><img width="900" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180912/2.jpg"></div><blockquote><p>针对Javac对异常的处理要求，将异常类分为2类:</p><ul><li><strong>checked exception(可查异常)</strong>:<code>IOException</code>以及它子类的异常，这些异常必须处理，否则编译不会通过；</li><li><strong>unckecked exception(不可查异常)</strong>:<code>RuntimeException</code>以及它的子类，不要求必须处理，发生异常时程序退出；</li></ul></blockquote><p>针对要处理的异常，可以自己处理，也可也通过<code>throws</code>抛出异常，让别人处理：</p><div align="center"><img width="500" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180912/3.jpg"></div><ul><li><p>示例：</p><figure class="highlight java"><figcaption><span>[Div.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* 除法运算: java Div 6 2   -&gt;  6/2=3*/</span></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Div</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> m, n, r;</div><div class="line">        m=n=r=<span class="number">0</span>; <span class="comment">//初始化</span></div><div class="line"></div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            m = Integer.parseInt(args[<span class="number">0</span>]);</div><div class="line">            n = Integer.parseInt(args[<span class="number">1</span>]);</div><div class="line">            r = div(m, n);</div><div class="line">            craetException();</div><div class="line">        &#125; <span class="keyword">catch</span> (NumberFormatException exception1) &#123; <span class="comment">//自己处理:数字格式异常(java Div 6 a)</span></div><div class="line">            System.out.println(<span class="string">"====An exception occurs1:"</span>+exception1+<span class="string">"====="</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (ArithmeticException exception2) &#123; <span class="comment">//处理扔过来的异常:除零错误异常(java Div 6 0)</span></div><div class="line">            System.out.println(<span class="string">"====An exception occurs2:"</span>+exception2+<span class="string">"====="</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (RuntimeException runtimeexception) &#123; <span class="comment">//处理所有不可查异常,比如位数不够(java Div 6)</span></div><div class="line">            System.out.println(<span class="string">"====An exception occurs:"</span>+runtimeexception+<span class="string">"====="</span>);</div><div class="line">        &#125; <span class="keyword">catch</span> (Exception exception) &#123; <span class="comment">//处理自己通过throw创建的可查异常</span></div><div class="line">            System.out.println(<span class="string">"====An exception occurs:"</span>+exception+<span class="string">"====="</span>);</div><div class="line">        &#125; </div><div class="line">        <span class="keyword">finally</span> &#123;</div><div class="line">            <span class="comment">//无论是否发生异常,finally代码块中的代码总会被执行,完成清理类型等收尾善后性质的功能</span></div><div class="line">            System.out.println(<span class="string">"finally"</span>); <span class="comment">//finally中不要包含return</span></div><div class="line">        &#125;</div><div class="line">        </div><div class="line">        System.out.println(m+<span class="string">"/"</span>+n+<span class="string">"="</span>+r);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//扔给调用者处理:除零错误异常(java Div 6 0)</span></div><div class="line">    <span class="comment">//public static int div(int m, int n) throws ArithmeticException &#123;</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">div</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;  <span class="comment">//ArithmeticException是不可查异常,出现后会自动抛出,可以不要throws</span></div><div class="line">        <span class="keyword">int</span> r;</div><div class="line">        r = m / n;</div><div class="line">        <span class="keyword">return</span> r;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//自己创建的可查异常NullPointerException,必须处理,这里将其抛出,因此必须要throws</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">craetException</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"My Craeted Exception"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">hceng@android:/work/java_learn/09th_exception$ java Div 6 3</div><div class="line">====An exception occurs:java.lang.Exception: My Craeted Exception=====</div><div class="line">finally</div><div class="line">6/3=2</div><div class="line">hceng@android:/work/java_learn/09th_exception$ java Div 6 a</div><div class="line">====An exception occurs1:java.lang.NumberFormatException: For input string: &quot;a&quot;=====</div><div class="line">finally</div><div class="line">6/0=0</div><div class="line">hceng@android:/work/java_learn/09th_exception$ java Div 6 0</div><div class="line">====An exception occurs2:java.lang.ArithmeticException: / by zero=====</div><div class="line">finally</div><div class="line">6/0=0</div><div class="line">hceng@android:/work/java_learn/09th_exception$ java Div 6 </div><div class="line">====An exception occurs:java.lang.ArrayIndexOutOfBoundsException: 1=====</div><div class="line">finally</div><div class="line">6/0=0</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1 该示例实现了一个整数除法运算，同时对输入参数的合法性进行了异常处理；<br>　<br>2.1 <code>main</code>方法里，首先定义了三个变量并初始化；<br>2.2 <code>try { }</code>代码块包含了可能出现异常的代码；<br>2.3 通过<code>Integer.parseInt</code>方法将字符<code>args[0]</code>和<code>args[1]</code>转换成了整型，这里可能出现<code>NumberFormatException</code>和<code>ArrayIndexOutOfBoundsException</code>异常，比如传入<code>a</code>就无法转换成对应数字，传入的参数少一个也会转换出错；<br>2.4 方法<code>div</code>的定义在后面，可能出现<code>ArithmeticException</code>异常，即初始不能为零；<br>2.5 方法<code>craetException</code>的定义在后面，在里面自己产生了一个可查异常，必须处理的异常；<br>2.6 接下来的<code>catch (异常类 异常变量名) { }</code>代码块，捕获到对应异常，即进行代码块代码；<br>2.7 无论是否发生异常，<code>finally { }</code>代码块的内容总会被执行，一般在里面做一些清理类型的善后收尾工作，注意不要在里面写<code>return</code>代码，因为如果前面的<code>try</code>或<code>catch</code>块中有<code>return</code>或<code>throw</code>语句，会先执行<code>finally</code>块，此时<code>finally</code>中有<code>return</code>就直接返回了，无法再返回来执行<code>try</code>或<code>catch</code>块中<code>return</code>或<code>throw</code>语句里面的内容；<br>2.8 接下来是打印出结果；<br>　<br>3.1 定义了<code>Div</code>方法，因为可能发生<code>ArithmeticException</code>异常，该异常是不可查异常，出现后可以自动抛出，所以在方法名定义那可以不加<code>throws ArithmeticException</code>；<br>3.2 定义了<code>craetException</code>方法，该方法是通过<code>new</code>建立，<code>throw</code>抛出，从前面的图中可以知道<code>Exception</code>类异常包含<code>IOException</code>可查异常和<code>RuntimeException</code>不可查异常，因为是可查异常的关系，要么自己处理，要么手动抛出，这里抛出的话，方法名定义得加上<code>throws Exception</code>，否则编译都无法通过；<br>3.3 这里的两个方法，都是抛出异常，也可以自己通过<code>try {} catch {}</code>处理掉；在选择抛出时，前者因为是不可查异常，在方法名定义时可以不加<code>throws 异常类型</code>，后者反之得加上；<br>　<br>4 运行代码时，分别列举了正常运行、传入参数为字母错误、传入参数除数为零、传入参数少一个的情况，异常都被捕获到，程序没有当时直接退出，而是执行了异常处理代码块的内容，继续执行；</p></blockquote><h2 id="2-6-包及访问权限"><a href="#2-6-包及访问权限" class="headerlink" title="2.6 包及访问权限"></a>2.6 包及访问权限</h2><p>为了更好地组织类，Java提供了包机制，解决类的同名冲突问题；<br>如同<strong>文件夹</strong>一样，包也采用了树形目录的存储方式。同一个包中的类名字是不同的，不同的包中的类的名字是可以相同的，当同时调用两个不同包中相同类名的类时，应该加上包名加以区别。因此，包可以避免名字冲突。</p><p>假设有如下情况，hceng和jack两个程序员，实现了同一个<code>Math.java</code>类，实现了同名方法<code>add</code>，但内容不同，源码组织情况如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">├── hceng</div><div class="line">│   ├── Math.java</div><div class="line">│   └── Permission.java</div><div class="line">├── jack</div><div class="line">│   ├── Math.java</div><div class="line">│   └── TestAccess.java</div><div class="line">└── Pack.java</div></pre></td></tr></table></figure></p><p>使用如下命令编译：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">javac -d . hceng/*.java jack/*.java *.java</div></pre></td></tr></table></figure></p><p>编译后文件组织如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">├── hceng</div><div class="line">│   ├── Math.java</div><div class="line">│   └── Permission.java</div><div class="line">├── jack</div><div class="line">│   ├── Math.java</div><div class="line">│   └── TestAccess.java</div><div class="line">├── pack</div><div class="line">│   ├── hceng</div><div class="line">│   │   ├── Math.class</div><div class="line">│   │   ├── packagePermission.class</div><div class="line">│   │   └── Permission.class</div><div class="line">│   └── jack</div><div class="line">│       ├── Math.class</div><div class="line">│       └── TestAccess.class</div><div class="line">├── Pack.class</div><div class="line">└── Pack.java</div></pre></td></tr></table></figure></p><p>执行<code>java Pack</code>效果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">add1:3</div><div class="line">add2:4</div><div class="line">add2:-1</div><div class="line">Can only be accessed by this class: a = 1</div><div class="line">Access in the same package: b = 2</div><div class="line">Access in different packages: c = 3</div><div class="line">Accessible anywhere: d = 4</div></pre></td></tr></table></figure></p><p>源码见文末的Github链接，在<code>10th_package</code>里面。</p><p>先从<strong>文件组织的角度</strong>进行分析：</p><blockquote><p>1.1 <code>hceng</code>路径下有个<code>Math.java</code>，里面有个<code>Math</code>方法和<code>sub</code>方法，通过<code>package</code>关键字指定了打包的路径为<code>pack/hceng</code>；<br>1.2 <code>jack</code>路径下有个<code>Math.java</code>，里面有个<code>Math</code>方法，通过<code>package</code>关键字指定了打包的路径为<code>pack/jack</code>；<br>　<br>2.1 编译时加入了<code>-d</code>参数，表示指定生成的包文件路径；<br>2.2 根据编译参数和类文件<code>package</code>的定义，就在当前路径在生成了<code>pack/hceng</code>和<code>pack/jack</code>存放了对应的<code>class</code>；<br>　<br>3.1 当前路径下有个<code>Pack.java</code>，通过<code>import</code>关键字将前面两个包导入了该类里面；<br>3.2 <code>main</code>里面，通过指定包的路径调用对应的方法，比如<code>pack.jack.Math.add</code>和<code>pack.hceng.Math.add</code>，解决调用同名类的冲突；</p></blockquote><p>再从<strong>访问权限的角度</strong>进行分析：</p><blockquote><p>1.1 <code>hceng</code>路径下有个<code>Permission.java</code>，里面有个公共的<code>Permission</code>类和非公共的<code>packagePermission</code>类，外部只能访问公共的<code>Permission</code>类；<br>1.2 从<strong>类的权限角度</strong>可知:<code>public</code>类可以被外包访问，非<code>public</code>类只能在本包访问，另外，一个文件只能有一个<code>public</code>类；<br>　<br>2.1 <code>hceng</code>路径下有个<code>Permission.java</code>，在类<code>Permission</code>里定义了四种权限的属性(属性加static是因为可以不通过new创建，直接访问)；<br>2.2 针对<code>private</code>的属性，只能在本类里访问，因此在本类的方法可以直接调用(方法加static是因为可以不通过new创建，直接访问)；<br>2.3 针对<code>default</code>的属性，只能在同包里访问，因此在同包的另一个方法里实现了访问；<br>2.4 针对<code>protected</code>的属性，只能在不同包子类里访问，因此在<code>jack/</code>路径下创建了<code>TestAccess.java</code>，它属于<code>pack.jack</code>包，里面通过继承类访问了该属性；<br>2.5 针对<code>public</code>的属性，在任何地方都可以访问，因此在<code>Pack</code>里直接进行了访问；<br>2.6 从<strong>属性权限角度</strong>可知:类成员的访问权限如下：</p><table><thead><tr><th style="text-align:center">权限</th><th style="text-align:center">类内</th><th style="text-align:center">同包</th><th style="text-align:center">不同包子类</th><th style="text-align:center">不同包非子类</th></tr></thead><tbody><tr><td style="text-align:center">private</td><td style="text-align:center">√</td><td style="text-align:center">×</td><td style="text-align:center">×</td><td style="text-align:center">×</td></tr><tr><td style="text-align:center">default</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">×</td><td style="text-align:center">×</td></tr><tr><td style="text-align:center">protected</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">×</td></tr><tr><td style="text-align:center">public</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td><td style="text-align:center">√</td></tr></tbody></table></blockquote><p>最后再补充一下<code>jar</code>，对于前面生成的<code>pack</code>目录，我们可以将其压缩打包，相关命令如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">jar -cvf pack.jar ./pack   //打包</div><div class="line">jar -tvf pack.jar          //查看包内容</div><div class="line">jar -xvf pack.jar          //解包</div></pre></td></tr></table></figure></p><p>操作逻辑和<code>tar</code>压缩一样的，很好记。</p><p>此时在当前目录生成<code>pack.jar</code>，删除<code>pack</code>文件夹，执行<code>export CLASSPATH=.:pack.jar</code>指定运行查找包的路径，执行<code>java Pack</code>仍可正常运行。</p><h2 id="2-7-内部类"><a href="#2-7-内部类" class="headerlink" title="2.7 内部类"></a>2.7 内部类</h2><p>内部类，在类的内部定义一个类，通过内部这个类，可以访问到该类的私有属性。<br>内部类又分一般内部类、静态内部类、匿名内部类。</p><ul><li><p>示例：</p><figure class="highlight java"><figcaption><span>[Inner.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">OutClass</span> </span>&#123;</div><div class="line">    <span class="comment">//一般内部类</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> a = <span class="number">1</span>;</div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">InnerClass1</span> </span>&#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">            System.out.println(<span class="string">"a = "</span> + a);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//静态内部类</span></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> b = <span class="number">2</span>;</div><div class="line">    <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">InnerClass2</span> </span>&#123;</div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">            System.out.println(<span class="string">"b = "</span> + b);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">interface</span> <span class="title">PrintInterface</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printInfo</span><span class="params">()</span></span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyInterface</span> <span class="keyword">implements</span> <span class="title">PrintInterface</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"MyInterface"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Inner</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        OutClass o = <span class="keyword">new</span> OutClass(); <span class="comment">//依次定义外部类</span></div><div class="line">        OutClass.InnerClass1 i1 = o.new InnerClass1(); <span class="comment">//内部类</span></div><div class="line">        i1.printInfo();</div><div class="line">        </div><div class="line">        OutClass.InnerClass2 i2 = <span class="keyword">new</span> OutClass.InnerClass2(); <span class="comment">//直接定义内部类</span></div><div class="line">        i2.printInfo();</div><div class="line">        </div><div class="line">        <span class="comment">//正常调用继承于接口的类</span></div><div class="line">        MyInterface m = <span class="keyword">new</span> MyInterface();</div><div class="line">        m.printInfo();</div><div class="line">        </div><div class="line">        <span class="comment">//匿名内部类(没有名字的内部类,必须继承一个父类或实现一个接口)</span></div><div class="line">        PrintInterface p = <span class="keyword">new</span> PrintInterface() &#123; </div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">printInfo</span><span class="params">()</span> </span>&#123;</div><div class="line">                System.out.println(<span class="string">"PrintInterface"</span>);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">        p.printInfo();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">a = 1</div><div class="line">b = 2</div><div class="line">hello MyInterface</div><div class="line">hello PrintInterface</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 定义了一个<code>OutClass</code>类，里面包含两个私有变量和两个内部类，再通过内部类的方法访问私有变量；<br>1.2 两者区别是后者使用<code>static</code>修饰变量和类，使得可以不通过<code>new</code>直接访问类方法；<br>　<br>2.1 定义了一个接口<code>PrintInterface</code>，接口里定义了一个<code>printInfo</code>方法；<br>2.2 定义了类<code>MyInterface</code>继承于接口<code>PrintInterface</code>，并实现了<code>printInfo</code>方法；<br>　<br>3.1 在<code>main</code>里，先实例化外部类，再实例化内部类，才能方法问一般内部类的方法；<br>3.2 针对静态内部类，可以直接定义内部类，再访问其方法；<br>　<br>4.1 针对继承于接口/父类的子类，一般先实例化，再访问其方法；<br>4.2 也可以在使用时，再定义方法内容，再访问其方法，这就是匿名内部类，一个没有名字的内部类；</p></blockquote><h1 id="3-JNI"><a href="#3-JNI" class="headerlink" title="3. JNI"></a>3. JNI</h1><p>JNI(Java Native Interface)就是JAVA本地接口，它允许Java代码和Native代码进行交互，这里的Native代码指C、C++语言等编程语言。<br>无论是Android还是Linux，其底层都是用C语言编写的，因此很多程序和库都也是用C、C++来写的，重复利用这些Native语言编写的库是十分有必要的，而且一般Native语言编写的库具有更好的性能。<br>这样就产生了一个问题，Java世界的代码要怎么使用Native世界的代码呢，这就需要一个桥梁来将它们连接在一起，而JNI就是这个桥梁。 </p><h2 id="3-1-JAVA调用C"><a href="#3-1-JAVA调用C" class="headerlink" title="3.1 JAVA调用C"></a>3.1 JAVA调用C</h2><h3 id="3-1-1-Java访问C库的方法"><a href="#3-1-1-Java访问C库的方法" class="headerlink" title="3.1.1 Java访问C库的方法"></a>3.1.1 Java访问C库的方法</h3><p>Java访问C库的的步骤有三步：<br>1.Java中加载C库(System.loadLibrary)；<br>2.建立Java函数名与C库函数名的映射关系；<br>3.在Java程序里调用C库的函数；</p><p>其中，建立Java函数名与C库函数名映射关系的方法有两种：<strong>隐式建立</strong>和<strong>显式建立</strong>；</p><ul><li>示例：<figure class="highlight java"><figcaption><span>[Jni.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Jni</span> </span>&#123;</div><div class="line">    <span class="comment">/* 1.加载 */</span></div><div class="line">    <span class="keyword">static</span> &#123; <span class="comment">//静态代码块(只会被调用一次)</span></div><div class="line">        System.loadLibrary(<span class="string">"native"</span>); <span class="comment">//C语言会编译生成libnative.so,这里加载它</span></div><div class="line">    &#125;</div><div class="line">    <span class="comment">/* 2.声明 */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">hello_implicit</span><span class="params">()</span></span>; <span class="comment">//声明(static静态方法,可直接调用)</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">hello_explicit</span><span class="params">()</span></span>; </div><div class="line">    <span class="comment">/* 3.调用 */</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        hello_implicit();</div><div class="line">        hello_explicit();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><figure class="highlight c"><figcaption><span>[native.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Jni.h"</span></span></div><div class="line"></div><div class="line"><span class="comment">//隐式建立:函数名必须固定格式,参考生成的Jni.h</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Java_Jni_hello_1implicit</span><span class="params">(JNIEnv *env, jobject cls)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"hello java, I am from C language(implicit)\n"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//显式建立,函数名自定义</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">c_hello</span><span class="params">(JNIEnv *env, jobject cls)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"hello java, I am from C language(explicit)\n"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> JNINativeMethod methods[] = &#123;</div><div class="line">    &#123;<span class="string">"hello_explicit"</span>, <span class="string">"()V"</span>, (<span class="keyword">void</span> *)c_hello&#125;,  <span class="comment">//Java里调用的函数名;JNI字段描述符(参数、返回值);C语言实现的本地函数</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="comment">//一旦Java调用System.loadLibrary,就会先调用JNI_OnLoad</span></div><div class="line"><span class="function">JNIEXPORT jint JNICALL</span></div><div class="line"><span class="title">JNI_OnLoad</span><span class="params">(JavaVM *jvm, <span class="keyword">void</span> *reserved)</span></div><div class="line">&#123;</div><div class="line">    JNIEnv *env;</div><div class="line">    jclass cls;</div><div class="line">    </div><div class="line">    <span class="comment">//根据版本获得env,为后面提供函数</span></div><div class="line">    <span class="keyword">if</span> ((*jvm)-&gt;GetEnv(jvm, (<span class="keyword">void</span> **)&amp;env, JNI_VERSION_1_4)) </div><div class="line">        <span class="keyword">return</span> JNI_ERR; </div><div class="line">    </div><div class="line">    <span class="comment">//查获取调用本程序的类</span></div><div class="line">    cls = (*env)-&gt;FindClass(env, <span class="string">"Jni"</span>); </div><div class="line">    <span class="keyword">if</span> (cls == <span class="literal">NULL</span>) </div><div class="line">        <span class="keyword">return</span> JNI_ERR;</div><div class="line"></div><div class="line">    <span class="comment">//使用RegisterNatives将C和Java建立联系</span></div><div class="line">    <span class="keyword">if</span> ((*env)-&gt;RegisterNatives(env, cls, methods, <span class="keyword">sizeof</span>(methods)/<span class="keyword">sizeof</span>(methods[<span class="number">0</span>])) &lt; <span class="number">0</span>)</div><div class="line">        <span class="keyword">return</span> JNI_ERR;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> JNI_VERSION_1_4;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>编译及设置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">javac Jni.java</div><div class="line">javah -jni Jni</div><div class="line"></div><div class="line">gcc -I /usr/lib/jvm/java-1.8.0-openjdk-amd64/include/ -I /usr/lib/jvm/java-1.8.0-openjdk-amd64/include/linux -fPIC -shared -o libnative.so native.c</div><div class="line"></div><div class="line">export LD_LIBRARY_PATH=.</div><div class="line"></div><div class="line">java Jni</div></pre></td></tr></table></figure></p><ul><li>结果：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hello java, I am from C language(implicit)</div><div class="line">hello java, I am from C language(explicit)</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 在Java里，先在静态代码块里加载对应的库；<br>1.2 然后声明要使用的方法，使用<code>static</code>修饰的方法不用实例化；<br>1.3 <code>main</code>里调用方法；<br>　<br>2.1 在C语言里，先包含一个头文件，这个头文件通过<code>javac Jni.java</code>、<code>javah -jni Jni</code>生成，里面有根据Java声明的方法自动生成的C语言函数定义；<br>2.2 <strong>隐式建立</strong>:只需函数名和生成的<code>Jni.h</code>一致就行，Java执行方法时就自动调用函数；<br>2.3 <strong>显式建立</strong>:函数名自定义，但需要创建<code>JNI_OnLoad</code>方法将Java和C建立联系；</p></blockquote><h3 id="3-1-2-Java和C库传递数据"><a href="#3-1-2-Java和C库传递数据" class="headerlink" title="3.1.2 Java和C库传递数据"></a>3.1.2 Java和C库传递数据</h3><p>Java调用C语言，一般都要进行数据的传递，包括Java传入数据，C语言返回数据，这里对基本数据类、字符串、数据进行传递示例。</p><ul><li>示例：<figure class="highlight java"><figcaption><span>[Jni.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Jni</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="keyword">static</span> &#123; </div><div class="line">        System.loadLibrary(<span class="string">"native"</span>); </div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//基本类型数据</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">static</span> <span class="keyword">float</span> <span class="title">typeData1</span><span class="params">(<span class="keyword">int</span> a)</span></span>; </div><div class="line">    </div><div class="line">    <span class="comment">//字符串 </span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">static</span> String <span class="title">typeData2</span><span class="params">(String str)</span></span>; </div><div class="line">    </div><div class="line">    <span class="comment">//数组</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">static</span> <span class="keyword">int</span>[] typeData3(<span class="keyword">int</span>[] a); </div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> [] a = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;; </div><div class="line">        <span class="keyword">int</span> [] b = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">int</span> i;</div><div class="line">        </div><div class="line">        System.out.println(typeData1(<span class="number">4</span>));</div><div class="line">        System.out.println(typeData2(<span class="string">"hceng"</span>));</div><div class="line">        </div><div class="line">        b = typeData3(a);</div><div class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; b.length; i++)      </div><div class="line">            System.out.print(b[i]+<span class="string">" "</span>);</div><div class="line">        System.out.println();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><figure class="highlight c"><figcaption><span>[native.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Jni.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line"><span class="comment">//隐式建立</span></div><div class="line"><span class="function">jfloat <span class="title">Java_Jni_typeData1</span><span class="params">(JNIEnv *env, jclass cls, jint a)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"C: get val: %d, will return (float)%d \n"</span>, a, a);</div><div class="line">    <span class="keyword">return</span> (<span class="keyword">float</span>)a;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">jstring <span class="title">Java_Jni_typeData2</span><span class="params">(JNIEnv *env, jclass cls, jstring str)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">const</span> jbyte *cstr;</div><div class="line">    cstr = (*env)-&gt;GetStringUTFChars(env, str, <span class="literal">NULL</span>);</div><div class="line">    <span class="keyword">if</span> (cstr == <span class="literal">NULL</span>) </div><div class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>; </div><div class="line">    </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"C: get str: %s, will return jack \n"</span>, cstr);</div><div class="line">    (*env)-&gt;ReleaseStringUTFChars(env, str, cstr);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> (*env)-&gt;NewStringUTF(env, <span class="string">"jack"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">jintArray JNICALL <span class="title">Java_Jni_typeData3</span><span class="params">(JNIEnv *env, jclass cls, jintArray arr)</span></span></div><div class="line">&#123;</div><div class="line">    jint *carr;</div><div class="line">    jint *oarr;</div><div class="line">    jintArray rarr;</div><div class="line">    jint i, n = <span class="number">0</span>;</div><div class="line">    </div><div class="line">    carr = (*env)-&gt;GetIntArrayElements(env, arr, <span class="literal">NULL</span>);</div><div class="line">    <span class="keyword">if</span> (carr == <span class="literal">NULL</span>) </div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>; </div><div class="line"></div><div class="line">    n = (*env)-&gt;GetArrayLength(env, arr);</div><div class="line">    </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"C: get number: "</span>);</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)     </div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, carr[i]);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">", will return opposite number\n"</span>);</div><div class="line">    </div><div class="line">    </div><div class="line">    oarr = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(jint) * n);</div><div class="line">    <span class="keyword">if</span> (oarr == <span class="literal">NULL</span>)</div><div class="line">    &#123;</div><div class="line">        (*env)-&gt;ReleaseIntArrayElements(env, arr, carr, <span class="number">0</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">        oarr[i] = carr[n<span class="number">-1</span>-i];</div><div class="line">    </div><div class="line">    (*env)-&gt;ReleaseIntArrayElements(env, arr, carr, <span class="number">0</span>);</div><div class="line"></div><div class="line">    <span class="comment">/* create jintArray */</span></div><div class="line">    rarr = (*env)-&gt;NewIntArray(env, n);</div><div class="line">    <span class="keyword">if</span> (rarr == <span class="literal">NULL</span>)</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">    (*env)-&gt;SetIntArrayRegion(env, rarr, <span class="number">0</span>, n, oarr);</div><div class="line">    <span class="built_in">free</span>(oarr);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> rarr;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">else</span></span></div><div class="line">    </div><div class="line"></div><div class="line"><span class="comment">//显式建立</span></div><div class="line"><span class="function">jfloat JNICALL <span class="title">c_typeData1</span><span class="params">(JNIEnv *env, jclass cls, jint a)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"C: get val = %d, will return (float)%d \n"</span>, a, a);</div><div class="line">    <span class="keyword">return</span> (<span class="keyword">float</span>)a;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">jstring JNICALL <span class="title">c_typeData2</span><span class="params">(JNIEnv *env, jclass cls, jstring str)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">const</span> jbyte *cstr;</div><div class="line">    cstr = (*env)-&gt;GetStringUTFChars(env, str, <span class="literal">NULL</span>);</div><div class="line">    <span class="keyword">if</span> (cstr == <span class="literal">NULL</span>) </div><div class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>; </div><div class="line">    </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"C: get str = %s, will return jack \n"</span>, cstr);</div><div class="line">    (*env)-&gt;ReleaseStringUTFChars(env, str, cstr);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> (*env)-&gt;NewStringUTF(env, <span class="string">"jack"</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">jintArray JNICALL <span class="title">c_typeData3</span><span class="params">(JNIEnv *env, jclass cls, jintArray arr)</span></span></div><div class="line">&#123;</div><div class="line">    jint *carr;</div><div class="line">    jint *oarr;</div><div class="line">    jintArray rarr;</div><div class="line">    jint i, n = <span class="number">0</span>;</div><div class="line">    </div><div class="line">    carr = (*env)-&gt;GetIntArrayElements(env, arr, <span class="literal">NULL</span>);</div><div class="line">    <span class="keyword">if</span> (carr == <span class="literal">NULL</span>) </div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>; </div><div class="line"></div><div class="line">    n = (*env)-&gt;GetArrayLength(env, arr);</div><div class="line">    </div><div class="line">    <span class="built_in">printf</span>(<span class="string">"C: get number: "</span>);</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)     </div><div class="line">        <span class="built_in">printf</span>(<span class="string">"%d "</span>, carr[i]);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">", will return opposite number\n"</span>);</div><div class="line">    </div><div class="line">    </div><div class="line">    oarr = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(jint) * n);</div><div class="line">    <span class="keyword">if</span> (oarr == <span class="literal">NULL</span>)</div><div class="line">    &#123;</div><div class="line">        (*env)-&gt;ReleaseIntArrayElements(env, arr, carr, <span class="number">0</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</div><div class="line">        oarr[i] = carr[n<span class="number">-1</span>-i];</div><div class="line">    </div><div class="line">    (*env)-&gt;ReleaseIntArrayElements(env, arr, carr, <span class="number">0</span>);</div><div class="line"></div><div class="line">    <span class="comment">/* create jintArray */</span></div><div class="line">    rarr = (*env)-&gt;NewIntArray(env, n);</div><div class="line">    <span class="keyword">if</span> (rarr == <span class="literal">NULL</span>)</div><div class="line">        <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line"></div><div class="line">    (*env)-&gt;SetIntArrayRegion(env, rarr, <span class="number">0</span>, n, oarr);</div><div class="line">    <span class="built_in">free</span>(oarr);</div><div class="line">    </div><div class="line">    <span class="keyword">return</span> rarr;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">static</span> <span class="keyword">const</span> JNINativeMethod methods[] = &#123;</div><div class="line">    &#123;<span class="string">"typeData1"</span>, <span class="string">"(I)F"</span>, (<span class="keyword">void</span> *)c_typeData1&#125;,  </div><div class="line">    &#123;<span class="string">"typeData2"</span>, <span class="string">"(Ljava/lang/String;)Ljava/lang/String;"</span>, (<span class="keyword">void</span> *)c_typeData2&#125;, </div><div class="line">    &#123;<span class="string">"typeData3"</span>, <span class="string">"([I)[I"</span>, (<span class="keyword">void</span> *)c_typeData3&#125;, </div><div class="line">&#125;;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function">JNIEXPORT jint JNICALL</span></div><div class="line"><span class="title">JNI_OnLoad</span><span class="params">(JavaVM *jvm, <span class="keyword">void</span> *reserved)</span></div><div class="line">&#123;</div><div class="line">    JNIEnv *env;</div><div class="line">    jclass cls;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> ((*jvm)-&gt;GetEnv(jvm, (<span class="keyword">void</span> **)&amp;env, JNI_VERSION_1_4)) </div><div class="line">        <span class="keyword">return</span> JNI_ERR; </div><div class="line">    </div><div class="line">    cls = (*env)-&gt;FindClass(env, <span class="string">"Jni"</span>); </div><div class="line">    <span class="keyword">if</span> (cls == <span class="literal">NULL</span>) </div><div class="line">        <span class="keyword">return</span> JNI_ERR;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> ((*env)-&gt;RegisterNatives(env, cls, methods, <span class="keyword">sizeof</span>(methods)/<span class="keyword">sizeof</span>(methods[<span class="number">0</span>])) &lt; <span class="number">0</span>)</div><div class="line">        <span class="keyword">return</span> JNI_ERR;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> JNI_VERSION_1_4;</div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div></pre></td></tr></table></figure><ul><li>结果：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">C: get val: 4, will return (float)4 </div><div class="line">4.0</div><div class="line">C: get str: hceng, will return jack </div><div class="line">jack</div><div class="line">C: get number: 1 2 3 4 , will return opposite number</div><div class="line">4 3 2 1</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 在Java中，依次声明了以基本数据类型、字符串、数组为参数和返回值的方法；<br>1.2 然后调用方法，传入参数，打印返回结果；<br>　<br>2.1 C语言里，分别隐式建立和显式建立编写了函数，两者主要区别在函数名和关系的建立上；<br>2.2 以显式建立为例，函数<code>c_typeData1</code>接收Java传入的基本数据类型，直接处理，返回相应数据；<br>2.3 函数<code>c_typeData2</code>接收Java传入的字符串，不能直接处理，使用<code>GetStringUTFChars()</code>获取字符串指针，用完后使用<code>ReleaseStringUTFChars()</code>释放，使用<code>NewStringUTF()</code>返回字符串；<br>2.4 函数<code>c_typeData3</code>接收Java传入的数据，不能直接处理，使用<code>GetIntArrayElements()</code>获取数据，<code>GetArrayLength()</code>获得数组长度，用完后使用<code>ReleaseIntArrayElements()</code>释放，使用<code>NewIntArray()</code>创建JNI数组，通过<code>SetIntArrayRegion()</code>将数组保存到JNI数组；<br>2.5 修改<code>methods[]</code>，使Java的方法和C语言的函数对应，以及输入输出参数(参考生成的Jni.h)；</p></blockquote><h2 id="3-2-C调用JAVA"><a href="#3-2-C调用JAVA" class="headerlink" title="3.2 C调用JAVA"></a>3.2 C调用JAVA</h2><p>C语言调用Java相对简单一点，流程大致如下：</p><blockquote><p>1.创建一个Java虚拟机<br>2.找到要调用的类；<br>3.获取/设置属性(非必须):<br>　3.1获取属性ID；<br>　3.2获取/设置属性；<br>4.对于<strong>静态方法</strong>不需要示例化对象：<br>　4.1获取方法ID；<br>　4.2准备传入参数(非必需)；<br>　4.3调用方法；<br>5.对于<strong>非静态方法</strong>需要实例化对象：<br>　5.1获取构造方法(<init>)ID；<br>　5.2创建对象；<br>　5.3获取方法ID；<br>　5.4准备传入参数(非必需)；<br>　5.5调用方法；<br>6.销毁创建的Java虚拟机：</init></p></blockquote><ul><li>示例：<figure class="highlight java"><figcaption><span>[Hello.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Hello</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String name;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> age;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123; <span class="comment">//静态方法</span></div><div class="line">        System.out.println(<span class="string">"java: name: "</span>+ name + <span class="string">", age: "</span> + age);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">typeData</span><span class="params">(String str)</span> </span>&#123; <span class="comment">//非静态方法</span></div><div class="line">        System.out.println(<span class="string">"java: get str: "</span>+ str + <span class="string">" ,will return 100"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">100</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><figure class="highlight c"><figcaption><span>[caller.c]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span>  </span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;jni.h&gt;</span> </span></div><div class="line"></div><div class="line"><span class="comment">/* create java virtual machine*/</span></div><div class="line"><span class="function">jint <span class="title">create_vm</span><span class="params">(JavaVM** jvm, JNIEnv** env)</span> </span></div><div class="line">&#123;  </div><div class="line">    JavaVMInitArgs args;  </div><div class="line">    JavaVMOption options[<span class="number">1</span>];  </div><div class="line">    args.version = JNI_VERSION_1_6;  </div><div class="line">    args.nOptions = <span class="number">1</span>;  </div><div class="line">    options[<span class="number">0</span>].optionString = <span class="string">"-Djava.class.path=./"</span>;  </div><div class="line">    args.options = options;  </div><div class="line">    args.ignoreUnrecognized = JNI_FALSE;  </div><div class="line">    <span class="keyword">return</span> JNI_CreateJavaVM(jvm, (<span class="keyword">void</span> **)env, &amp;args);  </div><div class="line">&#125;  </div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> **argv)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> r;</div><div class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</div><div class="line">    </div><div class="line">    JavaVM* jvm;</div><div class="line">    JNIEnv* env;</div><div class="line">    jclass cls;</div><div class="line">    </div><div class="line">    jfieldID nameID, ageID;</div><div class="line">    jmethodID mid, cid;</div><div class="line">    </div><div class="line">    jobject jobj;</div><div class="line">    jstring jstr;</div><div class="line">    </div><div class="line">    <span class="comment">/* 1. create java virtual machine */</span></div><div class="line">    <span class="keyword">if</span> (create_vm(&amp;jvm, &amp;env)) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"can not create jvm\n"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/* 2. get class */</span></div><div class="line">    cls = (*env)-&gt;FindClass(env, <span class="string">"Hello"</span>);</div><div class="line">    <span class="keyword">if</span> (cls == <span class="literal">NULL</span>) &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"can not find hello class\n"</span>);</div><div class="line">        ret = <span class="number">-1</span>;</div><div class="line">        <span class="keyword">goto</span> destroy;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line"><span class="comment">/*----------------Non-generic part------------------*/</span></div><div class="line">    </div><div class="line">    <span class="comment">/* 3.get/set field */</span></div><div class="line">    <span class="comment">// 3.1 get field id (GetFieldID, GetStaticFieldID)</span></div><div class="line">    <span class="comment">// 3.2 get/set field (Get&lt;Type&gt;Field,GetStatic&lt;Type&gt;Field / Set&lt;Type&gt;Field,SetStatic&lt;Type&gt;Field)</span></div><div class="line"></div><div class="line">    <span class="comment">//java: private static String name;</span></div><div class="line">    nameID = (*env)-&gt;GetStaticFieldID(env, cls, <span class="string">"name"</span>, <span class="string">"Ljava/lang/String;"</span>); <span class="comment">//3.1</span></div><div class="line">    <span class="keyword">if</span> (nameID == <span class="literal">NULL</span>) &#123;</div><div class="line">        ret = <span class="number">-1</span>;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"can not get field name\n"</span>); <span class="comment">//3.2</span></div><div class="line">        <span class="keyword">goto</span> destroy;</div><div class="line">    &#125;</div><div class="line">    jstr = (*env)-&gt;NewStringUTF(env, <span class="string">"hceng"</span>);</div><div class="line">    (*env)-&gt;SetStaticObjectField(env, jobj, nameID, jstr);</div><div class="line"></div><div class="line">    <span class="comment">//java: private static int age;</span></div><div class="line">    ageID = (*env)-&gt;GetStaticFieldID(env, cls, <span class="string">"age"</span>, <span class="string">"I"</span>); <span class="comment">//3.1</span></div><div class="line">    <span class="keyword">if</span> (ageID == <span class="literal">NULL</span>) &#123;</div><div class="line">        ret = <span class="number">-1</span>;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"can not get field age\n"</span>);</div><div class="line">        <span class="keyword">goto</span> destroy;</div><div class="line">    &#125;</div><div class="line">    (*env)-&gt;SetStaticIntField(env, jobj, ageID, <span class="number">23</span>); <span class="comment">//3.2</span></div><div class="line">    </div><div class="line">    </div><div class="line"><span class="comment">/*Branch1:------for static method, No need create object-------*/</span></div><div class="line">    <span class="comment">/* 4. call method */</span></div><div class="line">    <span class="comment">// 4.1 get method id (GetMethodID, GetStaticMethodID)</span></div><div class="line">    <span class="comment">// 4.2 Preparation parameter</span></div><div class="line">    <span class="comment">// 4.3 call method (CallVoidMethod, CallStaticVoidMethod)</span></div><div class="line">    mid = (*env)-&gt;GetStaticMethodID(env, cls, <span class="string">"main"</span>,<span class="string">"([Ljava/lang/String;)V"</span>); <span class="comment">//4.1</span></div><div class="line">    <span class="keyword">if</span> (mid == <span class="literal">NULL</span>) &#123;</div><div class="line">        ret = <span class="number">-1</span>;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"can not get method\n"</span>);</div><div class="line">        <span class="keyword">goto</span> destroy;</div><div class="line">    &#125;</div><div class="line">    (*env)-&gt;CallStaticVoidMethod(env, cls, mid, <span class="literal">NULL</span>); <span class="comment">//4.3</span></div><div class="line">    </div><div class="line"><span class="comment">/*Branch2:------for no static method, Need create object-------*/</span></div><div class="line">    <span class="comment">/* 4. create object  */</span></div><div class="line">    <span class="comment">// 4.1 get constructor method id (GetMethodID)</span></div><div class="line">    <span class="comment">// 4.2 create new object (NewObject)</span></div><div class="line">    cid = (*env)-&gt;GetMethodID(env, cls, <span class="string">"&lt;init&gt;"</span>, <span class="string">"()V"</span>); <span class="comment">//4.1</span></div><div class="line">    <span class="keyword">if</span> (cid == <span class="literal">NULL</span>) &#123;</div><div class="line">        ret = <span class="number">-1</span>;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"can not get constructor method\n"</span>);</div><div class="line">        <span class="keyword">goto</span> destroy;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    jobj = (*env)-&gt;NewObject(env, cls, cid); <span class="comment">//4.2</span></div><div class="line">    <span class="keyword">if</span> (jobj == <span class="literal">NULL</span>) &#123;</div><div class="line">        ret = <span class="number">-1</span>;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"can not create object\n"</span>);</div><div class="line">        <span class="keyword">goto</span> destroy;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/* 5. call method */</span></div><div class="line">    <span class="comment">// 5.1 get method id (GetMethodID, GetStaticMethodID)</span></div><div class="line">    <span class="comment">// 5.2 Preparation parameter</span></div><div class="line">    <span class="comment">// 5.2 call method (CallVoidMethod, CallStaticVoidMethod)</span></div><div class="line">    mid = (*env)-&gt;GetMethodID(env, cls, <span class="string">"typeData"</span>,<span class="string">"(Ljava/lang/String;)I"</span>); <span class="comment">//5.1</span></div><div class="line">    <span class="keyword">if</span> (mid == <span class="literal">NULL</span>) &#123;</div><div class="line">        ret = <span class="number">-1</span>;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"can not get method\n"</span>);</div><div class="line">        <span class="keyword">goto</span> destroy;</div><div class="line">    &#125;</div><div class="line">    jstr = (*env)-&gt;NewStringUTF(env, <span class="string">"www.hceng.cn"</span>); <span class="comment">//5.2</span></div><div class="line">    r = (*env)-&gt;CallIntMethod(env, jobj, mid, jstr);  <span class="comment">//5.3</span></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, r);</div><div class="line"></div><div class="line">    </div><div class="line">destroy:</div><div class="line">    (*jvm)-&gt;DestroyJavaVM(jvm);</div><div class="line">    <span class="keyword">return</span> ret;</div><div class="line">&#125;</div><div class="line"></div></pre></td></tr></table></figure><ul><li><p>编译、设置环境变量：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">javac Hello.java</div><div class="line">javap -p -s Hello.class // get Signature</div><div class="line"></div><div class="line">gcc -I /usr/lib/jvm/java-1.8.0-openjdk-amd64/include/ -I /usr/lib/jvm/java-1.8.0-openjdk-amd64/include/linux -o caller caller.c -L /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/server/ -ljvm</div><div class="line"></div><div class="line">LD_LIBRARY_PATH=/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64/server/ </div><div class="line"></div><div class="line">./caller</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">java: name: hceng, age: 23</div><div class="line">java: get str: www.hceng.cn ,will return 100</div><div class="line">100</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 Java文件里有个<code>Hello</code>类，里面有两个静态变量、一个静态方法、一个非静态方法；<br>1.2 非静态方法<code>typeData</code> 需要传入一个参数和会返回一个整型；<br>　<br>2.1 将创建Java虚拟机封装成函数<code>create_vm()</code>，以后有需要直接调用；<br>2.2 调用<code>FindClass()</code>找到Java中要调用的类；<br>　<br>3.1 假如要修改属性，需要先得到属性的ID，针对静态和非静态属性，分别调用<code>GetStaticFieldID()</code>、<code>GetFieldID()</code>；<br>3.2 通过<code>NewStringUTF()</code>得到可以在Java中使用的字符串；<br>3.3 通过<code>SetStaticObjectField()</code>或<code>SetObjectField()</code>设置Java中的字符串；<br>3.4 通过<code>SetStaticIntField</code>或<code>SetIntField()</code>设置Java中的整型；<br>　<br>4.1 如果要调用静态方法，就需要实例化对象；<br>4.2 通过<code>GetStaticMethodID()</code>获得静态方法的ID；<br>4.3 通过<code>CallStaticVoidMethod()</code>调用静态无返回值方法，最后一个参数是需要传入的参数；<br>　<br>5.1 如果要调用非静态方法，就需要先实例化对象；<br>5.2 通过<code>GetMethodID()</code>获得构造方法的ID，对于构造方法，参数名字始终为<code>&lt;init&gt;</code>；<br>5.3 通过<code>NewObject()</code>实例化对象；<br>5.4 通过<code>GetMethodID()</code>获得非静态方法ID；<br>5.5 通过<code>CallIntMethod()</code>调用非静态方法，返回值就是Java方法的返回值；<br>　<br>6.销毁创建的Java虚拟机；</p></blockquote><p>可以发现，要操作/调用Java中的属性或方法，都需要通过函数得到其ID，获取的函数又分为静态和非静态，然后再设置/调用等；<br>另外，获取ID的函数需要传入<code>Signature</code>(JNI字段描述符)，可通过<code>javap -p -s Hello.class</code>命令，可以打印出对应类的<code>Signature</code>；</p><h1 id="4-Java的高级应用"><a href="#4-Java的高级应用" class="headerlink" title="4. Java的高级应用"></a>4. Java的高级应用</h1><h2 id="4-1-泛型"><a href="#4-1-泛型" class="headerlink" title="4.1 泛型"></a>4.1 泛型</h2><p>泛型(Generics)是Java SE 1.5的新特性，泛型的本质是参数化类型，也就是说所操作的数据类型被指定为一个参数。<br>这种参数类型可以用在类、接口和方法的创建中，分别称为泛型类、泛型接口、泛型方法。<br>通俗的讲，泛型就是操作类型的占位符，即：假设占位符为T，那么此次声明的数据结构操作的数据类型为T类型。<br>比如下面的例子，在实例化对象时，可以指定不同数据类型，既可以是整型，也可以是字符串类型，从而打印的结果就完全不同。</p><ul><li><p>示例：</p><figure class="highlight java"><figcaption><span>[Generics.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//普通类</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person1</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.age = age;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.age;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//泛型</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person2</span>&lt;<span class="title">T</span>&gt; </span>&#123;</div><div class="line">    <span class="keyword">private</span> T age;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(T age)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.age = age;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">getAge</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.age;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//泛型接口</span></div><div class="line"><span class="class"><span class="keyword">interface</span> <span class="title">Person3</span>&lt;<span class="title">T</span>&gt; </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(T age)</span></span>;</div><div class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">getAge</span><span class="params">()</span></span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//一般继承</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student1</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">Person2</span>&lt;<span class="title">T</span>&gt; </span>&#123;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student2</span> <span class="keyword">extends</span> <span class="title">Person2</span>&lt;<span class="title">String</span>&gt; </span>&#123;</div><div class="line">    </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//接口继承</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student3</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">Person3</span>&lt;<span class="title">T</span>&gt; </span>&#123;</div><div class="line">    T age;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(T age)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.age = age;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">getAge</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.age;</div><div class="line">    &#125; </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student4</span> <span class="keyword">implements</span> <span class="title">Person3</span>&lt;<span class="title">String</span>&gt; </span>&#123;</div><div class="line">    String age;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(String age)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.age = age;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAge</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.age;</div><div class="line">    &#125; </div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Generics</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> </span>&#123;</div><div class="line">        <span class="comment">//常规方法,传入参数数据类型固定</span></div><div class="line">        Person1 p1 = <span class="keyword">new</span> Person1();</div><div class="line">        p1.setAge(<span class="number">23</span>);</div><div class="line">        System.out.println(p1.getAge());</div><div class="line">        System.out.println(<span class="string">"--------------------------"</span>);</div><div class="line">        </div><div class="line">        <span class="comment">//泛型,传入参数数据类型可以不固定</span></div><div class="line">        Person2&lt;Integer&gt; p2 = <span class="keyword">new</span> Person2&lt;Integer&gt;();</div><div class="line">        p2.setAge(<span class="number">24</span>);</div><div class="line">        printInfo(p2);</div><div class="line">        genericsMethod(p2);</div><div class="line">        </div><div class="line">        Person2&lt;String&gt; p3 = <span class="keyword">new</span> Person2&lt;String&gt;();</div><div class="line">        p3.setAge(<span class="string">"24 years old"</span>);</div><div class="line">        printInfo(p3);</div><div class="line">        genericsMethod(p3);</div><div class="line">        System.out.println(<span class="string">"--------------------------"</span>);</div><div class="line">        </div><div class="line">        <span class="comment">//定义数据类型通用的对象</span></div><div class="line">        Person2&lt;?&gt; p4;</div><div class="line">        p4 = p2; </div><div class="line">        printInfo(p4); <span class="comment">//无法 p4.setAge();</span></div><div class="line">        p4 = p3; </div><div class="line">        printInfo(p4);</div><div class="line">        System.out.println(<span class="string">"--------------------------"</span>);</div><div class="line">        </div><div class="line">        <span class="comment">//子类继承:子类也泛型</span></div><div class="line">        Student1&lt;Integer&gt; s1 = <span class="keyword">new</span> Student1&lt;Integer&gt;();</div><div class="line">        s1.setAge(<span class="number">10</span>);</div><div class="line">        printInfo(s1);</div><div class="line">        genericsMethod(s1);</div><div class="line">        </div><div class="line">        <span class="comment">//子类继承:子类不泛型</span></div><div class="line">        Student2 s2 = <span class="keyword">new</span> Student2();</div><div class="line">        s2.setAge(<span class="string">"10 years old"</span>);</div><div class="line">        printInfo(s2);</div><div class="line">        genericsMethod(s2);</div><div class="line">        System.out.println(<span class="string">"--------------------------"</span>);</div><div class="line">        </div><div class="line">        <span class="comment">//接口子类继承:子类也泛型</span></div><div class="line">        Student3&lt;Integer&gt; s3 = <span class="keyword">new</span> Student3&lt;Integer&gt;();</div><div class="line">        s3.setAge(<span class="number">10</span>);</div><div class="line">        System.out.println(<span class="string">"interface:"</span> + s3.getAge());</div><div class="line">        </div><div class="line">        <span class="comment">//子类继承:子类不泛型</span></div><div class="line">        Student4 s4 = <span class="keyword">new</span> Student4();</div><div class="line">        s4.setAge(<span class="string">"10 years old"</span>);</div><div class="line">        System.out.println(<span class="string">"interface:"</span> + s4.getAge());</div><div class="line">        System.out.println(<span class="string">"--------------------------"</span>);</div><div class="line">        </div><div class="line">        <span class="comment">//受限泛型</span></div><div class="line">        printInfo1(s1); <span class="comment">//参数限制了只能是Number类或其子类</span></div><div class="line">        <span class="comment">//printInfo1(s2);</span></div><div class="line">        <span class="comment">//printInfo2(s1);</span></div><div class="line">        printInfo2(s2); <span class="comment">//参数限制了只能是String类或其父类</span></div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//方法参数通用</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printInfo</span><span class="params">(Person2&lt;?&gt; p)</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"printInfo:"</span> + p.getAge());</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//方法的参数泛型</span></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function"><span class="keyword">void</span> <span class="title">genericsMethod</span><span class="params">(Person2&lt;T&gt; p)</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"genericsMethod:"</span> + p.getAge());</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//受限泛型</span></div><div class="line">    <span class="comment">//上限:参数只能是Number类或其子类</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printInfo1</span><span class="params">(Person2&lt;? extends Number&gt; p)</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"extends:"</span> + p.getAge());</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//下限:参数只能是String类或其父类</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printInfo2</span><span class="params">(Person2&lt;? <span class="keyword">super</span> String&gt; p)</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"extends:"</span> + p.getAge());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li><li><p>结果：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">23</div><div class="line">--------------------------</div><div class="line">printInfo:24</div><div class="line">genericsMethod:24</div><div class="line">printInfo:24 years old</div><div class="line">genericsMethod:24 years old</div><div class="line">--------------------------</div><div class="line">printInfo:24</div><div class="line">printInfo:24 years old</div><div class="line">--------------------------</div><div class="line">printInfo:10</div><div class="line">genericsMethod:10</div><div class="line">printInfo:10 years old</div><div class="line">genericsMethod:10 years old</div><div class="line">--------------------------</div><div class="line">interface:10</div><div class="line">interface:10 years old</div><div class="line">--------------------------</div><div class="line">extends:10</div><div class="line">extends:10 years old</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 首先是一个普通类<code>Person1</code>，包含一个私有<code>int</code>类型数据，两个方法；<br>1.2 然后是一个泛型类<code>Person2</code>，包含的元素同上，把<code>int</code>换成了<code>T</code>；<br>1.3 之后是一个泛型接口<code>Person3</code>，也是使用<code>T</code>代替数据类型，里面有两个方法模板；<br>1.4 接下来是两个类<code>Student1</code>和<code>Student2</code>继承于<code>Person2</code>，前者数据类型是<code>T</code>，后者是<code>String</code>；<br>1.5 最后是两个类<code>Student3</code>和<code>Student4</code>继承于接口<code>Person3</code>，前者数据类型是<code>T</code>，后者是<code>String</code>；<br>1.6 从这几个例子中，可以看到<strong>泛型可以用在类、接口和方法的创建中，称之为泛型类、泛型接口、泛型方法</strong>；<br>　<br>2.1 <code>main</code>里，首先是普通的类的实例化，传入<code>int</code>类型数据，再打印；<br>2.2 接着是泛型的实例化，实例化时可以指定类里面的数据类型，这里的例子前者是<code>int</code>类型数据，后者是<code>String</code>类型数据；<br>2.3 接下来实例化对象<code>p4</code>，使用通配符<code>?</code>来代替数据类型，可以被其它数据类型赋值，但只能读取，不能设置；<br>2.4 然后是子类继承的实例化，前者定义类的时候类型是<code>T</code>，仍有泛型的特性，实例化的时候指定为<code>int</code>类型，后者定义类的时候类型是<code>String</code>，为普通的类型，只能为字符串；<br>2.5 接口的继承也是，前面定义的时候，可以选择子类继续保持类泛型，或者变成普通类；<br>2.6 受限泛型，方法<code>printInfo1</code>参数里有<code>? extends Number</code>，表示上限，参数限制了只能是Number类或其子类；方法<code>printInfo2</code>参数里有<code>? super String</code>，表示下限，参数限制了只能是String类或其父类；<br>2.7 从这几个例子中，可以看到<strong>子类从父类继承，或者从接口继承，仍可以保持泛型的特性，也可以设置为普通类；此外还有受限泛型，限制泛型支持的数据类型范围</strong>；</p></blockquote><h2 id="4-2-反射"><a href="#4-2-反射" class="headerlink" title="4.2 反射"></a>4.2 反射</h2><p>JAVA反射机制是在运行状态中，对于任意一个类，都能够知道这个类的所有属性和方法；对于任意一个对象，都能够调用它的任意一个方法和属性；<br>这种动态获取的信息以及动态调用对象的方法的功能称为java语言的反射机制。</p><p>反射就是把java类中的各种成分映射成一个个的Java对象，例如：一个类有：成员变量、方法、构造方法、包等等信息，利用反射技术可以对一个类进行解剖，把个个组成部分映射成一个个对象。</p><ul><li>示例：<figure class="highlight java"><figcaption><span>[Reflect.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> hceng;</div><div class="line"><span class="keyword">import</span> java.lang.reflect.Method;</div><div class="line"><span class="keyword">import</span> java.lang.reflect.Field;</div><div class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String name;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function">String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Reflect</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span> <span class="keyword">throws</span> Exception </span>&#123;</div><div class="line">        </div><div class="line">        <span class="comment">//获得class的方法一</span></div><div class="line">        Class&lt;?&gt; c1 = Class.forName(<span class="string">"hceng.Person"</span>);  <span class="comment">//must be caught or declared to be thrown</span></div><div class="line"></div><div class="line">        <span class="comment">//获得class的方法二</span></div><div class="line">        Person p = <span class="keyword">new</span> Person();</div><div class="line">        Class&lt;?&gt; c2 = p.getClass();</div><div class="line"></div><div class="line">        <span class="comment">//获得class的方法三</span></div><div class="line">        Class&lt;?&gt; c3 = Person.class;</div><div class="line">        </div><div class="line">        System.out.println(c1.getName());</div><div class="line">        System.out.println(c2.getName());</div><div class="line">        System.out.println(c3.getName());</div><div class="line">        </div><div class="line">        System.out.println(<span class="string">"--------------------------"</span>);       </div><div class="line"> </div><div class="line">        <span class="keyword">int</span> arr1[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</div><div class="line">        <span class="keyword">int</span> arr2[][] = &#123; &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;, &#123;<span class="number">1</span>,<span class="number">2</span>&#125; &#125;;</div><div class="line">        </div><div class="line">        Class&lt;?&gt; a1 = arr1.getClass();</div><div class="line">        Class&lt;?&gt; a2 = arr2.getClass();</div><div class="line">        Class&lt;?&gt; a3 = <span class="keyword">int</span>.class;</div><div class="line">        </div><div class="line">        System.out.println(a1.getName());</div><div class="line">        System.out.println(a2.getName());</div><div class="line">        System.out.println(a3.getName());</div><div class="line">        </div><div class="line">        System.out.println(<span class="string">"--------------------------"</span>);   </div><div class="line">        <span class="comment">//类的实例化</span></div><div class="line">        Class&lt;?&gt; j = Class.forName(<span class="string">"jack.Person"</span>); </div><div class="line">        </div><div class="line">        Object p1 = j.newInstance(); <span class="comment">//无参构造方法</span></div><div class="line">        </div><div class="line">        Constructor&lt;?&gt; con = j.getConstructor(String.class); <span class="comment">//有参构造方法</span></div><div class="line">        Object p2 =  con.newInstance(<span class="string">"hceng"</span>);</div><div class="line">        </div><div class="line">        System.out.println(<span class="string">"--------------------------"</span>);   </div><div class="line">        </div><div class="line">        <span class="comment">//通过反射调用方法</span></div><div class="line">        Method set =  j.getMethod(<span class="string">"setName"</span>, String.class);</div><div class="line">        set.invoke(p1, <span class="string">"jack1"</span>);</div><div class="line">        set.invoke(p2, <span class="string">"jack2"</span>);</div><div class="line"></div><div class="line">        Method get = j.getMethod(<span class="string">"getName"</span>);</div><div class="line">        System.out.println(get.invoke(p1));</div><div class="line">        System.out.println(get.invoke(p2)); </div><div class="line">        </div><div class="line">        System.out.println(<span class="string">"--------------------------"</span>);   </div><div class="line">        </div><div class="line">        <span class="comment">//通过修改属性</span></div><div class="line">        Field name = j.getDeclaredField(<span class="string">"name"</span>); <span class="comment">//公共、私有的都可以访问</span></div><div class="line">        name.setAccessible(<span class="keyword">true</span>); <span class="comment">//因为name是私有的,需要先修改访问权限</span></div><div class="line">        name.set(p1, <span class="string">"hello, hceng"</span>);</div><div class="line">        name.set(p2, <span class="string">"hello, jack"</span>);</div><div class="line">        System.out.println(name.get(p1));</div><div class="line">        System.out.println(name.get(p2));</div><div class="line">        </div><div class="line">        System.out.println(<span class="string">"--------------------------"</span>);   </div><div class="line">        <span class="comment">//通过传入参数,灵活调用不同的包</span></div><div class="line">        Class&lt;?&gt; h = Class.forName(args[<span class="number">0</span>]); </div><div class="line">        Constructor&lt;?&gt; c = h.getConstructor(String.class);</div><div class="line">        Object o =  c.newInstance(<span class="string">"hceng"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><figure class="highlight java"><figcaption><span>[Person.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> jack;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> String name;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//构造方法</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"Constructor1 of Person"</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">        System.out.println(<span class="string">"Constructor2 of Person, name is "</span>+<span class="keyword">this</span>.name);</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><figure class="highlight java"><figcaption><span>[Student.java]</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> jack;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> String name;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="comment">//构造方法</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">()</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"Constructor1 of Student"</span>);</div><div class="line">    &#125;</div><div class="line">    </div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Student</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.name = name;</div><div class="line">        System.out.println(<span class="string">"Constructor2 of Student, name is "</span>+<span class="keyword">this</span>.name);</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure><p>编译：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">javac -d . *.java</div></pre></td></tr></table></figure></p><ul><li>结果：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">hceng@android:/work/java_learn/14th_reflect$ java hceng.Reflect jack.Person</div><div class="line">hceng.Person</div><div class="line">hceng.Person</div><div class="line">hceng.Person</div><div class="line">--------------------------</div><div class="line">[I</div><div class="line">[[I</div><div class="line">int</div><div class="line">--------------------------</div><div class="line">Constructor1 of Person</div><div class="line">Constructor2 of Person, name is hceng</div><div class="line">--------------------------</div><div class="line">jack1</div><div class="line">jack2</div><div class="line">--------------------------</div><div class="line">hello, hceng</div><div class="line">hello, jack</div><div class="line">--------------------------</div><div class="line">Constructor2 of Person, name is hceng</div><div class="line">hceng@android:/work/java_learn/14th_reflect$ java hceng.Reflect jack.Student</div><div class="line">hceng.Person</div><div class="line">hceng.Person</div><div class="line">hceng.Person</div><div class="line">--------------------------</div><div class="line">[I</div><div class="line">[[I</div><div class="line">int</div><div class="line">--------------------------</div><div class="line">Constructor1 of Person</div><div class="line">Constructor2 of Person, name is hceng</div><div class="line">--------------------------</div><div class="line">jack1</div><div class="line">jack2</div><div class="line">--------------------------</div><div class="line">hello, hceng</div><div class="line">hello, jack</div><div class="line">--------------------------</div><div class="line">Constructor2 of Student, name is hceng</div></pre></td></tr></table></figure></li></ul><p>对该示例进行分析：</p><blockquote><p>1.1 整个示例有三个文件<code>Reflect.java</code>、<code>Person.java</code>、<code>Student.java</code>，其中<code>Reflect.java</code>在包<code>hceng</code>里，其余两个在包<code>jack</code>里；<br>1.2 在<code>Person.java</code>里，定义了一个类<code>Person</code>，包含一个私有变量、两个公共方法、两个构造方法(一个含参，一个不含)；<br>1.3  在<code>Student.java</code>里，定义了一个类<code>Student</code>，包含一个私有变量、两个公共方法、两个构造方法(一个含参，一个不含)；<br>　<br>2.1 在<code>main</code>里，示例了三种获取类的方法：通过包名字、通过实例化的对象、直接通过类名字，注意每种方法都会产生异常，这里为了简洁，直接将异常抛出；<br>2.2 得到了类，可以通过<code>getName</code>方法得到类完整名字；<br>　<br>3.1 定义一个一维数组，一个二维数组，一个整型数据类，得到其类名；<br>3.2 可以看到每种数据类型的类名都不一样；<br>　<br>4.1 通过包名，得到包<code>jack.Person</code>里类；<br>4.2 对于无参的构造方法，直接调用<code>newInstance</code>进行实例化；<br>4.3 有参的构造方法，先<code>getConstructor</code>得到构造函数，再调用<code>newInstance</code>传入参数实例化；<br>　<br>5.1 先通过<code>getMethod</code>，传入参数为方法名和数据类型，得到类里面的方法；<br>5.2 再通过<code>invoke</code>调用该方法，传入参数为实例化的对象和调用方法的参数；<br>　<br>6.1 通过<code>getDeclaredField</code>得到类属性；<br>6.2 如果属性是私有属性，需要使用<code>setAccessible</code>修改访问权限；<br>6.3 通过<code>set</code>修改属性内容，通过<code>get</code>获取属性内容；<br>　<br>7.1 之前通过<code>import</code>导入需要的包，从而调用不同的类，在程序中固定了，现在可以将包名作为参数传入，实现灵活的调用；， </p></blockquote><p>在Java运行中，可以通过三种方式得到运行期间的类：通过包名、通过实例化的对象、通过类名字；<br>通过这个类再实例化对象，修改属性或者调用方法等操作；</p><h1 id="5-其它"><a href="#5-其它" class="headerlink" title="5. 其它"></a>5. 其它</h1><p>所有示例源码:<br><a href="https://github.com/hceng/learn/tree/master/java_learn" target="_blank" rel="external">Github</a></p><p>参考资料:<br><a href="http://www.100ask.org/index.html" target="_blank" rel="external">韦东山第四期Android驱动_Java快速入门</a></p><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;毕业后就没怎么碰Java了，为了后面Android的学习，将Java的基础知识整理一下。&lt;br&gt;
    
    </summary>
    
    
      <category term="Android基础" scheme="http://yoursite.com/tags/Android%E5%9F%BA%E7%A1%80/"/>
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>RK3399——裸机大全</title>
    <link href="http://yoursite.com/2018/08/16/RK3399%E2%80%94%E2%80%94%E8%A3%B8%E6%9C%BA%E5%A4%A7%E5%85%A8/"/>
    <id>http://yoursite.com/2018/08/16/RK3399——裸机大全/</id>
    <published>2018-08-16T09:40:06.000Z</published>
    <updated>2019-01-03T08:52:58.753Z</updated>
    
    <content type="html"><![CDATA[<p>以64位的RK3399为例，实现裸机的启动、中断、串口(printf移植)、定时器、ADC、PWM、I2C、SPI、LCD(MIPI)等；<br><a id="more"></a><br>这应该是最后一次写裸机代码了，老是写裸机，都要写吐了。<br>这次选的是64位平台(ARMv8架构)的Firefly-RK3399，注定坑多，也更有挑战性一点。</p><h1 id="1-ARMv8基础"><a href="#1-ARMv8基础" class="headerlink" title="1.ARMv8基础"></a>1.ARMv8基础</h1><h2 id="1-1-基本概念"><a href="#1-1-基本概念" class="headerlink" title="1.1 基本概念"></a>1.1 基本概念</h2><p><strong> 1.架构和内核型号 </strong></p><ul><li><strong>架构(Architecture)</strong>:就是常说的ARMv5(32bits)、ARMv6(32bits)、ARMv7(32bits)、ARMv8(32/64bits)；</li><li><strong>内核型号</strong>:就是常说的ARM7、ARM9、Cortex-A系列(Aplication)、Cortex-R系列(Runtime)、Cortex-M系列(MCU)；</li><li><strong>举例</strong>:单片机STM32F103C8T6采用Cortex-M3内核，采用ARMv7-M架构；<br>　　　　瑞芯微RK3288采用4个Cortex-A17，采用ARMv7-A架构；<br>　　　　瑞芯微RK3399采用2个Cortex-A72和4个Cortex-A53组成，Cortex-A72和Cortex-A53都是ARMv8-A架构。<br>　　　　高通骁龙845处理器由4个Cortex-A75和4个Cortex-A55组成，Cortex-A75和Cortex-A55都是ARMv8-A架构。</li><li><strong>发展迭代</strong>：<div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180816/1.jpg"></div></li></ul><p><strong> 2.AArch64/AArch32/A64/A32/T32 </strong></p><table><thead><tr><th style="text-align:center">名字</th><th style="text-align:center">类型</th><th>说明</th></tr></thead><tbody><tr><td style="text-align:center">AArch64</td><td style="text-align:center">架构</td><td>指基于64bits运作的ARMv8架构（通用寄存器X0-X30）</td></tr><tr><td style="text-align:center">AArch32</td><td style="text-align:center">架构</td><td>指基于32bits运作的ARMv8架构，并且兼容之前的ARMv7架构（通用寄存器R0-R15）</td></tr><tr><td style="text-align:center">A64</td><td style="text-align:center">指令集</td><td>指在AArch64模式下支持的ARM 64bits指令集</td></tr><tr><td style="text-align:center">A32</td><td style="text-align:center">指令集</td><td>指ARMv7架构下支持的ARM 32bits指令集，在ARMv8中也有新加入的A32指令集</td></tr><tr><td style="text-align:center">T32</td><td style="text-align:center">指令集</td><td>指ARMv7架构下支持的Thumb2 16/32bits指定集，在ARMv8中也有新加入的T32指令集。</td></tr></tbody></table><h2 id="1-2-AArch64-32寄存器"><a href="#1-2-AArch64-32寄存器" class="headerlink" title="1.2 AArch64/32寄存器"></a>1.2 AArch64/32寄存器</h2><table><thead><tr><th style="text-align:center">AArch64</th><th style="text-align:center">Special</th><th>Role in the procedure call standard</th></tr></thead><tbody><tr><td style="text-align:center">x0…x7</td><td style="text-align:center"></td><td>Parameter/result registers(参数传入/返回结果）</td></tr><tr><td style="text-align:center">x8</td><td style="text-align:center"></td><td>Indirect result location register</td></tr><tr><td style="text-align:center">x9…x15</td><td style="text-align:center"></td><td>Temporary registers(临时寄存器)</td></tr><tr><td style="text-align:center">x16</td><td style="text-align:center">IP0</td><td>The first intra-procedure-call scratch register (can be used by call veneers and PLT code); at other times may be used as a temporary register.</td></tr><tr><td style="text-align:center">x17</td><td style="text-align:center">IP1</td><td>The second intra-procedure-call temporary register (can be used by call veneers and PLT code); at other times may be used as a temporary register.</td></tr><tr><td style="text-align:center">x18</td><td style="text-align:center"></td><td>The Platform Register, if needed; otherwise a temporary register.</td></tr><tr><td style="text-align:center">x19…x28</td><td style="text-align:center"></td><td>Callee-saved registers(由被调用者保存的寄存器)</td></tr><tr><td style="text-align:center">x29</td><td style="text-align:center">FP</td><td>The Frame Pointer(栈帧指针)</td></tr><tr><td style="text-align:center">x30</td><td style="text-align:center">LR</td><td>The Link Register(链接寄存器)</td></tr><tr><td style="text-align:center">SP</td><td style="text-align:center"></td><td>The Stack Pointer(栈指针)</td></tr></tbody></table><table><thead><tr><th style="text-align:center">AArch32</th><th style="text-align:center">Special</th><th>Role in the procedure call standard</th></tr></thead><tbody><tr><td style="text-align:center">r0…r3</td><td style="text-align:center"></td><td>Parameter/result registers</td></tr><tr><td style="text-align:center">r4…r11</td><td style="text-align:center"></td><td>Temporary registers (r9 also as platform register)</td></tr><tr><td style="text-align:center">r12</td><td style="text-align:center">IP</td><td>The Intra-Procedure-call scratch register.</td></tr><tr><td style="text-align:center">r13</td><td style="text-align:center">SP</td><td>The second intra-procedure-call temporary register (can be used by call veneers and PLT code); at other times may be used as a temporary register.</td></tr><tr><td style="text-align:center">r14</td><td style="text-align:center">LR</td><td>The Platform Register, if needed; otherwise a temporary register.</td></tr><tr><td style="text-align:center">r15</td><td style="text-align:center">PC</td><td>Callee-saved registers</td></tr></tbody></table><p>两者区别：</p><table><tr><th>Execution State</th><th>Note</th></tr><tr><td>AArch64</td><td>1. 提供<span style="font-weight:bold">31个64bits</span>的通用寄存器(x0~x30，其中x30可作为LR)<br>2. 提供64bits程序计数器(PC)、栈指针(SP)、异常链接寄存器(ELR)<br>3. 提供<span style="font-weight:bold">32个128bits</span> 的SIMD Vector与Scalar Floating-Point寄存器<br>4. 定义ARMv8 EL0~EL3共4个执行权限(Execution Privilege)<br>5. 支持<span style="font-weight:bold">64bits Virtual-Addressing</span><br>6. 定义一组PSTATE用以保存PE(Processing Element)状态</td></tr><tr><td>AArch32</td><td>1. 提供<span style="font-weight:bold">16个32bits</span>的通用寄存器(r0~r12，其中r13=SP、r14=LR、r15=PC，且r14需要同时供ELR与LR之用）<br>2. 提供一个ELR，用以作为从Hyp-Mode的Exception返回之用<br>3. 提供<span style="font-weight:bold">32个64bits</span>的Advanced SIMD Vector与Scalar Floating-Point寄存器<br>4. 提供A32与T32两种指令集的组合<br>5. 使用<span style="font-weight:bold">32bits Virtual-Addressing</span><br>6. 只使用CPSR(当前程序状态寄存器)保存PE(Processing Element)状态。</td></tr></table><h2 id="1-3-ARMv8-Exception-Level"><a href="#1-3-ARMv8-Exception-Level" class="headerlink" title="1.3 ARMv8 Exception Level"></a>1.3 ARMv8 Exception Level</h2><p>针对Security的需求，ARMv8的系统软件设计可以提供安全模式与非安全模式的状态。<br>ARMv8规定了CPU有4种运行级别。每种运行级别下标的数字越大，其权力级别越高。其中EL0为非特权等级，即平时应用程序运行时的级别；EL1为特权等级，即操作系统运行时的级别；EL2为虚拟机监视器运行级别，即虚拟机的控制层运行的级别；EL3为切换EL1和EL2级别时需要进入的一个级别，为CPU的最高级别。</p><p>若底层EL(Exception Level)为32bits，则上层EL的软件就只能是32位。</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180816/2.png"></div><p>若底层的EL为64bits，则上层EL就可以依据需求选择为32bits或是64bits。</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180816/3.png"></div><h1 id="2-RK3399启动"><a href="#2-RK3399启动" class="headerlink" title="2.RK3399启动"></a>2.RK3399启动</h1><p>先看一下RK3399的启动流程图<sup>[1]</sup>：</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180816/4.png"></div><p>从图中可以得到以下几个结论：</p><ul><li>1.RK3399上电后，会从<code>0xffff0000</code>获取<code>romcode</code>并运行；</li><li>2.然后依次从Nor Flash、Nand Flash、eMMC、SD/MMC获取<code>ID BLOCK</code>，<code>ID BLOCK</code>正确则启动，都不正确则从USB端口下载；</li><li>3.如果emmc启动，则先读取SDRAM(DDR)初始化代码到内部SRAM，然后初始化DDR，再将emmc上的代码(剩下的用户代码)复制到DDR运行；</li><li>4.如果从USB下载，则先获取DDR初始化代码，下载到内部SRAM中，然后运行代码初始化DDR，再获取loader代码(用户代码)，放到DDR中并运行；</li><li>5.无论是何种方式，都需要DDR的初始化代码，结合前面RK3288的经验，就是向自己写的代码加上”头部信息”，这个”头部信息”就包含DDR初始化操作；</li></ul><h2 id="2-1-官方启动分析"><a href="#2-1-官方启动分析" class="headerlink" title="2.1 官方启动分析"></a>2.1 官方启动分析</h2><p>如何分析一款芯片的启动方式？<br>前面的一篇博客<a href="https://hceng.cn/2018/03/28/iMX6ULL%E4%B8%8A%E6%89%8B%E4%BD%93%E9%AA%8C/#more" target="_blank" rel="external">iMX6ULL上手体验</a>，里面已经分析过了，大致就是先用厂家提供的资料，配置相关环境、编译、烧写，运行起来。然后就有了U-boot源码，从U-boot就可以几乎提取出所有的裸机代码，本文也是这样做的。</p><p>分析U-Boot的编译流程，可以看到如下内容：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">./tools/boot_merger ./tools/rk_tools/RKBOOT/RK3399MINIALL.ini</div><div class="line">out:rk3399_loader_v1.09.109.bin</div><div class="line">fix opt:rk3399_loader_v1.09.109.bin</div><div class="line">merge success(rk3399_loader_v1.09.109.bin)</div><div class="line">./tools/trust_merger  ./tools/rk_tools/RKTRUST/RK3399TRUST.ini</div><div class="line">out:trust.img</div><div class="line">merge success(trust.img)</div><div class="line">./tools/loaderimage --pack --uboot u-boot.bin uboot.img</div><div class="line">pack input u-boot.bin </div><div class="line">pack file size: 315128 </div><div class="line">crc = 0xb4d13cd6</div><div class="line">uboot version: U-Boot 2014.10-RK3399-06 (Aug 16 2018 - 04:00:27)</div><div class="line">pack uboot.img success! </div><div class="line">/work/firefly-rk3399</div><div class="line">Firefly-RK3399 make images finish!</div></pre></td></tr></table></figure></p><p>可以看出这里使用了三个工具，产生了三个文件：<br>①:使用<code>boot_merger</code>，参数为<code>RK3399MINIALL.ini</code>，得到loader文件<code>rk3399_loader_v1.09.109.bin</code>，打开<code>RK3399MINIALL.ini</code>内容为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">[CHIP_NAME]</div><div class="line">NAME=RK330C</div><div class="line">[VERSION]</div><div class="line">MAJOR=1</div><div class="line">MINOR=09</div><div class="line">[CODE471_OPTION]</div><div class="line">NUM=1</div><div class="line">Path1=tools/rk_tools/bin/rk33/rk3399_ddr_800MHz_v1.09.bin</div><div class="line">Sleep=1</div><div class="line">[CODE472_OPTION]</div><div class="line">NUM=1</div><div class="line">Path1=tools/rk_tools/bin/rk33/rk3399_usbplug_v1.09.bin</div><div class="line">[LOADER_OPTION]</div><div class="line">NUM=2</div><div class="line">LOADER1=FlashData</div><div class="line">LOADER2=FlashBoot</div><div class="line">FlashData=tools/rk_tools/bin/rk33/rk3399_ddr_800MHz_v1.09.bin</div><div class="line">FlashBoot=tools/rk_tools/bin/rk33/rk3399_miniloader_v1.09.bin</div><div class="line">[OUTPUT]</div><div class="line">PATH=rk3399_loader_v1.09.109.bin</div></pre></td></tr></table></figure></p><p>得知依赖的文件有:DDR相关的<code>rk3399_ddr_800MHz_v1.09.bin</code>、USB相关的<code>rk3399_usbplug_v1.09.bin</code>、miniloader(瑞芯微修改的一个bootloader)相关的<code>rk3399_miniloader_v1.09.bin</code>。<br><code>boot_merger</code>将这三个bin文件最后合并成<code>rk3399_loader_v1.09.109.bin</code>。</p><p>②:使用<code>trust_merger</code>，参数为<code>RK3399TRUST.ini</code>，生成<code>trust.img</code>；</p><p>③:使用<code>loaderimage</code>将<code>u-boot.bin</code>变成<code>uboot.img</code>；</p><p>最后使用Android Tools，烧写<code>rk3399_loader_v1.09.109.bin</code>、<code>trust.img</code>和<code>uboot.img</code>即可启动U-Boot。</p><p>对以上过程进行分析，再加上实验测试和结合RK3288的经验，得出裸机启动文件的制作结论如下：<br><strong>使用<code>boot_merger</code>将<code>rk3399_ddr_800MHz_v1.09.bin</code>、<code>rk3399_usbplug_v1.09.bin</code>和自己的裸机文件<code>rk3399.bin</code>合并出新文件即可。</strong></p><h2 id="2-2-制作裸机启动文件"><a href="#2-2-制作裸机启动文件" class="headerlink" title="2.2 制作裸机启动文件"></a>2.2 制作裸机启动文件</h2><p>经过分析和测试，现实现了emmc和TF卡启动裸机程序，并把整个过程整理了一个工程模板。<br>工程模板见<a href="https://github.com/hceng/RK3399/tree/master/hardware/1_template" target="_blank" rel="external">GitHub</a>，里面包含两个文件夹和两个文件。</p><blockquote><p><code>code</code>文件夹存放裸机源码；<br><code>tools</code>存放制作“头部”的工具和配置文件；<br><code>rk3399_hardware_tool.sh</code>是一个shell脚本，用于自动生成加“头部”后的裸机文件；<br><code>README.txt</code>是操作说明；</p></blockquote><p>以后只需要先进入<code>code</code>文件夹修改裸机源码，然后执行<code>make</code>生成<code>rk399.bin</code>，再退出到工程目录下，执行脚本<code>rk3399_hardware_tool.sh</code>即可生成<code>rk3288_emmc.bin</code>和<code>rk3288_sd.bin</code>；</p><ul><li><code>rk3288_emmc.bin</code>用于emmc启动：Windows下使用AndroidTool.exe，开发板进入MaskRom模式，烧入Loader位置;</li><li><code>rk3288_sd.bin</code>用于SD卡启动：Linux下，插上SD卡，执行<code>sudo dd if=rk3399_sd.bin of=/dev/sdb seek=$(((0x000040)))</code>(其中/dev/sdb为SD卡)</li></ul><h1 id="3-Uboot启动部分分析"><a href="#3-Uboot启动部分分析" class="headerlink" title="3.Uboot启动部分分析"></a>3.Uboot启动部分分析</h1><p>为了方便后面从U-boot提取所需裸机代码，有必要先对U-boot进行分析，本节只分析启动部分的，后续具体某个模块，如LCD，将在后面对应的章节分析。<br>另外，本次分析是的RK3399，64位的ARMv8架构，与市面上较多的32位ARMv7架构SOC略有区别，注意不要混淆。<br>RK3399编译过的U-boot已上传<a href="https://github.com/hceng/RK3399/tree/master/hardware/2_u-boot_source" target="_blank" rel="external">GitHub</a>。U-boot执行的第一个文件是start.S，下面开始对其进行分析。</p><h2 id="3-1-start-S"><a href="#3-1-start-S" class="headerlink" title="3.1 start.S"></a>3.1 start.S</h2><p>所在文件路径：<a href="https://github.com/hceng/RK3399/blob/master/hardware/2_u-boot_source/arch/arm/cpu/armv8/start.S" target="_blank" rel="external"><code>u-boot/arch/arm/cpu/armv8/start.S</code></a></p><ul><li><p><strong>1.检查loader tag [unimportant]</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">.globl_start</div><div class="line">_start:</div><div class="line">nop</div><div class="line">breset               //hceng:首先跳到reset</div><div class="line">    ……</div><div class="line"></div><div class="line">reset:</div><div class="line"></div><div class="line">#ifdef CONFIG_ROCKCHIP</div><div class="line">/*</div><div class="line"> * check loader tag</div><div class="line"> */</div><div class="line">ldrx0, =__loader_tag</div><div class="line">ldrw1, [x0]</div><div class="line">ldrx0, =LoaderTagCheck</div><div class="line">ldrw2, [x0]</div><div class="line">cmpw1, w2</div><div class="line">b.eqcheckok            //hceng:LoaderTag正常则跳到checkok ，反之退出U-Boot进入maskrom or miniloader</div><div class="line"></div><div class="line">ret                   /* return to maskrom or miniloader */</div><div class="line"></div><div class="line">checkok:</div><div class="line">#endif</div></pre></td></tr></table></figure><p>这里检查loader tag对后面写裸机没什么用。</p></li><li><p><strong>2.设置中断向量等 [important]</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">adrx0, vectors            //hceng:将中断向量地址保存到x0</div><div class="line">switch_el x1, 3f, 2f, 1f       //hceng:根据CurrentEL的bit[3:2]位得知当前的EL级别，跳转到不同的分支进行处理，这里实测跳到3f，即上电为EL3</div><div class="line">3:msrvbar_el3, x0           //hceng:将中断向量保存到vbar_el3(Vector Base Address Register (EL3))</div><div class="line">mrsx0, scr_el3            //hceng:获取scr_el3(Secure Configuration Register)的值</div><div class="line">orrx0, x0, #0xf           //hceng:将低四位设置为1:EA|FIQ|IRQ|NS  </div><div class="line">msrscr_el3, x0            //hceng:写入scr_el3</div><div class="line">msrcptr_el3, xzr          //hceng:清除cptr_el3(Architectural Feature Trap Register (EL3))，Enable FP/SIMD</div><div class="line">ldrx0, =COUNTER_FREQUENCY //hceng:晶振频率：24000000hz</div><div class="line">msrcntfrq_el0, x0         //hceng:将晶振频率写入cntfrq_el0(Counter-timer Frequency register) </div><div class="line">#ifdef CONFIG_ROCKCHIP</div><div class="line">msrcntvoff_el2, xzr       /* clear cntvoff_el2 for kernel */</div><div class="line">#endif</div><div class="line">b0f                     //hceng:跳到本段结尾的0f，后面的未执行</div><div class="line">2:msrvbar_el2, x0</div><div class="line">movx0, #0x33ff            //hceng:FP为Float Processor(浮点运算器)；SIMD为Single Instruction Multiple Data(采用一个控制器来控制多个处理器)</div><div class="line">msrcptr_el2, x0           /* Enable FP/SIMD */</div><div class="line">b0f</div><div class="line">1:msrvbar_el1, x0</div><div class="line">movx0, #3 &lt;&lt; 20</div><div class="line">msrcpacr_el1, x0          /* Enable FP/SIMD */</div><div class="line">0:</div></pre></td></tr></table></figure><blockquote><p>注：<br>1.<code>switch_el</code>这一宏定义伪指令在<code>u-boot/arch/arm/include/asm/macro.h</code>定义；<br>2.<code>vbar_el3</code>等寄存器定义在文档<code>ARMv8-A_Architecture_Reference_Manual_(Issue_A.a).pdf</code><sup>[2]</sup>中；<br>3.<code>XZR/WZR</code>(word zero rigiser)分别代表64/32位，<code>zero register</code>的作用就是0，写进去代表丢弃结果，拿出来是0；</p></blockquote></li></ul><p>中断向量的定义在文件<code>u-boot/arch/arm/cpu/armv8/exceptions.S</code>中，内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> * Exception vectors.</div><div class="line"> */</div><div class="line">.align11        //hceng:注意这里的对齐11，是因为vbar_el3的低11为是Reserved，需要为0</div><div class="line">        //因此需要从2^11=2k的倍数位置起存放vectors</div><div class="line">.globlvectors</div><div class="line">vectors:</div><div class="line">.align7        //hceng:每个中断向量的偏移为32字节</div><div class="line">b_do_bad_sync/* Current EL Synchronous Thread */</div><div class="line"></div><div class="line">.align7</div><div class="line">b_do_bad_irq/* Current EL IRQ Thread */</div><div class="line"></div><div class="line">.align7</div><div class="line">b_do_bad_fiq/* Current EL FIQ Thread */</div><div class="line"></div><div class="line">.align7</div><div class="line">b_do_bad_error/* Current EL Error Thread */</div><div class="line"></div><div class="line">.align7</div><div class="line">b_do_sync/* Current EL Synchronous Handler */</div><div class="line"></div><div class="line">.align7</div><div class="line">b_do_irq/* Current EL IRQ Handler */</div><div class="line"></div><div class="line">.align7</div><div class="line">b_do_fiq/* Current EL FIQ Handler */</div><div class="line"></div><div class="line">.align7</div><div class="line">b_do_error/* Current EL Error Handler */</div><div class="line"></div><div class="line"></div><div class="line">_do_bad_sync:                //hceng:对应的异常处理函数</div><div class="line">exception_entry    </div><div class="line">bldo_bad_sync</div><div class="line"></div><div class="line">_do_bad_irq:</div><div class="line">exception_entry</div><div class="line">bldo_bad_irq</div><div class="line"></div><div class="line">_do_bad_fiq:</div><div class="line">exception_entry</div><div class="line">bldo_bad_fiq</div><div class="line"></div><div class="line">_do_bad_error:</div><div class="line">exception_entry</div><div class="line">bldo_bad_error</div><div class="line"></div><div class="line">_do_sync:</div><div class="line">exception_entry</div><div class="line">bldo_sync</div><div class="line"></div><div class="line">_do_irq:</div><div class="line">exception_entry         //hceng:保护现场，把ELR/X0~X30保存到堆栈</div><div class="line">bldo_irq</div><div class="line">exception_exit         //hceng:恢复现场，从堆栈恢复ELR/X0~X30</div><div class="line"></div><div class="line">_do_fiq:</div><div class="line">exception_entry</div><div class="line">bldo_fiq</div><div class="line"></div><div class="line">_do_error:</div><div class="line">exception_entry</div><div class="line">bldo_error</div><div class="line"></div></pre></td></tr></table></figure><br>这一部分功能就是根据当前的EL级别，配置中断向量、MMU、Endian、i/d Cache等，比较重要。</p><ul><li><p><strong>3.配置ARM核心特定勘误表 [unimportant]</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">/* Apply ARM core specific erratas */</div><div class="line">blapply_core_errata</div></pre></td></tr></table></figure><p>看样子是对ARM做一些勘误，实测没有用到，不重要。</p></li><li><p><strong>4.lowlevel_init [important]</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div></pre></td><td class="code"><pre><div class="line">/* Processor specific initialization */</div><div class="line">bllowlevel_init</div><div class="line"></div><div class="line">……</div><div class="line"></div><div class="line">WEAK(lowlevel_init)</div><div class="line">movx29, lr       /* Save LR */</div><div class="line"></div><div class="line">#if defined(CONFIG_ROCKCHIP)</div><div class="line"></div><div class="line">/* switch to el1 secure */</div><div class="line">#if defined(CONFIG_SWITCH_EL3_TO_EL1)  //hceng:实测没有定义，不需要从EL3切换到EL1，从前面可以看出，现在已经是EL1</div><div class="line">/*</div><div class="line"> * Switch to EL1 from EL3</div><div class="line"> */</div><div class="line">mrsx0, CurrentEL       /* check currentEL */</div><div class="line">cmpx0, 0xc </div><div class="line">b.neel1_start       /* currentEL != EL3 */</div><div class="line"></div><div class="line">ldrx0, =0xd00       /* ST, bit[11] | RW, bit[10] | HCE, bit[8] */</div><div class="line">msrscr_el3, x0</div><div class="line">ldrx0, =0x3c5       /* D, bit[9] | A, bit[8] | I, bit[7] | F, bit[6] | 0b0101 EL1h */</div><div class="line">msrspsr_el3, x0</div><div class="line">ldrx0, =el1_start</div><div class="line">msrelr_el3, x0</div><div class="line">eret</div><div class="line"></div><div class="line">el1_start:</div><div class="line">nop</div><div class="line">#endif /* CONFIG_SWITCH_EL3_TO_EL1 */</div><div class="line">#endif /* CONFIG_ROCKCHIP */</div><div class="line"></div><div class="line">#if defined(CONFIG_GICV2) || defined(CONFIG_GICV3)  //hceng:实测定义的是CONFIG_GICV3</div><div class="line">branch_if_slave x0, 1f        //hceng:通过mpidr_el1寄存器，判断当前处理器是否是从属CPU，如果是选择所有affinity为0的作为主CPU</div><div class="line">ldrx0, =GICD_BASE         //hceng:把GICD基地址作为参数传给gic_init_secure </div><div class="line">blgic_init_secure        //hceng:初始化主CPU的中断寄存器</div><div class="line">1:</div><div class="line">#if defined(CONFIG_GICV3)</div><div class="line">ldrx0, =GICR_BASE         //hceng:把GICR基地址作为参数传给gic_init_secure_percpu</div><div class="line">blgic_init_secure_percpu //hceng:初始化其它各个CPU的中断寄存器</div><div class="line">#elif defined(CONFIG_GICV2)            //hceng:未执行</div><div class="line">ldrx0, =GICD_BASE</div><div class="line">ldrx1, =GICC_BASE</div><div class="line">blgic_init_secure_percpu</div><div class="line">#endif</div><div class="line"></div><div class="line">#if defined(CONFIG_ROCKCHIP)</div><div class="line">/*</div><div class="line"> * Setting HCR_EL2.TGE AMO IMO FMO for exception rounting to EL2</div><div class="line"> */</div><div class="line">mrsx0, CurrentEL       /* check currentEL */</div><div class="line">cmpx0, 0x8                //hceng:根据CurrentEL的bir[3:2]判断当前运行级别，0xC(EL3)、0x8(EL2)、0x4(EL1)、0x0(EL0)，实测并没处于EL2，后面的内容不执行</div><div class="line">b.neendseting       /* currentEL != EL2 */</div><div class="line"></div><div class="line">mrsx9, hcr_el2            //hceng:hcr_el2(Hypervisor Configuration Register)</div><div class="line">orrx9, x9, #(7 &lt;&lt; 3)      /* HCR_EL2.AMO IMO FMO set */</div><div class="line">orrx9, x9, #(1 &lt;&lt; 27)     /* HCR_EL2.TGE set */</div><div class="line">msrhcr_el2, x9</div><div class="line"></div><div class="line">endseting:</div><div class="line">nop</div><div class="line">#endif /* CONFIG_ROCKCHIP */</div><div class="line"></div><div class="line">branch_if_master x0, x1, 2f    //hceng:通过mpidr_el1寄存器，判断当前处理器是否是主CPU，如果是选择所有affinity为0的作为主CPU；实测跳到2f</div><div class="line"></div><div class="line">/*</div><div class="line"> * Slave should wait for master clearing spin table.</div><div class="line"> * This sync prevent salves observing incorrect</div><div class="line"> * value of spin table and jumping to wrong place.</div><div class="line"> */</div><div class="line">#if defined(CONFIG_GICV2) || defined(CONFIG_GICV3)</div><div class="line">#ifdef CONFIG_GICV2</div><div class="line">ldrx0, =GICC_BASE</div><div class="line">#endif</div><div class="line">blgic_wait_for_interrupt</div><div class="line">#endif</div><div class="line"></div><div class="line">/*</div><div class="line"> * All slaves will enter EL2 and optionally EL1.</div><div class="line"> */</div><div class="line">blarmv8_switch_to_el2  </div><div class="line">#ifdef CONFIG_ARMV8_SWITCH_TO_EL1</div><div class="line">blarmv8_switch_to_el1</div><div class="line">#endif</div><div class="line"></div><div class="line">#endif /* CONFIG_ARMV8_MULTIENTRY */</div><div class="line"></div><div class="line">2:                                   //hceng：前面的都没执行，跳到这，返回</div><div class="line">movlr, x29     /* Restore LR */</div><div class="line">ret</div><div class="line">ENDPROC(lowlevel_init)</div></pre></td></tr></table></figure></li></ul><blockquote><p>注：<br>1.<code>branch_if_slave</code>和<code>branch_if_master</code>在<code>u-boot/arch/arm/include/asm/macro.h</code>定义；<br>2.<code>gic_init_secure</code>和<code>gic_init_secure_percpu</code>这两个中断初始化的关键函数在<code>u-boot/arch/arm/lib/gic_64.S</code>定义；<br>3.<code>armv8_switch_to_el2</code>和<code>armv8_switch_to_el1</code>在<code>u-boot/arch/arm/cpu/armv8/exceptions.S</code>定义；</p></blockquote><p><code>lowlevel_init</code>的主要功能就是中断的初始化，后面写中断服务程序的使用会用到。</p><ul><li><p><strong>5.是否需要在U-Boot开启多核CPU [unimportant]</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">branch_if_master x0, x1, master_cpu</div><div class="line"></div><div class="line">/*</div><div class="line"> * Slave CPUs</div><div class="line"> */</div><div class="line">slave_cpu:</div><div class="line">wfe</div><div class="line">ldrx1, =CPU_RELEASE_ADDR</div><div class="line">ldrx0, [x1]</div><div class="line">cbzx0, slave_cpu</div><div class="line">brx0/* branch to the given address */</div><div class="line">master_cpu:</div><div class="line">/* On the master CPU */</div><div class="line">#endif /* CONFIG_ARMV8_MULTIENTRY */</div></pre></td></tr></table></figure><p>实测没有定义，不用管。</p></li><li><p><strong>6.跳转到_main [important]</strong><br>到此<code>start.S</code>的工作就基本完成了，接下来就交给ARM公共的<code>_main</code>。</p></li></ul><h2 id="3-2-crt0-64-S"><a href="#3-2-crt0-64-S" class="headerlink" title="3.2 crt0_64.S"></a>3.2 crt0_64.S</h2><p>所在文件路径：<a href="https://github.com/hceng/RK3399/blob/master/hardware/2_u-boot_source/arch/arm/lib/crt0_64.S" target="_blank" rel="external"><code>u-boot/arch/arm/cpu/armv8/start.S</code></a><br><code>_main</code>在<code>crt0_64.S</code>里，<code>crt0</code>是<code>C-runtime Startup Code</code>的简称，意思就是运行C代码之前的准备工作，包括设置栈、重定位、清理BSS段等；</p><ul><li><strong>1.设置栈 [important]</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> * Set up initial C runtime environment and call board_init_f(0).</div><div class="line"> */</div><div class="line">ldrx0, =(CONFIG_SYS_INIT_SP_ADDR)     //hceng:设置栈顶为0x80000000=2G</div><div class="line">subx0, x0, #GD_SIZE           /* allocate one GD above SP */</div><div class="line">bicsp, x0, #0xf                   /* 16-byte alignment for ABI compliance */</div><div class="line">movx18, sp           /* GD is above SP */</div></pre></td></tr></table></figure></li></ul><p>这里栈需要16字节对齐，即要求地址为16的倍数，只需要二进制位最后四位为0(2的4次方)，与前面中断向量地址需要2K对齐，实现原理类似。<br>另外U-Boot在SP上面分配了一块GD(global data)，后面写裸机用不到。</p><ul><li><p><strong>2.board_init_f [important]</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">movx0, #0          //hceng:将0作为参数传入board_init_f</div><div class="line">blboard_init_f</div></pre></td></tr></table></figure><p><code>board_init_f</code>所在文件路径：<a href="https://github.com/hceng/RK3399/blob/master/hardware/2_u-boot_source/common/board_f.c" target="_blank" rel="external"><code>u-boot/common/board_f.c</code></a>。<br><code>board_init_f</code>中调用<code>initcall_run_list(init_sequence_f)</code>，<code>init_sequence_f</code>是个数组，里面是将要进行初始化的函数列表，完成一些前期的初始化工作，比如board相关的early的初始化<code>board_early_init_f</code>、环境变量初始化<code>env_init</code>、串口初始化的<code>serial_init</code>、I2C初始化<code>init_func_i2c</code>、设备树相关准备工作<code>fdtdec_prepare_fdt</code>、打印CPU信息<code>print_cpuinfo</code>、SDRAM初始化<code>dram_init</code>、计算重定位信息<code>setup_reloc</code>等；</p></li><li><p><strong>3.重定位 [important]</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> * Set up intermediate environment (new sp and gd) and call</div><div class="line"> * relocate_code(addr_moni). Trick here is that we&apos;ll return</div><div class="line"> * &apos;here&apos; but relocated.</div><div class="line"> */</div><div class="line">ldrx0, [x18, #GD_START_ADDR_SP]/* x0 &lt;- gd-&gt;start_addr_sp */</div><div class="line">bicsp, x0, #0xf                /* 16-byte alignment for ABI compliance */</div><div class="line">ldrx18, [x18, #GD_BD]/* x18 &lt;- gd-&gt;bd */</div><div class="line">subx18, x18, #GD_SIZE/* new GD is below bd */</div><div class="line"></div><div class="line">#ifndef CONFIG_SKIP_RELOCATE_UBOOT</div><div class="line">adrlr, relocation_return</div><div class="line">ldrx9, [x18, #GD_RELOC_OFF]/* x9 &lt;- gd-&gt;reloc_off */</div><div class="line">addlr, lr, x9                /* new return address after relocation */</div><div class="line">ldrx0, [x18, #GD_RELOCADDR]/* x0 &lt;- gd-&gt;relocaddr */</div><div class="line">brelocate_code</div><div class="line">#endif</div><div class="line"></div><div class="line">relocation_return:</div></pre></td></tr></table></figure><p>先是更新了gd结构体，然后根据宏<code>CONFIG_SKIP_RELOCATE_UBOOT</code>决定是否要重定位。<br>这里是不需要重定位的，因为链接脚本<a href="https://github.com/hceng/RK3399/blob/master/hardware/2_u-boot_source/arch/arm/cpu/armv8/u-boot.lds" target="_blank" rel="external"><code>u-boot.lds</code></a>里面的链接地址是<code>0x00000000</code>，而RK3399上电后，加头的<code>boot code</code>会自动将代码复制到DDR(0x00000000)，两者地址相同，不需要重定位。<br>重定位的代码在<code>u-boot/arch/arm/lib/relocate_64.S</code>里面。</p></li><li><p><strong>4.重新设置异常向量表 [important]</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> * Set up final (full) environment</div><div class="line"> */</div><div class="line">blc_runtime_cpu_setup/* still call old routine */</div></pre></td></tr></table></figure><p>如果发生了重定位，需要重新设置异常向量表。<code>c_runtime_cpu_setup</code>定义在<code>start.S</code>里面。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">ENTRY(c_runtime_cpu_setup)</div><div class="line">/* Relocate vBAR */</div><div class="line">adrx0, vectors</div><div class="line">switch_el x1, 3f, 2f, 1f</div><div class="line">3:msrvbar_el3, x0</div><div class="line">b0f</div><div class="line">2:msrvbar_el2, x0</div><div class="line">b0f</div><div class="line">1:msrvbar_el1, x0</div><div class="line">0:</div><div class="line"></div><div class="line">ret</div><div class="line">ENDPROC(c_runtime_cpu_setup)</div></pre></td></tr></table></figure></li></ul><ul><li><strong>5.清理BSS段 [important]</strong><br>接下来就是清除BSS段，将未定义的全局变量设置为0。在以前使用Keil单片机编程时，未初始化的全局变量默认为0，那是因为集成开发环境为我们做了清理BSS段的操作，现在没有了集成开发环境，就需要我们自己做。<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">/*</div><div class="line"> * Clear BSS section</div><div class="line"> */</div><div class="line">ldrx0, =__bss_start/* this is auto-relocated! */</div><div class="line">ldrx1, =__bss_end/* this is auto-relocated! */</div><div class="line">movx2, #0</div><div class="line">clear_loop:</div><div class="line">strx2, [x0]</div><div class="line">addx0, x0, #8</div><div class="line">cmpx0, x1</div><div class="line">b.loclear_loop</div></pre></td></tr></table></figure></li></ul><ul><li><strong>6.board_init_r [important]</strong><br>接下来就是板子的后半部分的初始化：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">/* call board_init_r(gd_t *id, ulong dest_addr) */</div><div class="line">movx0, x18/* gd_t */</div><div class="line">ldrx1, [x18, #GD_RELOCADDR]/* dest_addr */</div><div class="line">bboard_init_r/* PC relative jump */</div><div class="line"></div><div class="line">/* NOTREACHED - board_init_r() does not return */</div></pre></td></tr></table></figure><code>board_init_r</code>所在文件路径：<a href="https://github.com/hceng/RK3399/blob/master/hardware/2_u-boot_source/common/board_r.c" target="_blank" rel="external"><code>u-boot/common/board_f.c</code></a>。<br>与前面的<code>board_init_f</code>类似，<code>board_init_r</code>中调用<code>initcall_run_list(init_sequence_r)</code>，<code>init_sequence_r</code>是个数组，里面是将要进行初始化的函数列表，又是一系列的初始化操作。之前遇到的LCD初始化就是在这里。<br>初始化数组列表最后一个成员是<code>run_main_loop</code>，将最终跳到主循环<a href="https://github.com/hceng/RK3399/blob/master/hardware/2_u-boot_source/common/main.c" target="_blank" rel="external"><code>main_loop</code></a>。</li></ul><p><code>crt0_64.S</code>主要就是为C语言运行设置栈和进行了重定位，以及两个阶段的初始化:<code>board_init_f</code>(front)和<code>board_init_r</code>(rear)，最后进入主循环。</p><h2 id="3-3-总结"><a href="#3-3-总结" class="headerlink" title="3.3 总结"></a>3.3 总结</h2><p>U-Boot启动流程示意图：</p><div align="center"> <img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180816/5.png"></div><h1 id="4-中断"><a href="#4-中断" class="headerlink" title="4.中断"></a>4.中断</h1><h2 id="4-1-分析"><a href="#4-1-分析" class="headerlink" title="4.1 分析"></a>4.1 分析</h2><p>在U-Boot中找到如下几个文件：</p><blockquote><p><code>u-boot/arch/arm/cpu/armv8/rk33xx/irqs.c</code>:包含中断的基本操作，如：初始化、注册、使能等；<br> <code>u-boot/arch/arm/cpu/armv8/rk33xx/irqs-gic.c</code>:包含非GPIO类型中断的使能、去能；<br> <code>u-boot/arch/arm/cpu/armv8/rk33xx/irqs-gpio.c</code>:包含GPIO类型中断的使能、去能、触发类型；<br> <code>u-boot/board/rockchip/rk33xx/demo.c</code>:包含一些测试代码，如：定时器中断测试、GPIO中断测试；</p></blockquote><ul><li><p><code>irqs.c</code>里的函数:<br>首先是<strong><code>irq_init()</code></strong>里面包含gic中断初始化和gpio中断初始化，函数里注释<code>gic has been init in Start.S</code>和之前的猜测一样，在<code>start.S</code>里面已经gic初始化了；<br>然后是<strong><code>irq_install_handler()</code></strong>里面实现了中断的注册，即把对应中断号放在<code>g_irq_handler[]</code>数组里；<br>再是<strong><code>irq_handler_enable()</code></strong>，将对应的中断处理函数使能，具体实现的函数在<code>irqs-gic.c</code>和<code>irqs-gpio.c</code>里面。此外还有使能总中断<code>enable_interrupts()</code>；<br>最后就是<strong><code>do_irq()</code></strong>中断处理函数。</p></li><li><p><code>irqs-gic.c</code>里的函数:<br>包含<code>gic_handler_enable()</code>和<code>gic_handler_disable()</code>，在前面<code>irq_handler_enable()</code>调用；</p></li><li><p><code>irqs-gpio.c</code>里的函数:<br>包含<code>gic_handler_enable()</code>、<code>gpio_irq_enable</code>和<code>gpio_irq_set_type()</code>，在前面<code>irq_handler_enable()</code>调用；</p></li><li><p><code>demo.c</code>里的函数:<br>包含定时器中断测试<code>board_gic_test()</code>和GPIO中断测试<code>board_gpio_irq_test()</code>；</p></li></ul><p>因此，除了<code>start.S</code>里的初始化，还需移植<code>irq_install_handler()</code>、<code>irq_handler_enable</code>、<code>do_irq()</code>三个函数，此外还有定时器中断测试和GPIO测试函数。</p><h2 id="4-2-启动和中断代码"><a href="#4-2-启动和中断代码" class="headerlink" title="4.2 启动和中断代码"></a>4.2 启动和中断代码</h2><p>因为<code>start.S</code>里面包含了中断初始化代码，即<code>gic_init_secure</code>和<code>gic_init_secure_percpu</code>，移植的时候直接复制过来的，因此也把<code>start.S</code>贴出来。<br><code>start.S</code>是对U-boot的<code>start.S</code>进行了裁剪和修改，思路和前面U-Boot的流程差不多，几个重定位、绝对跳转、代码对齐的坑，都踩完了，下面的<code>start.S</code>有时间的话可以好好看下。<br><figure class="highlight plain"><figcaption><span>[start.S]</span><a href="https://github.com/hceng/RK3399/tree/master/hardware/3_irq/code/start.S" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">#include &quot;macro.h&quot;</div><div class="line"></div><div class="line">.text</div><div class="line">.global  _start</div><div class="line">_start: </div><div class="line">/* Could be EL3/EL2/EL1, Initial State: Little Endian, MMU Disabled, i/dCache Disabled */</div><div class="line">ldrx0, =vectors            //Exception vectors(Absolute address)</div><div class="line"> msrvbar_el3, x0            //RVBAR_EL3, Reset Vector Base Address Register (if EL3 implemented)</div><div class="line"></div><div class="line">mrsx0, scr_el3        </div><div class="line">orrx0, x0, #0xf            //SCR_EL3.NS|IRQ|FIQ|EA </div><div class="line">msrscr_el3, x0</div><div class="line"></div><div class="line">msrcptr_el3, xzr           //Enable FP/SIMD </div><div class="line"></div><div class="line">ldrx0, =24000000           //24MHz</div><div class="line">msrcntfrq_el0, x0          //Initialize CNTFRQ </div><div class="line"></div><div class="line">bllowlevel_init           //Processor specific initialization</div><div class="line"></div><div class="line">ldrx0, =0x80000000         //sp=2G</div><div class="line">bicsp, x0, #0xf        //16-byte alignment for ABI compliance  </div><div class="line"></div><div class="line">bl relocate      </div><div class="line">relocate_complete:</div><div class="line"></div><div class="line">bl clean_bss</div><div class="line">clean_bss_complete:</div><div class="line"></div><div class="line">//bl main </div><div class="line"></div><div class="line">ldrlr, =main                //Absolute address</div><div class="line">ret</div><div class="line"></div><div class="line">halt:</div><div class="line">b  halt </div><div class="line"></div><div class="line">/*******************************************************/</div><div class="line">led_debug:</div><div class="line">movx0, #0xff720000           </div><div class="line">movx1, #0xff720000           </div><div class="line">ldrw1, [x1,#4]</div><div class="line">orrw1, w1, #0x2000</div><div class="line">strw1, [x0,#4]</div><div class="line">movx0, #0xff720000           </div><div class="line">movx1, #0xff720000           </div><div class="line">ldrw1, [x1]</div><div class="line">orrw1, w1, #0x2000</div><div class="line">strw1, [x0]</div><div class="line">b halt</div><div class="line"></div><div class="line">/*******************************************************/</div><div class="line">lowlevel_init:</div><div class="line">movx29, lr                   //Save LR </div><div class="line"></div><div class="line">ldrx0, =0xFEE00000           //RKIO_GICD_PHYS   GIC DIST </div><div class="line">blgic_init_secure</div><div class="line"></div><div class="line">ldrx0, =0xFEF00000           //RKIO_GICR_PHYS</div><div class="line">blgic_init_secure_percpu</div><div class="line"></div><div class="line">movlr, x29                   //Restore LR</div><div class="line">ret</div><div class="line"></div><div class="line">/*******************************************************/</div><div class="line">//ref: u-boot/arch/arm/lib/gic_64.S</div><div class="line"></div><div class="line">/*Initialize Distributor  x0: Distributor Base*/</div><div class="line">gic_init_secure:</div><div class="line">movw9, #0x37                 //EnableGrp0 | EnableGrp1NS  </div><div class="line">                                          //EnableGrp1S | ARE_S | ARE_NS  </div><div class="line">strw9, [x0, 0x0000]          //Secure GICD_CTLR </div><div class="line">ldrw9, [x0, 0x0004]</div><div class="line">andw10, w9, #0x1f            //ITLinesNumber </div><div class="line">cbzw10, 1f                  //No SPIs </div><div class="line">addx11, x0, (0x0080 + 4)</div><div class="line">addx12, x0, (0x0d00 + 4)</div><div class="line">movw9, #~0</div><div class="line">0:strw9, [x11], #0x4</div><div class="line">strwzr, [x12], #0x4          //Config SPIs as Group1NS </div><div class="line">subw10, w10, #0x1</div><div class="line">cbnzw10, 0b</div><div class="line">1:</div><div class="line">ret</div><div class="line"></div><div class="line"></div><div class="line">/*Initialize ReDistributor  x0: ReDistributor Base*/</div><div class="line">gic_init_secure_percpu:</div><div class="line">mrsx10, mpidr_el1</div><div class="line">lsrx9, x10, #32</div><div class="line">bfix10, x9, #24, #8   //w10 is aff3:aff2:aff1:aff0 </div><div class="line">movx9, x0</div><div class="line">1:ldrx11, [x9, 0x0008]</div><div class="line">lsrx11, x11, #32   //w11 is aff3:aff2:aff1:aff0 </div><div class="line">cmpw10, w11</div><div class="line">b.eq2f</div><div class="line">addx9, x9, #(2 &lt;&lt; 16)</div><div class="line">b1b</div><div class="line"></div><div class="line">/* x9: ReDistributor Base Address of Current CPU */</div><div class="line">2:movw10, #~0x2</div><div class="line">ldrw11, [x9, 0x0014]</div><div class="line">andw11, w11, w10   //Clear ProcessorSleep </div><div class="line">strw11, [x9, 0x0014]</div><div class="line">dsbst</div><div class="line">isb</div><div class="line">3:ldrw10, [x9, 0x0014]</div><div class="line">tbnzw10, #2, 3b   //Wait Children be Alive </div><div class="line"></div><div class="line">addx10, x9, #(1 &lt;&lt; 16)        //SGI_Base </div><div class="line">movw11, #~0</div><div class="line">strw11, [x10, 0x0080]</div><div class="line">strwzr, [x10, 0x0d00]   //SGIs|PPIs Group1NS </div><div class="line">movw11, #0x1                  //Enable SGI 0 </div><div class="line">strw11, [x10, 0x0100]</div><div class="line"></div><div class="line">/* Initialize Cpu Interface */</div><div class="line">/* rockchip: first check elx for running on different el */</div><div class="line">switch_el x0, el3_sre, el2_sre, el1_sre</div><div class="line"></div><div class="line">el3_sre:</div><div class="line">mrsx10, S3_6_C12_C12_5</div><div class="line">orrx10, x10, #0xf           //SRE &amp; Disable IRQ/FIQ Bypass &amp; </div><div class="line">                                         //Allow EL2 access to ICC_SRE_EL2 </div><div class="line">msrS3_6_C12_C12_5, x10</div><div class="line">isb</div><div class="line"></div><div class="line">el2_sre:</div><div class="line">mrsx10, S3_4_C12_C9_5</div><div class="line">orrx10, x10, #0xf           //SRE &amp; Disable IRQ/FIQ Bypass &amp; </div><div class="line">                                         //Allow EL1 access to ICC_SRE_EL1 </div><div class="line">msrS3_4_C12_C9_5, x10</div><div class="line">isb</div><div class="line"></div><div class="line">el1_sre:</div><div class="line">mrsx0, CurrentEL            //check currentEL </div><div class="line">cmpx0, 0xC</div><div class="line">b.neel1_ctlr                 //currentEL != EL3 </div><div class="line"></div><div class="line">el3_ctlr:</div><div class="line">movx10, #0x3                //EnableGrp1NS | EnableGrp1S </div><div class="line">msrS3_6_C12_C12_7, x10</div><div class="line">isb</div><div class="line"></div><div class="line">msrS3_6_C12_C12_4, xzr</div><div class="line">isb</div><div class="line"></div><div class="line">el1_ctlr:</div><div class="line">movx10, #0x3                //EnableGrp1NS | EnableGrp1S </div><div class="line">msrS3_0_C12_C12_7, x10</div><div class="line">isb</div><div class="line"></div><div class="line">msrS3_0_C12_C12_4, xzr      //NonSecure ICC_CTLR_EL1 </div><div class="line">isb</div><div class="line"></div><div class="line">movx10, #0xf0               //Non-Secure access to ICC_PMR_EL1 </div><div class="line">msrS3_0_C4_C6_0, x10</div><div class="line">isb</div><div class="line"></div><div class="line">ret</div><div class="line"></div><div class="line">/*******************************************************/</div><div class="line">//ref:D:u-boot/arch/arm/cpu/armv8/exceptions.S</div><div class="line"></div><div class="line">/* Enter Exception.</div><div class="line"> * This will save the processor state that is ELR/X0~X30 to the stack frame.*/</div><div class="line"> </div><div class="line">.macroexception_entry</div><div class="line">stpx29, x30, [sp, #-16]!</div><div class="line">stpx27, x28, [sp, #-16]!</div><div class="line">stpx25, x26, [sp, #-16]!</div><div class="line">stpx23, x24, [sp, #-16]!</div><div class="line">stpx21, x22, [sp, #-16]!</div><div class="line">stpx19, x20, [sp, #-16]!</div><div class="line">stpx17, x18, [sp, #-16]!</div><div class="line">stpx15, x16, [sp, #-16]!</div><div class="line">stpx13, x14, [sp, #-16]!</div><div class="line">stpx11, x12, [sp, #-16]!</div><div class="line">stpx9,  x10, [sp, #-16]!</div><div class="line">stpx7,  x8,  [sp, #-16]!</div><div class="line">stpx5,  x6,  [sp, #-16]!</div><div class="line">stpx3,  x4,  [sp, #-16]!</div><div class="line">stpx1,  x2,  [sp, #-16]!</div><div class="line"></div><div class="line">/* Could be running at EL3/EL2/EL1 */</div><div class="line">switch_el x11, 3f, 2f, 1f</div><div class="line">3:mrsx1, esr_el3</div><div class="line">mrsx2, elr_el3</div><div class="line">b0f</div><div class="line">2:mrsx1, esr_el2</div><div class="line">mrsx2, elr_el2</div><div class="line">b0f</div><div class="line">1:mrsx1, esr_el1</div><div class="line">mrsx2, elr_el1</div><div class="line">0:</div><div class="line">stpx2, x0, [sp, #-16]!</div><div class="line">movx0, sp</div><div class="line">.endm</div><div class="line"></div><div class="line">/*</div><div class="line"> * Exit Exception.</div><div class="line"> * This will restore the processor state that is ELR/X0~X30</div><div class="line"> * from the stack frame.</div><div class="line"> */</div><div class="line">.macroexception_exit</div><div class="line">ldpx2, x0, [sp],#16</div><div class="line"></div><div class="line">/* Could be running at EL3/EL2/EL1 */</div><div class="line">switch_el x11, 3f, 2f, 1f</div><div class="line">3:msrelr_el3, x2</div><div class="line">b0f</div><div class="line">2:msrelr_el2, x2</div><div class="line">b0f</div><div class="line">1:msrelr_el1, x2</div><div class="line">0:</div><div class="line">ldpx1,  x2,  [sp],#16</div><div class="line">ldpx3,  x4,  [sp],#16</div><div class="line">ldpx5,  x6,  [sp],#16</div><div class="line">ldpx7,  x8,  [sp],#16</div><div class="line">ldpx9,  x10, [sp],#16</div><div class="line">ldpx11, x12, [sp],#16</div><div class="line">ldpx13, x14, [sp],#16</div><div class="line">ldpx15, x16, [sp],#16</div><div class="line">ldpx17, x18, [sp],#16</div><div class="line">ldpx19, x20, [sp],#16</div><div class="line">ldpx21, x22, [sp],#16</div><div class="line">ldpx23, x24, [sp],#16</div><div class="line">ldpx25, x26, [sp],#16</div><div class="line">ldpx27, x28, [sp],#16</div><div class="line">ldpx29, x30, [sp],#16</div><div class="line">eret</div><div class="line">.endm</div><div class="line"></div><div class="line"></div><div class="line">/* Exception vectors.*/</div><div class="line">.align11</div><div class="line">vectors:</div><div class="line">.align7</div><div class="line">b_do_bad_sync        //Current EL Synchronous Thread  </div><div class="line">                          </div><div class="line">.align7              </div><div class="line">b_do_bad_irq        //Current EL IRQ Thread  </div><div class="line">                            </div><div class="line">.align7               </div><div class="line">b_do_bad_fiq        //Current EL FIQ Thread </div><div class="line">                            </div><div class="line">.align7               </div><div class="line">b_do_bad_error        //Current EL Error Thread </div><div class="line">                           </div><div class="line">.align7               </div><div class="line">b_do_sync        //Current EL Synchronous Handler </div><div class="line">                            </div><div class="line">.align7               </div><div class="line">b_do_irq        //Current EL IRQ Handler </div><div class="line">                            </div><div class="line">.align7               </div><div class="line">b_do_fiq        //Current EL FIQ Handler </div><div class="line">                           </div><div class="line">.align7              </div><div class="line">b_do_error        //Current EL Error Handler </div><div class="line"></div><div class="line"></div><div class="line">_do_bad_sync:</div><div class="line">exception_entry</div><div class="line">blhalt                    //do_bad_sync</div><div class="line"></div><div class="line">_do_bad_irq:</div><div class="line">exception_entry</div><div class="line">blhalt                    //do_bad_irq</div><div class="line"></div><div class="line">_do_bad_fiq:</div><div class="line">exception_entry</div><div class="line">blhalt                    //do_bad_fiq</div><div class="line"></div><div class="line">_do_bad_error:</div><div class="line">exception_entry</div><div class="line">blhalt                    //do_bad_error</div><div class="line"></div><div class="line">_do_sync:</div><div class="line">exception_entry</div><div class="line">blhalt                    //do_sync</div><div class="line"></div><div class="line">_do_irq:</div><div class="line">exception_entry</div><div class="line">bldo_irq                  //do_irq</div><div class="line">exception_exit</div><div class="line"></div><div class="line">_do_fiq:</div><div class="line">exception_entry</div><div class="line">blhalt                    //do_fiq</div><div class="line"></div><div class="line">_do_error:</div><div class="line">exception_entry</div><div class="line">blhalt                    //do_error</div><div class="line"></div><div class="line">/*******************************************************/</div><div class="line">relocate:</div><div class="line">adr x0, _start  </div><div class="line">ldr x1, =_start</div><div class="line"></div><div class="line">cmp x0, x1     </div><div class="line">b.eq relocate_complete  //No need relocate</div><div class="line"></div><div class="line">ldr x2, =__bss_start    //relocate end addr</div><div class="line"></div><div class="line">cpy:</div><div class="line">ldr x3, [x0]            //ldr x3, [x0], #8  //ldpx10, x11, [x0], #16 //copy from source address [x0]</div><div class="line">add x0, x0, #8</div><div class="line"></div><div class="line">str x3, [x1]            //str x3, [x1], #8  //stpx10, x11, [x1], #16//copy to   target address [x1] </div><div class="line"></div><div class="line">add x1, x1, #8</div><div class="line"></div><div class="line">cmp x1, x2      </div><div class="line">b.lo cpy       </div><div class="line"></div><div class="line">b relocate_complete </div><div class="line"></div><div class="line">/*******************************************************/</div><div class="line">clean_bss:</div><div class="line">ldr x0, =__bss_start    //bss start</div><div class="line">ldr x1, =__bss_end      //bss end</div><div class="line">mov x2, #0  </div><div class="line"></div><div class="line">clean_loop:  </div><div class="line">str x2, [x0]  </div><div class="line">addx0, x0, #8</div><div class="line">cmp x0, x1          </div><div class="line">b.lo clean_loop        </div><div class="line"></div><div class="line">b clean_bss_complete   </div><div class="line"></div></pre></td></tr></table></figure></p><p>前面的中断初始化完成了，接下来就是注册、使能、执行中断、中断测试几个函数：<br><figure class="highlight"><figcaption><span>[int.c]</span><a href="https://github.com/hceng/RK3399/tree/master/hardware/3_irq/code/int.c" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div></pre></td><td class="code"><pre><div class="line">/*************</div><div class="line">Function：interrupt</div><div class="line">**************/</div><div class="line"></div><div class="line">#include "int.h"</div><div class="line">#include "led.h"</div><div class="line">#include "timer.h"</div><div class="line"></div><div class="line"></div><div class="line">void irq_init(void)</div><div class="line">&#123;</div><div class="line">    /* gic has been init in Start.S */</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">void enable_interrupts(void)</div><div class="line">&#123;</div><div class="line">    asm volatile("msrdaifclr, #0x03");</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* irq interrupt install handle */</div><div class="line">void irq_install_handler(int irq, interrupt_handler_t *handler, void *data)</div><div class="line">&#123;</div><div class="line">    if (g_irq_handler[irq].m_func != handler)</div><div class="line">        g_irq_handler[irq].m_func = handler;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/* enable irq handler */</div><div class="line">int irq_handler_enable(int irq)</div><div class="line">&#123;</div><div class="line">    unsigned long M, N;</div><div class="line"></div><div class="line">    if (irq &gt;= NR_GIC_IRQS)</div><div class="line">        return -1;</div><div class="line"></div><div class="line">    M = irq / 32;</div><div class="line">    N = irq % 32;</div><div class="line"></div><div class="line">    GICD-&gt;ISENABLER[M]  = (0x1 &lt;&lt; N);</div><div class="line"></div><div class="line">    return 0;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void do_irq(void)</div><div class="line">&#123;</div><div class="line">    unsigned long nintid;</div><div class="line">    unsigned long long irqstat;</div><div class="line"></div><div class="line">    asm volatile("mrs %0, " __stringify(ICC_IAR1_EL1) : "=r" (irqstat));</div><div class="line"></div><div class="line">    nintid = (unsigned long)irqstat &amp; 0x3FF;</div><div class="line"></div><div class="line">    /* here we use gic id checking, not include gpio pin irq */</div><div class="line">    if (nintid &lt; NR_GIC_IRQS)</div><div class="line">        g_irq_handler[nintid].m_func((void *)(unsigned long)nintid);</div><div class="line"></div><div class="line">    asm volatile("msr " __stringify(ICC_EOIR1_EL1) ", %0" : : "r" ((unsigned long long)nintid));</div><div class="line">    asm volatile("msr " __stringify(ICC_DIR_EL1) ", %0" : : "r" ((unsigned long long)nintid));</div><div class="line">    isb();</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">static void board_timer_isr(void)</div><div class="line">&#123;</div><div class="line">    static unsigned char led_flag = 0;</div><div class="line"></div><div class="line">    TIMER3-&gt;INTSTATUS = 0x01;  //clrear interrupt</div><div class="line"></div><div class="line">    if(led_flag == 0)</div><div class="line">        led_mode(0);</div><div class="line">    else</div><div class="line">        led_mode(1);</div><div class="line"></div><div class="line">    led_flag = !led_flag;</div><div class="line">&#125;</div><div class="line"></div><div class="line">void test_timer_irq(void)</div><div class="line">&#123;</div><div class="line">    /* enable exceptions */</div><div class="line">    enable_interrupts();</div><div class="line"></div><div class="line">    /* timer set */</div><div class="line">    TIMER3-&gt;CURRENT_VALUE0 = 0x0FFFFFF;</div><div class="line">    TIMER3-&gt;LOAD_COUNT0    = 0x0FFFFFF;</div><div class="line">    TIMER3-&gt;CONTROL_REG    = 0x05; //auto reload &amp; enable the timer</div><div class="line"></div><div class="line">    /* register and enable */</div><div class="line">    irq_install_handler(TIMER_INTR3, (interrupt_handler_t *)board_timer_isr, (void *)(0));</div><div class="line">    irq_handler_enable(TIMER_INTR3);</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">static void board_gpio_isr(void)</div><div class="line">&#123;</div><div class="line">    if (GPIO4-&gt;INT_STATUS &amp; (0x01 &lt;&lt; (3 * 8 + 5))) //Interrupt status</div><div class="line">    &#123;</div><div class="line">        GPIO4-&gt;PORTA_EOI |= (0x01 &lt;&lt; (3 * 8 + 5)); //Clear interrupt</div><div class="line">        //if ((GPIO4-&gt;EXT_PORTA &amp; (0x01&lt;&lt;(3*8+5))) == 0)</div><div class="line">        led_mode(2);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">//GPIO4_D5</div><div class="line">void test_gpio_irq(void)</div><div class="line">&#123;</div><div class="line">    /* enable exceptions */</div><div class="line">    enable_interrupts();</div><div class="line"></div><div class="line">    /* GPIO set */</div><div class="line">    GPIO4-&gt;SWPORTA_DDR   &amp;= ~(0x01 &lt;&lt; (3 * 8 + 5)); //should be Input</div><div class="line">    GPIO4-&gt;INTEN         |=  (0x01 &lt;&lt; (3 * 8 + 5)); //Interrupt enable</div><div class="line">    GPIO4-&gt;INTMASK       &amp;= ~(0x01 &lt;&lt; (3 * 8 + 5)); //Interrupt bits are unmasked</div><div class="line">    GPIO4-&gt;INTTYPE_LEVEL |=  (0x01 &lt;&lt; (3 * 8 + 5)); //Edge-sensitive</div><div class="line">    GPIO4-&gt;INT_POLARITY  &amp;= ~(0x01 &lt;&lt; (3 * 8 + 5)); //Active-low</div><div class="line">    GPIO4-&gt;DEBOUNCE      |=  (0x01 &lt;&lt; (3 * 8 + 5)); //Enable debounce</div><div class="line"></div><div class="line">    /* register and enable */</div><div class="line">    irq_install_handler(GPIO4_INTR, (interrupt_handler_t *)board_gpio_isr, (void *)(0));</div><div class="line">    irq_handler_enable(GPIO4_INTR);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>在主函数里对重定位的验证可以尝试定义一个全局变量检查是否正常，对清BSS段的验证可以尝试定义一个未初始化的全局变量检查是否正常，对中断的验证可以测试定时器中断是否正常，GPIO中断通过外接按键检测是否正常：<br><figure class="highlight c"><figcaption><span>[main.c]</span><a href="https://github.com/hceng/RK3399/tree/master/hardware/3_irq/code/main.c" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"led.h"</span></span></div><div class="line"></div><div class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> test_a = <span class="number">0x1234</span>; <span class="comment">//for test relocate</span></div><div class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> test_b;          <span class="comment">//for test clean bss</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    led_mode(<span class="number">1</span>); <span class="comment">//YELLOW LED</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> ((<span class="number">0x1234</span> != test_a) || (<span class="number">0</span> != test_b))</div><div class="line">    &#123;</div><div class="line">        led_mode(<span class="number">3</span>);</div><div class="line">        led_delay();</div><div class="line"></div><div class="line">        led_mode(<span class="number">0</span>);</div><div class="line">        led_delay();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    test_timer_irq();</div><div class="line">    test_gpio_irq();</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</div><div class="line">    &#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><ul><li>测试效果：<br>上电后，黄色LED1间隔闪烁；按下按键，蓝色LED2亮，随后熄灭。</li></ul><h1 id="5-串口"><a href="#5-串口" class="headerlink" title="5.串口"></a>5.串口</h1><p>串口的移植和前面<a href="https://hceng.cn/2018/03/28/iMX6ULL%E4%B8%8A%E6%89%8B%E4%BD%93%E9%AA%8C/#1-%E5%87%86%E5%A4%87%E8%B5%84%E6%96%99" target="_blank" rel="external">iMX6ULL上手体验</a>里的移植，思路是差不多，先找到U-Boot的uart相关代码，移植好后为printf提供对应函数即可。</p><h2 id="5-1-uart代码"><a href="#5-1-uart代码" class="headerlink" title="5.1 uart代码"></a>5.1 uart代码</h2><p>U-Boot里uart相关代码路径：<a href="https://github.com/hceng/RK3399/blob/master/hardware/2_u-boot_source/drivers/serial/serial_rk.c" target="_blank" rel="external"><code>u-boot/drivers/serial/serial_rk.c</code></a><br>可以看到<code>rk_uart_init()</code>是串口初始化，里面依次调用了引脚复用<code>rk_uart_iomux()</code>、串口复位<code>rk_uart_reset()</code>、设置IRDA SIR功能<code>rk_uart_set_iop()</code>、设置串口属性<code>rk_uart_set_lcr()</code>、设置波特率<code>rk_uart_set_baudrate()</code>、设置串口FIFO<code>rk_uart_set_fifo()</code>。<br>初始化完成后，就可以收发数据了，这里只实现了发生数据<code>rk_uart_sendbyte()</code>。<br>移植的过程还是比较简单，寄存器比较少，注意在设置波特率函数里，需要用到除法，为了简便，可先算出来直接赋值。这里的波特率为最大的1.5M。</p><figure class="highlight c"><figcaption><span>[uart.c]</span><a href="https://github.com/hceng/RK3399/tree/master/hardware/4_uart_printf/code/uart.c" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"grf.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"uart.h"</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rk_uart_iomux</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    GRF_GPIO4B_IOMUX = (<span class="number">3</span> &lt;&lt; <span class="number">18</span>) | (<span class="number">3</span> &lt;&lt; <span class="number">16</span>) | (<span class="number">2</span> &lt;&lt; <span class="number">2</span>) | (<span class="number">2</span> &lt;&lt; <span class="number">0</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rk_uart_reset</span><span class="params">()</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="comment">/* UART reset, rx fifo &amp; tx fifo reset */</span></div><div class="line">    UART2_SRR = (<span class="number">0x01</span> &lt;&lt; <span class="number">1</span>) | (<span class="number">0x01</span> &lt;&lt; <span class="number">1</span>) | (<span class="number">0x01</span> &lt;&lt; <span class="number">2</span>);</div><div class="line">    led_mode(<span class="number">2</span>);</div><div class="line">    <span class="comment">/* interrupt disable */</span></div><div class="line">    UART2_IER = <span class="number">0x00</span>;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rk_uart_set_iop</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    UART2_MCR = <span class="number">0x00</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span>  <span class="keyword">void</span> <span class="title">rk_uart_set_lcr</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    UART2_LCR &amp;= ~(<span class="number">0x03</span> &lt;&lt; <span class="number">0</span>);</div><div class="line">    UART2_LCR |=  (<span class="number">0x03</span> &lt;&lt; <span class="number">0</span>); <span class="comment">//8bits</span></div><div class="line"></div><div class="line">    UART2_LCR &amp;= ~(<span class="number">0x01</span> &lt;&lt; <span class="number">3</span>); <span class="comment">//parity disabled</span></div><div class="line"></div><div class="line">    UART2_LCR &amp;= ~(<span class="number">0x01</span> &lt;&lt; <span class="number">2</span>); <span class="comment">//1 stop bit</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rk_uart_set_baudrate</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> rate;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> baudrate = <span class="number">1500000</span>;</div><div class="line"></div><div class="line">    <span class="comment">/* uart rate is div for 24M input clock */</span></div><div class="line">    <span class="comment">//rate = 24000000 / 16 / baudrate;</span></div><div class="line">    rate = <span class="number">1</span>;</div><div class="line"></div><div class="line">    UART2_LCR |= (<span class="number">0x01</span> &lt;&lt; <span class="number">7</span>);</div><div class="line"></div><div class="line">    UART2_DLL = (rate &amp; <span class="number">0xFF</span>);</div><div class="line">    UART2_DLH = ((rate &gt;&gt; <span class="number">8</span>) &amp; <span class="number">0xFF</span>);</div><div class="line"></div><div class="line">    UART2_LCR &amp;= ~(<span class="number">0x01</span> &lt;&lt; <span class="number">7</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">rk_uart_set_fifo</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">/* shadow FIFO enable */</span></div><div class="line">    UART2_SFE = <span class="number">0x01</span>;</div><div class="line">    <span class="comment">/* fifo 2 less than */</span></div><div class="line">    UART2_SRT = <span class="number">0x03</span>;</div><div class="line">    <span class="comment">/* 2 char in tx fifo */</span></div><div class="line">    UART2_STET = <span class="number">0x01</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">uart_init</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    rk_uart_iomux();</div><div class="line">    rk_uart_reset();</div><div class="line"></div><div class="line">    rk_uart_set_iop();</div><div class="line">    rk_uart_set_lcr();</div><div class="line"></div><div class="line">    rk_uart_set_baudrate();</div><div class="line"></div><div class="line">    rk_uart_set_fifo();</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">rk_uart_sendbyte</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> byte)</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    <span class="keyword">while</span>((UART2_USR &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">1</span>)) == <span class="number">0</span>);</div><div class="line"></div><div class="line">    UART2_THR = byte;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">rk_uart_sendstring</span><span class="params">(<span class="keyword">char</span> *ptr)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">while</span>(*ptr)</div><div class="line">        rk_uart_sendbyte(*ptr++);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/* 0xABCDEF12 */</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">rk_uart_sendhex</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> val)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> arr[<span class="number">8</span>];</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</div><div class="line">    &#123;</div><div class="line">        arr[i] = val &amp; <span class="number">0xf</span>;</div><div class="line">        val &gt;&gt;= <span class="number">4</span>;   <span class="comment">/* arr[0] = 2, arr[1] = 1, arr[2] = 0xF */</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">/* printf */</span></div><div class="line">    rk_uart_sendstring(<span class="string">"0x"</span>);</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">7</span>; i &gt;= <span class="number">0</span>; i--)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (arr[i] &gt;= <span class="number">0</span> &amp;&amp; arr[i] &lt;= <span class="number">9</span>)</div><div class="line">            rk_uart_sendbyte(arr[i] + <span class="string">'0'</span>);</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(arr[i] &gt;= <span class="number">0xA</span> &amp;&amp; arr[i] &lt;= <span class="number">0xF</span>)</div><div class="line">            rk_uart_sendbyte(arr[i] - <span class="number">0xA</span> + <span class="string">'A'</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h2 id="5-2-printf移植"><a href="#5-2-printf移植" class="headerlink" title="5.2 printf移植"></a>5.2 printf移植</h2><p>printf库移植的方法：<br>1.先在<code>printf.h</code>里，用<code>__out_putchar</code>替换成自己实现的字节发送函数<code>rk_uart_sendbyte</code>；<br>2.然后在<code>printf.c</code>里，为其提供宏<code>va_start</code>、<code>va_arg</code>、<code>va_end</code>、<code>_INTSIZEOF</code>和<code>va_list</code>；</p><p>在第二步里，之前ARMv7的可以直接使用，现在使用ARMv8，实测发现打印有问题，找到交叉编译工具里对应宏的位置，直接加入头文件<code>stdarg.h</code>即可。<br><figure class="highlight c"><figcaption><span>[printf.c]</span><a href="https://github.com/hceng/RK3399/tree/master/hardware/4_uart_printf/code/printf.c" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span>  <span class="meta-string">"printf.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span>  <span class="meta-string">&lt;stdarg.h&gt;</span></span></div><div class="line"></div><div class="line"><span class="comment">/************************************************************************************************/</span></div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0</span></div><div class="line"><span class="keyword">typedef</span> <span class="keyword">char</span>   *va_list;</div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> _INTSIZEOF(n)   ( (sizeof(n) + sizeof(int) - 1) &amp; ~(sizeof(int) - 1) )</span></div><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> va_start(ap,v)  ( ap = (va_list)&amp;v + _INTSIZEOF(v) )</span></div><div class="line"><span class="comment">//#define va_arg(ap,t)    ( *(t *)((ap += _INTSIZEOF(t)) - _INTSIZEOF(t)) )</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> va_arg(ap,t)    ( *(t *)( ap=ap + _INTSIZEOF(t), ap- _INTSIZEOF(t)) )</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> va_end(ap)      ( ap = (va_list)0 )</span></div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></div><div class="line"><span class="comment">/************************************************************************************************/</span></div><div class="line"></div><div class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> hex_tab[] = &#123;<span class="string">'0'</span>, <span class="string">'1'</span>, <span class="string">'2'</span>, <span class="string">'3'</span>, <span class="string">'4'</span>, <span class="string">'5'</span>, <span class="string">'6'</span>, <span class="string">'7'</span>, \</div><div class="line">                           <span class="string">'8'</span>, <span class="string">'9'</span>, <span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">'e'</span>, <span class="string">'f'</span></div><div class="line">                          &#125;;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">outc</span><span class="params">(<span class="keyword">int</span> c)</span></span></div><div class="line">&#123;</div><div class="line">    __out_putchar(c);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">outs</span> <span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *s)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">while</span> (*s != <span class="string">'\0'</span>)</div><div class="line">        __out_putchar(*s++);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">out_num</span><span class="params">(<span class="keyword">long</span> n, <span class="keyword">int</span> base, <span class="keyword">char</span> lead, <span class="keyword">int</span> maxwidth)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> m = <span class="number">0</span>;</div><div class="line">    <span class="keyword">char</span> buf[MAX_NUMBER_BYTES], *s = buf + <span class="keyword">sizeof</span>(buf);</div><div class="line">    <span class="keyword">int</span> count = <span class="number">0</span>, i = <span class="number">0</span>;</div><div class="line"></div><div class="line">    *--s = <span class="string">'\0'</span>;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (n &lt; <span class="number">0</span>)</div><div class="line">        m = -n;</div><div class="line">    <span class="keyword">else</span></div><div class="line">        m = n;</div><div class="line"></div><div class="line">    <span class="keyword">do</span></div><div class="line">    &#123;</div><div class="line">        *--s = hex_tab[m % base];</div><div class="line">        count++;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">while</span> ((m /= base) != <span class="number">0</span>);</div><div class="line"></div><div class="line">    <span class="keyword">if</span>( maxwidth &amp;&amp; count &lt; maxwidth)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">for</span> (i = maxwidth - count; i; i--)</div><div class="line">            *--s = lead;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (n &lt; <span class="number">0</span>)</div><div class="line">        *--s = <span class="string">'-'</span>;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> outs(s);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/*ref: int vprintf(const char *format, va_list ap); */</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">my_vprintf</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *fmt, va_list ap)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">char</span> lead = <span class="string">' '</span>;</div><div class="line">    <span class="keyword">int</span>  maxwidth = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(; *fmt != <span class="string">'\0'</span>; fmt++)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span> (*fmt != <span class="string">'%'</span>)</div><div class="line">        &#123;</div><div class="line">            outc(*fmt);</div><div class="line">            <span class="keyword">continue</span>;</div><div class="line">        &#125;</div><div class="line">        lead = <span class="string">' '</span>;</div><div class="line">        maxwidth = <span class="number">0</span>;</div><div class="line"></div><div class="line">        <span class="comment">//format : %08d, %8d,%d,%u,%x,%f,%c,%s</span></div><div class="line">        fmt++;</div><div class="line">        <span class="keyword">if</span>(*fmt == <span class="string">'0'</span>)</div><div class="line">        &#123;</div><div class="line">            lead = <span class="string">'0'</span>;</div><div class="line">            fmt++;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">while</span>(*fmt &gt;= <span class="string">'0'</span> &amp;&amp; *fmt &lt;= <span class="string">'9'</span>)</div><div class="line">        &#123;</div><div class="line">            maxwidth *= <span class="number">10</span>;</div><div class="line">            maxwidth += (*fmt - <span class="string">'0'</span>);</div><div class="line">            fmt++;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">switch</span> (*fmt)</div><div class="line">        &#123;</div><div class="line">        <span class="keyword">case</span> <span class="string">'d'</span>:</div><div class="line">            out_num(va_arg(ap, <span class="keyword">int</span>),          <span class="number">10</span>, lead, maxwidth);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'o'</span>:</div><div class="line">            out_num(va_arg(ap, <span class="keyword">unsigned</span> <span class="keyword">int</span>),  <span class="number">8</span>, lead, maxwidth);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'u'</span>:</div><div class="line">            out_num(va_arg(ap, <span class="keyword">unsigned</span> <span class="keyword">int</span>), <span class="number">10</span>, lead, maxwidth);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'x'</span>:</div><div class="line">            out_num(va_arg(ap, <span class="keyword">unsigned</span> <span class="keyword">int</span>), <span class="number">16</span>, lead, maxwidth);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'c'</span>:</div><div class="line">            outc(va_arg(ap, <span class="keyword">int</span>   ));</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        <span class="keyword">case</span> <span class="string">'s'</span>:</div><div class="line">            outs(va_arg(ap, <span class="keyword">char</span> *));</div><div class="line">            <span class="keyword">break</span>;</div><div class="line"></div><div class="line">        <span class="keyword">default</span>:</div><div class="line">            outc(*fmt);</div><div class="line">            <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//ref: int printf(const char *format, ...);</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">printf</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *fmt, ...)</span></span></div><div class="line">&#123;</div><div class="line">    va_list ap;</div><div class="line"></div><div class="line">    va_start(ap, fmt);</div><div class="line">    my_vprintf(fmt, ap);</div><div class="line">    va_end(ap);</div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">printf_test</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"=========This is printf test=========\n"</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"test char            = %c,%c\n"</span>, <span class="string">'H'</span>, <span class="string">'c'</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"test decimal1 number = %d\n"</span>,     <span class="number">123456</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"test decimal2 number = %d\n"</span>,     <span class="number">-123456</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"test hex1    number  = 0x%x\n"</span>,   <span class="number">0x123456</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"test hex2    number  = 0x%08x\n"</span>, <span class="number">0x123456</span>);</div><div class="line">    <span class="built_in">printf</span>(<span class="string">"test string          = %s\n"</span>,    <span class="string">"www.hceng.cn"</span>);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> <span class="number">0</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">puts</span><span class="params">(<span class="keyword">char</span> *ptr)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">while</span>(*ptr)</div><div class="line">        rk_uart_sendbyte(*ptr++);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><ul><li>测试效果：</li></ul><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180816/6.png"></div><h1 id="6-定时器"><a href="#6-定时器" class="headerlink" title="6.定时器"></a>6.定时器</h1><p>RK3399有12个通用定时器(timer0~timer11)、12个安全定时器(stimer0~stimer11)、2个PMU定时器(pmutimer0~pmutimer1)。<br>定时器部分比较简单，很多东西都是固定的，比如定时器的时钟来源都是24MHz的晶振，也就是定时器周期为1/24us。此外定时器的计数只能由小向大增加。<br>定时器支持两种模式:自由运行模式和用户自定义模式，其实就是前者计数达到设定值后，自动装载计数循环，后者需要手动重新装载，实现循环。</p><h2 id="6-1-编程思路"><a href="#6-1-编程思路" class="headerlink" title="6.1 编程思路"></a>6.1 编程思路</h2><p>这里希望通过用定时器实现一个比较准确的延时函数，包括us、ms、s的延时。<br>1.首先设置<code>CONTROLREG</code>，关闭定时器、设置为用户定义计数模式(用户确定循环次数)、中断屏蔽(不需要中断处理函数)；<br>2.向<code>LOAD_COUNT0</code>、<code>LOAD_COUNT1</code>放入计数结束值，向<code>LOAD_COUNT2</code>、<code>LOAD_COUNT3</code>放入计数初始值，默认为0；<br>3.设置<code>CONTROLREG</code>，开启定时器，计数器开始运行；<br>4.读取中断状态<code>INTSTATUS</code>判断时候完成计数，清中断，本次计数完成；</p><h2 id="6-2-实现代码"><a href="#6-2-实现代码" class="headerlink" title="6.2 实现代码"></a>6.2 实现代码</h2><figure class="highlight c"><figcaption><span>[timer.c]</span><a href="https://github.com/hceng/RK3399/tree/master/hardware/5_timer_delay/code/timer.c" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"timer.h"</span></span></div><div class="line"></div><div class="line"><span class="comment">//timer4 is used for delay.</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay_us</span><span class="params">(<span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">int</span>  i)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">int</span> count_value = <span class="number">24</span> * i;  <span class="comment">//24MHz; period=(1/24000000)*1000000=1/24us</span></div><div class="line"></div><div class="line">    TIMER4-&gt;CONTROL_REG &amp;= ~(<span class="number">0x01</span> &lt;&lt; <span class="number">0</span>);     <span class="comment">//Timer disable</span></div><div class="line">    TIMER4-&gt;CONTROL_REG |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">1</span>);     <span class="comment">//Timer mode:user-defined count mode</span></div><div class="line">    TIMER4-&gt;CONTROL_REG &amp;= ~(<span class="number">0x01</span> &lt;&lt; <span class="number">2</span>);     <span class="comment">//Timer interrupt mask</span></div><div class="line"></div><div class="line">    TIMER4-&gt;LOAD_COUNT0 = count_value &amp; <span class="number">0xFFFFFFFF</span>; <span class="comment">//load_count_low bits</span></div><div class="line">    TIMER4-&gt;LOAD_COUNT1 = (count_value &gt;&gt; <span class="number">32</span>);      <span class="comment">//load_count_high bits</span></div><div class="line"></div><div class="line">    TIMER4-&gt;CONTROL_REG |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">0</span>);     <span class="comment">//Timer enable</span></div><div class="line"></div><div class="line">    <span class="keyword">while</span>(!(TIMER4-&gt;INTSTATUS &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">0</span>)));</div><div class="line">    TIMER4-&gt;INTSTATUS |= (<span class="number">0x01</span> &lt;&lt; <span class="number">0</span>);        <span class="comment">//Write 1 clear the interrupt</span></div><div class="line"></div><div class="line">    TIMER4-&gt;CONTROL_REG &amp;= ~(<span class="number">0x01</span> &lt;&lt; <span class="number">0</span>);     <span class="comment">//Timer enable disable</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay_ms</span><span class="params">(<span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">int</span> i)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">for</span>(; i &gt; <span class="number">0</span>; i--)</div><div class="line">        delay_us(<span class="number">1000</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">delay_s</span><span class="params">(<span class="keyword">volatile</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">int</span> i)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">for</span>(; i &gt; <span class="number">0</span>; i--)</div><div class="line">        delay_ms(<span class="number">1000</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h1 id="7-ADC"><a href="#7-ADC" class="headerlink" title="7.ADC"></a>7.ADC</h1><p>RK3399有两类ADC：</p><ul><li>TS-ADC(Temperature Sensor):<br>　　内嵌的两路ADC，一路检测CPU温度，一路检测GPU温度；<br>　　ADC精度10bit，时钟频率必须低于800KHZ;<br>　　测量范围为-40℃~125℃，精度只有5℃；<br>　　支持用户自定义和自动模式(前者用户自己控制，后者控制器自动查询)；</li><li>SAR-ADC(Successive Approximation Register):<br>　　六路ADC，精度10bit；<br>　　时钟频率必须小于13MHZ;</li></ul><h2 id="7-1-编程思路"><a href="#7-1-编程思路" class="headerlink" title="7.1 编程思路"></a>7.1 编程思路</h2><p>这里希望通过用SAR-ADC获取外部ADC值，通过TS-ADC获取内部CPU/GPU温度。</p><ul><li><p>SAR-ADC<br>1.首先设置<code>SARADC_CTRL[3]</code>，关闭ADC；<br>2.设置<code>SARADC_CTRL[2:0]</code>，选择ADC通道；<br>3.设置<code>SARADC_CTRL[3]</code>，启动ADC转换；<br>4.读取ADC状态<code>SARADC_STAS</code>判断是否转换完成；<br>5.读取ADC数据<code>SARADC_DATA</code>；</p></li><li><p>TS-ADC(User-Define Mode)<br>1.首先设置<code>TSADC_AUTO_CON</code>为用户定义模式、ADC值与温度值负关系；<br>2.设置<code>TSADC_USER_CON</code>选择通道、复位、转换开始；<br>3.设置<code>TSADC_INT_EN</code>，使能ADC完成中断；<br>4.读取ADC中断状态<code>TSADC_INT_PD</code>判断是否转换完成，并清理；<br>5.根据选择的通道，从对应的<code>TSADC_DATA0</code>或<code>TSADC_DATA1</code>读取ADC数据；</p></li></ul><p>这里的TS-ADC得到的数值和温度并不是完全的线性关系，根据提供的表格，可以计算出一个大致的线性关系：<code>y = 0.5823x - 273.62</code></p><h2 id="7-2-实现代码"><a href="#7-2-实现代码" class="headerlink" title="7.2 实现代码"></a>7.2 实现代码</h2><figure class="highlight c"><figcaption><span>[timer.c]</span><a href="https://github.com/hceng/RK3399/tree/master/hardware/6_adc/code/adc.c" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"uart.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"printf.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"timer.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"int.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"adc.h"</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="title">get_saradc_val</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> channel)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> val;</div><div class="line"></div><div class="line">    <span class="comment">//delay between power up and start command</span></div><div class="line">    <span class="comment">//SARADC_DLY_PU_SOC = 8; //DLY_PU_SOC + 2</span></div><div class="line"></div><div class="line">    SARADC_CTRL &amp;= ~(<span class="number">0x01</span> &lt;&lt; <span class="number">3</span>); <span class="comment">//ADC power down control bit</span></div><div class="line"></div><div class="line">    SARADC_CTRL |= (channel &lt;&lt; <span class="number">0</span>); <span class="comment">//ADC input source selection</span></div><div class="line"></div><div class="line">    <span class="comment">//SARADC_CTRL |= (0x01&lt;&lt;3); //Interrupt enable.</span></div><div class="line"></div><div class="line">    SARADC_CTRL |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">3</span>); <span class="comment">//ADC power up and reset</span></div><div class="line">    delay_us(<span class="number">100</span>); <span class="comment">//不能立即就判断状态</span></div><div class="line"></div><div class="line">    <span class="keyword">while</span>(SARADC_STAS &amp; <span class="number">0x01</span>); <span class="comment">//The status register of A/D Converter 1’b0: ADC stop</span></div><div class="line"></div><div class="line">    val = SARADC_DATA &amp; <span class="number">0x3FF</span>; <span class="comment">//A/D value of the last conversion (DOUT[9:0]).</span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> val;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//channel0: CPU temperature</span></div><div class="line"><span class="comment">//channel1: GPU temperature</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">get_tsadc_temp</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> channel)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> val;</div><div class="line"></div><div class="line">    <span class="keyword">if</span> ((channel != <span class="number">0</span>) &amp;&amp; (channel != <span class="number">1</span>))</div><div class="line">    &#123;</div><div class="line">        <span class="built_in">printf</span>(<span class="string">"get_tsadc_temp set channel error.\n"</span>);</div><div class="line">        <span class="keyword">return</span> <span class="number">-255</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">//User-Define Mode</span></div><div class="line">    TSADC_AUTO_CON &amp;= ~(<span class="number">0x01</span> &lt;&lt; <span class="number">0</span>);     <span class="comment">//TSADC controller works at user-define mode</span></div><div class="line">    TSADC_AUTO_CON |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">1</span>);     <span class="comment">//RK3399 is negative temprature coefficient</span></div><div class="line"></div><div class="line">    TSADC_USER_CON &amp;= ~(<span class="number">0x07</span> &lt;&lt; <span class="number">0</span>);     <span class="comment">//clear</span></div><div class="line">    TSADC_USER_CON |=  (channel &lt;&lt; <span class="number">0</span>);  <span class="comment">//PD_DVDD and ADC input source selection</span></div><div class="line">    TSADC_USER_CON |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">3</span>);     <span class="comment">//CHSEL_DVDD and ADC power up and reset</span></div><div class="line"></div><div class="line">    TSADC_USER_CON |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">4</span>);     <span class="comment">//the start_of_conversion will be controlled by TSADC_USER_CON[5].</span></div><div class="line">    TSADC_USER_CON |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">5</span>);     <span class="comment">//start conversion</span></div><div class="line"></div><div class="line">    TSADC_INT_EN   |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">16</span>);    <span class="comment">//eoc_interrupt enable in user defined mode</span></div><div class="line">    <span class="keyword">while</span>(!(TSADC_INT_PD &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">16</span>))); <span class="comment">//wait ADC conversion stop</span></div><div class="line">    TSADC_INT_PD &amp;= ~(<span class="number">0x01</span> &lt;&lt; <span class="number">16</span>);</div><div class="line"></div><div class="line">    <span class="keyword">if</span> (<span class="number">0</span> == channel)</div><div class="line">        val = (<span class="keyword">int</span>)(<span class="number">0.5823</span> * (<span class="keyword">float</span>)(TSADC_DATA0) - <span class="number">273.62</span>); <span class="comment">//y = 0.5823x - 273.62</span></div><div class="line">    <span class="keyword">else</span></div><div class="line">        val = (<span class="keyword">int</span>)(<span class="number">0.5823</span> * (<span class="keyword">float</span>)(TSADC_DATA1) - <span class="number">273.62</span>); <span class="comment">//y = 0.5823x - 273.62</span></div><div class="line"></div><div class="line">    <span class="built_in">printf</span>(<span class="string">"get_tsadc_temp = %d \n"</span>, val);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> val;</div><div class="line">&#125;</div></pre></td></tr></table></figure><ul><li>测试效果：</li></ul><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180816/7.png"></div><h1 id="8-I2C"><a href="#8-I2C" class="headerlink" title="8.I2C"></a>8.I2C</h1><p>RK3399拥有8个I2C，其功能和其它SOC的I2C差不多，这里通过I2C读写EEPROM，具体的操作和前面博客<a href="https://hceng.cn/2017/08/28/AM437x%E2%80%94%E2%80%94I2C%E8%A3%B8%E6%9C%BA/" target="_blank" rel="external">AM437x——I2C裸机</a>差不多，也实现了两个版本：GPIO模拟和寄存器控制，这里主要介绍寄存器控制版本。</p><h2 id="8-1-编程思路"><a href="#8-1-编程思路" class="headerlink" title="8.1 编程思路"></a>8.1 编程思路</h2><p>0.首先是I2C引脚复用、设置SCK时钟、注册/使能中断(非必须)等；</p><ul><li><p>写EEPROM<br>1.清空控制寄存器<code>CON</code>并使能；<br>2.设置I2C模式<code>transmit only</code>；<br>3.设置<code>CON</code>启动开始信号，并读取<code>IPD</code>等待开始信号发送完成；<br>4.设置<code>TXDATA0</code>实现从机地址、写地址、数据的设定，设置传输数据个数，等待传输完成；<br>5.设置<code>CON</code>发送结束信号，并读取<code>IPD</code>等待结束信号发送完成；</p></li><li><p>读EEPROM<br>1.清空控制寄存器<code>CON</code>并使能；<br>2.设置I2C模式<code>transmit only + restart + transmit address + receive only</code>；<br>3.设置<code>MRXADDR</code>设定从机地址，设置<code>MRXRADDR</code>设定从机寄存器地址；<br>4.设置<code>TXDATA0</code>实现从机地址、写地址、数据的设定，设置传输数据个数，等待传输完成；<br>5.设置<code>MRXCNT</code>值接收一个数据，读取<code>IPD</code>等待接收数据完成；<br>6.设置<code>CON</code>发送结束信号，并读取<code>IPD</code>等待结束信号发送完成；<br>7.读取<code>RXDATA0</code>获得数据；</p></li></ul><h2 id="8-2-实现代码"><a href="#8-2-实现代码" class="headerlink" title="8.2 实现代码"></a>8.2 实现代码</h2><figure class="highlight c"><figcaption><span>[i2c.c]</span><a href="https://github.com/hceng/RK3399/tree/master/hardware/7_I2C/I2C控制器/code/i2c.c" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"i2c.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"uart.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"printf.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"timer.h"</span></span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">//GPIO1_B3/I2C4_SDA</span></div><div class="line"><span class="comment">//GPIO1_B4/I2C4_SCL</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">i2c_init</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">//1.GPIO1_B3/I2C4_SDA、GPIO1_B4/I2C4_SCL设置为功能引脚,注意高位要先置为1才能写;</span></div><div class="line">    PMUGRF_GPIO1B_IOMUX |= ((<span class="number">0xFFFF0000</span> &lt;&lt; <span class="number">0</span>) | (<span class="number">0x01</span> &lt;&lt; <span class="number">6</span>) | (<span class="number">0x01</span> &lt;&lt; <span class="number">8</span>));</div><div class="line"></div><div class="line">    <span class="comment">//2.设置SCK时钟</span></div><div class="line">    <span class="comment">//3.注册/使能中断</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">eeprom_write</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> addr, <span class="keyword">unsigned</span> <span class="keyword">char</span> data)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">//0.清空控制寄存器并使能</span></div><div class="line">    I2C4-&gt;CON &amp;= ~(<span class="number">0x7F</span> &lt;&lt; <span class="number">0</span>);</div><div class="line">    I2C4-&gt;IPD &amp;= ~(<span class="number">0x7F</span> &lt;&lt; <span class="number">0</span>);</div><div class="line">    I2C4-&gt;CON |= <span class="number">0x01</span> &lt;&lt; <span class="number">0</span>; <span class="comment">//使能</span></div><div class="line"></div><div class="line">    <span class="comment">//1.设置模式:transmit only</span></div><div class="line">    I2C4-&gt;CON &amp;= ~(<span class="number">0x03</span> &lt;&lt; <span class="number">1</span>);</div><div class="line"></div><div class="line">    <span class="comment">//2.开始信号</span></div><div class="line">    I2C4-&gt;CON |= <span class="number">0x01</span> &lt;&lt; <span class="number">3</span>; <span class="comment">//开始信号</span></div><div class="line">    <span class="keyword">while</span>(!(I2C4-&gt;IPD &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">4</span>))); <span class="comment">//等待开始信号发完</span></div><div class="line">    I2C4-&gt;IPD |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">4</span>); <span class="comment">//清开始信号标志</span></div><div class="line"></div><div class="line">    <span class="comment">//3.I2C从机地址+写地址+数据 (3个字节)</span></div><div class="line">    I2C4-&gt;TXDATA0 = <span class="number">0xA0</span> | (addr &lt;&lt; <span class="number">8</span>) | (data &lt;&lt; <span class="number">16</span>);</div><div class="line">    I2C4-&gt;MTXCNT = <span class="number">3</span>;</div><div class="line">    <span class="keyword">while</span>(!(I2C4-&gt;IPD &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">2</span>))); <span class="comment">//MTXCNT data transmit finished interrupt pending bit</span></div><div class="line">    I2C4-&gt;IPD |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">2</span>);</div><div class="line"></div><div class="line">    <span class="comment">//4.结束信号</span></div><div class="line">    I2C4-&gt;CON &amp;= ~(<span class="number">0x01</span> &lt;&lt; <span class="number">3</span>); <span class="comment">//手动清除start(注意:前面的开始信号控制位理论会自动清0,实测没有,这里必须手动清,否则是开始信号)</span></div><div class="line">    I2C4-&gt;CON |= (<span class="number">0x01</span> &lt;&lt; <span class="number">4</span>);</div><div class="line">    <span class="keyword">while</span>(!(I2C4-&gt;IPD &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">5</span>)));</div><div class="line">    I2C4-&gt;IPD |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">5</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">//自动发送从机地址和从机寄存器地址</span></div><div class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">eeprom_read</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> addr)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> data = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="comment">//0.清空控制寄存器并使能</span></div><div class="line">    I2C4-&gt;CON &amp;= ~(<span class="number">0x7F</span> &lt;&lt; <span class="number">0</span>);</div><div class="line">    I2C4-&gt;IPD &amp;= ~(<span class="number">0x7F</span> &lt;&lt; <span class="number">0</span>);</div><div class="line">    I2C4-&gt;CON |= <span class="number">0x01</span> &lt;&lt; <span class="number">0</span>; <span class="comment">//使能</span></div><div class="line"></div><div class="line">    <span class="comment">//必须收到ack,否则停止传输(非必需)</span></div><div class="line">    <span class="comment">//I2C4-&gt;CON |=  (0x01&lt;&lt;6); //stop transaction when NAK handshake is received</span></div><div class="line"></div><div class="line">    <span class="comment">//1.设置模式:transmit address (device + register address) --&gt; restart --&gt; transmit address –&gt; receive only</span></div><div class="line">    I2C4-&gt;CON |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">1</span>); <span class="comment">//自动发送从机地址和从机寄存器地址</span></div><div class="line"></div><div class="line">    <span class="comment">//2.从机地址</span></div><div class="line">    I2C4-&gt;MRXADDR = (<span class="number">0xA0</span> | (<span class="number">1</span> &lt;&lt; <span class="number">24</span>));</div><div class="line"></div><div class="line">    <span class="comment">//3.从机寄存器地址</span></div><div class="line">    I2C4-&gt;MRXRADDR = (addr | (<span class="number">1</span> &lt;&lt; <span class="number">24</span>)); <span class="comment">//地址只有6位,超过6位怎么办?</span></div><div class="line"></div><div class="line">    <span class="comment">//4.开始信号</span></div><div class="line">    I2C4-&gt;CON |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">3</span>);</div><div class="line">    <span class="keyword">while</span>(!(I2C4-&gt;IPD &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">4</span>)));</div><div class="line">    I2C4-&gt;IPD |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">4</span>);</div><div class="line"></div><div class="line">    <span class="comment">//5.接收一个数据且不响应</span></div><div class="line">    I2C4-&gt;CON |= (<span class="number">0x01</span> &lt;&lt; <span class="number">5</span>);</div><div class="line">    I2C4-&gt;MRXCNT = <span class="number">1</span>;</div><div class="line">    <span class="keyword">while</span>(!(I2C4-&gt;IPD &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">3</span>)));</div><div class="line">    I2C4-&gt;IPD |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">3</span>);</div><div class="line"></div><div class="line">    <span class="comment">//6.结束信号</span></div><div class="line">    I2C4-&gt;CON &amp;= ~(<span class="number">0x01</span> &lt;&lt; <span class="number">3</span>); <span class="comment">//手动清除start</span></div><div class="line">    I2C4-&gt;CON |= (<span class="number">0x01</span> &lt;&lt; <span class="number">4</span>);</div><div class="line">    <span class="keyword">while</span>(!(I2C4-&gt;IPD &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">5</span>)));</div><div class="line">    I2C4-&gt;IPD |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">5</span>);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> (I2C4-&gt;RXDATA0 &amp; <span class="number">0xFF</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>主函数里先向EEPROM写数据，再读出数据并打印出来，是否是预期的值。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">i2c_init();</div><div class="line"></div><div class="line"><span class="comment">//write eeprom.</span></div><div class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)</div><div class="line">   &#123;</div><div class="line">       eeprom_write(i,<span class="number">2</span>*i);</div><div class="line">       delay_ms(<span class="number">4</span>);<span class="comment">//Must be delayed more than 4ms.</span></div><div class="line">   &#125;</div><div class="line"></div><div class="line"><span class="built_in">printf</span>(<span class="string">"write eeprom ok\n\r"</span>);</div><div class="line">delay_ms(<span class="number">10</span>);</div><div class="line"></div><div class="line"><span class="comment">//read eeprom.</span></div><div class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">5</span>; i++)</div><div class="line">   &#123;</div><div class="line">       <span class="built_in">printf</span>(<span class="string">"read_data%d = %d\n\r"</span>, i, eeprom_read(i));</div><div class="line">       delay_ms(<span class="number">4</span>);</div><div class="line">   &#125;</div><div class="line"></div></pre></td></tr></table></figure></p><ul><li>测试效果：</li></ul><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180816/8.png"></div><h1 id="9-SPI"><a href="#9-SPI" class="headerlink" title="9.SPI"></a>9.SPI</h1><p>RK3399有6组SPI，协议也是标准的，没什么好说的。通过SPI读取Flash，也实现了两个版本：GPIO模拟和寄存器控制，这里主要介绍寄存器控制版本。</p><h2 id="9-1-编程思路"><a href="#9-1-编程思路" class="headerlink" title="9.1 编程思路"></a>9.1 编程思路</h2><p>0.首先是SPI引脚复用、设置时钟、SPI模式(SCPH=1，SCPOL=1)等；<br>1.实现发送一字节函数：使能SPI、向<code>TXDR[0]</code>写入待发送的数据、根据<code>SR</code>等待发送完成及空闲、关闭SPI；<br>2.实现接收一字节函数：使能SPI、向<code>TXDR[0]</code>写入空数据、根据<code>SR</code>等待接收完成及空闲、读出<code>RXDR[0]</code>数据、关闭SPI；<br>3.实现片选函数；<br>4.剩下的就是SPI Flash(W25Q16DV)相关的操作，比如发送哪个指令读取ID，发送哪个指令擦除数据等，参考具体的Flash芯片手册；</p><p>值得注意的几点有：<br>1.SPI Flash(W25Q16DV)每次写操作某个分区前都得先擦除该分区；<br>2.注意片选的连续性，比如写使能指令(0x06)和写状态寄存器指令(0x01)之间的片选不能中断；</p><h2 id="9-2-实现代码"><a href="#9-2-实现代码" class="headerlink" title="9.2 实现代码"></a>9.2 实现代码</h2><figure class="highlight c"><figcaption><span>[spi.c]</span><a href="https://github.com/hceng/RK3399/tree/master/hardware/8_SPI/SPI控制器/code/spi.c" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"spi.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"uart.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"printf.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"timer.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"gpio.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"grf.h"</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">spi_init</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">//SPI1_CSn0/GPIO1_B2_U</span></div><div class="line">    <span class="comment">//SPI1_CLK/GPIO1_B1_U</span></div><div class="line">    <span class="comment">//SPI1_TXD/GPIO1_B0_U</span></div><div class="line">    <span class="comment">//SPI1_RXD/GPIO1_A7_U</span></div><div class="line"></div><div class="line">    <span class="comment">//1.IOMUX</span></div><div class="line">    PMUGRF_GPIO1A_IOMUX = <span class="number">0xFFFF8000</span>;</div><div class="line">    PMUGRF_GPIO1B_IOMUX = <span class="number">0xFFFF002A</span>;</div><div class="line"></div><div class="line">    SPI1-&gt;ENR &amp;=  ~(<span class="number">0x01</span> &lt;&lt; <span class="number">0</span>); <span class="comment">//关闭SPI</span></div><div class="line"></div><div class="line">    <span class="comment">//2.Clock Ratios   master mode:Fspi_clk&gt;= 2 × (maximum Fsclk_out)</span></div><div class="line">    <span class="comment">//CRU_CLKGATE2_CON &amp;= ~(0x01&lt;&lt;9);  //默认SPI1 source clock开启</span></div><div class="line">    <span class="comment">//CRU_CLKGATE6_CON &amp;= ~(0x01&lt;&lt;4);  //默认SPI1 APB clock开启</span></div><div class="line">    SPI1-&gt;BAUDR = <span class="number">24</span>; <span class="comment">//Fsclk_out = 48/24= 2M   48 &gt;= 2x2</span></div><div class="line"></div><div class="line">    <span class="comment">//3.注册/使能中断(本程序未使用,用的查询)</span></div><div class="line">    <span class="comment">//register_irq(IRQ_SPI1, spi_irq_isr);</span></div><div class="line">    <span class="comment">//irq_handler_enable(IRQ_SPI1);</span></div><div class="line">    <span class="comment">//SPI1-&gt;IPR &amp;= ~(0x01&lt;&lt;4); //Active Interrupt Polarity Level is HIGH(default)</span></div><div class="line">    <span class="comment">//SPI1-&gt;IMR |=  ((0x01&lt;&lt;4) | (0x01&lt;&lt;3) | (0x01&lt;&lt;2) | (0x01&lt;&lt;1) | (0x01&lt;&lt;0)); //Interrupt Mask</span></div><div class="line"></div><div class="line">    <span class="comment">//4.DMA(可以不用)</span></div><div class="line">    <span class="comment">//SPI1-&gt;DMACR |= ((0x01&lt;&lt;1) | (0x01&lt;&lt;0)); // Transmit/Receive DMA enabled</span></div><div class="line">    <span class="comment">//SPI1-&gt;DMATDLR = 1; //?</span></div><div class="line">    <span class="comment">//SPI1-&gt;DMARDLR = 1; //?</span></div><div class="line"></div><div class="line">    <span class="comment">//5.SPI模式</span></div><div class="line">    <span class="comment">//[1:0]Data Frame Size:8bit data</span></div><div class="line">    <span class="comment">//[5:2]Control Frame Size:8-bit serial data transfer</span></div><div class="line">    <span class="comment">//[6]SCPH:Serial clock toggles at start of first data bit</span></div><div class="line">    <span class="comment">//[7]SCPOL:Inactive state of serial clock is high</span></div><div class="line">    <span class="comment">//[13]BHT:apb 8bit write/read, spi 8bit write/read</span></div><div class="line">    <span class="comment">//[19:18]XFM(Transfer Mode):Transmit &amp; Receive(default)</span></div><div class="line">    <span class="comment">//[20]OPM(Operation Mode):Master Mode(default)</span></div><div class="line"></div><div class="line">    SPI1-&gt;CTRLR0 &amp;= ~(<span class="number">0x03</span> &lt;&lt; <span class="number">0</span>) ;</div><div class="line">    SPI1-&gt;CTRLR0 |= ((<span class="number">0x01</span> &lt;&lt; <span class="number">0</span>) | (<span class="number">0x07</span> &lt;&lt; <span class="number">2</span>) | (<span class="number">0x01</span> &lt;&lt; <span class="number">6</span>) | (<span class="number">0x01</span> &lt;&lt; <span class="number">7</span>) | (<span class="number">0x01</span> &lt;&lt; <span class="number">13</span>)); <span class="comment">//设置SPI模式</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">spi_send_byte</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> val)</span></span></div><div class="line">&#123;</div><div class="line">    SPI1-&gt;ENR |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">0</span>);      <span class="comment">//SPI Enable</span></div><div class="line"></div><div class="line">    SPI1-&gt;TXDR[<span class="number">0</span>] = val &amp; <span class="number">0xFFFF</span>;</div><div class="line">    <span class="keyword">while</span>(!(SPI1-&gt;SR &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">2</span>))); <span class="comment">//Transmit FIFO is empty</span></div><div class="line">    <span class="keyword">while</span>(SPI1-&gt;SR &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">0</span>));  <span class="comment">//SPI is idle or disabled</span></div><div class="line"></div><div class="line">    SPI1-&gt;ENR &amp;=  ~(<span class="number">0x01</span> &lt;&lt; <span class="number">0</span>);     <span class="comment">//SPI Disable</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">spi_recv_byte</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> val = <span class="number">0</span>;</div><div class="line"></div><div class="line">    SPI1-&gt;ENR |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">0</span>);    <span class="comment">//SPI Enable</span></div><div class="line"></div><div class="line">    SPI1-&gt;TXDR[<span class="number">0</span>] = <span class="number">0</span>;            <span class="comment">//因为是发送接收模式,FIFO在发送时也会接收数据,这里发送空数据,就可读取数据</span></div><div class="line"></div><div class="line">    <span class="keyword">while</span>(SPI1-&gt;SR &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">3</span>)); <span class="comment">//SReceive FIFO is not empty</span></div><div class="line">    <span class="keyword">while</span>(SPI1-&gt;SR &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">0</span>)); <span class="comment">//SPI is idle or disabled</span></div><div class="line"></div><div class="line">    val = SPI1-&gt;RXDR[<span class="number">0</span>] &amp; <span class="number">0xFF</span>;  <span class="comment">//读数据</span></div><div class="line"></div><div class="line">    SPI1-&gt;ENR &amp;=  ~(<span class="number">0x01</span> &lt;&lt; <span class="number">0</span>);  <span class="comment">//SPI Disable,为了清空FIFO</span></div><div class="line"></div><div class="line">    <span class="keyword">return</span> val;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">spi_flash_set_cs</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> flag)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span>(!flag)</div><div class="line">        SPI1-&gt;SER |=  (<span class="number">0x01</span> &lt;&lt; <span class="number">0</span>);</div><div class="line">    <span class="keyword">else</span></div><div class="line">        SPI1-&gt;SER &amp;= ~(<span class="number">0x01</span> &lt;&lt; <span class="number">0</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">/* 通用部分 */</span></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">spi_flash_send_addr</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> addr)</span></span></div><div class="line">&#123;</div><div class="line">    spi_send_byte(addr &gt;&gt; <span class="number">16</span>);</div><div class="line">    spi_send_byte(addr &gt;&gt; <span class="number">8</span>);</div><div class="line">    spi_send_byte(addr &amp; <span class="number">0xff</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">spi_flash_write_enable</span><span class="params">(<span class="keyword">int</span> enable)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">if</span> (enable)</div><div class="line">    &#123;</div><div class="line">        spi_flash_set_cs(<span class="number">0</span>);</div><div class="line">        spi_send_byte(<span class="number">0x06</span>);</div><div class="line">        spi_flash_set_cs(<span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span></div><div class="line">    &#123;</div><div class="line">        spi_flash_set_cs(<span class="number">0</span>);</div><div class="line">        spi_send_byte(<span class="number">0x04</span>);</div><div class="line">        spi_flash_set_cs(<span class="number">1</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">spi_flash_read_status_reg1</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> val;</div><div class="line"></div><div class="line">    spi_flash_set_cs(<span class="number">0</span>);</div><div class="line"></div><div class="line">    spi_send_byte(<span class="number">0x05</span>);</div><div class="line">    val = spi_recv_byte();</div><div class="line"></div><div class="line">    spi_flash_set_cs(<span class="number">1</span>);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> val;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> <span class="title">spi_flash_read_status_reg2</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> val;</div><div class="line"></div><div class="line">    spi_flash_set_cs(<span class="number">0</span>);</div><div class="line"></div><div class="line">    spi_send_byte(<span class="number">0x35</span>);</div><div class="line">    val = spi_recv_byte();</div><div class="line"></div><div class="line">    spi_flash_set_cs(<span class="number">1</span>);</div><div class="line"></div><div class="line">    <span class="keyword">return</span> val;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">spi_flash_wait_when_busy</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">while</span> (spi_flash_read_status_reg1() &amp; <span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">spi_flash_write_status_reg</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> reg1, <span class="keyword">unsigned</span> <span class="keyword">char</span> reg2)</span></span></div><div class="line">&#123;</div><div class="line">    spi_flash_write_enable(<span class="number">1</span>);</div><div class="line"></div><div class="line">    spi_flash_set_cs(<span class="number">0</span>);</div><div class="line"></div><div class="line">    spi_send_byte(<span class="number">0x01</span>);</div><div class="line">    spi_send_byte(reg1);</div><div class="line">    spi_send_byte(reg2);</div><div class="line"></div><div class="line">    spi_flash_set_cs(<span class="number">1</span>);</div><div class="line"></div><div class="line">    spi_flash_wait_when_busy();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">spi_flash_clear_protect_for_status_reg</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> reg1, reg2;</div><div class="line"></div><div class="line">    reg1 = spi_flash_read_status_reg1();</div><div class="line">    reg2 = spi_flash_read_status_reg2();</div><div class="line"></div><div class="line">    reg1 &amp;= ~(<span class="number">1</span> &lt;&lt; <span class="number">7</span>);</div><div class="line">    reg2 &amp;= ~(<span class="number">1</span> &lt;&lt; <span class="number">0</span>);</div><div class="line"></div><div class="line">    spi_flash_write_status_reg(reg1, reg2);</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">spi_flash_clear_protect_for_data</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">/* cmp=0,bp2,1,0=0b000 */</span></div><div class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> reg1, reg2;</div><div class="line"></div><div class="line">    reg1 = spi_flash_read_status_reg1();</div><div class="line">    reg2 = spi_flash_read_status_reg2();</div><div class="line"></div><div class="line">    reg1 &amp;= ~(<span class="number">7</span> &lt;&lt; <span class="number">2</span>);</div><div class="line">    reg2 &amp;= ~(<span class="number">1</span> &lt;&lt; <span class="number">6</span>);</div><div class="line"></div><div class="line">    spi_flash_write_status_reg(reg1, reg2);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* erase 4K */</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">spi_flash_erase_sector</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> addr)</span></span></div><div class="line">&#123;</div><div class="line">    spi_flash_write_enable(<span class="number">1</span>);</div><div class="line"></div><div class="line">    spi_flash_set_cs(<span class="number">0</span>);</div><div class="line"></div><div class="line">    spi_send_byte(<span class="number">0x20</span>);</div><div class="line">    spi_flash_send_addr(addr);</div><div class="line"></div><div class="line">    spi_flash_set_cs(<span class="number">1</span>);</div><div class="line"></div><div class="line">    spi_flash_wait_when_busy();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* program */</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">spi_flash_program</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> addr, <span class="keyword">unsigned</span> <span class="keyword">char</span> *buf, <span class="keyword">int</span> len)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line"></div><div class="line">    spi_flash_write_enable(<span class="number">1</span>);</div><div class="line"></div><div class="line">    spi_flash_set_cs(<span class="number">0</span>);</div><div class="line"></div><div class="line">    spi_send_byte(<span class="number">0x02</span>);</div><div class="line">    spi_flash_send_addr(addr);</div><div class="line"></div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</div><div class="line">        spi_send_byte(buf[i]);</div><div class="line"></div><div class="line">    spi_flash_set_cs(<span class="number">1</span>);</div><div class="line"></div><div class="line">    spi_flash_wait_when_busy();</div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">spi_flash_read</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> addr, <span class="keyword">unsigned</span> <span class="keyword">char</span> *buf, <span class="keyword">int</span> len)</span></span></div><div class="line">&#123;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line"></div><div class="line">    spi_flash_set_cs(<span class="number">0</span>);</div><div class="line"></div><div class="line">    spi_send_byte(<span class="number">0x03</span>);</div><div class="line">    spi_flash_send_addr(addr);</div><div class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i++)</div><div class="line">        buf[i] = spi_recv_byte();</div><div class="line"></div><div class="line">    spi_flash_set_cs(<span class="number">1</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">spi_flash_init</span><span class="params">(<span class="keyword">void</span>)</span></span></div><div class="line">&#123;</div><div class="line">    spi_flash_clear_protect_for_status_reg();</div><div class="line">    spi_flash_clear_protect_for_data();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">spi_flash_read_ID</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *pMID, <span class="keyword">unsigned</span> <span class="keyword">int</span> *pDID)</span></span></div><div class="line">&#123;</div><div class="line"></div><div class="line">    spi_flash_set_cs(<span class="number">0</span>);</div><div class="line"></div><div class="line">    spi_send_byte(<span class="number">0x90</span>);</div><div class="line"></div><div class="line">    spi_flash_send_addr(<span class="number">0</span>);</div><div class="line"></div><div class="line">    *pMID = spi_recv_byte();</div><div class="line">    *pDID = spi_recv_byte();</div><div class="line"></div><div class="line">    spi_flash_set_cs(<span class="number">1</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>在主函数里先读取Flash的MID和PID，然后初始化Flash(去除写状态寄存器保护和写数据保护)，再写入数据，读出数据检测是否一致。<br><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">   spi_init();</div><div class="line"></div><div class="line">spi_flash_read_ID(&amp;mid, &amp;pid);</div><div class="line"><span class="built_in">printf</span>(<span class="string">"SPI Flash : MID = 0x%02x, PID = 0x%02x\n\r"</span>, mid, pid);</div><div class="line"></div><div class="line">   spi_flash_init();</div><div class="line">   <span class="keyword">while</span>(<span class="number">1</span>)</div><div class="line">&#123;</div><div class="line">       spi_flash_erase_sector(<span class="number">4096</span>);</div><div class="line">       spi_flash_program(<span class="number">4096</span>, <span class="string">"hceng"</span>, <span class="number">7</span>);</div><div class="line">       spi_flash_read(<span class="number">4096</span>, str, <span class="number">7</span>);</div><div class="line">       <span class="built_in">printf</span>(<span class="string">"SPI Flash read from 4096: %s\n\r"</span>, str);</div><div class="line">       </div><div class="line">       delay_s(<span class="number">2</span>);</div><div class="line">   &#125;</div></pre></td></tr></table></figure></p><ul><li>测试效果：</li></ul><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180816/9.png"></div><h1 id="10-PWM"><a href="#10-PWM" class="headerlink" title="10.PWM"></a>10.PWM</h1><p>RK3399有四组PWM，其中PWM3可以配置为第二功能用于红外IR。<br>这里使用MIPI接口的PWM1为例，输出指定占空比的波形。</p><h2 id="10-1-编程思路"><a href="#10-1-编程思路" class="headerlink" title="10.1 编程思路"></a>10.1 编程思路</h2><p>1.首先是PWM引脚复用；<br>2.关闭PWM控制器；<br>3.设置时钟源、比例系数、预分频(可默认)；<br>4.设置模式:连续模式,占空比极性为高、左对齐(默认)；<br>5.设置占空比，其中<code>PERIOD_HPR</code>是总周期，<code>DUTY_LPR</code>是有效周期，<code>Duty cycle=DUTY_LPR/PERIOD_HPR</code>；<br>6.启动PWN控制器；</p><h2 id="10-2-实现代码"><a href="#10-2-实现代码" class="headerlink" title="10.2 实现代码"></a>10.2 实现代码</h2><figure class="highlight c"><figcaption><span>[pwm.c]</span><a href="https://github.com/hceng/RK3399/tree/master/hardware/9_pwm/code/pwm.c" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"pwm.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"gpio.h"</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"timer.h"</span></span></div><div class="line"></div><div class="line"><span class="comment">//GPIO4_C6/PWM1</span></div><div class="line"><span class="comment">//0~100</span></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">pwm1_out</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> val)</span></span></div><div class="line">&#123;</div><div class="line"><span class="meta">#<span class="meta-keyword">if</span> 0 <span class="comment">//test gpio ok</span></span></div><div class="line">GPIO4-&gt;SWPORTA_DDR |=  (<span class="number">0x01</span> &lt;&lt; (<span class="number">2</span> * <span class="number">8</span> + <span class="number">6</span>));</div><div class="line"></div><div class="line"><span class="keyword">while</span>(<span class="number">1</span>)</div><div class="line">&#123;</div><div class="line">GPIO4-&gt;SWPORTA_DR  &amp;= ~(<span class="number">0x01</span> &lt;&lt; (<span class="number">2</span> * <span class="number">8</span> + <span class="number">6</span>));</div><div class="line">delay_ms(<span class="number">10</span>);</div><div class="line">GPIO4-&gt;SWPORTA_DR  |=  (<span class="number">0x01</span> &lt;&lt; (<span class="number">2</span> * <span class="number">8</span> + <span class="number">6</span>));</div><div class="line">delay_ms(<span class="number">10</span>);</div><div class="line">&#125;</div><div class="line"><span class="meta">#<span class="meta-keyword">else</span> </span></div><div class="line"><span class="comment">//1.IOMUX</span></div><div class="line">GRF_GPIO4C_IOMUX  |=  ((<span class="number">0x03</span>&lt;&lt;<span class="number">28</span>) | (<span class="number">0x01</span>&lt;&lt;<span class="number">12</span>)); <span class="comment">//  1'b1: pwm_1</span></div><div class="line"><span class="comment">//GRF_SOC_CON2  |=  ((0x01&lt;&lt;16) | (0x01&lt;&lt;0)); //P136  1'b1: pwm_1</span></div><div class="line"></div><div class="line"><span class="comment">//2.Set PWM</span></div><div class="line">PWM1-&gt;CTRL &amp;= ~(<span class="number">0x01</span>&lt;&lt;<span class="number">0</span>); <span class="comment">//PWM channel disabled</span></div><div class="line"><span class="comment">//2.1 设置时钟源、比例系数、预分频、</span></div><div class="line"><span class="comment">//PWM1-&gt;CTRL |= ((0x01&lt;&lt;16) | (0x01&lt;&lt;12) | (0x01&lt;&lt;9));//Scale Factor / Prescale Factor / Clock Source Select</span></div><div class="line"><span class="comment">//2.2 设置模式:连续模式,占空比极性为高、左对齐(默认)</span></div><div class="line">PWM1-&gt;CTRL |=  (<span class="number">0x01</span>&lt;&lt;<span class="number">1</span>) | (<span class="number">0x01</span>&lt;&lt;<span class="number">3</span>); <span class="comment">//PWM Operation Mode 01: Continuous mode.</span></div><div class="line"></div><div class="line"><span class="comment">//3.Set Duty Cycle</span></div><div class="line"><span class="keyword">if</span>(val &gt; <span class="number">100</span>)</div><div class="line">val = <span class="number">100</span>;</div><div class="line">PWM1-&gt;PERIOD_HPR = <span class="number">100</span>; <span class="comment">//总周期</span></div><div class="line">PWM1-&gt;DUTY_LPR   = val;  <span class="comment">//占空比=val/总周期</span></div><div class="line"></div><div class="line"><span class="comment">//4.Start</span></div><div class="line">PWM1-&gt;CTRL |=  (<span class="number">0x01</span>&lt;&lt;<span class="number">0</span>);</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> </span></div><div class="line">&#125;</div><div class="line"></div></pre></td></tr></table></figure><h1 id="11-LCD"><a href="#11-LCD" class="headerlink" title="11.LCD"></a>11.LCD</h1><p>待填坑……</p><p>参考资料：<br>[1]. <a href="https://www.t-firefly.com/download/Firefly-RK3399/docs/TRM/Rockchip%20RK3399TRM%20V1.3%20Part1.pdf" target="_blank" rel="external">Rockchip RK3399TRM V1.3 Part1.pdf</a><br>　　<a href="https://www.t-firefly.com/download/Firefly-RK3399/docs/TRM/Rockchip%20RK3399TRM%20V1.3%20Part2.pdf" target="_blank" rel="external">Rockchip RK3399TRM V1.3 Part2.pdf</a><br>[2]. <a href="https://yurichev.com/mirrors/ARMv8-A_Architecture_Reference_Manual_%28Issue_A.a%29.pdf" target="_blank" rel="external">ARMv8-A_Architecture_ReferenceManual(Issue_A.a).pdf</a><br>[3]. <a href="https://wushifublog.com/2017/11/26/u-boot%E6%BA%90%E7%A0%81%E9%98%85%E8%AF%BB%EF%BC%88%E4%BA%8C%EF%BC%89/" target="_blank" rel="external">u-boot源码阅读(二)</a><br>[4]. <a href="http://www.wowotech.net/u-boot/boot_flow_1.html" target="_blank" rel="external">u-boot启动流程分析(1)_平台相关部分</a><br>[5]. <a href="http://loda.hala01.com/?view=classic" target="_blank" rel="external">ARMv8 与Linux的新手笔记</a></p><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以64位的RK3399为例，实现裸机的启动、中断、串口(printf移植)、定时器、ADC、PWM、I2C、SPI、LCD(MIPI)等；&lt;br&gt;
    
    </summary>
    
    
      <category term="裸机" scheme="http://yoursite.com/tags/%E8%A3%B8%E6%9C%BA/"/>
    
      <category term="Uboot" scheme="http://yoursite.com/tags/Uboot/"/>
    
      <category term="RK3399" scheme="http://yoursite.com/tags/RK3399/"/>
    
  </entry>
  
  <entry>
    <title>RK3288——LCD裸机</title>
    <link href="http://yoursite.com/2018/07/19/RK3288%E2%80%94%E2%80%94LCD%E8%A3%B8%E6%9C%BA/"/>
    <id>http://yoursite.com/2018/07/19/RK3288——LCD裸机/</id>
    <published>2018-07-19T01:12:32.000Z</published>
    <updated>2018-11-04T09:49:21.913Z</updated>
    
    <content type="html"><![CDATA[<p>在RK3288平台上，采用裸机实现LVDS和MIPI接口的LCD显示。<br><a id="more"></a></p><h1 id="1-常见的LCD显示接口"><a href="#1-常见的LCD显示接口" class="headerlink" title="1.常见的LCD显示接口"></a>1.常见的LCD显示接口</h1><p>在之前写的<a href="https://hceng.cn/2017/12/22/Exynos4412%E2%80%94%E2%80%94LCD%E9%A9%B1%E5%8A%A8/" target="_blank" rel="external">Exynos4412——LCD驱动</a>里，使用的RGB接口。<br>除了RGB接口，如今市面上主流的还有LVDS、MIPI、eDP接口。</p><table><tr><th>接口</th><th>分辨率</th><th>接口电平</th><th>说明</th></tr><tr><td>RGB</td><td>800x480以下</td><td>TTL</td><td>几乎所有的SOC都支持RGB接口；<br>在小屏、低端设备中广泛使用；</td></tr><tr><td>LVDS</td><td>1024x768及以上</td><td>差分信号</td><td>中高端的SOC大多数都集成，也可通过转换芯片将RGB转成LVDS输出；<br>在大屏，中高端平板、笔记本中使用；</td></tr><tr><td>MIPI</td><td>1080P以下</td><td>差分信号</td><td>大多数中高端的SOC都集成，也可通过转换芯片实现；<br>手机平台的标准接口，在手机中广泛使用；<br></td></tr><tr><td>eDP</td><td>1080P以上</td><td>差分信号</td><td>高端SOC中集成，相对比较新的规范；<br>支持超高分辨率，有取代LVDS的趋势；</td></tr></table><p>各接口示意图如下：</p><div align="center"><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180719/1.jpg"></div><ul><li><strong>RGB接口</strong>：RGB接口也叫TTL(<code>Transistor Transistor Logic</code>)接口，它是唯一一个采用TTL电平的LCD接口。如果数据接口R、G、B都只使用0~5共6x3根数据线，即为<strong>18bit RGB接口</strong>，如果R、G、B都使用0~7共8x3根数据线，即称为<strong>24bit RGB接口</strong>;它的详细介绍，可以参考前面的<a href="https://hceng.cn/2017/12/22/Exynos4412%E2%80%94%E2%80%94LCD%E9%A9%B1%E5%8A%A8/" target="_blank" rel="external">Exynos4412——LCD驱动</a>;</li><li><strong>LVDS接口</strong>：LVDS(<code>Low Voltage Differential Signaling</code>)，即一种采用低压差分信号技术的LCD接口，克服了TTL电平方式传输宽带高码率数据时功耗大、EMI电磁干扰大等缺点；如果数据接口只使用LVDS_D0~D2这三组数据线，就是<strong>6bit 模式</strong>；如果使用LVDS_D0~D3这四组数据线，就是<strong>8bit 模式</strong>；</li><li><strong>MIPI接口</strong>：MIPI(<code>Mobile Industry Processor Interface</code>)，为了推进手机应用处理器接口的标准化而产生的。MIPI是一系列接口的总称，MIPI下应用比较多的是DSI(<code>Display Serial Interface</code>)和CSI(<code>Camera Serial Interface</code>)，分别针对显示屏应用和摄像头应用。这里的MIPI接口，实质上指的是DSI接口；</li><li><strong>eDP接口</strong>：eDP(<code>Embedded Display Port</code>)，主要用于将视频源连接到显示设备（如计算机显示器），还可以传输音频，USB和其他形式的数据；该部分目前资料较少，RK3288芯片手册该部分寄存器都没给，属于保密范围，暂时没法研究；</li></ul><h1 id="2-LVDS"><a href="#2-LVDS" class="headerlink" title="2.LVDS"></a>2.LVDS</h1><h2 id="2-1-分析过程"><a href="#2-1-分析过程" class="headerlink" title="2.1 分析过程"></a>2.1 分析过程</h2><p>先理一下分析的思路：</p><ul><li>1.首先需要一个RK3288的开发板(这里使用的是Firefly生产的AIO-3288J)，且带有LVDS接口的屏，且提供的资料能够让屏亮起来；</li><li>2.根据提供资料、源码，重头编译一下源码，包括U-boot、Kernel、Android等(编译Android可能需要<a href="https://www.cyberciti.biz/faq/ubuntu-linux-create-add-swap-file/" target="_blank" rel="external">设置交换分区</a>)；</li><li>3.编译完成后，将生成的镜像文件烧录至开发板，验证是否可用；</li><li>4.可用后，就有了显示部分的源码，先从设备树文件夹入手，查看生成了哪些dtb文件，即表示对应的dts被使用了，再找到对应的dts文件，找到lcd、screen、blacklinght、lvds等关键词的部分；</li><li>5.得出RK3288的LVDS至少和VOP(lcdc)、lvds、screen、blacklinght这四个部分有关，再利用设备树<code>compatible</code>与内核匹配和源码若使用都会生成<code>.o</code>这两个特性，找到对应部分的内核源码；</li><li>6.修改内核源码，重新编译烧录，观察现象；比如，找到内核源码中lvds相关部分，屏蔽掉<code>lvds_en()</code>这一明显关键的函数后，发现开发板开机后，启动内核屏幕仍然会出现logo，因此推测U-boot也做了LVDS的相关初始化，内核中的<code>lvds_en()</code>可能用于后续锁屏等屏幕的开闭；</li><li>7.屏蔽多个关键函数，发现除去背光函数对屏幕显示有影响外，其它的关键函数的屏蔽，对开始显示logo都没影响；</li><li>8.在U-boot中，直接操作寄存器使能背光，同时屏蔽进入内核的代码，发现进入U-boot即可显示logo，因此U-boot里肯定有完整的LVDS显示的操作，内核就暂时不用管了；</li><li>9.以U-boot中<code>lcdc_init()</code>、<code>lvds_en()</code>等为核心突破口，先打印出该部分的寄存器操作值，再屏蔽掉该部分代码，自己直接向寄存器写值，重新烧录，查看logo是否仍显示；如果logo存在，则表示自己直接操作该部分寄存器成功；</li><li>10.以此类推，逐渐屏蔽源码，改为自己直接操作寄存器，最后按照源码的函数调用顺序，依次操作寄存器，单独生成bin文件，测试显示成功即可；</li><li>11.查阅相关寄存器，分析、注释；</li></ul><p>对LVDS接口的LCD显示分析如下：</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180719/2.jpg"></div><p>对LVDS接口的LCD操作框架总结如下：</p><div align="center"><img width="600" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180719/3.jpg"></div><p>这其中有两个值得一提的点：</p><ul><li>1.核心板上有个电源IC，需要通过I2C设置电源IC的输出，提供给显示模块，如果没有设置，屏幕是不会有显示的；</li><li>2.屏幕参数的设置，用到了前面<a href="https://hceng.cn/2017/12/22/Exynos4412%E2%80%94%E2%80%94LCD%E9%A9%B1%E5%8A%A8/#1-3-LCD%E6%98%BE%E7%A4%BA%E5%8E%9F%E7%90%86" target="_blank" rel="external">1.3LCD显示原理</a>的知识：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">//hspw+hbp+col+hfp:8+8+800+48=848</div><div class="line">VOP_BIG_DSP_HTOTAL_HS_END  =  ((8&lt;&lt;0)   | (848&lt;&lt;16));  //0:HS_PW        16:HTOTAL</div><div class="line">VOP_BIG_DSP_HACT_ST_END    =  ((816&lt;&lt;0) | (16&lt;&lt;16));   //0:COL_END      16:COL_START</div><div class="line"></div><div class="line">//vspw+vbp+row+vfp:4+11+1280+32=1312</div><div class="line">VOP_BIG_DSP_VTOTAL_VS_END  =  ((4&lt;&lt;0)    | (1312&lt;&lt;16));//0:VS_PW        16:VTOTAL</div><div class="line">VOP_BIG_DSP_VACT_ST_END    =  ((1295&lt;&lt;0) | (15&lt;&lt;16));  //0:ROW_END      16:ROW_START</div><div class="line"></div><div class="line">VOP_BIG_POST_DSP_HACT_INFO =  ((816&lt;&lt;0)  | (16&lt;&lt;16));  //0:COL_END      16:COL_START</div><div class="line">VOP_BIG_POST_DSP_VACT_INFO =  ((1295&lt;&lt;0) | (15&lt;&lt;16));  //0:ROW_END      16:ROW_START</div></pre></td></tr></table></figure></li></ul><p>在水平方向，由<code>HSYNC(hspw)+HBP+Active weigth(col)+HFP=Total weigth(HTOTAL)</code>，再根据LCD的手册，取合适的值，填入寄存器对应位；<br>比如，VOP_BIG_DSP_HTOTAL_HS_END的低16位填入<code>HSYNC(hspw)</code>值，高16位填入<code>Total weigth(HTOTAL)</code>；VOP_BIG_DSP_HACT_ST_END低16位填入<code>HSYNC(hspw)+HBP+Active weigth(col)</code>的值，高16位填入<code>HSYNC(hspw)+HBP</code>的值；都是吻合LCD的显示原理的。</p><h2 id="2-2-源码及效果"><a href="#2-2-源码及效果" class="headerlink" title="2.2 源码及效果"></a>2.2 源码及效果</h2><p>源码见<a href="https://github.com/hceng/learn/blob/master/rk3288/hardware/4_lcd/lvds/lcd.c" target="_blank" rel="external">Github</a>。</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180719/4.gif"></div><h1 id="3-MIPI"><a href="#3-MIPI" class="headerlink" title="3.MIPI"></a>3.MIPI</h1><h2 id="3-1-分析过程"><a href="#3-1-分析过程" class="headerlink" title="3.1 分析过程"></a>3.1 分析过程</h2><p>先理一下分析的思路：</p><ul><li>1.首先需要一个带有MIPI屏的RK3288的开发板，Firefly生产的AIO-3288J的MIPI屏已经停产，也没找到兼容的，因此又去弄了一个带MIPI屏的RK3288开发板(荣品生产的king3288)；</li><li>2.根据提供的资料，编译源码，下载，烧录、测试；</li><li>3.有了前面的经验，猜测开机LOGO显示的代码在U-Boot中，注释掉U-Boot中<code>common/cmd_bootrk.c</code>里的<code>//do_bootm_linux(0, 0, NULL, &amp;images);</code>，使其不能引导内核，重新编译U-Boot，下载，发现有LOGO显示，证明U-Boot里有MIPI屏显示操作；</li><li>4.依旧是找到LOGO显示的相关代码，修改，编译，烧写，观察现象，最终得到独立的MIPI屏显示相关代码；</li></ul><p>对MIPI接口的LCD显示分析如下：</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180719/4.jpg"></div><p>MIPI部分的代码比LVDS感觉要乱一些，主要是因为在结构体里定义了函数，使用<code>Source Insight</code>分析代码时，没那么方便，涉及到了三个结构体如下，分别是VOP、MIPI接口、面板的相关操作：</p><div><img width="800" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180719/5.jpg"></div><p>这其中有两个值得一提的点：</p><ul><li>1.它们的PMIC使用的同一款，且配置一样，直接就可以用之前的代码；</li><li>2.不能直接读出所有配置的寄存器，然后对比，因为实测有些寄存器操作后，需要一个等待时间(需要读取另一个寄存器判断)，才能进行下一个寄存器的操作，就可能出现源码和自己代码的寄存器值都一样，但实际效果不一样；</li></ul><h2 id="3-2-源码及效果"><a href="#3-2-源码及效果" class="headerlink" title="3.2 源码及效果"></a>3.2 源码及效果</h2><p>源码见<a href="https://github.com/hceng/learn/blob/master/rk3288/hardware/4_lcd/mipi/lcd.c" target="_blank" rel="external">Github</a>。</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180719/6.gif"></div><h1 id="4-心得"><a href="#4-心得" class="headerlink" title="4.心得"></a>4.心得</h1><ul><li>1.熟悉了如果从驱动中提取出裸机代码，看清了对寄存器的实质操作，有利于理解整个流程；</li><li>2.无论是何种接口的LCD，都有共性，比如都需要向buf写数据，且告诉对应寄存器；针对RK3288，都使用VOP对buf数据处理，然后再通过不同的接口发送出去，都需要根据LCD面板来设置时间参数；</li></ul><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在RK3288平台上，采用裸机实现LVDS和MIPI接口的LCD显示。&lt;br&gt;
    
    </summary>
    
    
      <category term="裸机" scheme="http://yoursite.com/tags/%E8%A3%B8%E6%9C%BA/"/>
    
      <category term="LCD" scheme="http://yoursite.com/tags/LCD/"/>
    
      <category term="RK3288" scheme="http://yoursite.com/tags/RK3288/"/>
    
  </entry>
  
  <entry>
    <title>Linux声卡驱动</title>
    <link href="http://yoursite.com/2018/06/27/Linux%E5%A3%B0%E5%8D%A1%E9%A9%B1%E5%8A%A8/"/>
    <id>http://yoursite.com/2018/06/27/Linux声卡驱动/</id>
    <published>2018-06-27T01:22:47.000Z</published>
    <updated>2018-11-04T09:41:22.209Z</updated>
    
    <content type="html"><![CDATA[<p>了解、学习Linux声卡驱动，并在Tiny4412上实现声音的播放和录制。<br><a id="more"></a></p><h1 id="1-声卡基础"><a href="#1-声卡基础" class="headerlink" title="1.声卡基础"></a>1.声卡基础</h1><h2 id="1-1-基本概念"><a href="#1-1-基本概念" class="headerlink" title="1.1 基本概念"></a>1.1 基本概念</h2><p>记得是初中还是高中物理，里面说过声音是由物体振动产生，然后通过空气传播到耳朵里。<br>把耳朵换成咪头，声音振动咪头，改变了咪头两端的电压，ADC再采集电压，就记录了音频数据；反之，将记录的数据通过DAC转成电压，通过运放放大，就使喇叭振动就产生了声音。<br>这整个过程，涉及声音质量的参数有三个：</p><ul><li>采样频率：就是单位时间内ADC采集的次数，一般是8kHz~96kHz；</li><li>转换精度：就是每次ADC采集或者DAC转换的精度。一般有8bit、16bit、24bit；</li><li>通道数：就是单声道、双声道；</li></ul><hr><p>在Linux声卡驱动的发展中，最开始使用的声卡驱动框架是<strong><a href="https://zh.wikipedia.org/wiki/Open_Sound_System" target="_blank" rel="external">OSS</a></strong>(Open Sound System)。<br>从2.6版本开始，<strong><a href="https://zh.wikipedia.org/wiki/ALSA" target="_blank" rel="external">ALSA</a></strong>(Advanced Linux Sound Architecture)成为Linux内核中默认的标准音频驱动程序集，OSS则被标记为废弃。<br>OSS和ALSA的主要区别:</p><ul><li>OSS:提供基于ioctl等原始编程接口访问设备；</li><li>ALSA:除了提供基于ioctl等原始编程接口，还专门为简化应用程序的编写提供了相应的函数库，相对OSS更加方便；<div align="center"><img width="600" height="" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180627/1.jpg"></div></li></ul><p>后面编写的驱动，将采用ALSA框架。</p><h2 id="1-2音频编解码芯片"><a href="#1-2音频编解码芯片" class="headerlink" title="1.2音频编解码芯片"></a>1.2音频编解码芯片</h2><p>一般来说，大多数SOC都不包含音频的转换，可能是因为功耗、模数干扰等考虑，因此大多数都是外接了一个音频编解码芯片(Codec)。<br>音频文件从Flash加载到RAM中，再由DMA将其通过I2S发送给Codec，再由Codec的DAC变成模拟信号，驱动功放使喇叭播放声音；同时，SOC通过I2C(有些Codec不是I2C，而是其它的接口)设置Codec的寄存器，调整声音大小等。</p><div align="center"><img width="600" height="" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180627/2.jpg"></div><p>因此，整个声卡框架涉及的驱动可能有SOC的DMA、I2S、I2C以及Codec驱动。</p><h1 id="2-硬件接口"><a href="#2-硬件接口" class="headerlink" title="2.硬件接口"></a>2.硬件接口</h1><p>Tiny4412的声卡部分原理图如下，所采用的codec芯片为WM8960，该电路大致可分为四部分：</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180627/3.jpg"></div><p><strong> ① IIS接口，负责Exynos4412和WM8960之间的数据传输 </strong></p><table><tr><th>Function</th><th>SOC</th><th>Codec</th><th>Note</th></tr><tr><td rowspan="5">Date</td><td>Xi2sCDCLK0</td><td>MCLK</td><td>系统时钟</td></tr><tr><td>Xi2sSCLK0</td><td>BCLK</td><td>数据时钟</td></tr><tr><td>Xi2sLRCK0</td><td>DACLRC</td><td>左右声道切换</td></tr><tr><td>Xi2sSDO0_0</td><td>DATDAT</td><td>数据输出(播放)</td></tr><tr><td>Xi2sSDI0</td><td>ADCDAT</td><td>数据输入(录音)</td></tr></table><p>　<br><strong> ② I2C接口，负责Exynos4412对WM8960寄存器的配置 </strong></p><table><tr><th>Function</th><th>SOC</th><th>Codec</th><th>Note</th></tr><tr><td rowspan="2">Control</td><td>Xi2cSCL0</td><td>SCLK</td><td>I2C时钟</td></tr><tr><td>Xi2cSDA0</td><td>SDIN</td><td>I2C数据</td></tr></table><p><strong> ③ 录音 </strong><br>采用咪头和耳机接口进行录音；</p><p><strong> ④ 播放 </strong><br>采用耳机接口播放音频，另外还有一个耳机插入检测<code>Earphone_detect</code>；</p><p>最近急需入坑Android，声卡这个坑暂停一下，后续再回来填！</p><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;了解、学习Linux声卡驱动，并在Tiny4412上实现声音的播放和录制。&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux驱动" scheme="http://yoursite.com/tags/Linux%E9%A9%B1%E5%8A%A8/"/>
    
      <category term="Exynos4412" scheme="http://yoursite.com/tags/Exynos4412/"/>
    
      <category term="音频驱动" scheme="http://yoursite.com/tags/%E9%9F%B3%E9%A2%91%E9%A9%B1%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>嵌入式Linux——WIFI网卡</title>
    <link href="http://yoursite.com/2018/06/21/%E5%B5%8C%E5%85%A5%E5%BC%8FLinux%E2%80%94%E2%80%94WIFI%E7%BD%91%E5%8D%A1/"/>
    <id>http://yoursite.com/2018/06/21/嵌入式Linux——WIFI网卡/</id>
    <published>2018-06-21T06:58:18.000Z</published>
    <updated>2019-05-04T09:57:34.238Z</updated>
    
    <content type="html"><![CDATA[<p>如何在嵌入式Linux中，使用WIFI无线网卡。<br><a id="more"></a><br>嵌入式中设备想要联网，无非就 有线和无线 两种方式。<br>有线就插上网线，没什么好说的；无线的话一种是将WIFI模块集成焊接在板子上，另一种是WIFI模块以USB的方式接到板子上。<br>本次使用的就是USB接口的WIFI无线网卡，实现开发板使用WIFI无线网卡访问互联网和作为个人热点。</p><h1 id="1-准备工作"><a href="#1-准备工作" class="headerlink" title="1.准备工作"></a>1.准备工作</h1><h2 id="1-2-WIFI基础知识"><a href="#1-2-WIFI基础知识" class="headerlink" title="1.2 WIFI基础知识"></a>1.2 WIFI基础知识</h2><p>WIFI网卡有两种工作模式，<br>一种是<strong>无线终端模式(STA)</strong>，也就是手机日常使用的模式，通过该模式连接网络上网；<br>一种是<strong>无线热点模式(AP)</strong>，也就是手机的个人热点模式，通过该模式提供热点供其它设备上网；</p><p>无线网络的安全性由两部分组成：<strong>认证</strong>和<strong>加密</strong>。<br><strong> 认证:</strong>使得只有允许的设备才能连接到无线网络；<br><strong> 加密:</strong>确保数据的保密性和完整性，即数据在传输过程中不会被篡改；</p><ul><li><p>常用的认证算法有:<strong>开放认证、共享秘钥认证、802.11x认证、PSK认证</strong>。<br>其中802.11x认证和PSK认证安全性较高，分别应用于企业和个人的环境;</p></li><li><p>常用的加密算法有:<strong>WEB加密、TKIP加密、CCMP加密算法</strong>。<br>其中WEB加密和TKIP加密都是RC4的加密算法，安全性较低；CCMP加密采用AES对称加密算法，安全性较高。</p></li></ul><table><tr><th>安全策略</th><th>认证方式</th><th>加密方式</th><th>备注</th></tr><tr><td rowspan="2">Open</td><td>open</td><td>open</td><td>开放WiFi，无任何加密</td></tr><tr><td>open</td><td>WEP</td><td>开放WiFi，仅数据加密</td></tr><tr><td>WEP</td><td>WEP</td><td>WEP</td><td>共享密钥认证，容易破解</td></tr><tr><td rowspan="2">WPA</td><td>802.11X</td><td>TKIP/WEP</td><td>比较安全，用于企业</td></tr><tr><td>PSK</td><td>TKIP/WEP</td><td>比较安全，用于个人</td></tr><tr><td rowspan="2">WPA2</td><td>802.11X</td><td>CCMP/TKIP/WEP</td><td>目前最安全，用于个人</td></tr><tr><td>PSK</td><td>CCMP/TKIP/WEP</td><td>目前最安全，用于个人</td></tr></table><p>连入超市、商场等公共WIFI的时候，不需要输入密码，但要通过网页输入手机号，使用验证码验证，也就是采用802.11X进行的验证，通过服务器完成的验证。<br>使用手机开个人热点的时候，可以选择安全性OPEN、WEP、WPA、WPA2，也就对应不同的安全等级。</p><p>我手里的MIX2S，MIUI10个人热点里面就仅OPEN和WPA2两个选项，感觉这是个趋势，要么最简单的OPEN，要么就最安全的WPA2(WPA2是向下兼容的)，逐渐扔掉历史的包袱。</p><h2 id="1-2-选择无线网卡"><a href="#1-2-选择无线网卡" class="headerlink" title="1.2 选择无线网卡"></a>1.2 选择无线网卡</h2><p>首先是选择合适的无线网卡，选取的原则是<strong>根据WIFI无线网卡的<code>VID</code>和<code>PID</code>判断内核是否支持该无线网卡。</strong></p><ul><li><p>1.获取无线网卡ID<br>将无线网卡插入Windows电脑，打开设备管理器，选中无线网卡，右键“属性”，切换到“详细信”息选项卡，在“属性”下拉栏中选择”硬件ld”，即可得到无线网卡的ID：<br><div align="center"><img width="390" height="374" src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180621/1.jpg"></div><br>我的无线网卡<code>VID</code>是<code>0x148F</code>，<code>PID</code>是<code>0x3070</code>；</p></li><li><p>2.查询内核是否支持<br>可以从<a href="https://wireless.wiki.kernel.org/en/users/devices" target="_blank" rel="external">wireless.kernel.org</a>得到<a href="https://wikidevi.com/wiki/DNI:USB_WiFi_adapters_w/_probable_Linux_support" target="_blank" rel="external">支持的设备列表</a>。<br>可以从列表中搜到前面的<code>VID</code>和<code>PID</code>，因此说明内核是支持现在使用的无线网卡。此外，还可以得知对应的驱动应该为<code>rt2800usb</code>、<code>rt2870sta</code>。<br><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180621/2.jpg"></div>　</p><h2 id="1-3-移植WIFI驱动"><a href="#1-3-移植WIFI驱动" class="headerlink" title="1.3 移植WIFI驱动"></a>1.3 移植WIFI驱动</h2></li><li>前面根据ID得到了对应的网卡驱动名字，但还不是很靠谱，建议直接在驱动中搜索ID，更靠谱：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grep &quot;0x3070&quot; drivers/net/wireless/ -nr</div></pre></td></tr></table></figure></li></ul><p>得到：<code>drivers/net/wireless/ralink/rt2x00/rt2800usb.c:1091:    { USB_DEVICE(0x148f, 0x3070) },</code>，知道了对应的驱动文件是<code>rt2800usb.c</code>；　</p><ul><li>再查看对应路径的Makfeile：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cat  drivers/net/wireless/ralink/rt2x00/Makefile</div></pre></td></tr></table></figure></li></ul><p>得到：<code>obj-$(CONFIG_RT2800USB)            += rt2800usb.o</code>，知道了对应的宏是<code>CONFIG_RT2800USB</code>；　</p><ul><li>进入内核目录，执行：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make menuconfig</div></pre></td></tr></table></figure></li></ul><p>搜索<code>CONFIG_RT2800USB</code>，得知其依赖：<code>Depends on: NETDEVICES [=y] &amp;&amp; WLAN [=y] &amp;&amp; WLAN_VENDOR_RALINK [=y] &amp;&amp; RT2X00 [=n] &amp;&amp; USB [=y]</code>，可以知道<code>RT2X00 [=n]</code>没有打开，再搜索它，如此循环，直到<code>RT2800USB [=y]</code>。</p><p>这里有个注意的就是，当开启的上层的某个依赖，下层的某个选项可能会多出来许多选项，而这些选项原来是没有的，不要固化思维。</p><p>最后重新编译内核即可。</p><h2 id="1-4-使用buildroot移植应用"><a href="#1-4-使用buildroot移植应用" class="headerlink" title="1.4 使用buildroot移植应用"></a>1.4 使用buildroot移植应用</h2><p>想要使用无线网卡，需要用到四个软件：</p><ul><li>iw:可用于OPEN、WEP这两种”认证/加密”，以及扫描WIFI热点等；</li><li>wpa_supplicant:可用于前面4种”认证/加密”；</li><li>hostapd:能够使得无线网卡切换为AP模式；</li><li>dhcp:STA模式使WIFI网卡动态获取IP，AP模式分配IP；</li></ul><p>也就是需要移植这四个软件，目前的方法有：<br>1.逐个下载源码，交叉编译，配置，可以还需要相关依赖库，缺点是费时费力；<br>2.使用<code>Yocto</code>等工具，制作发行版的根文件系统，例如Ubuntu16.04，里面有apt-get，可以自动下载安装，缺点是制作发行版根文件系统比较麻烦，且体积较大；<br>3.使用<code>buildroot</code>制作根文件系统，选择需要的软件，自动生成根文件系统，相对简单，体积也较小；</p><p>本次就以buildroot为例，制作含需要应用程序的根文件系统。</p><ul><li><p>首先从GitHub下载针对Tiny4412修改后的buidroot</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git clone -b board_tiny4412 https://github.com/hceng/buildroot.git</div></pre></td></tr></table></figure></li><li><p>查看支持的board</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cd buildroot/</div><div class="line">make list-defconfigs</div></pre></td></tr></table></figure></li></ul><p>得知tiny4412对应的配置文件:<code>tiny4412_defconfig                  - Build for tiny4412</code>；</p><ul><li><p>配置提供的配置文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make tiny4412_defconfig</div></pre></td></tr></table></figure></li><li><p>添加自己所需软件<br>执行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make menuconfig</div></pre></td></tr></table></figure></li></ul><p>对应勾选所需软件：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">Target packages  ---&gt;</div><div class="line">    Networking applications  ---&gt;</div><div class="line">        [*] dhcp (ISC)                                                </div><div class="line">            [*]   dhcp server                                      </div><div class="line">                [*]     Enable delayed ACK feature                     </div><div class="line">            [*]   dhcp relay                                       </div><div class="line">            [*]   dhcp client </div><div class="line">        ……</div><div class="line">        [*] hostapd                                                     </div><div class="line">            [*]   Enable ACS (NEW)                                      </div><div class="line">            [*]   Enable EAP                                            </div><div class="line">            [*]   Enable WPS </div><div class="line">        ……</div><div class="line">        [*] iw</div><div class="line">        ……</div><div class="line">        [*] wpa_supplicant                                               </div><div class="line">            [*]   Enable nl80211 support                                  </div><div class="line">            [*]   Enable AP mode                                           </div><div class="line">            [ ]   Enable EAP                                                  </div><div class="line">            [ ]   Enable HS20                                                 </div><div class="line">            [ ]   Enable syslog support                                       </div><div class="line">            [ ]   Enable WPS                                                  </div><div class="line">            [*]   Install wpa_cli binary                                      </div><div class="line">            [*]   Install wpa_client shared library                           </div><div class="line">            [*]   Install wpa_passphrase binary</div></pre></td></tr></table></figure></p><ul><li><p>修改主机名、欢迎语、root密码等</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">System configuration  ---&gt;</div><div class="line">    (tiny_4412) System hostname  </div><div class="line">    (Welcome to hceng&apos;s board.) System banner  </div><div class="line">    ……</div><div class="line">    [*] Enable root login with password</div><div class="line">    (123456) Root password</div></pre></td></tr></table></figure></li><li><p>生成根文件系统<br>执行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">make</div></pre></td></tr></table></figure></li></ul><p><code>buildroot</code>会自动下载相关源码包，整个过程时间比较久，最后生成<code>buildroot/output/images/rootfs.tar</code>，解压到SD卡rootfs分区即可。</p><h2 id="1-5-添加firmware"><a href="#1-5-添加firmware" class="headerlink" title="1.5 添加firmware"></a>1.5 添加firmware</h2><p>此时开发板启动Linux后，使用<code>ifconfig wlan0 up</code>启动无线网卡，提示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">ieee80211 phy0: rt2x00lib_request_firmware: Info - Loading firmware file &apos;rt2870.bin&apos;</div><div class="line">rt2800usb 2-2.2:1.0: Direct firmware load for rt2870.bin failed with error -2</div><div class="line">ieee80211 phy0: rt2x00lib_request_firmware: Error - Failed to request Firmware</div><div class="line">ifconfig: SIOCSIFFLAGS: No such file or directory</div></pre></td></tr></table></figure></p><p>提示需要firmware文件<code>rt2870.bin</code>。</p><p>继续通过网站<a href="https://wireless.wiki.kernel.org/en/users/drivers/rt2800usb" target="_blank" rel="external">wireless.wiki.kernel.org</a>去下载<a href="https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git/snapshot/linux-firmware-master.tar.gz" target="_blank" rel="external">该固件</a>。</p><p>得到<code>rt2870.bin</code>后，拷贝到单板<code>/lib/firmware/</code>下即可。</p><h2 id="1-6-启动WIFI网卡"><a href="#1-6-启动WIFI网卡" class="headerlink" title="1.6 启动WIFI网卡"></a>1.6 启动WIFI网卡</h2><blockquote><p><strong>注意：</strong><br>双网卡的单板的两个网卡IP不能设置为同一网段，原因参考<a href="https://www.zhihu.com/question/41331151" target="_blank" rel="external">这里</a>。</p></blockquote><p>也就是先把有线网卡IP设置为其它网段，比如：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ifconfig eth0 192.168.2.220</div></pre></td></tr></table></figure></p><p>然后启动WIFI网卡，并设置IP(路由器IP为192.168.1.1)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ifconfig wlan0 up</div><div class="line">ifconfig wlan0 192.168.1.220</div></pre></td></tr></table></figure></p><p>此时效果如下：</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180621/3.jpg"></div><h1 id="2-无线终端模式——STA"><a href="#2-无线终端模式——STA" class="headerlink" title="2.无线终端模式——STA"></a>2.无线终端模式——STA</h1><p>完成前面的准备工作后，就可以通过软件使用无线网卡了。</p><h2 id="2-1-iw的使用"><a href="#2-1-iw的使用" class="headerlink" title="2.1 iw的使用"></a>2.1 iw的使用</h2><ul><li><p>列出WIFI网卡的性能:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iw list</div></pre></td></tr></table></figure></li><li><p>扫描WIFI热点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">iw dev wlan0 scan </div><div class="line">iw dev wlan0 scan | grep SSID:</div></pre></td></tr></table></figure></li><li><p>连接到开放AP</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iw wlan0 connect hceng</div></pre></td></tr></table></figure></li><li><p>查看连接状态</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iw dev wlan0 link</div></pre></td></tr></table></figure></li><li><p>断开WIFI连接</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iw wlan0 disconnect</div></pre></td></tr></table></figure></li></ul><p>还可以连接加密的WEP，这里就不研究了。</p><blockquote><p><strong>注意：</strong><br>1.如果连接的不是路由器(IP为<code>192.168.1.1</code>)，而是Android手机热点(IP一般为<code>192.168.43.1</code>)，那么要将WIFI网卡IP设置为43网段，如:<code>192.168.43.10</code>，才能ping通<code>192.168.43.1</code>。<br>　<br>2.此时只能ping路由器和局域网设备，如果要联外网，还需要如下操作：<br>①修改<code>/etc/resolv.conf</code>，添加DNS:<code>nameserver 192.168.1.1</code>，如果是手机热点为<code>nameserver 192.168.43.1</code>；<br>②设置网关，输入命令:<code>route add default gw 192.168.1.1</code>，如果是手机热点为<code>route add default gw 192.168.43.1</code>；</p></blockquote><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180621/4.jpg"></div><h2 id="2-2-wpa-supplicant的使用"><a href="#2-2-wpa-supplicant的使用" class="headerlink" title="2.2 wpa_supplicant的使用"></a>2.2 wpa_supplicant的使用</h2><p><code>wpa_supplicant</code>本是开源项目，被谷歌修改后加入android移动平台，它主要是用来支持WEP，WPA/WPA2和WAPI无线协议和加密认证的。<br><code>wpa_supplicant</code>是一个连接、配置WIFI的工具，它主要包含<code>wpa_supplicant</code>(命令行模式)与<code>wpa_cli</code>(交互模式)两个程序。<br>通常情况下，可以通过<code>wpa_cli</code>来进行WIFI的配置与连接，如果有特殊的需要，可以编写应用程序直接调用<code>wpa_supplicant</code>的接口直接开发。</p><p>记得以前想查看Android手机连接过的WIFI热点密码时，就直接使用RE文件管理器查看<code>/data/misc/wifi/wpa_supplicant.conf</code>即可(需ROOT)，里面有所有连接过的WIFI名字和密码。<br>从这里可以看出，最后WIFI名字和密码，都会被保存到一个配置文件里，在Linux中，路径就是<code>/etc/wpa_supplicant.conf</code>。</p><ul><li>连接开放网络<br>向<code>/etc/wpa_supplicant.conf</code>加入：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">network=&#123;</div><div class="line">    ssid=&quot;hceng&quot;</div><div class="line">    key_mgmt=NONE</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><p>初始化wpa_supplicant，执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wpa_supplicant -B -d -i wlan0 -c /etc/wpa_supplicant.conf</div></pre></td></tr></table></figure></p><p>查看连接状态：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wpa_cli -iwlan0 status</div></pre></td></tr></table></figure></p><p>断开连接：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wpa_cli -iwlan0 disconnect</div><div class="line"></div><div class="line">killall wpa_supplicant</div></pre></td></tr></table></figure></p><p>重新连接：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wpa_cli -iwlan0 reconnect</div></pre></td></tr></table></figure></p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180621/5.jpg"></div><ul><li>连接加密网络(WAP2)<br>向<code>/etc/wpa_supplicant.conf</code>加入：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">network=&#123;</div><div class="line">    ssid=&quot;hceng_test&quot;</div><div class="line">    psk=&quot;12345678&quot;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><p>初始化wpa_supplicant，执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">wpa_supplicant -B -d -i wlan0 -c /etc/wpa_supplicant.conf</div></pre></td></tr></table></figure></p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180621/6.jpg"></div><p>至于WEP和WAP方式，也就是配置文件的不同，这里就不去深究了，以后遇到了再说。</p><h2 id="2-3-dhclient的使用"><a href="#2-3-dhclient的使用" class="headerlink" title="2.3 dhclient的使用"></a>2.3 dhclient的使用</h2><p>至此，已经可以连接WIFI了，但还有一些问题。<br>就如前面，需要手动设置设备的IP，且要根据热点的网段设置，还可能与同网段的设备IP冲突。<br>为了解决这个问题，引入了DHCP，自动分配IP地址。</p><p>就像家里的设备连接到路由器一样，除了输入名字，密码，其它都不用操作，而且还不会出现IP冲突的情况。</p><p>连接好WIFI后，输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dhclient wlan0</div></pre></td></tr></table></figure></p><p>实现自动获取分配的IP，并设置。</p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180621/7.jpg"></div><h2 id="2-4-自动脚本"><a href="#2-4-自动脚本" class="headerlink" title="2.4 自动脚本"></a>2.4 自动脚本</h2><p>现在已经从功能上实现了WIFI无线网卡的使用，但使用过程步骤比较多，相对麻烦。<br>理想的效果无论何时插上WIFI无线网卡，都自动连接WIFI，且自动获取IP地址。</p><p>这就要用到USB的热拔插机制，很久以前写过一篇<a href="https://hceng.cn/2017/04/22/Linux%E8%87%AA%E5%8A%A8%E6%8C%82%E8%BD%BD%E5%8D%B8%E8%BD%BDU%E7%9B%98/" target="_blank" rel="external">U盘自动挂载</a>的文章，用的就是这个机制。</p><ul><li>1.首先修改<code>/etc/mdev.conf</code>配置文件<br>加入WIFI无线网卡的热拔插事件：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># hceng add for wifi</div><div class="line">wlan0           root:root 660 * /sbin/auto_wifi.sh</div></pre></td></tr></table></figure></li></ul><p>其中<code>*</code>表示插拔都执行后面的脚本。</p><ul><li>2.自动连接脚本<code>/sbin/auto_wifi.sh</code><br>但检测到USB网卡插拔后，就会执行该脚本：<figure class="highlight bash"><figcaption><span>[auto_wifi.sh]</span><a href="https://github.com/hceng/learn/blob/master/tiny4412/10_usb_wifi/rootfs/sbin/auto_wifi.sh" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="keyword">if</span> [ <span class="variable">$ACTION</span> = <span class="string">"add"</span> ];</div><div class="line"><span class="keyword">then</span></div><div class="line">   <span class="built_in">echo</span> --------usb wifi connect--------- &gt; /dev/console</div><div class="line">   wpa_supplicant -B <span class="_">-d</span> -i wlan0 -c /etc/wpa_supplicant.conf</div><div class="line">   wpa_cli -B -i wlan0 <span class="_">-a</span>/sbin/auto_dhcp.sh</div><div class="line"><span class="keyword">else</span></div><div class="line">   <span class="built_in">echo</span> --------usb wifi disconnect--------- &gt; /dev/console</div><div class="line">   killall wpa_supplicant</div><div class="line">   killall wpa_cli</div><div class="line">   killall dhclient</div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure></li></ul><p>如果是插入USB无线网卡，将执行<code>wpa_supplicant -B -d -i wlan0 -c /etc/wpa_supplicant.conf</code>连接wifi，再执行<code>wpa_cli -B -i wlan0 -a/sbin/auto_dhcp.sh</code>调用dhcp的脚本；</p><p>如果是拔出USB无线网卡，将清除所有相关进程；</p><ul><li>3.自动dhcp脚本<code>/sbin/auto_dhcp.sh</code><figure class="highlight bash"><figcaption><span>[auto_dhcp.sh]</span><a href="https://github.com/hceng/learn/blob/master/tiny4412/10_usb_wifi/rootfs/sbin/auto_dhcp.sh" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line">IFNAME=<span class="variable">$1</span></div><div class="line">CMD=<span class="variable">$2</span></div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$CMD</span>"</span> = <span class="string">"CONNECTED"</span> ]; <span class="keyword">then</span></div><div class="line">   <span class="built_in">echo</span> ========connect <span class="variable">$IFNAME</span>, dhclient <span class="keyword">for</span> it======= &gt; /dev/console</div><div class="line">   dhclient <span class="variable">$IFNAME</span></div><div class="line"><span class="keyword">fi</span></div><div class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$CMD</span>"</span> = <span class="string">"DISCONNECTED"</span> ]; <span class="keyword">then</span></div><div class="line">   <span class="built_in">echo</span> ========disconnect <span class="variable">$IFNAME</span>, <span class="built_in">kill</span> dhclient <span class="keyword">for</span> it======= &gt; /dev/console</div><div class="line">   killall dhclient</div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure></li></ul><p>如果是连接，将调用<code>dhclient</code>分配IP，反之清除<code>dhclient</code>进程。</p><ul><li>4.为脚本加上可执行权限<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">chmod +x /sbin/auto_wifi.sh</div><div class="line">chmod +x /sbin/auto_dhcp.sh</div></pre></td></tr></table></figure></li></ul><p>最后便可实现自动连接WIFI，且自动获取IP地址。</p><h1 id="3-无线热点模式——AP"><a href="#3-无线热点模式——AP" class="headerlink" title="3.无线热点模式——AP"></a>3.无线热点模式——AP</h1><p>无线热点模式共需要两步操作，先使用<code>hostapd</code>将无线网卡切换成AP模式，再使用<code>dhcpd</code>分配IP。</p><h2 id="3-1-hostapd的使用"><a href="#3-1-hostapd的使用" class="headerlink" title="3.1 hostapd的使用"></a>3.1 hostapd的使用</h2><p>先清除前面STA模式的所有操作，重新启动单板。</p><ul><li>创建<code>/etc/hostapd.conf</code>配置文件</li></ul><p>1.OPEN模式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">ctrl_interface=/var/run/hostapd</div><div class="line"></div><div class="line">ssid=hceng</div><div class="line">channel=1</div><div class="line">interface=wlan0</div><div class="line">driver=nl80211</div></pre></td></tr></table></figure></p><p>2.WAP/WAP2模式：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">ctrl_interface=/var/run/hostapd</div><div class="line"></div><div class="line">ssid=hceng</div><div class="line">#hw_mode=g</div><div class="line">channel=1</div><div class="line">interface=wlan0</div><div class="line">#bridge=br0</div><div class="line">driver=nl80211</div><div class="line">macaddr_acl=0</div><div class="line">#accept_mac_file=/etc/hostapd.accept</div><div class="line">#deny_mac_file=/etc/hostapd.deny</div><div class="line"></div><div class="line">auth_algs=1</div><div class="line">wpa=3</div><div class="line">wpa_passphrase=12345678</div><div class="line">wpa_key_mgmt=WPA-PSK</div><div class="line">wpa_pairwise=TKIP</div><div class="line">rsn_pairwise=CCMP</div></pre></td></tr></table></figure></p><blockquote><p><strong><a href="https://wiki.gentoo.org/wiki/Hostapd" target="_blank" rel="external">注释</a>：</strong><br><code>ctrl_interface</code>：为了后面<code>hostapd_cli</code>链接上<code>hostapd</code>；<br><code>ssid</code>：无线热点名字；<br><code>hw_mode</code>：指定<a href="https://www.zhihu.com/question/29977752/answer/49806861" target="_blank" rel="external">802.11协议</a>，其中<code>a=IEEE 802.11a</code>，<code>b=IEEE 802.11b</code>， <code>g=IEEE 802.11g</code>；<br><code>channel</code>：设定<a href="https://www.zhihu.com/question/21935550/answer/33608131" target="_blank" rel="external">无线信道</a>；<br><code>interface</code>：指定使用哪一个无线网卡；<br><code>bridge</code>：指定所处网桥，对于一个同时接入公网、提供内部网和无线接入的路由器来说，设定网桥很有必要；<br><code>driver</code>：指定无线驱动；<br><code>macaddr_acl</code>：指定MAC地址过滤规则：<br>　　　　　　　0表示允许除禁止列表外的设备；<br>　　　　　　　1表示只允许在允许列表的设备；<br>　　　　　　　2表示使用外部RADIUS服务器；<br><code>accept_mac_file</code>：指定允许MAC列表文件所在路径；<br><code>deny_mac_file</code>：指定禁止MAC列表文件所在路径；<br><code>auth_algs</code>：指定采用哪种认证算法，采用位域(bit fields)方式来制定；<br>　　　　　　1表示使用WPA；<br>　　　　　　2表示使用WEP；<br>　　　　　　3表示使用WPA/WEP；<br><code>wpa</code>：指定WPA类型，采用位域(bit fields)方式来制定；<br>　　　1表示使用WPA；<br>　　　2表示使用WPA2；<br>　　　3表示使用WPA2/WPA；<br><code>wpa_passphrase</code>：WIFI的密钥；<br><code>wpa_key_mgmt</code>：PSK为个人AP，不使用服务器认证；<br><code>wpa_pairwise</code>：指定WPA的加密方式；<br><code>rsn_pairwise</code>：指定WPA2的加密方式；</p></blockquote><h2 id="3-2-dhcpd的使用"><a href="#3-2-dhcpd的使用" class="headerlink" title="3.2 dhcpd的使用"></a>3.2 dhcpd的使用</h2><p>如果此时启动热点，实测手机一直卡在获取IP地址，无法连接到热点，因此热点还需自动分配IP地址。</p><ul><li>编辑<code>/etc/dhcpcd.conf</code>配置文件<br>将原来的<code>/etc/dhcpcd.conf</code>复制备份，再修改<a href="https://wiki.archlinux.org/index.php/Dhcpd_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87" target="_blank" rel="external">配置文件</a>如下：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">subnet 192.168.2.0 netmask 255.255.255.0 &#123;</div><div class="line">  range 192.168.2.10 192.168.2.100;</div><div class="line">  option domain-name-servers 192.168.2.1;</div><div class="line">  option routers 192.168.2.1;</div><div class="line">&#125;</div></pre></td></tr></table></figure></li></ul><p>指定了子网IP起始地址、子网掩码、动态分配的IP范围、DNS服务器、路由。</p><h2 id="3-3-启动热点"><a href="#3-3-启动热点" class="headerlink" title="3.3 启动热点"></a>3.3 启动热点</h2><ul><li><p>1.启动无线网卡，并设置IP</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ifconfig wlan0 up</div><div class="line">ifconfig wlan0 192.168.2.1</div></pre></td></tr></table></figure></li><li><p>2.启动AP和DHCP<br>启动命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">hostapd -B /etc/hostapd.conf</div><div class="line">dhcpd -cf /etc/dhcpcd.conf wlan0</div></pre></td></tr></table></figure></li></ul><p>对应的停止命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">killall hostapd</div><div class="line">killall dhcpd</div></pre></td></tr></table></figure></p><ul><li>3.其它操作<br>查看热点状态：<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hostapd_cli all_sta</div></pre></td></tr></table></figure></li></ul><p>查看热点配置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">hostapd_cli get_config</div></pre></td></tr></table></figure></p><p>查看已连接的设备：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">iw dev wlan0 station dump</div></pre></td></tr></table></figure></p><div align="center"><img src="https://blog-image-1257972744.cos.ap-chongqing.myqcloud.com/hceng/blog_image/180621/8.jpg"></div><h2 id="3-4-自动脚本"><a href="#3-4-自动脚本" class="headerlink" title="3.4 自动脚本"></a>3.4 自动脚本</h2><p>和前面的一样，假如希望实现USB无线网卡的热拔插，自动进入AP模式，只需如下操作：</p><ul><li><p>1.首先修改<code>/etc/mdev.conf</code>配置文件<br>加入WIFI无线网卡的热拔插事件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># hceng add for wifi</div><div class="line">#wlan0           root:root 660 * /sbin/auto_wifi.sh</div><div class="line">wlan0           root:root 660 * /sbin/auto_wifi_ap.sh</div></pre></td></tr></table></figure></li><li><p>2.自动AP脚本<code>/sbin/auto_wifi_ap.sh</code><br>但检测到USB网卡插拔后，就会执行该脚本：</p><figure class="highlight bash"><figcaption><span>[auto_wifi_ap.sh]</span><a href="https://github.com/hceng/learn/blob/master/tiny4412/10_usb_wifi/rootfs/sbin/auto_wifi_ap.sh" target="_blank" rel="external">link</a></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/sh</span></div><div class="line"><span class="keyword">if</span> [ <span class="variable">$ACTION</span> = <span class="string">"add"</span> ];</div><div class="line"><span class="keyword">then</span>                                </div><div class="line">   <span class="built_in">echo</span> --------usb wifi connect--------- &gt; /dev/console</div><div class="line">   hostapd -B /etc/hostapd.conf</div><div class="line">   ifconfig wlan0 192.168.2.1</div><div class="line">   dhcpd -cf /etc/dhcpcd.conf wlan0</div><div class="line"></div><div class="line"><span class="keyword">else</span>                     </div><div class="line">   <span class="built_in">echo</span> --------usb wifi disconnect--------- &gt; /dev/console</div><div class="line">   killall hostapd</div><div class="line">   killall dhcpd</div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure></li><li><p>3.为脚本添加可执行权限<br>执行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod +x /sbin/auto_wifi_ap.sh</div></pre></td></tr></table></figure></li></ul><p>之后就插上无线网卡，就自动启动了热点；拔掉无线网卡，就自动关闭热点。</p><hr><p><div align="center"><a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank"><img alt="知识共享许可协议" style="border-width:0" src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"></a><br>本文采用<a rel="external" href="http://creativecommons.org/licenses/by-nc-sa/4.0/" target="_blank">知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议</a>进行许可，欢迎转载，但转载请注明来自<a href="http://hceng.cn/" target="_blank" rel="external">hceng blog</a>，并保持转载后文章内容的完整。本人保留所有版权相关权利。</div></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如何在嵌入式Linux中，使用WIFI无线网卡。&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux环境编程" scheme="http://yoursite.com/tags/Linux%E7%8E%AF%E5%A2%83%E7%BC%96%E7%A8%8B/"/>
    
      <category term="WiFi网卡" scheme="http://yoursite.com/tags/WiFi%E7%BD%91%E5%8D%A1/"/>
    
  </entry>
  
</feed>
